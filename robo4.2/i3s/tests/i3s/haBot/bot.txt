
*** Settings ***
Documentation       Keywords for high-availability
  ...                 uses setup-bringup-keywords


Resource            ../../../../fusion/tests/resource/fusion_api_all_resource_files.txt
#Resource            ./setup-bringup-keywords.txt
Resource            ./ha-keywords.txt





##########################################################################################################

*** Keywords ***
# To be honest, these are tests.
  

#----------------------------------------------------------------------------------------------------------------
RemoveInsert Appliance
   [Documentation]	      		  Remove appliance
   [Arguments]                    ${active}  ${SessionId}  ${ui}=0
   ${testResult}                  Set Variable  1
   
   
#  Get the CIM dictionaries again. they may have changed after the possible power-up     
   ${i3s1}  ${i3s2} =             Get CIM Dictionaries  ${leTarget}
   Ensure Appliances in pair are up    ${i3s1}  ${i3s2}
   
   ${isActiveI3S1} =              Get from dictionary  ${i3s1}  isActive
   ${isActiveI3S2} =              Get from dictionary  ${i3s2}  isActive
   Run Keyword If  ${_xdebug} == ${_min}  Log to console  i3S1 and i3S2 -- ${isActiveI3S1} ${isActiveI3S2} ${active}
   Run Keyword If  ${_xdebug} == ${_min}  Log to console  ${i3s1['applianceSerialNumber']} ${i3s2['applianceSerialNumber']}
     
 
   ${operation} =                    Determine CIM Flag  ${i3s1}  ${i3s2}  ${active}
   Run Keyword If  ${_xdebug} == ${_min}  Log to console  Operation to do is ${operation}
   

   
# Commence removal of appliance   
   Run Keyword If  ${operation} == 1   Remove Appliance  ${i3s1}
   Run Keyword If  ${operation} == 2   Remove Appliance  ${i3s2}
   Run Keyword If  ${operation} == 3   Remove Appliance  ${i3s1}
   Run Keyword If  ${operation} == 4   Remove Appliance  ${i3s2}
   
#**************** CHECK IF HA BROKE   
   AutoCheckIO               ${i3s1}  ${i3s2}  ${IOFlag}
   

# check if the other peer i3S has taken over   
   ${i3s1}  ${i3s2} =             Get CIM Dictionaries  ${leTarget}
   ${isActive1} =                 Get from dictionary   ${i3s1}  isActive
   ${isActive2} =                 Get from dictionary   ${i3s2}  isActive
   Run Keyword If  ${_debug} == ${_min}  Log to console  Operation is ${isActive1} and ${isActive2}
   
   ${testResult}                    Set Variable  1
   ${testResult} =  Run Keyword If  ${operation} == 1 and '{isActive2}' == 'True'  Evaluate  ${testResult} - 1  
      ...                       ELSE  Evaluate  ${testResult} + 0
   ${testResult} =  Run Keyword If  ${operation} == 2 and '{isActive1}' == 'True'  Evaluate  ${testResult} - 1  
      ...                       ELSE  Evaluate  ${testResult} + 0
   ${testResult} =  Run Keyword If  ${operation} == 3 and '{isActive2}' == 'True'  Evaluate  ${testResult} - 1  
      ...                       ELSE  Evaluate  ${testResult} + 0
   ${testResult} =  Run Keyword If  ${operation} == 4 and '{isActive1}' == 'True'  Evaluate  ${testResult} - 1  
      ...                       ELSE  Evaluate  ${testResult} + 0

   ${status1} =                   Get from dictionary   ${i3s1}  status
   ${status2} =                   Get from dictionary   ${i3s2}  status
   Run Keyword If  ${_xdebug} == ${_min}  Log to console   Status of appliances is ${status1} and ${status2}
   Waiting  ${waitPostRemoval}
   
# Put the appliance back and factory-reset   
#   Run Keyword If  ${operation} == 1 or ${operation} == 3  Insert and FactoryReset Appliance  ${i3s1}  ${SessionId}
#   Run Keyword If  ${operation} == 2 or ${operation} == 4  Insert and FactoryReset Appliance  ${i3s2}  ${SessionId}
   
   Run Keyword If  ${operation} == 1 or ${operation} == 3  RunFromUI  ${i3s1}  ${SessionId}  ${ui}
   Run Keyword If  ${operation} == 2 or ${operation} == 4  RunFromUI  ${i3s2}  ${SessionId}  ${ui}
	
   Run Keyword If  ${_debug} == ${_min}  Log to console  Testresult is ${testResult}
#**************** CHECK IF HA BROKE   
   AutoCheckIO               ${i3s1}  ${i3s2}   ${IOFlag}
   
   
   [return]                       ${testResult}
  
#----------------------------------------------------------------------------------------------------------------
PowerCycle Appliance
   [Documentation]	      		  PowerCycle appliances
   [Arguments]                    ${active}  
   ${testResult}                  Set Variable  1
   
      
#  Get the CIM dictionaries again. they may have changed after an eariler test run
   ${i3s1}  ${i3s2} =             Get CIM Dictionaries   ${leTarget}
   Ensure Appliances in pair are up    ${i3s1}  ${i3s2}      

   ${isActiveI3S1} =                 Get from dictionary  ${i3s1}  isActive
   ${isActiveI3S2} =                 Get from dictionary  ${i3s2}  isActive
   Run Keyword If  ${_debug} == ${_min}  Log to console  i3S1 and i3S2 -- ${isActiveI3S1} ${isActiveI3S2}
   
   
   ${operation} =                    Determine CIM Flag  ${i3s1}  ${i3s2}  ${active}
   Run Keyword If  ${_xdebug} == ${_min}  Log to console  Operation to do is ${operation}
   

# Commence shutdown of appliance   
   Run Keyword If  ${operation} == 1   Shutdown Appliance  ${i3s1}
   Run Keyword If  ${operation} == 2   Shutdown Appliance  ${i3s2}
   Run Keyword If  ${operation} == 3   Shutdown Appliance  ${i3s1}
   Run Keyword If  ${operation} == 4   Shutdown Appliance  ${i3s2}
   Log to console  Shutdown operatin ${operation} over. Sleeping ${waitPostShutdown}
   Waiting  ${waitPostShutdown}
   
  
   Run Keyword If  ${_debug} == ${_min}  Log to console  Operation is ${operation}
#**************** CHECK IF HA BROKE   
   AutoCheckIO               ${i3s1}  ${i3s2}    ${IOFlag}
   
   
   ${i3s1}  ${i3s2} =               Get CIM Dictionaries  ${leTarget}
   ${isActive1} =                   Get from dictionary   ${i3s1}  isActive
   ${isActive2} =                   Get from dictionary   ${i3s2}  isActive
   Run Keyword If  ${_debug} == ${_min}  Log to console  Operation is ${isActive1} and ${isActive2}
   
   ${testResult}                    Set Variable  1
   ${testResult} =  Run Keyword If  ${operation} == 1 and '{isActive2}' == 'True'  Evaluate  ${testResult} - 1  
      ...                       ELSE  Evaluate  ${testResult} + 0
   ${testResult} =  Run Keyword If  ${operation} == 2 and '{isActive1}' == 'True'  Evaluate  ${testResult} - 1  
      ...                       ELSE  Evaluate  ${testResult} + 0
   ${testResult} =  Run Keyword If  ${operation} == 3 and '{isActive2}' == 'True'  Evaluate  ${testResult} - 1  
      ...                       ELSE  Evaluate  ${testResult} + 0
   ${testResult} =  Run Keyword If  ${operation} == 4 and '{isActive1}' == 'True'  Evaluate  ${testResult} - 1  
      ...                       ELSE  Evaluate  ${testResult} + 0
 
   Run Keyword If  ${_debug} == ${_min}  Log to console  Testresult is ${testResult}

# Power back the appliance   
   Run Keyword If  ${operation} == 1   EFuse Appliance  ${i3s1}
   Run Keyword If  ${operation} == 2   EFuse Appliance  ${i3s2}
   Run Keyword If  ${operation} == 3   EFuse Appliance  ${i3s1}
   Run Keyword If  ${operation} == 4   EFuse Appliance  ${i3s2}
   Log to console  Shutdown operatin ${operation} over. Sleeping ${waitPostPowerUp}
   Waiting  ${waitPostPowerUp}
#**************** CHECK IF HA BROKE   
   AutoCheckIO               ${i3s1}  ${i3s2}    ${IOFlag}
   
   
     
   
   [return]                       ${testResult}
#----------------------------------------------------------------------------------------------------------------   

MgmtCables 
   [Documentation]	      		  Mgmt cable remove and reinsert
   [Arguments]                    ${active}  ${whichEM}=1
   ${testResult}                  Set Variable  0
   
   
#  Get the CIM dictionaries for the most updated status
   ${i3s1}  ${i3s2} =             Get CIM Dictionaries  ${leTarget}
   Ensure Appliances in pair are up    ${i3s1}  ${i3s2}
   
   ${isActiveI3S1} =              Get from dictionary  ${i3s1}  isActive
   ${isActiveI3S2} =              Get from dictionary  ${i3s2}  isActive
   Run Keyword If  ${_xdebug} == ${_min}  Log to console  i3S1 and i3S2 -- ${isActiveI3S1} ${isActiveI3S2} ${active}
   Run Keyword If  ${_xdebug} == ${_min}  Log to console  ${i3s1['applianceSerialNumber']} ${i3s2['applianceSerialNumber']}
     
 
   ${operation} =                    Determine CIM Flag  ${i3s1}  ${i3s2}  ${active}
   Run Keyword If  ${_xdebug} == ${_min}  Log to console  Operation to do is ${operation}
   

   
# Commence removal of appliance   EM management cable
   Run Keyword If  ${operation} == 1   EM Operations   ${i3s1}   ${Mgmt}  ${whichEM}   DOWN
   Run Keyword If  ${operation} == 2   EM Operations   ${i3s2}   ${Mgmt}  ${whichEM}   DOWN
   Run Keyword If  ${operation} == 3   EM Operations   ${i3s1}   ${Mgmt}  ${whichEM}   DOWN
   Run Keyword If  ${operation} == 4   EM Operations   ${i3s2}   ${Mgmt}  ${whichEM}   DOWN
   Waiting                       ${testYourPatience}
#**************** CHECK IF HA BROKE   
   AutoCheckIO               ${i3s1}  ${i3s2}    ${IOFlag}

   
# Commence reconnection of appliance   EM ${Mgmt} cable
   Run Keyword If  ${operation} == 1   EM Operations   ${i3s1}   ${Mgmt}  ${whichEM}   UP
   Run Keyword If  ${operation} == 2   EM Operations   ${i3s2}   ${Mgmt}  ${whichEM}   UP
   Run Keyword If  ${operation} == 3   EM Operations   ${i3s1}   ${Mgmt}  ${whichEM}   UP
   Run Keyword If  ${operation} == 4   EM Operations   ${i3s2}   ${Mgmt}  ${whichEM}   UP
   Waiting                       ${testYourPatience}
#**************** CHECK IF HA BROKE   
   AutoCheckIO               ${i3s1}  ${i3s2}    ${IOFlag}
   
   [return]                       ${testResult}
#----------------------------------------------------------------------------------------------------------------
   
LinkCables   
   [Documentation]	      		  Disconnect link cable of top EM (ideally both - but that causes it to be unreachable)
   [Arguments]                    ${enclosure}
   ${testResult}                  Set Variable  0
  
   
   Run Keyword If  ${_xdebug} == ${_min}  Log to console  Link cables for ${enclosure}
   #  Get the CIM dictionaries for the most updated status
   ${i3s1}  ${i3s2} =             Get CIM Dictionaries  ${leTarget}
   Ensure Appliances in pair are up    ${i3s1}  ${i3s2}
   
   

   EM Operations core            ${enclosure}  External  1  DOWN
#   EM Operations core            ${enclosure}  External  2  DOWN
   Waiting                       ${testYourPatience}

#**************** CHECK IF HA BROKE   
   AutoCheckIO               ${cimX}  ${cimY}   ${IOFlag}

   EM Operations core            ${enclosure}  External  1  UP
#   EM Operations core            ${enclosure}  External  2  UP
   Waiting                       ${testYourPatience}

#**************** CHECK IF HA BROKE   
   AutoCheckIO               ${cimX}  ${cimY}  ${IOFlag}

   
   [return]                       ${testResult}
#----------------------------------------------------------------------------------------------------------------

EMDisable
   [Documentation]	      		  Disconnect the link & mgmt ports of the EM
   [Arguments]                    ${enclosure}  ${whichEM}=1  
   ${testResult}                  Set Variable  0
   
   #  Get the CIM dictionaries for the most updated status
   ${i3s1}  ${i3s2} =             Get CIM Dictionaries   ${leTarget}
   Ensure Appliances in pair are up    ${i3s1}  ${i3s2}
   
   EM Operations core            ${enclosure}  ${Link}  ${whichEM}  DOWN
   EM Operations core            ${enclosure}  ${Mgmt}  ${whichEM}  DOWN
   Waiting                       ${testYourPatience}
#**************** CHECK IF HA BROKE   
   AutoCheckIO               ${cimX}  ${cimY}  ${IOFlag}
   
   EM Operations core            ${enclosure}  ${Link}  ${whichEM}  UP
   EM Operations core            ${enclosure}  ${Mgmt}  ${whichEM}  UP
   Waiting                       ${testYourPatience}
   Waiting                       ${testYourPatience}
#**************** CHECK IF HA BROKE   
   AutoCheckIO               ${cimX}  ${cimY}  ${IOFlag}
   
   [return]                       ${testResult}   
#----------------------------------------------------------------------------------------------------------------
   
ICMPowerCycle
   [Documentation]	      		  PowerCycle the ICM
   [Arguments]                    ${potashDetails} 
   ${testResult}                  Set Variable  0

   #  Get the CIM dictionaries for the most updated status
   ${i3s1}  ${i3s2} =             Get CIM Dictionaries   ${leTarget}
   Ensure Appliances in pair are up    ${i3s1}  ${i3s2}
   
   ICM EFuse                      ${potashDetails}   EFuseOn
   Waiting                       ${testYourPatience}
#**************** CHECK IF HA BROKE   
   AutoCheckIO               ${cimX}  ${cimY}  ${IOFlag}
   
   ICM EFuse                      ${potashDetails}   EFuseOff
   Waiting                        ${testYourPatience}
   
#**************** CHECK IF HA BROKE   
   AutoCheckIO               ${cimX}  ${cimY}   ${IOFlag}
   
    Waiting                       ${testYourPatience}
      
   [return]                       ${testResult}   
#----------------------------------------------------------------------------------------------------------------   


InternalPorts   
   [Documentation]	      		  Disconnect and reconnects Internal port of each EM connected in enc having I3S
   [Arguments]                    ${enclosure}
   
   Fail                           msg='ERROR: DON'T USE THE INTERNAL PORTS FUNCTION --- Krishna'
   ${testResult}                  Set Variable  0
  
   
   Run Keyword If  ${_debug} == ${_min}  Log to console  Internal ports for ${enclosure}
   

   ${testResult} =               EM Operations core   ${enclosure}  ${Internal}  1  DOWN
   Run Keyword If  ${_debug} == ${_min}  Log to console  Internal 1 down - ${testResult}
   Waiting                       ${testYourPatience}
   ${testResult} =               EM Operations core   ${enclosure}  ${Internal}  1  UP
   Run Keyword If  ${_debug} == ${_min}  Log to console  Internal 1 UP - ${testResult}
   Waiting                       ${testYourPatience}
   Waiting                       ${testYourPatience}
#**************** CHECK IF HA BROKE   
   AutoCheckIO               ${cimX}  ${cimY}  ${IOFlag}
   
   
   ${testResult} =               EM Operations core  ${enclosure}  ${Internal}  2  DOWN
   Run Keyword If  ${_debug} == ${_min}  Log to console  Internal 2 down - ${testResult}
   Waiting                       ${testYourPatience}
   ${testResult} =               EM Operations core  ${enclosure}  ${Internal}  2  UP
   Run Keyword If  ${_debug} == ${_min}  Log to console  Internal 2 UP - ${testResult}
   Waiting                       ${testYourPatience}
   Waiting                       ${testYourPatience}
#**************** CHECK IF HA BROKE   
   AutoCheckIO               ${cimX}  ${cimY}  ${IOFlag}

   
   [return]                       ${testResult}
#----------------------------------------------------------------------------------------------------------------      

RunFromUI
   [Arguments]                    ${cim}  ${SessionId}  ${ui}
   Run Keyword If  ${_xdebug} == ${_min}  Log to console  ${ui}
   Run Keyword If  ${ui} == 0  Insert and FactoryReset Appliance  ${cim}  ${SessionId}
   Run Keyword If  ${ui} == 1  Insert and Rediscover Appliance  ${cim}
   StoppingToDebug
   EFuse Appliance                ${cim}  EFuseOff
   Waiting                        ${waitPostPowerUp}
#----------------------------------------------------------------------------------------------------------------         

DummyRemoveInsert Appliance
   [Documentation]	      	   Remove and reinsert appliance
   [Arguments]                 ${active}  ${SessionId}  ${ui}=0
   ${i3s1}  ${i3s2} =          Get CIM Dictionaries   ${leTarget}
   ${operation}                Set Variable   2
   Run Keyword If  ${operation} == 1 or ${operation} == 3  RunFromUI  ${i3s1}  ${SessionId}  ${ui}
   Run Keyword If  ${operation} == 2 or ${operation} == 4  RunFromUI  ${i3s2}  ${SessionId}  ${ui}
   
#----------------------------------------------------------------------------------------------------------------         