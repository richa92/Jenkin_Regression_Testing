Nov 17, 2017
krishna-prabhu@hpe.com

Based on 
	- RoboGalaxy version:          Robot Framework 3.0 (Python 2.7.11 on Win32)
	- Python version:              2.7.11
	- Tested on:                   Windows Server 2012 DC Edition 
	- Last tested for OV 4.0 and i3S 4.0 
	
	
* Note the following:
	- note that it uses the '[]' introduced with curl 7.54.1 introduced with OV 4.0. Will not work with OV 3.1 or 3.0
	- on the particular test machine, the IPv6 addresses were reachable directly without a particular port 
	   (e.g. %20 or %bond0 etc.). 
	    If a test machine requiring these items is introduced, need to modify code
	- See "starting point"
	- 




bot.txt               File contains the tests. These 'tests' are listed as "keywords" to be invoked from haBot.txt
data_variables.py     
haBot.txt		      Main file which sets up the 'suite-variales', examines the setup and invokes the tests
ha-keywords.txt       Keywords, constants
setup-bringup-keywords.txt      
                      Keywords used for pinging, SSH login


Method of use:
 - set the inputs in the data_variables.py file. If you wish to run only a specific test, then set only that flag in the
    this input file
 > pybot -i critical*  -i loop --exitOnFailure haBot.txt
 --- if you wish to run a unit test, then chose that one appropriately. 
    pybot -i critical*  -i ut0 --exitOnFailure haBot.txt
	*** Note that the tag should be given in 'small letters' when the script is run
					  
					  
					  
---------------------------------------------------------------------------------------------------------------------
Starting point:
-	Needs the system to have a multi-enclosure LE with i3S intent and at least one OS-deployment based server-profile
-	Does not require any additional connection from Potash uplink to TOR.

Abilities so far:
-	Power-off and power-on of i3S appliances in the primary LE (tests= 2 – average time per test = 80 mins)
-	Removal and reinsertion of i3S appliances in the primary LE (tests= 2 – average time per test = 110 mins)
-	Removal and reinsertion of mgmt. port cables in the primary LE (tests= 4 – average time per test = 30 mins)
-	Removal and reinsertion of the link port cable of one EM at a time (* not both) - in the primary LE 
     (tests= 4 –avg. time per test = 30 mins)
-	Disabling and enabling the (a) EM mgmt. port and (b) link port of one EM at a time - in the primary LE 
     (tests = 4 – avg. time per test= 30 mins)
-	Removal and reinsertion of ICM’s in the primary LE (tests= 2 –avg. time per test = 40 mins)
•	Currently, this expands into 18 individual tests. The 80 and 110 minutes are spent more on recovery of 
     the system –i.e. resync of appliances

Test run ability:
-	Can chose (a) specific tests or (b) all tests at a time
•	Done using Robo Galaxy since this framework is fairly well understood by most test folks in CDI.
---------------------------------------------------------------------------------------------------------------------
Limitations:
-	If the builds are non-SSH builds, the tests cannot run. (SSH connection is required to do EM operations)
-	Tests to break the link cables of both EM’s in the same enclosure cannot be done in a loop –
      because subsequently, the system cannot be recovered. 
	  This happens because we are unable to contact the EM’s to do any operations
-	Cannot disable the EM’s of the top enclosure in the ring which connects to the TOR. 
     (This can be addressed if we have at least 4 enclosures in the ring with an additional TOR 
	  connection from the 4th enclosure)
-	If the setup has multiple LE’s, the tests will exercise only the primary LE
---------------------------------------------------------------------------------------------------------------------
** Future additions:
-	Figure out the following:
o	When there are 2 connections to the TOR for OV, if I remove one, the OV becomes inaccessible. Not sure why.
-	Ability to do firmware upgrade
-	Collect data of which EM has the VSA quorum file and see if it can be isolated at the link port level
-	Check validity of messages in the UI
-	* currently using another script (Robo Galaxy) to reimage the setup and make the LE. Use the extensions 
      in this script to create server-profiles based on available server hardware
-	Extend this to do other tests for performance. In 3.10, I used Ansible. But, this framework can 
      be extended easily to do this
---------------------------------------------------------------------------------------------------------------------

					  
					  
					  
Misc:
# ha -  high-availability for i3S
# bot - short for 'Web Robot' 
---------------------------------------------------------------------------------------------------------------------


git version 2.11.0.windows.1