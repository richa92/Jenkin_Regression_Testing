*** Settings ***
Documentation       Feature Test: User Roles
...

Variables           data_variables_user.py

Resource            ../../../../../fusion/tests/resource/fusion_api_all_resource_files.txt
Resource            ./common.txt

Library             Collections
Library             json
Library             OperatingSystem
Library             Selenium2Library
Library             BuiltIn
Library             FusionLibrary
Library             RoboGalaxyLibrary
Library             i3SLibrary
Variables           /robo4.2/i3s/tests/testdata/i3s_QA_testdata.py

*** Test Cases ***
Login to Appliance
    ${admin_credentials} =    Create Dictionary    userName=${DEFAULT_USER}
    ...												password=${DEFAULT_PASSWORD}
    Set Suite Variable    ${admin_credentials}    ${admin_credentials}
    ${Response}    ${SessionId} =    Fusion Api Login Appliance     ${fusion_IP}    ${admin_credentials}
    Set Suite Variable    ${SessionId}    ${SessionId}

Add All Users
    Set Log Level    TRACE
    Log to console and logfile    Adding USERS
    :FOR    ${user}    IN    @{users}
    \    ${resp} =    Fusion Api Add User    body=${user}
    \       sleep     2
    \       ${status}=    Get From Dictionary    ${resp}    status_code
    \       Should Be Equal    ${status}    ${200}

Get i3s Appliance Cluster IP and Login to i3s
	${resp} =    Fusion Api Get i3sCluster IP
	${i3S_IP} =    Get From Dictionary    ${resp['members'][0]}    primaryIPV4	
	Log to console and logfile    ${i3S_IP}
	Log to console    ${SessionId}
	I3S API LOGIN APPLIANCE    ${i3S_IP}    ${SessionId}

Extract Buitin AB
    Extract Artifact Bundle   ${artifact_bundle}

Logout as admin
    Logout of Fusion

Login different users and try to download audit log
    Set Log Level    TRACE
    :FOR    ${user}    IN    @{users}
    \       Login to i3s    ${fusion_IP}    ${user['userName']}    ${user['password']}
    \       Download Auditlog401  # audit log can be donloaded by IA only
    \       Logout of Fusion

Login as backup admin and create backup
    Set Log Level    TRACE
    :FOR    ${user}    IN    @{users}
    \       Run Keyword unless    '${user['userName']}'=='Backupadmin'    Continue For Loop
    \       Login to i3s    ${fusion_IP}    ${user['userName']}    ${user['password']}
    \       Create backup on streamer    #backup can be taken by backup admin, IA & software admin
    \       Logout of Fusion

Login different users and try to extract artifact bundle
    Set Log Level    TRACE
    :FOR    ${user}    IN    @{users}
    \       Continue For Loop If    '${user['userName']}'=='Softwareadmin'
    \       Login to i3s    ${fusion_IP}    ${user['userName']}    ${user['password']}
    \       Extract Artifact Bundle401    ${artifact_bundle}   #user will try to extract AB & will fail with 401
    \       Cleanup401        # user will try to clean up the artifacts & will fail with 401
    \       Logout of Fusion

Login different users and try to restore backup bundle
    Set Log Level    TRACE
    :FOR    ${user}    IN    @{users}
    \       Continue For Loop If    '${user['userName']}'=='Noprivlege'
    \       Login to i3s    ${fusion_IP}    ${user['userName']}    ${user['password']}
    \       Restore backup bundle401      # user will try to clean up the artifacts & will fail with 401
    \       Logout of Fusion

Login as software admin
    Set Log Level    TRACE
    :FOR    ${user}    IN    @{users}
    \       Run Keyword unless    '${user['userName']}'=='Softwareadmin'    Continue For Loop
    \       Login to i3s    ${fusion_IP}    ${user['userName']}    ${user['password']}
    \       Extract Artifact Bundle    ${artifact_bundle}   #user will try to extract AB & will not fail
    \       Cleanup
    \       Logout of Fusion

Login Again As Infrastructure Admin
    Login to i3s    ${fusion_IP}    ${DEFAULT_USER}    ${DEFAULT_PASSWORD}

Restore backup bundle by Infrastructure Admin
    Restore backup bundle on streamer   # here IA is trying to extract backup bundle created by backup admin

Test teardown
    Cleanup
    Remove Users
