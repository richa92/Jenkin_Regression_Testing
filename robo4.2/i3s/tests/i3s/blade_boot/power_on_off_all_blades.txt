*** Settings ***
Documentation     Test Planscripts
...    = Usage =
...    | pybot | -v I3S_IP:<Your-IP> | -v XML_FILE:<XML_FILE> | planscripts.txt
...    = Variables =
...    | I3S IP | Required; IP address of the I3SVM to use |
...    | XML_FILE | Required; File containing data in XML format |

Resource            C:/RG_CODE/Fusion_old/tests/resource/fusion_api_all_resource_files.txt

Library		String
Library		Collections
Library		RoboGalaxyLibrary
Library		OperatingSystem
Library		SSHLibrary
Library		i3SLibrary
Library		FusionLibrary
Library		BuiltIn

Variables   ../../testdata/i3s_QA_testdata.py


*** Test Cases ***

#Test Specific Setup
Login to Appliance
	${admin_credentials}=		Create Dictionary	userName=${DEFAULT_USER}
    ...												password=${DEFAULT_PASSWORD}
    Set Suite Variable		${admin_credentials}	${admin_credentials}
	${Response}    ${SessionId}=	Fusion Api Login Appliance 		${fusion_IP}		${admin_credentials}

Power on ALL servers
	[Documentation]	Querys the appliance for all Servers and then Powers them on
	#Log  	Powering On SERVERS
	${body}= 	Create Dictionary	powerState=On
	...								powerControl=MomentaryPress
	Log		${body}
	${servers} = 	Fusion Api Get Server Hardware
	:FOR	${server}	IN	@{servers['members']}
	\		Log		${server}
	\		Continue For Loop If	'${server['powerState']}'!='Off'
	\		${resp} = 	Fusion Api Edit Server Hardware Power State		body=${body}	uri=${server['uri']}
	#\		${task} =    Wait For Task    ${resp}    240s    10s
	\		Log to console and logfile		${server}
	#\		${sh} =   fusion api get server hardware     uri=${server['uri']}
	#\       Should Match    ${sh['powerState']}    On
	

Power off ALL servers
	[Documentation]	Querys the appliance for all Servers and then Powers them off
	#Log to console and logfile  	Powering off SERVERS
	${body}= 	Create Dictionary	powerState=Off
	...								powerControl=PressAndHold
	Log		${body}
	${servers} = 	Fusion Api Get Server Hardware
	:FOR	${server}	IN	@{servers['members']}
	\		Continue For Loop If	'${server['powerState']}'!='On'
	\		${resp} = 	Fusion Api Edit Server Hardware Power State		body=${body}	uri=${server['uri']}
	\		Log to console and logfile		${server}
	#\		${task} =    Wait For Task    ${resp}    240s    10s
	#\       ${sh} =   fusion api get server hardware     uri=${server['uri']}
	#\       Should Match    ${sh['powerState']}    Off