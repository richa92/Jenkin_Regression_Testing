*** Settings ***
Library				RoboGalaxyLibrary
Library				FusionLibrary
Library				OperatingSystem
Library				BuiltIn
Library				Collections
Library				XML
Library		        SSHLibrary
Library				String


*** Keywords ***
Get Repository URI By Name
    [Documentation]	Get Repository URI.
	...					Get Repository URI By Name  ${Repo}
    [Arguments]    ${name}
    ${repositories}=    Fusion Api Get Repository
    ${count}=   Get From Dictionary     ${repositories}  count
    Return from keyword if  ${count}==0    /bad_repo_uri
    :FOR	${repo}	IN	@{repositories['members']}
    \       ${uri} =      Get From Dictionary  ${repo}  uri
    \       ${repo_name} =     Get From Dictionary  ${repo}  name
    \       Return from keyword if   '${repo_name}'=='${name}'    ${uri}
    [Return]    /bad_repo_uri

Refresh Repository By Name
    [Documentation]	Refresh Repository.
	...					Refresh Repo By Name  ${Repo}
	[Arguments]     ${name}
	${dict} =  Create Dictionary  op=replace  path=/refreshState  value=RefreshPending
    ${payload} =  Create List  ${dict}
	Log    Refreshing Repository ${name}    console=true
	${repo} =  Get Repository URI By Name  ${name}
	${resp} = 	Fusion Api Patch Repository   body=${payload}  uri=${repo}
	[Return]  ${resp}

Edit Repository
    [Documentation]	Edit Repository.
	...					Edit Repository  ${Repo}
	...                 {"repositoryName":"repo",
	...                 "userName":"name",
	...                 "password":"password",
	...                 "base64Data":""}
    [Arguments]    ${repo}    ${newname}=${None}
    ${name} = 	Get from Dictionary	  ${repo}	 repositoryName
	Log    \nEditing Repository ${name}    console=true
	Run keyword if  '${newName}'!='${None}'    Log    \nEditing Repository Name to ${newname}    console=true

	${repo_uri} =   Get Repository URI By Name  ${name}

    # new name if suuplied
	Run keyword if  '${newName}'!='${None}'    Set to Dictionary    ${repo}    repositoryName    ${newName}

	${resp} = 	Fusion Api Edit Repository		uri=${repo_uri}    body=${repo}
	[Return]  ${resp}

Add Repository
    [Documentation]	Add Repository.
	...					Edit Repository  ${Repo}
	...                 {"repositoryName":"repo",
	...                 "repositoryURI":"https://*",
	...                 "userName":"name",
	...                 "password":"password",
	...                 "base64Data":""}
	[Arguments]    ${repo}
    ${name} = 	Get from Dictionary	  ${repo}	 repositoryName
	Log    \nAdding Repository ${name}    console=true
	${resp} = 	Fusion Api Add Repository		body=${repo}
	[Return]  ${resp}

Remove Repository By Name
    [Documentation]	Remove Repository.
	...					Remove Repository By Name  ${Repo}
    [Arguments]    ${name}
    Log    \nDeleting Repository ${name}    console=true
    ${repo_uri} =   Get Repository URI By Name  ${name}
	${resp} = 	Fusion Api Delete Repository		uri=${repo_uri}
	[Return]  ${resp}

Remove All Repositories
    [Documentation]	Remove All Repository.
	...					Remove All Repositories
    Log    \nDeleting All Repositories    console=true
    ${repositories}=    Fusion Api Get Repository
    :FOR	${repo}	IN	@{repositories['members']}
    \       ${uri} =      Get From Dictionary  ${repo}  uri
    \       ${name} =     Get From Dictionary  ${repo}  name
    \       Continue For Loop If    '${name}'=='Internal'
    \       ${resp} =     Fusion Api Delete Repository		uri=${uri}
    \       Wait For Task2 	  ${resp} 	50	5
