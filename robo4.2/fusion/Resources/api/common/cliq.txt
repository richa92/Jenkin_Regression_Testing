*** Settings ***
Library		        SSHLibrary
Library             String
Library             ./VsaHelper.py

*** Keywords ***
CLIQ Get Volume Info
    [Documentation]    Get the volume info via VSA CLIQ.
    ...                Data file needs to define:
    ...                     cliq_credentials = { 'mgmt_ip':'16.71.149.173','username': 'admin', 'password': 'admin', 'port': 16022 }
    ...                                        'port' is optional, default is 22
    [Arguments]  ${volumeName}  ${VERBOSE}=False  ${my_cliq_cred}=${cliq_credentials}
    ${port}=  CLIQ Get Port from Cliq Credentials  ${my_cliq_cred}
    Open Connection     ${my_cliq_cred['mgmt_ip']}     timeout=20s  port=${port}
    Login               ${my_cliq_cred['username']}  ${my_cliq_cred['password']}
    Write    getVolumeInfo volumeName=${volumeName}
    ${output} =  Read Until    CLIQ>
    Run Keyword If    '${VERBOSE}'=='True'    Log    getVolumeInfo on ${volumeName} returns ${output}    console=true
    Write    q
    Close All Connections
    [return]  ${output}

CLIQ Get Volume Info in profile
    [Documentation]    Get the volume info defined in the profile connection via VSA CLIQ.
    ...                Data file needs to define:
    ...                     cliq_credentials = { 'mgmt_ip':'16.71.149.173','username': 'admin', 'password': 'admin', 'port': 16022 }
    ...                                        'port' is optional, default is 22
    ...                     profile_bay1_one_connection = {
    ...                         "connectionSettings": {
    ...                             "connections":[
    ...                                 {"id":1,"name":"iSCSI-boot-primary","functionType":"Ethernet","portId":"Mezz 3:2-a",
    ...                                  "requestedMbps":"2500","networkUri":'ETH:network-iSCSI',
    ...                                     "boot":{
    ...                                         "priority":"Primary","initiatorNameSource":"ProfileInitiatorName",
    ...                                         "initiatorIp":"192.168.22.56","initiatorSubnetMask":"255.255.192.0",
    ...                                         "initiatorGateway":"","initiatorVlanId":"1",
    ...                                         "bootTargetName":"iqn.2003-10.com.lefthandnetworks:vsa-mg-173-2:90:tbird9-bay1-bootvol",
    ...                                         "bootTargetLun":"0","firstBootTargetIp":"192.168.21.71","firstBootTargetPort":"3260",
    ...                                         "secondBootTargetIp":"","secondBootTargetPort":"","chapLevel":"None",
    ...                                         "chapName":"","chapSecret":None,"mutualChapName":"","mutualChapSecret":None
    ...                            },"requestedVFs":"Auto"}],
    ...                         }
    ...                     }
    ...                 Example:
    ...                     CLIQ ping initiatorIp in profile  ${profile_bay4_one_bootable_connection}
    [Arguments]  ${profile}  ${VERBOSE}=False
    Log    \nGet Volume Info in profile ${profile['name']}    console=true
    # Profile boot connections
    ${status}  ${connections} =  Run Keyword and Ignore Error  Get From Dictionary  ${profile['connectionSettings']}  connections
    Run keyword if  '${status}'=='FAIL'  Fail  msg=${connections}
    :FOR	${connection}	IN	@{connections}
    \   ${status}  ${bootParam} =  Run Keyword and Ignore Error  Get From Dictionary  ${connection}  boot
    \   continue for loop if  '${status}'=='FAIL'
	\	${status}  ${bootTargetName} =  Run Keyword and Ignore Error  Get From Dictionary  ${bootParam['iscsi']}  bootTargetName
	\   continue for loop if  '${status}'=='FAIL'
	\   @{words} = 	Split String  ${bootTargetName}  :
	\   ${volumeName} =  Get From List	${words}  3
	\   ${output} =  CLIQ Get Volume Info  ${volumeName}  VERBOSE=${VERBOSE}
	\   Log    \nThe volume info for ${volumeName} in profile ${profile['name']} connection ${connection['id']} is \n${output}    console=true

CLIQ Get Volume Info in profiles
    [Documentation]    Get the volume info defined in the profile connection via VSA CLIQ.
    ...                Data file needs to define:
    ...                     cliq_credentials = { 'mgmt_ip':'16.71.149.173','username': 'admin', 'password': 'admin', 'port': 16022 }
    ...                     'port' is optional, default is 22
    [Arguments]  ${list}  &{kwargs}
    Run Keyword for List with kwargs  ${list}  CLIQ Get Volume Info in profile  &{kwargs}

CLIQ ping
    [Documentation]    Ping via VSA CLIQ.
    ...                Data file needs to define:
    ...                     cliq_credentials = { 'mgmt_ip':'16.71.149.173','username': 'admin', 'password': 'admin', 'port': 16022 }
    ...                                        'port' is optional, default is 22
    [Arguments]  ${ip}  ${VERBOSE}=False  ${my_cliq_cred}=${cliq_credentials}
    Log    \ntest ping ${ip}    console=true
    ${port}=  CLIQ Get Port from Cliq Credentials  ${my_cliq_cred}
    Open Connection     ${my_cliq_cred['mgmt_ip']}     timeout=20s  port=${port}
    Login               ${my_cliq_cred['username']}  ${my_cliq_cred['password']}
    Write    utility run="ping ${ip}"
    Read Until    ?
    Write    y
    ${output} =  Read Until    CLIQ>
    Run Keyword If    '${VERBOSE}'=='True'    Log    ping ${ip} output is ${output}    console=true
    Write    q
    Close All Connections
    Should contain  ${output}  Operation succeeded
    log to console  \nping ${ip} succeeded
    [return]  ${output}

CLIQ wait for ping initiatorIp success in profile
    [Documentation]    Ping the initiatorIp defined in the profile connection via VSA CLIQ.
    ...                Data file needs to define:
    ...                     cliq_credentials = { 'mgmt_ip':'16.71.149.173','username': 'admin', 'password': 'admin', 'port': 16022 }
    ...                                        'port' is optional, default is 22
    ...                     profile_bay1_one_connection = {
    ...                         "connectionSettings": {
    ...                             "connections":[
    ...                                 {"id":1,"name":"iSCSI-boot-primary","functionType":"Ethernet","portId":"Mezz 3:2-a",
    ...                                  "requestedMbps":"2500","networkUri":'ETH:network-iSCSI',
    ...                                     "boot":{
    ...                                         "priority":"Primary","initiatorNameSource":"ProfileInitiatorName",
    ...                                         "initiatorIp":"192.168.22.56","initiatorSubnetMask":"255.255.192.0",
    ...                                         "initiatorGateway":"","initiatorVlanId":"1",
    ...                                         "bootTargetName":"iqn.2003-10.com.lefthandnetworks:vsa-mg-173-2:90:tbird9-bay1-bootvol",
    ...                                         "bootTargetLun":"0","firstBootTargetIp":"192.168.21.71","firstBootTargetPort":"3260",
    ...                                         "secondBootTargetIp":"","secondBootTargetPort":"","chapLevel":"None",
    ...                                         "chapName":"","chapSecret":None,"mutualChapName":"","mutualChapSecret":None
    ...                            },"requestedVFs":"Auto"}],
    ...                         }
    ...                     }
    ...                 Example:
    ...                     CLIQ ping initiatorIp in profile  ${profile_bay4_one_bootable_connection}
    [Arguments]  ${profile}  ${timeout}=5m  ${interval}=10s  ${VERBOSE}=False
    Log    \nping the initiatorIp in profile ${profile['name']}    console=true
    # Profile boot connections
    ${status}  ${connections} =  Run Keyword and Ignore Error  Get From Dictionary  ${profile['connectionSettings']}  connections
    Run keyword if  '${status}'=='FAIL'  Fail  msg=${connections}
    :FOR	${connection}	IN	@{connections}
	\	${status}  ${initiatorIp} =  Run Keyword and Ignore Error  Get From Dictionary  ${connection['boot']}  initiatorIp
	\   continue for loop if  '${status}'=='FAIL'
	\   Run Keyword If    '${VERBOSE}'=='True'    Log    the initiatorIp for ${connection['id']} is ${initiatorIp}    console=true
	\   Wait Until Keyword Succeeds  ${timeout}  ${interval}  CLIQ ping  ${initiatorIp}  VERBOSE=${VERBOSE}

CLIQ wait for ping initiatorIp success in profiles
    [Documentation]    Ping the initiatorIp in a list of profiles
    ...                Data file needs to define:
    ...                     cliq_credentials = { 'mgmt_ip':'16.71.149.173','username': 'admin', 'password': 'admin', 'port': 16022 }
    ...                                        'port' is optional, default is 22
    [Arguments]  ${list}  &{kwargs}
    Run Keyword for List with kwargs  ${list}  CLIQ wait for ping initiatorIp success in profile  &{kwargs}

CLIQ Check Volume Connected Sessions
    [Documentation]  Check volume connected iSCSI sessions via VSA CLIQ.
    ...              Data file needs to define:
    ...                     cliq_credentials = { 'mgmt_ip':'16.71.149.173','username': 'admin', 'password': 'admin', 'port': 16022 }
    ...                                        'port' is optional, default is 22
    [Arguments]  ${volumeName}  ${expected}=PASS  ${VERBOSE}=False  ${my_cliq_cred}=${cliq_credentials}
    ${port}=  CLIQ Get Port from Cliq Credentials  ${my_cliq_cred}
    ${output}  ${status} =  VsaHelper.get_volume_connected_sessions  ${my_cliq_cred['mgmt_ip']}  ${my_cliq_cred['username']}  ${my_cliq_cred['password']}  ${volumeName}  ${port}
    Run Keyword If    '${VERBOSE}'=='True'    Log    the connected iSCSI session of ${volumeName} are ${output}    console=true
    should match  ${status}  ${expected}
    Log    the connected iSCSI session of ${volumeName} are ${output}    console=true
    [return]  ${output}

CLIQ Check Volume Connected Sessions in profile
    [Documentation]    Check volume connected iSCSI sessions for profile connection via VSA CLIQ.
    ...                Data file needs to define:
    ...                     cliq_credentials = { 'mgmt_ip':'16.71.149.173','username': 'admin', 'password': 'admin', 'port': 16022 }
    ...                                        'port' is optional, default is 22
    ...                     profile_bay1_one_connection = {
    ...                         "connectionSettings": {
    ...                             "connections":[
    ...                                 {"id":1,"name":"iSCSI-boot-primary","functionType":"Ethernet","portId":"Mezz 3:2-a",
    ...                                  "requestedMbps":"2500","networkUri":'ETH:network-iSCSI',
    ...                                     "boot":{
    ...                                         "priority":"Primary","initiatorNameSource":"ProfileInitiatorName",
    ...                                         "initiatorIp":"192.168.22.56","initiatorSubnetMask":"255.255.192.0",
    ...                                         "initiatorGateway":"","initiatorVlanId":"1",
    ...                                         "bootTargetName":"iqn.2003-10.com.lefthandnetworks:vsa-mg-173-2:90:tbird9-bay1-bootvol",
    ...                                         "bootTargetLun":"0","firstBootTargetIp":"192.168.21.71","firstBootTargetPort":"3260",
    ...                                         "secondBootTargetIp":"","secondBootTargetPort":"","chapLevel":"None",
    ...                                         "chapName":"","chapSecret":None,"mutualChapName":"","mutualChapSecret":None
    ...                            },"requestedVFs":"Auto"}],
    ...                         }
    ...                     }
    ...                 Example:
    ...                     CLIQ ping initiatorIp in profile  ${profile_bay4_one_bootable_connection}
    [Arguments]  ${profile}  ${timeout}=5m  ${interval}=10s  ${expected}=PASS  ${VERBOSE}=False
    Log    \nCheck volume connected sessions in profile ${profile['name']}    console=true
    # Profile boot connections
    ${status}  ${connections} =  Run Keyword and Ignore Error  Get From Dictionary  ${profile['connectionSettings']}  connections
    Run keyword if  '${status}'=='FAIL'  Fail  msg=${connections}
    :FOR	${connection}	IN	@{connections}
    \   ${status}  ${bootParam} =  Run Keyword and Ignore Error  Get From Dictionary  ${connection}  boot
    \   continue for loop if  '${status}'=='FAIL'
	\	${status}  ${bootTargetName} =  Run Keyword and Ignore Error  Get From Dictionary  ${bootParam['iscsi']}  bootTargetName
	\   continue for loop if  '${status}'=='FAIL'
	\   @{words} = 	Split String  ${bootTargetName}  :
	\   ${volumeName} =  Get From List	${words}  3
	\   Wait Until Keyword Succeeds  ${timeout}  ${interval}  CLIQ Check Volume Connected Sessions  ${volumeName}  expected=${expected}   VERBOSE=${VERBOSE}

CLIQ Check Volume Connected Sessions in profiles
    [Documentation]    Check volume connected iSCSI sessions for profiles via VSA CLIQ.
    ...                Data file needs to define:
    ...                     cliq_credentials = { 'mgmt_ip':'16.71.149.173','username': 'admin', 'password': 'admin', 'port': 16022 }
    ...                                        'port' is optional, default is 22
    [Arguments]  ${list}  &{kwargs}
    Run Keyword for List with kwargs  ${list}  CLIQ Check Volume Connected Sessions in profile  &{kwargs}

CLIQ Get Port from Cliq Credentials
    [Documentation]  Retrieve the 'port' member from a cliq_credentials struct usually defined in RG data files like this:
    ...                 cliq_credentials = { 'mgmt_ip':'16.71.149.173','username': 'admin', 'password': 'admin', 'port': 16022 }
    ...                 This keyword defaults port to 22 if not present in cliq_credentials as this was the behavior for CLIQ code
    ...                 before the 'port' member was added to cliq_credentials
    [Arguments]  ${cliq_credentials}
    ${status}  ${port}=  Run Keyword and Ignore Error  Get From Dictionary  ${cliq_credentials}  port
    ${port}=  Set Variable If  '${status}' != 'PASS'  22  ${port}
    [Return]  ${port}
