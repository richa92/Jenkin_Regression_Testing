*** Settings ***
Library                RoboGalaxyLibrary
Library                FusionLibrary
Library                OperatingSystem
Library                BuiltIn
Library                Collections
Library                XML
Library                SSHLibrary
Library                String
Library                Dialogs

*** Keywords ***

Discover Power Device from variable
    [Documentation]    Adds power device to an appliance from a variable which contains a list of dicts with the entire payload
    [Arguments]        ${powerdevice}    ${status_code}=202
    Log      \nAdding Power Device     console=True
    ${resplist} =    Create List
    :FOR    ${powerdevice}    IN    @{powerdevice}
    \       log to console           \n-powerdevice body is ${powerdevice}
    \        ${resp} =     Fusion Api Discover Power Device         body=${powerdevice}
    \       Run Keyword If  '${resp['status_code']}'!= '${status_code}'
            ...  Run Keyword And Continue On Failure   Fail   Log  Adding Power Device ${powerdevice['hostname']} Failed
    \       continue for loop if  '${resp['status_code']}'!= '${status_code}'
    \       Append To List  ${resplist}  ${resp}
    [Return]    ${resplist}

Get Power Device URI
    [Documentation]     Get Power Device URI
    [Arguments]        ${power_device}
    ${resp} =     Fusion Api Get Power Device     param=?filter="'name'=='${power_device}, PDU 1'"
    Return From Keyword If  ${resp['count']}==0  /rest/power_device_uri_${power_device}_not_found
    ${uri} =     Get From Dictionary        ${resp['members'][0]}    uri
    [Return]    ${uri}

Refresh Power Device from variable
    [Documentation]    Refresh power device from an appliance from a variable which contains a list of dicts with the entire payload
    [Arguments]        ${refresh_body}      ${IPDU_SERVER_SELF_SIGN}      ${status_code}=202
    Log      \nRefreshing Power Device     console=True
    ${resplist} =    Create List
    :FOR    ${powerdevice}    IN    @{refresh_body}
    \       log to console           \n-Refresh powerdevice Request body is ${powerdevice}
    \       ${uri} =    Get Power Device URI    ${IPDU_SERVER_SELF_SIGN}
    \       log to console      uri is ${uri}
    \       log to console      body is ${powerdevice}
    \        ${resp} =     Fusion Api Refresh Power Device       body=${powerdevice}    uri=${uri}
    \       log to console      \n resp is ${resp}
    \       Run Keyword If  '${resp['status_code']}'!= '${status_code}'
            ...  Run Keyword And Continue On Failure   Fail   Log  Refreshing Power Device ${powerdevice['hostname']} Failed
    \       continue for loop if  '${resp['status_code']}'!= '${status_code}'
    \       Append To List  ${resplist}  ${resp}
    [Return]    ${resplist}

Delete Power Device By Name
    [Documentation]    Delete power device to an appliance from a variable which contains a list of dicts with the entire payload
    [Arguments]        ${powerdevices}    ${status_code}=204
    Log      \nDeleting Power Device     console=True
    ${resplist} =    Create List
    :FOR    ${powerdevice}    IN    @{powerdevices}
    \       log    \n-powerdevice name is ${powerdevice}    console=True
    \        ${resp} =     Fusion Api Remove Power Device         name=${powerdevice}
    \       Run Keyword If  '${resp['status_code']}'!= '${status_code}'
            ...  Run Keyword And Continue On Failure   Fail   Log  Deleting Power Device ${powerdevice} Failed
    \       continue for loop if  '${resp['status_code']}'!= '${status_code}'
    \       Append To List  ${resplist}  ${resp}
    [Return]    ${resplist}

Delete Power Device By Name Async
    [Documentation]  Delete Power Device By Name Async
    [Arguments]      ${powerdevices}
    ${resps}=    Delete Power Device By Name    ${powerdevices}
    Wait For Task2    ${resps}  timeout=120  interval=5  VERBOSE=True
