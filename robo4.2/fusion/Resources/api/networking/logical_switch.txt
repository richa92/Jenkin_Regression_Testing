*** Settings ***
Library				RoboGalaxyLibrary
Library				FusionLibrary
Library				BuiltIn
Library				Collections

*** Keywords ***
Add Logical Switch from variable
	[Documentation]	Adds a Logical Switch to an appliance from a variable which contains a list of dicts with the entire payload
    ...              scope process example:
    ...                 'initialScopeUris': ['Scope:Test', 'Scope:Production']
	[Arguments]		${ls}
	Log    Adding LOGICAL SWITCH    console=true
	${lsguri} = 	Get From Dictionary	   ${ls['logicalSwitch']}    logicalSwitchGroupUri
    ${lsguri} =     Common URI Lookup by name   ${lsguri}
    Set to dictionary   ${ls['logicalSwitch']}  logicalSwitchGroupUri   ${lsguri}

    # -Initial Scope process.
    ${initialScopeUris}=  Pop From Dictionary  ${ls}  initialScopeUris  default=${None}
    ${scopeUris}=       Run Keyword If    ${initialScopeUris} != ${None}
    ...                 Run Keyword for List  ${initialScopeUris}  Common URI lookup by name
    Run Keyword If      ${initialScopeUris} != ${None}
    ...                 Set To Dictionary    ${ls}  initialScopeUris  ${scopeUris}

    ${switchUris} =    Create List
    :FOR    ${switch_name}    in    @{ls['logicalSwitch']['switchUris']}
    \    ${status}    ${value} =     Run Keyword And Ignore Error     Should Match Regexp    ${switch_name}    SW:
    \    ${uri}=    Run Keyword If    '${status}'=='PASS'    Common Uri Lookup By Name    ${switch_name}
    \    Run Keyword If    '${status}'=='PASS'    Append To List    ${switchUris}    ${uri}
    \    Run Keyword If    '${status}'=='FAIL'    Append To List    ${switchUris}    ${switch_name}

    Log    SwitchUris: @{switchUris}    console=true
    Set To Dictionary    ${ls['logicalSwitch']}    switchUris    ${switchUris}

	${resp} =	Fusion Api Create LS  	${ls}
	${task} =	Wait For Task	${resp} 	3min	5s

Remove All LS
	[Documentation]	Querys the appliance for all LSs and then removes them
	Log    Removing LS    console=true
	${lss} = 	Fusion Api Get LS
	:FOR	${ls}	IN	@{lss['members']}
	\		${resp} = 	Fusion Api Delete LS		uri=${ls['uri']}
	\		${task} =	Wait For Task 	${resp} 	240s	2s

Get LS URI
	[Documentation]	   Querys the appliance for all LSs and then returns URI with matching name
	[Arguments]    ${name}
	Log    Get LS URI    console=true
	${lss} = 	Fusion Api Get LS
	:FOR	${ls}	IN	@{lss['members']}
	\		Return From Keyword If    '${ls['name']}'=='${name}'    ${ls['uri']}

    Log    LS: ${name} Not found
    [Return]    LS: ${name} Not found

Refresh Logical Switch
    [Documentation]    Refresh Logical Switch.
    ...                    Refresh Logical Switch    ${name}
    [Arguments]     ${name}
    ${uri} =    Get LS URI    ${name}
    ${uri} =    Catenate   SEPARATOR=/    ${uri}    refresh
    Log   Refresh: ${name} @ $[uri}    console=true
    ${resp} =     Fusion Api Update LS    uri=${uri}
    [Return]  ${resp}
