*** Settings ***
Library				RoboGalaxyLibrary
Library				FusionLibrary
Library				OperatingSystem
Library				BuiltIn
Library				Collections
Library				XML
Library		        SSHLibrary
Library				String
Library				Dialogs

*** Keywords ***
Get All SAS LIGS and Verify
    [Documentation]  Get All SAS LIGS and Verify
    ${resp} =  Fusion API Get SAS LIG
    ${status}  ${error_message} =  Run Keyword and Ignore Error  Get From Dictionary  ${resp}  message
    Dictionary Should Not Contain Key  ${resp}  message  ${error_message}

Delete SAS LIG by Name and Verify
    [Documentation]  Delete SAS LIG by Name and Verify
    [Arguments]  ${name}
    ${resp} =   Fusion API Delete SAS LIG  name=${name}
    ${status}  ${error_message} =  Run Keyword and Ignore Error  Get From Dictionary  ${resp}  message
    Dictionary Should Not Contain Key  ${resp}  message  ${error_message}
    Wait For Task2  ${resp}

Get SAS LIG URI
    [Documentation]  Get SAS LIG URI
	[Arguments]  ${name}
	${resp} = 	Fusion Api Get SAS LIG  param=?filter="'name' = '${name}'"
	${count} =  Get From Dictionary  ${resp}  count
	Return From Keyword If   $count==0   /rest/SAS_LIG_${name}_not_found
	${uri} = 	Get From Dictionary  ${resp['members'][0]}  uri
	[Return]	${uri}

Add SAS LIG
    [Documentation]	Add a SAS LIG from SAS LIG DTO
    ...              Example:
    ...                Add SAS LIG  ${dto}
    ...              Data Required:
    ...               SAS LIG DTO
	[Arguments]		${dto}  ${timeout}=120  ${interval}=10
	Log  ${\n}Adding SAS LIG ${dto['name']}    console=True
	${body} =  Fusion Api Create SAS LIG Payload  ${dto}
    ${resp} =  Fusion Api Create SAS LIG  ${body}
    ${status}  ${error_message} =  Run Keyword and Ignore Error  Get From Dictionary  ${resp}  message
    Dictionary Should Not Contain Key  ${resp}  message  ${error_message}
	${status}  ${task_uri} =  Run Keyword and Ignore Error  Get From Dictionary  ${resp['headers']}  location
	Run Keyword If  '${status}'=='FAIL'  Fail  Fail: Add SAS LIG not return Location header in ${resp}
	Log  The task URI is ${task_uri}
	${task} =  Fusion Api Get Task  uri=${task_uri}
    Wait For Task2  ${task}  timeout=${timeout}  interval=${interval}
    [Return]   ${resp}

Add SAS LIG from list
    [Documentation]  Add SAS LIG from a list of SAS LIG DTO
    ...              Example:
    ...                Add SAS LIG from list  ${list}
    ...              Data Required:
    ...                List of SAS LIG DTO
    [Arguments]  ${list}
    Log	 ${\n}Adding SAS LIG from list
    Run Keyword for List with kwargs  ${list}  Add SAS LIG  timeout=120  interval=10

Add SAS LIG from variable async
    [Documentation]    Add SAS LIG to an appliance from a list of Dict with entire payload.
    ...  Add SAS LIG asyncronously and Validates SAS LIG creation
    ...  if requested(Does not validate by default)

    [Arguments]   ${sas}    ${VERIFY}=${FALSE}  ${expected_sas_lig}=@empty   ${State_Code}=202
    ${tasks}=    Create List
    :FOR    ${sasx}    IN    @{sas}
    #    -First, if $VERIFY, check if ${sasx} already exists.  Skip if it does
    \    ${resp} =   Get Resource  SASLIG:${sasx['name']}
    \    ${statusCode}=  Convert To String  ${resp['status_code']}
    \    Log    ${statusCode}
    \    Run Keyword If    ${statusCode}==200
    \       ...     Log  SAS LIG ${sasx['name']} already exists    WARN
    \    continue for loop if  ${statusCode}==200
    \    Log    Adding SAS LIG
    \    ${body} =  Fusion Api Create SAS LIG Payload  ${sasx}
    \    ${response} =  Fusion Api Create SAS LIG  ${body}
    #    -Check the response code to ensure the SAS LIG was created as expected
    \    Log    ${response['status_code']}
    \    Run Keyword If  ${response['status_code']}!=${State_Code}
         ...   Run Keyword And Continue on Failure  FAIL  Failed to create SAS LIG ${sasx['name']}
    \    continue for loop if  ${response['status_code']}!=${State_Code}
    #   -Append list of response to task
    \    Append to List  ${tasks}  ${response}

    # Verify if all Tasks are complete. Continue with next task Uri, if any task fails
    :FOR    ${task}    IN    @{tasks}
    \    Run Keyword And Continue on Failure    Wait For Task2   ${task}

    # If !{VERIFY}, then we're done
    Return From Keyword If  ${VERIFY}==${FALSE}
    Verify Resources for List  ${expected_sas_lig}

Edit SAS LIG
    [Documentation]	Edit a SAS LIG from SASLIG DTO
    ...              Example:
    ...                Edit SAS LIG  ${dto}
    ...              Data Required:
    ...               SAS LIG DTO
	[Arguments]		${dto}  ${timeout}=300  ${interval}=10
	${name} =  Get From Dictionary  ${dto}  name
	Log  ${\n}Editing SAS LIG ${name}   console=True
	${uri} =  Get Sas LIG URI  ${name}
	${body} =  Fusion Api Create SAS LIG Payload  ${dto}
	Set to dictionary  ${body}  uri  ${uri}
    ${resp} =  Fusion Api Edit SAS LIG  ${body}  ${uri}
    ${status}  ${error_message} =  Run Keyword and Ignore Error  Get From Dictionary  ${resp}  message
    Dictionary Should Not Contain Key  ${resp}  message  ${error_message}
	${status}  ${task_uri} =  Run Keyword and Ignore Error  Get From Dictionary  ${resp['headers']}  location
	Run Keyword If  '${status}'=='FAIL'  Fail  Fail: Edit SAS LIG not return Location header in ${resp}
    Log  The task URI is ${task_uri}
	${task} =  Fusion Api Get Task  uri=${task_uri}
    Wait For Task2  ${task}  timeout=${timeout}  interval=${interval}

Edit SAS LIG from list
    [Documentation]  Edit SAS LIG from a list of SAS LIG DTO
    ...              Example:
    ...                Edit SAS LIG from list  ${list}
    ...              Data Required:
    ...                List of SAS LIG DTO
    [Arguments]  ${list}
    Log	 ${\n}Editing SAS LIG from list   console=True
    Run Keyword for List with kwargs  ${list}  Edit SAS LIG  timeout=120  interval=10

Remove All SAS LIGs
    [Documentation]   Querys the appliance for all SAS LIGs and then removes them
    [Arguments]  ${VERIFY}=False    ${STATUS_CODE}=404
    Log    ${\n}Removing All SAS LIGS    console=True
    ${response} =   Create List
    ${list} =   Fusion Api Get SAS LIG
    ${count}=    Convert To String  ${list['count']}
    Run Keyword If  '${count}'=='0'   Log  SAS LIG doesn't exists   WARN
    :FOR  ${element}  IN    @{list['members']}
    \       Log  ${\n}Removing SAS LIG ${element['name']}
    \       ${resp} =   fusion api delete sas lig  uri=${element['uri']}
    \       ${status}  ${task_uri} =  Run Keyword and Ignore Error  Get From Dictionary  ${resp['headers']}  location
    \       Run Keyword If  '${status}'=='FAIL'  Fail  Fail: Remove SAS LIG not return Location header in ${resp}
    \       Append To List  ${response}     ${resp}
    Wait For Task2   ${response}  240
    :FOR  ${element}  IN    @{list['members']}
    \       ${resplig} =    Fusion Api Get SAS LIG          uri=${element['uri']}
    \       Run Keyword If         '${VERIFY}'=='True' and ${resplig['status_code']} == ${STATUS_CODE}     Log    Delete SUCCESS for SAS LIG URI:${element['uri']} and its Response:${resplig}
    \       ...    ELSE IF         '${VERIFY}'=='True' and ${resplig['status_code']} != ${STATUS_CODE}     Log    Deleted FAILED for${element['uri']}

