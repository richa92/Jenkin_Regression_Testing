*** Settings ***
Library				RoboGalaxyLibrary
Library				FusionLibrary
Library				OperatingSystem
Library				BuiltIn
Library				Collections
Library				XML
Library		        SSHLibrary
Library				String
Library				Dialogs

*** Variables ***
${reapply_configuration_timeout}  180

*** Keywords ***
Reapply SAS Logical Interconnect Configuration By Name and Verify
    [Documentation]    Reapply SAS Logical Interconnect Configuration By Name and Verify
    [Arguments]  ${name}
    ${SAS_LI_URI} =  Get SAS LI URI  ${name}
    ${response} =  Fusion API Reapply SAS LI Configuration  ${SAS_LI_URI}
    ${status}  ${error_message} =  Run Keyword and Ignore Error  Get From Dictionary  ${response}  message
    Dictionary Should Not Contain Key  ${response}  message  ${error_message}
    Wait for Task2  ${response}  ${reapply_configuration_timeout}

Get SAS LI URI
    [Documentation]    Get SAS LI URI
	[Arguments]  ${name}
	${response} = 	Fusion Api Get SAS LI  param=?filter="'name'=='${name}'"
    ${status}  ${error_message} =  Run Keyword and Ignore Error  Get From Dictionary  ${response}  message
    Dictionary Should Not Contain Key  ${response}  message  ${error_message}
	${count} =  Get From Dictionary  ${response}  count
	Run Keyword If  $count==0  Fail  Fail: Get SAS LI URI found no match for name ${name}
	${uri} = 	Get From Dictionary  ${response['members'][0]}  uri
	[Return]	${uri}

Update SAS LI from Group
    [Documentation]  Update SAS LI from Group
    ...              Example:
    ...                Update SAS LI from Group  ${dto}
    ...              Data Required:
    ...                SAS LI DTO
    [Arguments]  ${dto}    ${timeout}=300    ${interval}=10    ${WFT2}=${True}
    ${name} =  Get From Dictionary  ${dto}  name
    Log    ${\n}Update SAS LI ${name} from group    console=true
    ${uri} =  Get SAS LI URI  ${name}
    ${resp} =  Fusion Api Update Sas Li from Group  ${uri}
    ${status}  ${task_uri} =  Run Keyword and Ignore Error  Get From Dictionary  ${resp['headers']}  location
    Run Keyword If  '${status}'=='FAIL'  Fail  Fail: Update SAS LI from Group not return Location header in ${resp}
    Log    The task URI is ${task_uri}
	${task} =  Fusion Api Get Task  uri=${task_uri}
    Run Keyword If    ${WFT2}==${True}    Wait For Task2  ${task}  timeout=${timeout}  interval=${interval}
    [Return]    ${task}

Update SAS LI from Group from list
    [Documentation]  Update SAS LI from Group from list
    ...              Example:
    ...                Update SAS LI from Group from list  ${list}
    ...              Data Required:
    ...                List of SAS LI
    [Arguments]  ${list}	${timeout}=300	${interval}=10
    Log    ${\n}Updating SAS LI from Group from list    console=true
    Run Keyword for List with kwargs  ${list}  Update SAS LI from Group  timeout=${timeout}  interval=${interval}

Update SAS Logical Interconnect Firmware
    [Documentation]    Update SAS Logical Interconnect Firmware
    [Arguments]     ${sasli_name}
    ...             ${spp_name}
    ...             ${fwActivationMode}=Parallel
    ...             ${validationType}=ValidateFailFast
    ...             ${force}=${True}
    ...             ${WFT2}=${True}
    ...             ${timeout}=30min
    ...             ${interval}=15sec

    Log    Updating ${spp_name} firmware for ${sasli_name}

    ${sasli_uri} =    Get SAS LI URI    ${sasli_name}
    ${spp_uri} =    Get Firmware Bundle URI    ${spp_name}

    ${request_body} =    Create Dictionary    command=Update
    ...                                       fwActivationMode=${fwActivationMode}
    ...                                       validationType=${validationType}
    ...                                       force=${force}
    ...                                       sppUri=${spp_uri}

    ${resp} =   Fusion Api Update SAS LI Firmware   uri=${sasli_uri}    body=${request_body}

    Should Be Equal    '${resp["status_code"]}'    '202'    msg=Update SAS LI Firmware did not return task. Request Failed.
    Run Keyword If    ${WFT2}==${True}    Wait For Task 2    ${resp}     ${timeout}    ${interval}

    [Return]    ${resp}