*** Settings ***
Library				RoboGalaxyLibrary
Library				FusionLibrary
Library				OperatingSystem
Library				BuiltIn
Library				Collections
Library				XML
Library		        SSHLibrary
Library				String
Library				Dialogs

Documentation       Resources to perform operations on a storevirtual resource using storevirtual management console (svmc).  
	
*** Keywords ***
Add Storage System Using SVMC
	[Documentation]	Add storage system using SVMC and return the response.
	[Arguments]		${storageSystem}   ${appliance_ip}  ${mgmtgrpid}   ${SVMC_IP}  
	${payload} =  copy dictionary  ${storageSystem}
	LOG   'payload=${payload}'   level=TRACE
	${svmc} =  copy dictionary  ${svmcdevice}
	set to dictionary  ${svmc}  managementGroupId  ${mgmtgrpid}
	set to dictionary  ${svmc}  svmcIP  ${SVMC_IP} 
	LOG   'svmcdevice=${svmc}'   level=TRACE
	Update Dictionary Subset  ${payload['deviceSpecificSettings']}  ${svmc}
    LOG   'payload=${payload}'   level=TRACE 	
	${resp} =	Fusion Api Create Storage System  body=${payload}  api=400    	
	[Return]	${resp}
	
Add Storage System to Hellfire
	[Documentation]	Add storage system and return the response.
	[Arguments]		${storageSystem}
	${payload} =  copy dictionary  ${storageSystem['credentials']}
	set to dictionary  ${payload}  hostname  ${storageSystem['hostname']}
	set to dictionary  ${payload}  family  ${storageSystem['family']}
	${resp} =	Fusion Api Create Storage System 	body=${payload}
	[Return]	${resp}	

Get Cluster Information 
    [Documentation]	Get cluster info from svmc for specific VSA.
	[Arguments]	 ${uri}  ${svmc_ip}  ${headers}	${svmc_vsa["address"]}
	${resp} =	SVMC Get Resource  ${uri}  ${svmc_ip}  headers=${headers}
	LOG   'response=${resp["members"]}'   level=TRACE
    :FOR	${cluster}	IN	@{resp["members"]}
    \    LOG   'cluster=${cluster}'   level=TRACE
    \	 ${return}=  Run Keyword If  '${cluster["name"]}'=='${svmc_vsa["address"]}'  set variable  ${cluster["managementGroupId"]}
    \    Exit for loop if 	'${cluster["name"]}'=='${svmc_vsa["address"]}'  
	[Return]	${return}	

Attach VSA to SVMC
    [Documentation]	Attach a specific VSA to a specific SVMC 
	[Arguments]	 ${uri}  ${svmc_ip}  ${headers} 
	${payload}=    get dictionary items   ${svmc_vsa}
	${resp} =	SVMC Post Resource  ${payload}  ${uri}   ${svmc_ip}  headers=${headers}  
	[Return]	${resp}	

Add Storage Volumes Using SVMC Async
	[Documentation]	Add a list of storage volumes using SVMC and return the responses.
	[Arguments]     ${volumes}  ${api}
	${toAdd} =  Create List
    :FOR	${vol}	IN	@{volumes}
    \   LOG   'volume=${vol}'   level=TRACE 
    \	${status} =  Check Resource Existing  SVOL:${vol['properties']['name']}
	\	Run Keyword If    ${status}=='FAIL'  Append To List   ${toAdd}  ${vol}

    ${resplist} =  Create List
    :FOR	${vol}	IN	@{toAdd}
    \	Log    Adding Storage Volume ${vol['properties']['name']}    console=true
    \   ${resp} =  hellfire_resource.Add Storage Volume  ${vol}  ${api}
    \   Append To List  ${resplist}  ${resp}
	[Return]	${resplist}
	
Add Storage Volumes to Hellfire Async
	[Documentation]	Add a list of storage volumes using SVMC and return the responses.
	[Arguments]     ${volumes}
	${toAdd} =  Create List
    :FOR	${vol}	IN	@{volumes}
    \	${status} =  Check Resource Existing  SVOL:${vol['properties']['name']}
	\	Run Keyword If    ${status}=='FAIL'  Append To List   ${toAdd}  ${vol}

    ${resplist} =  Create List
    :FOR	${vol}	IN	@{toAdd}
    \	Log    Adding Storage Volume ${vol['properties']['name']}    console=true
    \   ${resp} =  hellfire_resource.Add Storage Volume  ${vol}  ${api}
    \   Append To List  ${resplist}  ${resp}
	[Return]	${resplist}
	
	
Add Storage Volume
	[Documentation]	Add storage Volume and return the response.
	[Arguments]     ${volume}  ${api}
    ${payload} =  Create Storage Volume POST Payload  ${volume}
    ${resp} =   Fusion Api Create Storage Volume    body=${payload}  api=${api}
	[Return]	${resp}	
	
Remove ALL Storage Volumes Using SVMC Async
	[Documentation]	Query the appliance, setup with SVMC access, for all storage volumes, remove them, and return the responses.
	[Arguments]   ${param}
	${resp} =   Remove ALL Storage Volumes Async   ${param}
	[return]	${resp}	

	
Remove ALL Storage Systems Using SVMC Async
	[Documentation]	Query the appliance, setup with SVMC access,  for all storage systems, remove them, and return the responses.
	${resp} =  Remove All Storage Systems Async
	[return]	${resp}

	