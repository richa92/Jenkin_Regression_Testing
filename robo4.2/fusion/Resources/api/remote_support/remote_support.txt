*** Settings ***
Library             RoboGalaxyLibrary
Library             FusionLibrary
Library             OperatingSystem
Library             BuiltIn
Library             Collections
Library             XML
Library             SSHLibrary
Library             String
Library             Dialogs

*** Keywords ***
All Enclosures Remote Support Setting Should be Enabled
    [Documentation]    Check if Remote Support is enabled for the enclosures
    ${encs} =  Fusion Api Get Enclosures
    # Make sure we get (more than zero) enclosures listed
    Run Keyword If  '${encs['count']}'=='0'    Fail    msg=No enclosures found
    ${res} =  Set Variable  ${empty}
    :FOR  ${enc}  IN  @{encs['members']}
    \  ${res} =  Run Keyword If  '${enc['supportState']}' != 'Enabled'  Catenate  ${res}
    ...     \nEnclosure name [${enc['name']}] Expected ${expected} but found ${enc['supportState']}
    \  ...  ELSE  Set Variable  ${res}
    ${count} =  Get Length  ${res}
    Run Keyword If  '${count}' > '0'  Fail  ${res}

All Server Hardwares Remote Support Setting Should be Enabled
    [Documentation]    Check if Remote Support is enabled for the servers
    ${servers} =  Fusion Api Get Server Hardware
    # Make sure we get (more than zero) enclosures listed
    Run Keyword If  '${servers['count']}'=='0'    Fail    msg=No Servers found
    ${res} =  Set Variable  ${empty}
    :FOR  ${server}  IN  @{servers['members']}
    \  ${res} =  Run Keyword If  '${server['supportState']}' != 'Enabled'  Catenate  ${res}
    ...     \nServer name [${enc['name']}] Expected ${expected} but found ${server['supportState']}
    \  ...  ELSE  Set Variable  ${res}
    ${count} =  Get Length  ${res}
    Run Keyword If  '${count}' > '0'  Fail  ${res}

All SAS Interconnects Remote Support Setting Should be Enabled
    [Documentation]    Check if Remote Support is enabled for the SAS Interconnects
    ${icms} =  Fusion API Get SAS Interconnects
    # Make sure we get (more than zero) Interconnects listed
    Run Keyword If  '${icms['count']}'=='0'    Fail    msg=No SAS Interconnect found
    ${res} =  Set Variable  ${empty}
    :FOR  ${icm}  IN  @{icms['members']}
    \  ${res} =  Run Keyword If  '${icm['supportState']}' != 'Enabled'  Catenate  ${res}
    ...     \nSAS ICM name [${icm['name']}] Expected ${expected} but found ${icm['supportState']}
    \  ...  ELSE  Set Variable  ${res}
    ${count} =  Get Length  ${res}
    Run Keyword If  '${count}' > '0'  Fail  ${res}

All Interconnects Remote Support Setting Should be Enabled
    [Documentation]    Check if Remote Support is enabled for the Interconnects
    ${icms} =  Fusion Api Get Interconnect
    # Make sure we get (more than zero) Interconnects listed
    Run Keyword If  '${icms['count']}'=='0'    Fail    msg=No Interconnect found
    ${res} =  Set Variable  ${empty}
    :FOR  ${icm}  IN  @{icms['members']}
    \  ${res} =  Run Keyword If  '${icm['remoteSupport']['supportState']}' != 'Enabled'  Catenate  ${res}
    ...     \nICM name [${icm['name']}] Expected Enabled but found ${icm['remoteSupport']['supportState']}
    \  ...  ELSE  Set Variable  ${res}
    ${count} =  Get Length  ${res}
    Run Keyword If  '${count}' > '0'  Fail  ${res}

Remote Support Should be Enabled
    [Documentation]  Check if Remote Support is enable in One View
    ${rss} =  Get Current Enable State of Remote Support
    Run Keyword If  '${rss}' == 'False'  Fail  msg=Remote Support is not enabled
    Run Keyword If  '${rss}' == 'True'   Run Keywords
    ...  ALL Enclosures Remote Support Setting Should be Enabled
    ...  All Server Hardwares Remote Support Setting Should be Enabled
    ...  ALL Interconnects Remote Support Setting Should be Enabled
    ...  ALL SAS Interconnects Remote Support Setting Should be Enabled

Remote Support Enable Task Should Be
    [Documentation]  Check if Remote Support is enable in One View
    [Arguments]  ${expected}=Completed
    ${tasks} =  Fusion Api Get Task  param=?filter="name eq 'Enable remote support'"
    # Make sure we get (more than zero) Enable remote support tasks
    Run Keyword If  '${tasks['count']}'=='0'    Fail    msg=Remote Support not enabled
    ${res} =  Set Variable  ${empty}
    :FOR  ${task}  IN  @{tasks['members']}
    \  ${res} =  Run Keyword If  '${task['taskState']}' != '${expected}'  Catenate  ${res}
    ...     \nTask resource name [${task['associatedResource']['resourceName']}] Expected ${expected} but found ${task['taskState']}
    \  ...  ELSE  Set Variable  ${res}
    ${count} =  Get Length  ${res}
    Run Keyword If  '${count}' > '0'  Fail  ${res}