*** Settings ***
Library           RoboGalaxyLibrary
Library           BuiltIn
Library           String
Library           Collections
Library           OperatingSystem
Variables         FusionLibrary/ui/business_logic/general/base_elements.py
Variables         FusionLibrary/ui/general/reports_elements.py


*** Keywords ***

Navigate To Reports Page
    wait for element and click    ${FusionBasePage.ID_MAIN_MENU_CONTROL}
    wait for element and click    ${FusionBasePage.ID_MENU_LINK_REPORTS}
    ${status}   ${value}=   Run Keyword And Ignore Error    wait for element visible    ${FusionReportsPage.ID_PAGE_LABEL} 10
    Run Keyword If    '${status}'== 'PASS'    Log    Successfully navigated to Reports page
    Run Keyword Unless  '${status}'== 'PASS'    Fail    Failed while navigating to Reports page.
    wait for element and click    ${FusionReportsPage.ID_LINK_LOCAL_USERS}

Select Local Users and Validate Reports Table
    [Arguments]    ${user}
    ${match}=    Table Contains    ${FusionReportsPage.ID_TABLE_USERS}    ${user}
    Log   ${match}
    Run Keyword If  ${Match}    Return From Keyword    ${True}
    Run Keyword Unless  ${Match}    Return From Keyword    ${False}

Get Users Count In Report Page
    ${count}    get text    ${FusionReportsPage.ID_USERS_COUNT}
    Log    Current Users Count Is '${count}'
    [return]    ${count}

Navigate To Save report
    wait for element and click    ${FusionReportsPage.ID_MENU_ACTION_BTN}
    wait for element and click    ${FusionReportsPage.ID_MENU_ACTION_SAVE_AS}
    wait for element and click    ${FusionReportsPage.ID_BTN_XLS_DROPDOWN}

Save Local User Report As XLS
    Navigate To Save report
    wait for element and click    ${FusionReportsPage.ID_BTN_SAVE_AS_OK}
    ${BrowserUppercase}=    Convert To Uppercase    ${Browser}
    ${Title} =  Create Dictionary   FIREFOX=File Upload    CHROME=Open     INTERNET EXPLORER=Choose File to Upload
    ${WindowTitle} =    Get From Dictionary    ${Title}    ${BrowserUppercase}
    Find Native Window    ${WindowTitle}
    Focus Native Window    ${WindowTitle}
    Send Keys to Native Window    ${WindowTitle}    {ENTER}
    Validate Download File Is XLS File

Save Local User Report As CSV
    Navigate To Save report
    Wait For Element And Click    ${FusionReportsPage.ID_BTN_CSV_DROPDOWN}
    wait for element and click    ${FusionReportsPage.ID_BTN_SAVE_AS_OK}
    ${BrowserUppercase}=    Convert To Uppercase    ${Browser}
    ${Title} =  Create Dictionary   FIREFOX=File Upload    CHROME=Open     INTERNET EXPLORER=Choose File to Upload
    ${WindowTitle} =    Get From Dictionary    ${Title}    ${BrowserUppercase}
    Find Native Window    ${WindowTitle}
    Focus Native Window    ${WindowTitle}
    Send Keys to Native Window    ${WindowTitle}    {ENTER}
    Validate Download File Is CSV File

Validate Download File Is CSV File
    ${orig wait} =     Set Selenium Implicit Wait    40 seconds
    ${files} =    OperatingSystem.List Files In Directory    ${DownloadPath}    *.csv
    ${downloadfile} =    Get From List    ${files}    0
    Log    ${downloadfile}
    Run Keyword If    '${downloadfile}' == 'Local users.csv'    Log   Report is downloaded in csv format
    Run Keyword Unless    '${downloadfile}' == 'Local users.csv'    Fail   Failed to download in csv format
    Log    Deleting the report file as a cleanup
    Set Selenium Implicit Wait    ${orig wait}
    Remove File    ${DownloadPath}${/}Local users.csv

Validate Download File Is XLS File
    ${orig wait} =     Set Selenium Implicit Wait    40 seconds
    ${files} =    OperatingSystem.List Files In Directory    ${DownloadPath}    *.xlsx
    ${downloadfile} =    Get From List    ${files}    0
    Log    ${downloadfile}
    Run Keyword If    '${downloadfile}' == 'Local users.xlsx'    Log   Report is downloaded in xls format
    Run Keyword Unless    '${downloadfile}' == 'Local users.xlsx'    Fail   Failed to download in xls format
    Log    Deleting the report file as a cleanup
    Set Selenium Implicit Wait    ${orig wait}
    Remove File    ${DownloadPath}${/}Local users.xlsx
