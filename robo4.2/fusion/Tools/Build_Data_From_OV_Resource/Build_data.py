
admin_credentials = {'userName': 'Administrator', 'password': 'wpsthpvse1'}
#admin_credentials = {'userName': 'Administrator', 'password': 'hpvse123'}

# this defines the rest path to short name lookup and vice-versa
short_names = {
    "drive-enclosures": "DE:",
    "drive-enclosure-types": "DETypes:",
    "drive-types": "DTypes:",
    "enclosures": "ENC:",
    "enclosure-groups": "EG:",
    "ethernet-networks": "ETH:",
    "enclosure-types": "EncTypes:",
    "fabrics": "Fabric:",
    "fc-networks": "FC:",
    "fcoe-networks": "FCOE:",
    "interconnects": "IC:",
    "interconnect-types": "ICTypes:",
    "logical-enclosures": "LE:",
    "logical-interconnect-groups": "LIG:",
    "network-sets": "NS:",
    "sas-interconnects": "SASIC:",
    "sas-interconnect-types": "SASICTypes:",
    "sas-logical-interconnects": "SASLI:",
    "sas-logical-interconnect-groups": "SASLIG:",
    "sas-logical-jbods": "SASLJBOD:",
    "server-profiles": "SP:",
    "server-hardware": "SH:",
    "server-hardware-types": "SHT:",
    "storage-pools": "SPOOL:",
    "storage-volumes": "SVOL:",
    "storage-volumes-templates": "SVT:",
    "storage-systems": "SSYS:",
    "users": "USER:"
}

# these items should excluded in the created template and thus eventually the created data dict
template_exclude = {
    "allocatedMbps": "",
    "allocatedVFs": "",
    "category": "",
    "created": "",
    "dependentResourceUri": "",
    "eTag": "",
    "headers": "",
    "id": "",
    "inProgress": "",
    "modified": "",
    "state": "",
    "status": "",
    "status_code": "",
    "taskUri": "",
    "uri": "",
    "uidState": "",
    "uuid": ""
}

# these item removed from the datadict if a condition is met.
datadict_remove_if = {
    "iscsiInitiatorNameType": ["AutoGenerated", "iscsiInitiatorName"],
    "serverProfileTemplateUri": [None, "serverProfileTemplateUri"],
    "serialNumberType": ["Virtual", "serialNumber"],
    "macType": ["Virtual", "mac"],
    "wwnType": ["Virtual", "wwn"],
    "wwpnType": ["Virtual", ("wwpn", "wwnn")]
}

# these items should not be validated as they are dynamic and aren't really user specified
# some items can't be totally ignored, "name" unless it is in the "ethernetSettings" section
expected_exclude = {
    "allocatedVFs": "",
    "created": "",
    "eTag": "",
    "headers": "",
    "id": "",
    "modified": "",
    "name": {"ethernetSettings"},
    "powerAllocationWatts": "",
    "refreshState": "",
    "status_code": "",
    "taskUri": "",
    "uuid": "",
    "uidState": ""
}

# these items are conditional and are dependant on another item
# if "macType" is "Virtual", then the value for "mac" is then compared as a REGEX as the value is dynamic
conditional_items = {
    "macType": {
        "Virtual": {"mac": "REGEX:(\w\w:){5}\w\w"}
    },
    "wwpnType": {
        "Virtual": {"wwnn": "REGEX:(\w\w:){7}\w\w", "wwpn": "REGEX:(\w\w:){7}\w\w"}
    },
    "iscsiInitiatorNameType": {
        "AutoGenerated": {"iscsiInitiatorName": "REGEX:iqn.2015-02.com.hpe:OneView-VCG\w*"}
    },
    "serialNumberType": {
        "Virtual": {"serialNumber": "REGEX:VCG\w*"}
    },
    "lunType": {
        "Auto": {"lun": "REGEX:\d"}
    }
}

# these item can fluctuate so verify within a RANGE.  Use a REGEX pattern or full string name.
# specify the percent range as a decimal.
range_items = {
    ".*Watts": .50,
    "temperature": .50,
    ".*Mbps": .40
}

# some range items "requestedMbps can be contain "2500" but also can be set to "Auto".  Can't range "Auto"
cant_range = {
    "Auto": ""
}
