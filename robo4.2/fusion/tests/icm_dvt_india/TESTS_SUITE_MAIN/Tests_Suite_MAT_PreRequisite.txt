*** Settings ***
Documentation       To run the prerequisites.
...
Resource           ../../../Resources/api/fusion_api_resource.txt
Resource           MAT_PreRequisite.txt

Variables           Data_Variables.py

Library             RoboGalaxyLibrary
Library             FusionLibrary


*** Variables ***

*** Keywords ***

*** Test cases ***

Login
    Set Log Level    TRACE
    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${Appliance_credentials}

Creating Ethernet networks
    Add Ethernet Networks from variable    ${PreRequisite_Ethernet_networks}

Create MAT networkset
    ${connections} =   MAT_PreRequisite.Lookup Connection Uris ${profile_netset[0]['connections']}
    Log to console and logfile ${connections}
    ${conns} =  Create List
    ${net1} =    Get From Dictionary      ${connections[0]}    networkUri
    Log to console and logfile    ${net1}
    append to list  ${conns}    ${net1}
    ${set1} =     Set to Dictionary   ${MAT_networkset[0]}  networkUris     ${conns}
    Log to console and logfile ${set1}
    ${netset} =    fusion_api_create_network_set    ${MAT_networkset[0]}

Creating FC Fabric Networks
    Add FC Networks from variable     ${PreRequisite_FC_networks}

Creating FCoE networks
    Add FCoE Networks from variable    ${PreRequisite_FCOE_networks}

Creating FC-DA Fabric Networks
    Add FC Networks from variable     ${PreRequisite_FCDA_networks}


Creating MAT LIG
    LIG creation    ${MAT_LIGS[0]}

Create EG

    Log to console  \n Creating EG
    ${Resp} =   Add Enclosure Group from variable       ${enc_group[0]}
    Run Keyword If  '${Resp['status_code']}' != '201'  Fail    ELSE  log to console   \n-created EG successfully


Creating LE

    Log to console  \n Creating LE
    ${Resp} =   Add Logical Enclosure from variable     ${Logical_Enclosure}
    Run Keyword If  '${Resp['status_code']}' != '202'  Fail    ELSE  log to console   \n-created LE successfully


Create ServerProfile with FC networks
    Log to console and logfile    ${\n}Powering off the server ${Profile_FC[0] ['serverHardwareUri']}
    MAT_PreRequisite.Power off Server    ${Profile_FC[0] ['serverHardwareUri']}
    ${responses}=  MAT_PreRequisite.Add Server Profiles from variable    ${Profile_FC}
    MAT_PreRequisite.Power on server     ${Profile_FC[0] ['serverHardwareUri']}
    log to console \nProfile is created successfully


Create ServerProfile with FCOE networks
    Log to console and logfile    ${\n}Powering off the server ${Profile_FCOE[0] ['serverHardwareUri']}
    MAT_PreRequisite.Power off Server    ${Profile_FCOE[0] ['serverHardwareUri']}
    ${responses}=  MAT_PreRequisite.Add Server Profiles from variable    ${Profile_FCOE}
    MAT_PreRequisite.Power on server     ${Profile_FCOE[0] ['serverHardwareUri']}
    log to console \nProfile is created successfully

Create ServerProfile with MLAG networks
    Log to console and logfile    ${\n}Powering off the server ${profile_MLAG[0] ['serverHardwareUri']}
    MAT_PreRequisite.Power off Server    ${profile_MLAG[0] ['serverHardwareUri']}
    ${responses}=  MAT_PreRequisite.Add Server Profiles from variable    ${profile_MLAG}
    MAT_PreRequisite.Power on server     ${profile_MLAG[0] ['serverHardwareUri']}
    log to console \nProfile is created successfully

Create ServerProfile with FC DA networks
    Log to console and logfile    ${\n}Powering off the server ${Profile_FC_DA[0] ['serverHardwareUri']}
    MAT_PreRequisite.Power off Server    ${Profile_FC_DA[0] ['serverHardwareUri']}
    ${responses}=  MAT_PreRequisite.Add Server Profiles from variable    ${Profile_FC_DA}
    MAT_PreRequisite.Power on server     ${Profile_FC_DA[0] ['serverHardwareUri']}
    log to console               \nProfile is created successfully

