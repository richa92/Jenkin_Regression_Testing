*** Settings ***
Documentation       This module is for QOS Feature Testing in Potash
...
Resource           ../../../Resources/api/fusion_api_resource.txt

Library             RoboGalaxyLibrary
Library             FusionLibrary


*** Variables ***

*** keywords ***


Create LIG with QOS Type CustomwithFcoe
    [Documentation]    Keyword to create LIG with QOS Type CustomwithFcoe
    [Arguments]        ${LIG_QOS}   ${QoS_WithFcoe}

    ${body} =   Build LIG body     ${LIG_QOS[0]}
    ${qosConfiguration} =   Get From Dictionary   ${QoS_WithFcoe}  qosConfiguration
    Set to dictionary   ${body}     qosConfiguration    ${qosConfiguration}
    log to console      replaced body is:${body}
    ${resp} =   Fusion Api Create LIG   ${body}
    ${task} =   Wait For Task    ${resp}    400s    2s
    log to console      response is:${resp}
    Run Keyword If  '${resp['status_code']}' != '202'   fail    ELSE    Log to Console  \n-LIG  created successfully
    #Update from Group


Update from Group
    [Documentation]    Keyword to update from group
    ${resp} =   Fusion Api Get Li
    #Log to console and logfile ${resp}
    ${li_uri} = Get From Dictionary     ${resp['members'][0]}    uri
    #Log to console and logfile     ${li_uri}
    ${resp} =   Fusion Api Update From Group    ${li_uri}
    #${task} =  Wait For Task LI Update
    Log to console and logfile    Update from Group Successful


Editing Lig with QoS
    [Documentation]    Keyword to edit Lig for QOS testing
    [Arguments]        ${LIG_QOS}   ${QoS_Type}
    ${resp} =    Fusion Api Get Lig     param=?filter="'name'=='${LIGS_TB[0]['name']}'"
    ${uri} =     Get From Dictionary        ${resp['members'][0]}    uri
    ${body} =   Build LIG body     ${LIG_QOS[0]}
    ${lig} =        Get LIG Member      ${LIG1}
    ${lig_uri} =    Get LIG Uri         ${LIG1}
    ${qosConfiguration} =   Get From Dictionary   ${QoS_Type}  qosConfiguration
    Set to dictionary   ${body}     qosConfiguration    ${qosConfiguration}
    ${resp} =   Fusion Api Edit LIG body=${body}    uri=${lig_uri}
    ${task} =   Wait For Task   ${resp}     120s    2s
    Run Keyword If  '${resp['status_code']}' != '202'   fail    ELSE    Log to Console  \n-LIG  created successfully
    Update from Group
