*** Settings ***
Documentation       This module Creates an sFlow Agent, Receiver, Counterpoller and Flow sampler and validates sFlow functionality on Hafnium Potash

Resource           ../../../Resources/api/fusion_api_resource.txt
Resource           ../TESTS_SUITE_MAIN/InternalKeywords.txt
Library            RoboGalaxyLibrary
Library            FusionLibrary
Library            sFlow.py





*** keywords ***

Get Hafnium Command Output
    [Arguments]         ${PotashIP}    ${HafniumCommand}    ${Prompt}
    [Documentation]     Check Hafnium Interface status using Interface
    #${out}=    Hafnium Open Connection And Log In    ${PotashIP}
    ${out}=    Open Connection And Log In    ${PotashIP}  netop    netoppwd
    sleep    5s
    Write    ${\n}
    ${out1}=    Read Until    ${Prompt}
    sleep    2s
    Write    ${HafniumCommand}
    Write    ${\n}
    Write    ${\n}
    ${cmdoutput}=    Read Until    ${Prompt}
    Close Connection
    sleep    3s
    [return]    ${cmdoutput}


Create_IVR
    [Arguments]     ${unsername}    ${Password}    ${Potash_IP}    ${IVR_VLAN}  ${IVR_IPV4}  ${IVR_IPV4_SUBNET_MASK}
    [Documentation]     keyword to Create IVR
    ${SnmpSet_Potash}=    Get SNMPSET Command    ${unsername}    ${Password}     udp6:[${Potash_IP}]
    ${Snmp_Potash}=    Get SNMPGET Command   ${unsername}    ${Password}     udp6:[${Potash_IP}]

    ${IVR_ROW_STATUS}=    catenate    ${SnmpSet_Potash}    1.3.6.1.4.1.11.5.7.5.8.1.27.1.4.1.8.326 i 5
    ${output_ROW_STATUS}=     Execute Command    ${IVR_ROW_STATUS}

    ${module_status}=    Run Keyword And Return Status    Should Match Regexp    ${output_ROW_STATUS}   \\s*[\\w\\W]*?INTEGER: 5\\s*[\\w\\W]*?
    Run Keyword If    '${module_status}'=='False'    Fail    IVR ROW creation failed
    ...    ELSE IF    '${module_status}'=='True'    No Operation

    ${IVR_INT_ALIAS}=    catenate    ${SnmpSet_Potash}    1.3.6.1.2.1.31.1.1.1.18.326  s  ${IVR_VLAN}
    ${output_IVR_INT_ALIAS}=     Execute Command    ${IVR_INT_ALIAS}

    ${IVR_INTERFACE_TYPE}=    catenate    ${SnmpSet_Potash}    1.3.6.1.4.1.11.5.7.5.8.1.27.1.4.1.2.326 i 136
    ${output_IVR_INTERFACE_TYPE}=     Execute Command    ${IVR_INTERFACE_TYPE}

    ${IVR_ROW_STATUS_ENABLE}=    catenate    ${SnmpSet_Potash}    1.3.6.1.4.1.11.5.7.5.8.1.27.1.4.1.8.326 i 1
    ${output_ROW_STATUS}=     Execute Command    ${IVR_ROW_STATUS_ENABLE}

    ${IVR_INTERFACE_IPV4_ADDRESS}=    catenate    ${SnmpSet_Potash}    1.3.6.1.4.1.11.5.7.5.8.1.27.1.5.1.2.326 a ${IVR_IPV4}
    ${output_IVR_INTERFACE_IPV4_ADDRESS}=     Execute Command    ${IVR_INTERFACE_IPV4_ADDRESS}

    ${IVR_INTERFACE_IPV4_SUBNET}=    catenate    ${SnmpSet_Potash}    1.3.6.1.4.1.11.5.7.5.8.1.27.1.5.1.3.326 a ${IVR_IPV4_SUBNET_MASK}
    ${output_IVR_INTERFACE_IPV4_SUBNET}=     Execute Command    ${IVR_INTERFACE_IPV4_SUBNET}

    ${IVR_UNSHUT}=    catenate    ${SnmpSet_Potash}    1.3.6.1.4.1.11.5.7.5.8.1.27.1.4.1.4.326 i 1
    ${output_IVR_UNSHUT}=     Execute Command    ${IVR_UNSHUT}

    ${SFLOW_SYS_CONTROL}=    catenate    ${SnmpSet_Potash}    1.3.6.1.4.1.11.5.7.5.8.2.2.115.3.0 i 1
    ${output_SFLOW_SYS_CONTROL}=     Execute Command    ${SFLOW_SYS_CONTROL}

    ${SFLOW_AGENT_INTERFACE}=    catenate    ${SnmpSet_Potash}    1.3.6.1.4.1.11.5.7.5.8.2.2.115.8.0 i 326
    ${output_SFLOW_AGENT_INTERFACE}=     Execute Command    ${SFLOW_AGENT_INTERFACE}

    ${SFLOW_MODULE_STATUS}=    catenate    ${SnmpSet_Potash}    1.3.6.1.4.1.11.5.7.5.8.2.2.115.4.0 i 1
    ${output_SFLOW_MODULE_STATUS}=     Execute Command    ${SFLOW_MODULE_STATUS}

    ${IVR_GET_STATUS}=    catenate    ${Snmp_Potash}    1.3.6.1.4.1.11.5.7.5.8.1.27.1.4.1.8.326
    ${output_IVR_GET_STATUS}=     Execute Command    ${IVR_GET_STATUS}

    ${module_status}=    Run Keyword And Return Status    Should Match Regexp    ${output_IVR_GET_STATUS}   \\s*[\\w\\W]*?INTEGER: 1\\s*[\\w\\W]*?
    Run Keyword If    '${module_status}'=='False'    Fail    IVR ROW creation failed
    ...    ELSE IF    '${module_status}'=='True'    Log To Console    IVR Interface created successfully
    [return]   true

Delete_IVR
    [Arguments]     ${unsername}    ${Password}    ${Potash_IP}
    [Documentation]     keyword to delete IVR
    ${SnmpSet_Potash}=    Get SNMPSET Command    ${unsername}    ${Password}     udp6:[${Potash_IP}]
    ${Snmp_Potash}=    Get SNMPGET Command   ${unsername}    ${Password}     udp6:[${Potash_IP}]

    ${IVR_ROW_STATUS_DELETE}=    catenate    ${SnmpSet_Potash}    1.3.6.1.4.1.11.5.7.5.8.1.27.1.4.1.8.326 i 6
    ${output_IVR_ROW_STATUS_DELETE}=     Execute Command    ${IVR_ROW_STATUS_DELETE}

    ${module_status}=    Run Keyword And Return Status    Should Match Regexp    ${output_IVR_ROW_STATUS_DELETE}   \\s*[\\w\\W]*?INTEGER:\\s*6\\s*[\\w\\W]*?
    Run Keyword If    '${module_status}'=='False'    Fail    IVR ROW deletion failed.
    ...    ELSE IF    '${module_status}'=='True'    Log To Console    IVR Interface deleted successfully.
    [return]

Create_Receiver
    [Arguments]    ${unsername}    ${Password}    ${Potash_IP}   ${RECEIVER_INDEX}    ${RECEIVER_NAME}    ${RECEIVER_ADDRESS}
    [Documentation]     keyword to Create receiver

    ${Snmp_Potash}=    Get SNMPGET Command   ${unsername}    ${Password}     udp6:[${Potash_IP}]
    ${SnmpSet_Potash}=    Get SNMPSET Command    ${unsername}    ${Password}     udp6:[${Potash_IP}]

    ${IVR_GET_STATUS}=    catenate    ${Snmp_Potash}    1.3.6.1.4.1.11.5.7.5.8.1.27.1.4.1.8.326
    ${output_IVR_GET_STATUS}=     Execute Command    ${IVR_GET_STATUS}

    ${module_status}=    Run Keyword And Return Status    Should Match Regexp    ${output_IVR_GET_STATUS}   \\s*[\\w\\W]*?INTEGER: 1\\s*[\\w\\W]*?
    Run Keyword If    '${module_status}'=='False'    Fail    IVR Interface is not created. Please create IVR interface first.
    ...    ELSE IF    '${module_status}'=='True'    Log To Console    IVR Interface created successfully.

    ${RECEIVER_GET_STATUS}=    catenate    ${Snmp_Potash}    1.3.6.1.4.1.11.5.7.5.8.2.2.115.1.1.1.5.${RECEIVER_INDEX}
    ${output_RECEIVER_GET_STATUS}=     Execute Command    ${RECEIVER_GET_STATUS}

    ${module_status}=    Run Keyword And Return Status    Should Match Regexp    ${output_RECEIVER_GET_STATUS}   \\s*[\\w\\W]*?INTEGER: 1\\s*[\\w\\W]*?
    Run Keyword If    '${module_status}'=='False'    No Operation
    ...    ELSE IF    '${module_status}'=='True'    Fail    Receiver already present. Create different receiver.

    ${RECEIVER_OID}=    catenate    ${SnmpSet_Potash}    1.3.6.1.4.1.11.5.7.5.8.2.2.115.1.1.1.5.${RECEIVER_INDEX} i 5
    ${output_RECEIVER_OID}=     Execute Command    ${RECEIVER_OID}

    ${RECEIVER_OWNER_OID}=    catenate    ${SnmpSet_Potash}    1.3.6.1.4.1.14706.1.1.4.1.2.${RECEIVER_INDEX} s ${RECEIVER_NAME}
    ${output_RECEIVER_OWNER_OID}=     Execute Command    ${RECEIVER_OWNER_OID}

    ${RECEIVER_TIMEOUT_PERIOD}=    catenate    ${SnmpSet_Potash}    1.3.6.1.4.1.14706.1.1.4.1.3.${RECEIVER_INDEX} i 2147483647
    ${output_RECEIVER_TIMEOUT_PERIOD}=     Execute Command    ${RECEIVER_TIMEOUT_PERIOD}

    ${RECEIVER_DATAGRAM_SIZE}=    catenate    ${SnmpSet_Potash}    1.3.6.1.4.1.14706.1.1.4.1.4.${RECEIVER_INDEX} i 500
    ${output_RECEIVER_DATAGRAM_SIZE}=     Execute Command    ${RECEIVER_DATAGRAM_SIZE}

    ${RECEIVER_ADDRESS_OID}=    catenate    ${SnmpSet_Potash}    1.3.6.1.4.1.14706.1.1.4.1.6.${RECEIVER_INDEX} x ${RECEIVER_ADDRESS}
    ${output_RECEIVER_ADDRESS_OID}=     Execute Command    ${RECEIVER_ADDRESS_OID}

    ${RECEIVER_PORT_OID}=    catenate    ${SnmpSet_Potash}    1.3.6.1.4.1.14706.1.1.4.1.7.${RECEIVER_INDEX} i 6343
    ${output_RECEIVER_PORT_OID}=     Execute Command    ${RECEIVER_PORT_OID}

    ${RECEIVER_ENABLE}=    catenate    ${SnmpSet_Potash}    1.3.6.1.4.1.11.5.7.5.8.2.2.115.1.1.1.5.${RECEIVER_INDEX} i 1
    ${output_RECEIVER_ENABLE}=     Execute Command    ${RECEIVER_ENABLE}

    ${output_RECEIVER_GET_STATUS}=     Execute Command    ${RECEIVER_GET_STATUS}
    ${module_status}=    Run Keyword And Return Status    Should Match Regexp    ${output_RECEIVER_GET_STATUS}   \\s*[\\w\\W]*?INTEGER: 1\\s*[\\w\\W]*?
    Run Keyword If    '${module_status}'=='False'    Fail    Recever could not be created.
    ...    ELSE IF    '${module_status}'=='True'    Log To Console    Receiver created successfully.

    [Return]

Return_Master_IP
    [Arguments]    ${unsername}    ${Password}    ${PotashIP1}    ${PotashIP2}
    [Documentation]     keyword to return IP of master potash ICM
    ${Snmp_Potash}=    Get SNMPGET Command   ${unsername}    ${Password}     udp6:[${PotashIP1}]
    ${Snmp_Get_Potash}=    catenate    ${Snmp_Potash}    1.3.6.1.4.1.11.5.7.5.8.1.99.1.4.0
    ${output_module}=     Execute Command    ${Snmp_Get_Potash}
    ${module_status}=    Run Keyword And Return Status    Should Match Regexp    ${output_module}   \\s*[\\w\\W]*?INTEGER: 1\\s*[\\w\\W]*?
    ${master_ip}=  Run Keyword If    '${module_status}'=='True'  Set Variable  ${PotashIP1}
    ...    ELSE IF    '${module_status}'=='False'    Set Variable  ${PotashIP2}
    [Return]  ${master_ip}





Create_Counter_Poller_Interface
    [Arguments]    ${unsername}    ${Password}    ${Potash_IP}  ${COUNTER_POLLER_INTERFACE}  ${COUNTER_POLLER_INTERVAL}  ${RECEIVER_INDEX}
    [Documentation]     keyword to Create Counter Poller Interface
    ${Snmp_Potash}=    Get SNMPWALK Command   ${unsername}    ${Password}     udp6:[${Potash_IP}]
    ${SnmpSet_Potash}=    Get SNMPSET Command    ${unsername}    ${Password}     udp6:[${Potash_IP}]

    ${IVR_GET_STATUS}=    catenate    ${Snmp_Potash}    1.3.6.1.4.1.11.5.7.5.8.1.27.1.4.1.8.326
    ${output_IVR_GET_STATUS}=     Execute Command    ${IVR_GET_STATUS}

    ${module_status}=    Run Keyword And Return Status    Should Match Regexp    ${output_IVR_GET_STATUS}   \\s*[\\w\\W]*?INTEGER: 1\\s*[\\w\\W]*?
    Run Keyword If    '${module_status}'=='False'    Fail    IVR Interface is not created. Please create IVR interface first.
    ...    ELSE IF    '${module_status}'=='True'    Log To Console    IVR Interface created successfully.

    ${Snmp_Get_ifName}=    catenate    ${Snmp_Potash}    1.3.6.1.2.1.31.1.1.1.1
    ${ifName_output}=     Execute Command    ${Snmp_Get_ifName}
    ${ifindex}=    ifNameIndex    ${ifName_output}  ${COUNTER_POLLER_INTERFACE}
    Run Keyword If    '${ifindex}'=='False'    Fail    ERROR: Either ifNameIndex Dictionary is Empty or Given Counter Poller Interface does not present in Potash!!! Please provide valid Interface.

    ${COUNTER_POLLER_ROW}=    catenate    ${SnmpSet_Potash}    1.3.6.1.4.1.11.5.7.5.8.2.2.115.2.1.1.6.11.1.3.6.1.2.1.2.2.1.1.${ifindex}.1 i 5
    ${output_COUNTER_POLLER_ROW}=     Execute Command    ${COUNTER_POLLER_ROW}

    ${COUNTER_POLLER_RECEIVER}=    catenate    ${SnmpSet_Potash}    1.3.6.1.4.1.14706.1.1.6.1.3.11.1.3.6.1.2.1.2.2.1.1.${ifindex}.1 i ${RECEIVER_INDEX}
    ${output_COUNTER_POLLER_RECEIVER}=     Execute Command    ${COUNTER_POLLER_RECEIVER}

    ${COUNTER_POLLER_INTERVAL_OID}=    catenate    ${SnmpSet_Potash}    1.3.6.1.4.1.14706.1.1.6.1.4.11.1.3.6.1.2.1.2.2.1.1.${ifindex}.1 i ${COUNTER_POLLER_INTERVAL}
    ${output_COUNTER_POLLER_INTERVAL_OID}=     Execute Command    ${COUNTER_POLLER_INTERVAL_OID}

    ${COUNTER_POLLER_ROW_ACTIVATE}=    catenate    ${SnmpSet_Potash}    1.3.6.1.4.1.11.5.7.5.8.2.2.115.2.1.1.6.11.1.3.6.1.2.1.2.2.1.1.${ifindex}.1 i 1
    ${output_COUNTER_POLLER_ROW_ACTIVATE}=     Execute Command    ${COUNTER_POLLER_ROW_ACTIVATE}

    ${COUNTER_POLLER_ROW_STATUS}=    catenate    ${Snmp_Potash}    1.3.6.1.4.1.11.5.7.5.8.2.2.115.2.1.1.6.11.1.3.6.1.2.1.2.2.1.1.${ifindex}.1
    ${output_COUNTER_POLLER_ROW_STATUS}=     Execute Command    ${COUNTER_POLLER_ROW_STATUS}

    ${module_status}=    Run Keyword And Return Status    Should Match Regexp    ${output_COUNTER_POLLER_ROW_STATUS}   \\s*[\\w\\W]*?INTEGER: 1\\s*[\\w\\W]*?
    Run Keyword If    '${module_status}'=='False'    Fail    Counter Poller interface creaton failed for the interface  ${COUNTER_POLLER_INTERFACE}.
    ...    ELSE IF    '${module_status}'=='True'    Log To Console    Counter poller Interface created successfully for the interface ${COUNTER_POLLER_INTERFACE}.
    [Return]  True

Create_Flow_Sampler_Interface
    [Arguments]    ${unsername}    ${Password}    ${Potash_IP}  ${FLOW_SAMPLER_INTERFACE}    ${RECEIVER_INDEX}
    [Documentation]     Keyword to Create Flow Sampler Interface

    ${Snmp_Potash}=    Get SNMPWALK Command   ${unsername}    ${Password}     udp6:[${Potash_IP}]
    ${SnmpSet_Potash}=    Get SNMPSET Command    ${unsername}    ${Password}     udp6:[${Potash_IP}]

    ${IVR_GET_STATUS}=    catenate    ${Snmp_Potash}    1.3.6.1.4.1.11.5.7.5.8.1.27.1.4.1.8.326
    ${output_IVR_GET_STATUS}=     Execute Command    ${IVR_GET_STATUS}

    ${module_status}=    Run Keyword And Return Status    Should Match Regexp    ${output_IVR_GET_STATUS}   \\s*[\\w\\W]*?INTEGER: 1\\s*[\\w\\W]*?
    Run Keyword If    '${module_status}'=='False'    Fail    IVR Interface is not created. Please create IVR interface first.
    ...    ELSE IF    '${module_status}'=='True'    Log To Console    IVR Interface created successfully.

    ${Snmp_Get_ifName}=    catenate    ${Snmp_Potash}    1.3.6.1.2.1.31.1.1.1.1
    ${ifName_output}=     Execute Command    ${Snmp_Get_ifName}
    ${ifindex}=    ifNameIndex    ${ifName_output}  ${FLOW_SAMPLER_INTERFACE}
    Run Keyword If    '${ifindex}'=='False'    Fail    ERROR: Either ifNameIndex Dictionary is Empty or Given Counter Poller Interface does not present in Potash!!! Please provide valid Interface.

    ${SAMPLING_ROW}=    catenate    ${SnmpSet_Potash}    1.3.6.1.4.1.11.5.7.5.8.2.2.115.15.1.1.7.11.1.3.6.1.2.1.2.2.1.1.${ifindex}.1 i 5
    ${output_SAMPLING_ROW}=     Execute Command    ${SAMPLING_ROW}

    ${SAMPLING_RECEIVER}=    catenate    ${SnmpSet_Potash}    1.3.6.1.4.1.14706.1.1.5.1.3.11.1.3.6.1.2.1.2.2.1.1.${ifindex}.1 i ${RECEIVER_INDEX}
    ${output_SAMPLING_RECEIVER}=     Execute Command    ${SAMPLING_RECEIVER}

    ${SAMPLING_RATE}=    catenate    ${SnmpSet_Potash}    1.3.6.1.4.1.14706.1.1.5.1.4.11.1.3.6.1.2.1.2.2.1.1.${ifindex}.1 i 512
    ${output_SAMPLING_RATE}=     Execute Command    ${SAMPLING_RATE}

    ${SAMPLING_HEADER_SIZE}=    catenate    ${SnmpSet_Potash}    1.3.6.1.4.1.14706.1.1.5.1.5.11.1.3.6.1.2.1.2.2.1.1.${ifindex}.1 i 64
    ${output_SAMPLING_HEADER_SIZE}=     Execute Command    ${SAMPLING_HEADER_SIZE}

    ${SAMPLING_DIRECTION}=    catenate    ${SnmpSet_Potash}    1.3.6.1.4.1.11.5.7.5.8.2.2.115.15.1.1.2.11.1.3.6.1.2.1.2.2.1.1.${ifindex}.1 i 3
    ${output_SAMPLING_DIRECTION}=     Execute Command    ${SAMPLING_DIRECTION}

    ${SAMPLING_ROW_ENABLE}=    catenate    ${SnmpSet_Potash}    1.3.6.1.4.1.11.5.7.5.8.2.2.115.15.1.1.7.11.1.3.6.1.2.1.2.2.1.1.${ifindex}.1 i 1
    ${output_SAMPLING_ROW_ENABLE}=     Execute Command    ${SAMPLING_ROW_ENABLE}

    ${SAMPLER_ROW_STATUS}=    catenate    ${Snmp_Potash}    1.3.6.1.4.1.11.5.7.5.8.2.2.115.15.1.1.7.11.1.3.6.1.2.1.2.2.1.1.${ifindex}.1
    ${output_SAMPLER_ROW_STATUS}=     Execute Command    ${SAMPLER_ROW_STATUS}

    ${module_status}=    Run Keyword And Return Status    Should Match Regexp    ${output_SAMPLER_ROW_STATUS}   \\s*[\\w\\W]*?INTEGER: 1\\s*[\\w\\W]*?
    Run Keyword If    '${module_status}'=='False'    Fail    Sampler interface creaton failed for the interface  ${FLOW_SAMPLER_INTERFACE}.
    ...    ELSE IF    '${module_status}'=='True'    Log To Console    Counter poller Interface created successfully for the interface ${FLOW_SAMPLER_INTERFACE}.
    [Return]  True


sFlow Agent Creation
    [Documentation]  sFlow IVR IPv4 Interface and Agent creation
    [Arguments]    ${OneViewIP}    ${Random_Password}    ${PotashIP1}  ${PotashIP2}
    [Tags]    IT  IT1
    Open Connection And Log In      ${OneViewIP}
    ${Master_ip}=    Return_Master_IP    OneView  ${Random_Password}  ${PotashIP1}  ${PotashIP2}
    Create_IVR    OneView    ${Random_Password}    ${Master_ip}  ${IVR_VLAN}  ${IVR_IPV4}  ${IVR_IPV4_SUBNET_MASK}
    #Delete_IVR    OneView    ${Random_Password}    ${Master_ip}
    Close All Connections


sFlow Receiver Creation
    [Documentation]  sFlow Receiver creation
    [Arguments]    ${OneViewIP}    ${Random_Password}    ${PotashIP1}  ${PotashIP2}
    [Tags]    IT  IT2
    Open Connection And Log In      ${OneViewIP}
    ${Master_ip}=    Return_Master_IP    OneView  ${Random_Password}  ${PotashIP1}  ${PotashIP2}
    Create_Receiver    OneView    ${Random_Password}    ${Master_ip}   ${RECEIVER_INDEX}    ${RECEIVER_NAME}    ${RECEIVER_ADDRESS}
    Close All Connections


Verify weather Hafnium allows to create more than 3 sFlow Receivers
    [Documentation]    Create more that 3 receivers
    [Arguments]    ${OneViewIP}    ${Random_Password}    ${PotashIP1}  ${PotashIP2}
    [Tags]    IT  IT3
    Open Connection And Log In      ${OneViewIP}
    ${Master_ip}=    Return_Master_IP    OneView  ${Random_Password}  ${PotashIP1}  ${PotashIP2}
    ${Snmp_Potash}=    Get SNMPGET Command   OneView    ${Random_Password}     udp6:[${Master_ip}]
    ${SnmpSet_Potash}=    Get SNMPSET Command    OneView    ${Random_Password}     udp6:[${Master_ip}]

    ${IVR_GET_STATUS}=    catenate    ${Snmp_Potash}    1.3.6.1.4.1.11.5.7.5.8.1.27.1.4.1.8.326
    ${output_IVR_GET_STATUS}=     Execute Command    ${IVR_GET_STATUS}

    ${module_status}=    Run Keyword And Return Status    Should Match Regexp    ${output_IVR_GET_STATUS}   \\s*[\\w\\W]*?INTEGER: 1\\s*[\\w\\W]*?
    Run Keyword If    '${module_status}'=='False'    Fail    IVR Interface is not created. Please create IVR interface first.
    ...    ELSE IF    '${module_status}'=='True'    Log To Console    IVR Interface created successfully.

    ${RECEIVER_OID}=    catenate    ${SnmpSet_Potash}    1.3.6.1.4.1.11.5.7.5.8.2.2.115.1.1.1.5.4 i 5
    ${output_RECEIVER_OID}=     Execute Command    ${RECEIVER_OID}

    ${module_status}=    Run Keyword And Return Status    Should Match Regexp    ${output_RECEIVER_OID}   \\s*[\\w\\W]*?INTEGER: 5\\s*[\\w\\W]*?
    Run Keyword If    '${module_status}'=='False'    No Operation
    ...    ELSE IF    '${module_status}'=='True'    Fail    hafnium is allowing to create more than 3 receivers.
    Close All Connections


sFlow Counter Poller creation and verification for FCoE uplink
    [Documentation]  sFlow Counter Poller creation and verification for FCoE uplink
    [Arguments]    ${OneViewIP}    ${Random_Password}    ${PotashIP1_IPV6}  ${PotashIP2_IPV6}  ${Master_ipv4}
    [Tags]    IT  IT4
    Open Connection And Log In      ${OneViewIP}

    ${Master_ipv6}=    Return_Master_IP    OneView  ${Random_Password}  ${PotashIP1_IPV6}  ${PotashIP2_IPV6}

    ${COUNTER_POLLER_INTERFACE_REMOVEDSPACE}=  Remove String    ${COUNTER_POLLER_INTERFACE}    ${space}
    Create_Counter_Poller_Interface    OneView  ${Random_Password}  ${Master_ipv6}  ${COUNTER_POLLER_INTERFACE_REMOVEDSPACE}  ${COUNTER_POLLER_INTERVAL}  ${RECEIVER_INDEX}
    Close All Connections

    ${cmd_output}=    Get Hafnium Command Output    ${Master_ipv4}    show sflow counter-poller interface ${COUNTER_POLLER_INTERFACE}    ${SWITCH_PROMPT}

    ${CP_TX_Count1}=    Get_CounterPoller_Details    ${cmd_output}
    sleep    ${COUNTER_POLLER_INTERVAL}s

    ${cmd_output}=    Get Hafnium Command Output    ${Master_ipv4}    show sflow counter-poller interface ${COUNTER_POLLER_INTERFACE}    ${SWITCH_PROMPT}

    ${CP_TX_Count2}=    Get_CounterPoller_Details    ${cmd_output}

    ${CP_TX_Count_status}=    Run Keyword And Return Status    Should Be True    ${CP_TX_Count2}>${CP_TX_Count1}
    Run Keyword If    '${CP_TX_Count_status}'=='False'    Fail    Counter Poller TX count is not incresing.



sFlow flow sampler creation and verification for FCoE uplink
    [Documentation]  sFlow flow sampler creation and verification for FCoE uplink
    [Tags]    IT  IT5
    [Arguments]    ${OneViewIP}    ${Random_Password}    ${PotashIP1_IPV6}  ${PotashIP2_IPV6}  ${Master_ipv4}
    Open Connection And Log In      ${OneViewIP}
    ${Master_ip}=    Return_Master_IP    OneView  ${Random_Password}  ${PotashIP1_IPV6}  ${PotashIP2_IPV6}

    ${FLOW_SAMPLER_INTERFACE_REMOVEDSPACE}=  Remove String    ${FLOW_SAMPLER_INTERFACE}    ${space}
    Create_Flow_Sampler_Interface    OneView  ${Random_Password}  ${Master_ip}  ${FLOW_SAMPLER_INTERFACE_REMOVEDSPACE}  ${RECEIVER_INDEX}
    Close All Connections
    ${cmd_output}=    Get Hafnium Command Output    ${Master_ipv4}    show sflow flow-sampler interface ${FLOW_SAMPLER_INTERFACE}    ${SWITCH_PROMPT}
    ${FS_TX_Count1}=    Get_FlowSampler_Details    ${cmd_output}
    sleep    30s
    ${cmd_output}=    Get Hafnium Command Output    ${Master_ipv4}    show sflow flow-sampler interface ${FLOW_SAMPLER_INTERFACE}    ${SWITCH_PROMPT}
    ${FS_TX_Count2}=    Get_FlowSampler_Details    ${cmd_output}

    ${FS_TX_Count_status}=    Run Keyword And Return Status    Should Be True    ${FS_TX_Count2}>${FS_TX_Count1}
    Run Keyword If    '${FS_TX_Count_status}'=='False'    Fail    Flow sampler TX count is not incresing.




sFlow Counter Poller creation and verification for Ethernet uplink
    [Documentation]  sFlow Counter Poller creation and verification for Ethernet uplink
    [Arguments]    ${OneViewIP}    ${Random_Password}    ${PotashIP1_IPV6}  ${PotashIP2_IPV6}  ${Master_ipv4}
    [Tags]    IT  IT6
    Open Connection And Log In      ${OneViewIP}

    ${Master_ip}=    Return_Master_IP    OneView  ${Random_Password}  ${PotashIP1_IPV6}  ${PotashIP2_IPV6}

    ${COUNTER_POLLER_INTERFACE_2_REMOVEDSPACE}=  Remove String    ${COUNTER_POLLER_INTERFACE_2}    ${space}
    Create_Counter_Poller_Interface    OneView  ${Random_Password}  ${Master_ip}  ${COUNTER_POLLER_INTERFACE_2_REMOVEDSPACE}  ${COUNTER_POLLER_INTERVAL}  ${RECEIVER_INDEX}
    Close All Connections
    ${cmd_output}=    Get Hafnium Command Output    ${Master_ipv4}    show sflow counter-poller interface ${COUNTER_POLLER_INTERFACE_2}    ${SWITCH_PROMPT}
    ${CP_TX_Count1}=    Get_CounterPoller_Details    ${cmd_output}
    sleep    ${COUNTER_POLLER_INTERVAL}s
    ${cmd_output}=    Get Hafnium Command Output    ${Master_ipv4}    show sflow counter-poller interface ${COUNTER_POLLER_INTERFACE_2}    ${SWITCH_PROMPT}
    ${CP_TX_Count2}=    Get_CounterPoller_Details    ${cmd_output}
    ${CP_TX_Count_status}=    Run Keyword And Return Status    Should Be True    ${CP_TX_Count2}>${CP_TX_Count1}
    Run Keyword If    '${CP_TX_Count_status}'=='False'    Fail    Counter Poller TX count is not incresing.



sFlow flow sampler creation and verification for Ethernet uplink
    [Documentation]  sFlow flow sampler creation and verification for Ethernet uplink
    [Arguments]    ${OneViewIP}    ${Random_Password}    ${PotashIP1_IPV6}  ${PotashIP2_IPV6}  ${Master_ipv4}
    [Tags]    IT  IT6
    Open Connection And Log In      ${OneViewIP}

    ${Master_ip}=    Return_Master_IP    OneView  ${Random_Password}  ${PotashIP1_IPV6}  ${PotashIP2_IPV6}

    ${FLOW_SAMPLER_INTERFACE_2_REMOVEDSPACE}=  Remove String    ${FLOW_SAMPLER_INTERFACE_2}    ${space}
    Create_Flow_Sampler_Interface    OneView  ${Random_Password}  ${PotashIP1}  ${FLOW_SAMPLER_INTERFACE_2_REMOVEDSPACE}  ${RECEIVER_INDEX}
    Close All Connections

    ${cmd_output}=    Get Hafnium Command Output    ${Master_ipv4}    show sflow flow-sampler interface ${FLOW_SAMPLER_INTERFACE_2}    ${SWITCH_PROMPT}
    ${FS_TX_Count1}=    Get_FlowSampler_Details    ${cmd_output}
    sleep    30s
    ${cmd_output}=    Get Hafnium Command Output    ${Master_ipv4}    show sflow flow-sampler interface ${FLOW_SAMPLER_INTERFACE_2}    ${SWITCH_PROMPT}
    ${FS_TX_Count2}=    Get_FlowSampler_Details    ${cmd_output}

    ${FS_TX_Count_status}=    Run Keyword And Return Status    Should Be True    ${FS_TX_Count2}>${FS_TX_Count1}
    Run Keyword If    '${FS_TX_Count_status}'=='False'    Fail    Flow sampler TX count is not incresing.




