*** Settings ***
Documentation     Add Enclosure
...    = Usage =
...    | pybot | -L DEBUG | add_enclosure.txt | 
...    = Variables =
...    | FUSION IP        | Required; IP address of the FusionVM to use | 
...    | Enc IP           | Required; Enclosure OA IP |
...    | Enc Username     | Required; Enclosure OA Username |
...    | Enc Password     | Required; Enclosure OA Password |
...    | Enc Group Name   | Optional; Enclosure Group Name; default *Encl-Grp1* |
...    | FW Bundle Name   | Optional; Firmware Bundle Name; Ignored if unknown; default *unknown* |
...    | Force            | Optional; Force Flag for Enclosure Import; default *False* |
...    | Update FW On     | Optional; Update Logical Interconnect and/or Enclosure; default *EnclosureOnly*  |
...    | Force Install FW | Optional; Force installation of firmware; default *False* |
...    = Preconditions =
...    None

Library           RoboGalaxyLibrary            # DVTs Robot Framework extensions
Library           FusionLibrary                # DVTs Robot Framework extensions
Library           String
Library           Collections
Resource          ../resources/fusion_api.txt  # Comet-DVT fusion API extensions
Resource          ../resources/defaults.txt    # Comet-DVT default variables
Suite Setup       Login to Fusion Via REST
Suite Teardown    Logout of Fusion Via REST

*** Variables ***
${FW BUNDLE NAME}      unknown
${FW BUNDLE URI}       ${EMPTY}
${TIMEOUT}             900


*** Test Cases ***
Add Enclosure to Fusion
    ${ENC GROUP URI}=    Get Enclosure Group Uri    ${ENC GROUP NAME}
    Set Suite Variable    ${ENC GROUP URI}    ${ENC GROUP URI}
    ${FW BUNDLE URI}=    Run Keyword If    '${FW BUNDLE NAME}'!='unknown'    Get Firmware Driver Uri    ${FW BUNDLE NAME}
    Set Suite Variable    ${FW BUNDLE URI}    ${FW BUNDLE URI}
    Create Enclosure    EncIP=${ENC IP}    EncUsername=${ENC USERNAME}    EncPassword=${ENC PASSWORD}    EncGroupUri=${ENC GROUP URI}    FwBundleUri=${FW BUNDLE URI}

Verify New Enclosure
    ${Enclosure}=    Get Enclosure    ${ENC NAME}
    Log Dictionary    ${Enclosure}
    # Verify Name
    ${name}=       Get From Dictionary    ${Enclosure}      name
    Should Be Equal as Strings    ${name}    ${EncName}          msg=Enclosure Name did not match ${EncName}.
    # Verify Enclosure Group URI
    ${uri}=       Get From Dictionary    ${Enclosure}       enclosureGroupUri
    Should Be Equal as Strings    ${uri}    ${ENC GROUP URI}     msg=Enclosure Group Uri did not match ${ENC GROUP URI}.
    # Verify Firmware Baseline Uri
    ${uri}=       Get From Dictionary    ${Enclosure}       fwBaselineUri
    Run Keyword If    '${FW BUNDLE NAME}'!='unknown'    Should Be Equal as Strings    ${uri}    ${FW BUNDLE URI}     msg=Firmware Bundle Uri did not match ${FW BUNDLE URI}.
    # Verify State
    ${state}=       Get From Dictionary    ${Enclosure}     state
    Should Be Equal as Strings    ${state}    Configured         msg=State did not match ${state}.
    # Verify Status
    ${status}=       Get From Dictionary    ${Enclosure}    status
    Should Be Equal as Strings    ${status}    OK                msg=Status did not match ${status}.
