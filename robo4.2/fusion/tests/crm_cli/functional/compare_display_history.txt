*** Settings ***
Documentation     US31789 SwitchHistory: Test G13 Command history exists for your session
...    = Usage =
...    | pybot | -L DEBUG | -v SWITCH_IP:<Your-Switch-IP> | compare_display_history.txt | 
...    = Variables =
...    | SWITCH IP | Required; IP address or hostname of the Comware Switch |
...    = Preconditions =
...    None

Library           RoboGalaxyLibrary                                     # DVTs Robot Framework extensions
Library           FusionLibrary                                         # DVTs Robot Framework extensions

Library           String
Library           Collections
Resource          ../resources/defaults.txt                             # Comet-DVT default variables
Resource          ../resources/switch.txt                               # Comet-DVT keyword extensions
Force Tags        switch                                                # All test cases get these tags
Suite Setup       Login to Switch via SSH
Suite Teardown    Logout of Switch via SSH

*** Variables ***

@{EmptyList}=

@{CmdsToSend}=    display router id
...             display tcp
...             display udp
...             display osi
...             display clock
...             display users
...             display cpu-usage
...             display ddns policy
...             display clock

@{CmdsToSend2}=    display exception filepath
...             display icmp statistics
...             display ike sa
...             display kernel deadloop configuration
...             display ipsec profile
...             display ipsec sa
...             display ipsec tunnel
...             display ipsec policy-template
...             display ipsec ipv6-policy-template 

*** Test Cases ***
Check Initial History Contents Returns Empty List
  ${OnlyHistoryHere}=    Get Command History
  Log List    ${OnlyHistoryHere}
  Log List    ${EmptyList}
  List Should Contain Value    ${OnlyHistoryHere}    display history
  Remove From List    ${OnlyHistoryHere}   -1
  Lists Should Be Equal    ${OnlyHistoryHere}    ${EmptyList}
  
Check History List Matches Cmds Sent
  # Send a set of commands to Switch to populate History
  Execute Switch Commands    ${CmdsToSend}
  # Get history contents and compare with history contents     
  ${History List}=    Get Command History
  # Remove the last display history command from the list, before compare
  Remove From List    ${History List}   -1
  Lists should be equal  ${CmdsToSend}  ${History List}	

Check History List Matches Cmds Sent Again In A New Session
  # This time we want to open a Second Session and send a new set 
  # of commands to make sure session history starts in a cleared state
  # Send a set of commands to Switch to populate History
  Execute Switch Commands    ${CmdsToSend2}
  # Get history contents and compare with history contents     
  ${HistoryList2}=    Get Command History
  # Remove the last display history command from the list, before compare
  Remove From List    ${HistoryList2}   -1
  Log List    ${CmdsToSend2}
  Log List    ${HistoryList2}
  Lists should be equal  ${CmdsToSend2}  ${HistoryList2}	
