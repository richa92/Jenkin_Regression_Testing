*** Settings ***
Documentation     Unclaim a HP 5900 AF switch - Delete LI, LIG and validate OVuser account removal
...               = Usage =
...               | pybot -L DEBUG --variable FUSION_IP:<Your-FusionVM-IP> --variable SWITCH_IP:<your switch> unclaim_5900.txt | 
...    = Variables =
...    | FUSION IP | Required; IP address of the FusionVM to use | 
...    | SWITCH IP | Required; IP address or name of the switch to use | 
...    | LIG_NAME | Optional; default *LIG* |
...    | LI_NAME | Optional; default *LI* |
Library           SSHLibrary
Library           RoboGalaxyLibrary         # DVTs Robot Framework extensions
Library           FusionLibrary                  # DVTs Robot Framework extensions
Variables         resources/variables.py    ${FUSION_IP}    ${SWITCH_IP}    # Comet-DVT default variables 
Resource          resources/fusion.txt      # Comet-DVT keyword extensions
Resource          resources/switch.txt      # Comet-DVT keyword extensions
Force Tags        CometTest    Claim        # All test cases in sub test suites get these tags
Suite Setup       Login to Fusion via REST   
Suite Teardown    Logout of Fusion via REST

*** Variables ***
${LiName}         HP 5900AF-48XG-4QSFP+ Switch
${LigName}        HeliumLig
@{InterconnectNamesList}    ${I_NAME}    ${null}    ${null}    ${null}    ${null}    ${null}    ${null}    ${null}

*** Test Cases ***
Create Logical Interconnect Group    # With Interconnects
    Create Logical Interconnect Group    ${LIG_NAME}    @{InterconnectNamesList}

Check for OVuser Not Present
    Verify OVuser is Not Present

Setup Switch Gateway Address in Fusion VM
    Setup Switch Gateway IP    ${SWITCH_GATEWAY_IP} 

Create Logical Interconnect
    ${LigUri}    Get Logical Interconnect Group Uri    ${LIG_NAME}
    Create Logical Interconnect    ${LI_NAME}    ${LigUri}

Check for OVuser Present
    Verify OVuser is Present

Create Duplicate Logical Interconnect
    ${msg}=    Run Keyword and Expect Error    *    Get Logical Interconnect Group Uri    ${LigName}
    Create Logical Interconnect    ${LiName}    ${LigUri}

Delete Logical Interconnect
    Delete Logical Interconnect    ${LiName}
    #FIXME: Deleting a logical Interconnect returns a 200 status when the task is still in progress
    #FIXME: This causes RGL Fusion API function to return prematurely. Workaround: Sleep for a long time
    Sleep    300

Check for OVuser Not Present
    Verify OVuser is Not Present

Show Deleted Logical Interconnect
    ${msg}=    Run Keyword and Expect Error    *    Get Logical Interconnect    ${LiName}
    Log    ${msg}

Recreate Logical Interconnect
    ${LigUri}    Get Logical Interconnect Group Uri    ${LigName}
    Create Logical Interconnect    ${LiName}    ${LigUri}

Delete Logical Interconnect Group
    Delete Logical Interconnect Group    ${LigName}




