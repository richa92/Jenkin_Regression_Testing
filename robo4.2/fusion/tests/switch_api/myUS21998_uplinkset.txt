*** Settings ***
Documentation     US21998 - Define UpLink Sets
...    = USAGE =
...    | pybot | -v FUSION_IP:<Your-IP> | -v SWITCH_IP:<Your-IP> | US21998_uplinkset.txt |
...    = Variables =
...    | FUSION IP | Required; IP address of the FusionVM to use | 
...    | SWITCH IP | Required; IP address or name of the switch to use | 
Library           RoboGalaxyLibrary         # DVTs Robot Framework extensions
Library           FusionLibrary                  # DVTs Robot Framework extensions
Variables         resources/variables.py    ${FUSION_IP}    ${SWITCH_IP}    # Comet-DVT default variables 
Resource          resources/fusion.txt      # Comet-DVT keyword extensions
Resource          resources/switch.txt      # Comet-DVT keyword extensions
Force Tags        CometTest    PreCAT       # All test cases in sub test suites get these tags
Suite Setup       Login to Fusion via REST   
Suite Teardown    Logout of Fusion via REST

*** Variables ***
${Nw1Name}        NW1
${NW1ID}          101
${Nw2Name}        NW2
${NW2ID}          102
${totalPorts}     48
${FixMe}          Fix Me!!!
${switchprompt}         <MiliSwitch_1>
@{InterconnectNamesList}    ${I_NAME}    ${null}    ${null}    ${null}    ${null}    ${null}    ${null}    ${null}


*** Test Cases ***
Create Networks
    Create Ethernet Network    ${Nw1Name}    ${NW1ID}
    Create Ethernet Network    ${Nw2Name}    ${NW2ID}

Create Logical Interconnect Group
    ${Response}    Create Logical Interconnect Group    ${LIG_NAME}    @{InterconnectNamesList}
    Log    ${Response}

Show Logical Interconnect Group
    ${Lig}    Get Logical Interconnect Group    ${LIG_NAME}
    Log    ${Lig}

Create Logical Interconnect
    ${LigUri}    Get Logical Interconnect Group Uri    ${LIG_NAME}
    ${Response}    Create Logical Interconnect    ${LI_NAME}    ${LigUri}    ${SWITCH IP}    ${SWITCH USERNAME}    ${SWITCH PASSWORD}
    Check Response    ${Response}

Show Logical Interconnect
    ${Li}    Get Logical Interconnect    ${LI_NAME}
    Check Response    ${Li}
    Log    ${Li}

Workaround
    #FIXME: CM believes we need to wait 5 minutes before we can actively use this logical Interconnect.
    Sleep    300

Select 3 ports from interconnect 5900AF
    #SET Log Level    DEBUG
    #${port1}    ${port2}    ${port3}    Random Select    ${totalPorts}
    Set Suite Variable    ${port1}    1
    Set Suite Variable    ${port2}    48
    Set Suite Variable    ${port3}    30

Get Logical interconnect Uri 
    
    ${LiUri}    Get Logical Interconnect Uri    ${Li_NAME}
    Set Suite Variable    ${Liuri}    ${Liuri}


Create an Uplink Set UplinkSet1 with interconnect bay 1 port port1 and Network NW1

    ${NW1Uri}      Get Ethernet Network uri by Name    ${NW1Name}
    sleep      30
    ${response}    Create Uplinkset    UplinkSet1    ${LiUri}    ${Switch_IP}    1    ${port1}    ${Nw1uri}
    Check Response    ${response}
    Verify Vlan    ${NW1ID}
    

Create an Uplink Set UplinkSet2 with interconnect bay 1 port port2 and Netwrok Nw2

    ${NW2Uri}      Get Ethernet Network uri by Name    ${NW2Name}
    sleep         30
    ${response}    Create Uplinkset    UplinkSet2    ${LiUri}    ${Switch_IP}    1    ${port2}    ${Nw2uri}
    Check Response    ${response}
    Verify Vlan    ${NW2ID}


Add Port3 to Uplink Set UplinkSet1
    ${response}    Add Uplinkset Port    UplinkSet1    ${Switch_IP}    1    ${port3}
    Check Response    ${response}
    

#Remove a Port port3 From an UplinkSet1
#    ${response}    Remove Uplinkset Port    UplinkSet1    ${port3}
#    Check Response    ${response}
    

Add a previously removed port to an uplink set
    ${response}    Add Uplinkset Port    UplinkSet1    ${Switch_IP}    1    ${port3}
    Check Response    ${response}

Add an invalid port to an UplinkSet
    ${response}    Add Uplinkset Port    UplinkSet1    ${Switch_IP}    1    99
    Dictionary Should Contain Value    ${response}    CRM_PORT_NUMBER_TOO_LARGE

Add an Unknown Format Port to an UplinkSet
    ${response}    Add Uplinkset Port    UplinkSet1    ${Switch_IP}    1    xx
    Dictionary Should contain value    ${response}    CRM_PORT_NUMBER_UNKNOWN_FORMAT

Add a port in UplinkSet2 to UplinkSet1
    ${response}    Add Uplinkset Port    UplinkSet1    ${Switch_IP}    1    ${port2}
    Dictionary Should contain value    ${response}    CRM_PORT_ALREADY_ASSIGNED

Require REST DELETE Port Api
    Log    ${FixMe}
    #Add a downlink port to an uplink set
    #Add an invalid port to an uplink set
    #Remove an invalid port from an uplink set
    #Remove an already removed port from the uplink set
    #Remove An Uplinkset Port    UplinkSet1    ${port3}
    #Remove An Uplinkset Port    UplinkSet1    ${port3}
    #Remove a port in uplink set UplinkSet1 by attempting an action on uplink set UplinkSet2
    #Remove An Uplinkset Port    UplinkSet1    ${port2}

#Remove All UplinkSets
    #Remove Uplink Sets

*** Keywords ***
Verify Vlan
    [Arguments]    ${vlan}
    Login to Switch Via SSH    ${SWITCH_IP}    ${SWITCH_USERNAME}    ${SWITCH_PASSWORD}
    ${out}=    Execute Switch Command    display vlan ${vlan}
    Should Not Contain     ${out}       This VLAN does not exist
    Should Contain         ${out}       VLAN ID: ${vlan}
    Logout of Switch Via SSH
        



