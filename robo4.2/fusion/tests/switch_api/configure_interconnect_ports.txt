*** Settings ***
Documentation     US21995: DVT test coverage of US21696 Configure port roles (non-stacking)
...               = Usage =
...               |pybot | -L DEBUG |--variable  Fusion_IP:dd.dd.dd.dd | --variable Switch:<switch hostname or ip> | configure_interconnect_ports.txt |
...               = Variables =
...               | FUSION IP | Required; IP address of the FusionVM to use | 
...               | SWITCH IP | Required; IP address or name of the switch to use | 
...               = Preconditions =
...               One or more Interconnects are required. (Level 2)
Variables	  	  resources/variables.py	${Fusion IP}	${Switch IP}	# Comet-DVT default variables
Suite Setup		  Login and Select Ports
Suite Teardown	  Logout Of Fusion Via REST
Force Tags        CometTest    PreCAT    LEVEL2       # All test cases get these tags
Resource		  resources/fusion.txt
Library           random
Library           Collections
Library           RoboGalaxyLibrary
Library           String

*** Variables ***

*** Test Cases ***
Non-connected port defaults to Auto
	[Documentation]		Interconnect ${InterconnectNum} - Port ${Port Name}
	Verify Port Type is	Auto
	
Port type can be set to Uplink
	[Documentation]		Interconnect ${InterconnectNum} - Port ${Port Name}
    Set Port Type to	Uplink
    Verify Port Type is	Uplink

Port type can be set to Downlink
	[Documentation]		Interconnect ${InterconnectNum} - Port ${Port Name}
    Set Port Type to	Downlink
    Verify Port Type is	Downlink

Port type can be set to Stacking
	[Documentation]		Interconnect ${InterconnectNum} - Port ${Port Name}
    Set Port Type to	Stacking
    Verify Port Type is	Stacking

Port type can be set to Auto
	[Documentation]		Interconnect ${InterconnectNum} - Port ${Port Name}
    Set Port Type to	Auto
    Verify Port Type is	Auto
    
Set port type to an invalid value
	[Documentation]		Interconnect ${InterconnectNum} - Port ${Port Name}
	Set Port Type to 	Invalid
	Verify Port Type is not	Invalid
    
Return Port type to Initial Value
	[Documentation]		${Initial Port Type}
    Set Port Type to	${Initial Port Type}
    Verify Port Type is	${Initial Port Type}

*** Keywords ***
Login and Select Ports
	Login to Fusion Via REST
	Select Interconnect Port for Testing
	Display Port Information

Select Interconnect Port for Testing
    ${Interconnect}=	Get Random Interconnect
    
    # Get Port Structure
	${Port}=			Get Random Interconnect Port    ${InterconnectId}
	Set Suite Variable	${Port}		${Port}
	
	# Get Port Type
	${Port Type}=		Get From Dictionary		${Port}		portType
	Set Suite Variable  ${Initial Port Type}		${Port Type}
	
	# Get Port Name
	${PortName}=    Get From Dictionary    ${Port}    portName
    Set Suite Variable 		${Port Name}		${PortName}
	
Display Port Information
    ${interconnectName}    Get From Dictionary    ${Port}    interconnectName
	${port Type}=	Get Port Type
    Log    'Port ${portName} is a ${portType} port located in ${interconnectName}'

#---------------------------------------------------------------------------------
#        INTERCONNECTS
#---------------------------------------------------------------------------------

Get Random Interconnect
    ${Interconnects}=    Fusion Api Get Interconnects
    Dictionary Should Not Contain Key    ${Interconnects}	'status'    msg=Failed to get Interconnects
    
    # Get Interconnect Count
    ${InterconnectCount}    Get From Dictionary    ${Interconnects}    count
    Should Not Be Equal as Integers	${InterconnectCount}	0	msg="No Interconnects claimed"
    Log    'There were ${InterconnectCount} interconnects in this collection'
    
	# Select Random Interconnect
    ${InterconnectNum}=    Get Random Number    ${InterconnectCount}
    Log   'Testing on Interconnect Num: ${InterconnectNum}'
    Set Suite Variable 		${InterconnectNum}		${InterconnectNum}
    
    # Get Interconnect
    @{Members}=    Get From Dictionary    ${Interconnects}    members
    ${Interconnect}=    Get From List    ${Members}    ${InterconnectNum}
    
    # Get Interconnect ID
    ${URI}    Get From Dictionary    ${Interconnect}    uri
    ${InterconnectId}=    Get Id From Uri		${Uri}
    Log    'Testing on Interconnect ID: ${InterconnectId}'
    Set Suite Variable		${InterconnectId}		${InterconnectId}
    
    [Return]    ${Interconnect}

#---------------------------------------------------------------------------------
#        INTERCONNECT-PORTS
#---------------------------------------------------------------------------------

Get Random Interconnect Port
    [Arguments]    ${InterconnectId}
    # Get Interconnect Ports
    ${Ports}=    Fusion API Get Interconnects Ports    ${InterconnectId}
    Dictionary Should Not Contain Key    ${Ports}    'status'    msg=Failed to get Interconnect Ports
    
    # Select Random Port
    ${PortCount}    Get From Dictionary    ${Ports}    total
    Log    'There were ${PortCount} Ports in this interconnect'
    ${PortNum}=    Get Random Number    ${PortCount}
    [Documentation]    'Testing on Port Num: ${PortNum}'
   
    # Get Port
    @{Members}=    Get From Dictionary    ${Ports}    members
    ${Port}=    Get From List    ${Members}    ${PortNum}
    
    # Get Port ID
    ${PortId}=    Get From Dictionary    ${Port}    portId
    Log    'Testing on Port ID: ${PortId}'
    Set Suite Variable		${PortId}		${PortId}
    [Return]    ${Port}

Get Random Number
    [Arguments]    ${End}
    ${RandNum}=    Evaluate    random.randint(0, ${End}-1)	random
    [Return]    ${RandNum}
    #[Return]		0

#---------------------------------------------------------------------------------
#       PORT-TYPE
#---------------------------------------------------------------------------------

is Downlink Port
	${PortName}		Get From Dictionary		${Port}		portName
	${PortIndicator}	Get Substring		${PortName}	0
	Run Keyword If	${PortIndicator} == 'X'	[Return]	1
	[Return]	0

Verify Port Type is not
    [Arguments]    ${PortType}
    [Documentation]    'Verifying Port ${PortNum} is not an ${PortType} port'
    ${GotPortType}=		Get Port Type
	Should Not Be Equal As Strings    ${GotPortType}	${PortType}    msg=Failed to verify Port Type is ${PortType}

Verify Port Type is
    [Arguments]    ${PortType}
    [Documentation]    'Verifying Port ${PortNum} is an ${PortType} port'
    ${GotPortType}=		Get Port Type
	Should Be Equal As Strings    ${GotPortType}	${PortType}    msg=Failed to verify Port Type is ${PortType}

Get Port Type
    ${Response}=    Fusion Api Get Interconnects Ports Id    ${InterconnectId}    ${PortId}
    Dictionary Should Not Contain Key    ${Response}    'status'    msg=Failed to get Interconnect Port by Id
    ${GotPortType}    Get From Dictionary    ${Response}    portType
    [Return]		${GotPortType}

Set Port Type to
    [Arguments]    ${PortType}
    [Documentation]    'Setting Port ${PortNum} as ${PortType} type'
    Set To Dictionary    ${Port}    portType    ${PortType}
    ${Response}=    Fusion Api Set Interconnects Ports    ${InterconnectId}    ${Port}
    Dictionary Should Not Contain Key    ${Response}    'status'    msg=Failed to set Interconnect Ports
