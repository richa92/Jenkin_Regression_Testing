*** Settings ***
Documentation
...     This Test Suite uses Administrator credentials for Add Logical Enclosure, Verify Enclosure and Refresh Enclosure.
...     These Setup Tests are prerequisite for other EPIC MAT Test Suites.
...     Test Data is defined in Python Data Variable file.
...     TAGS:                      SETUP
Resource                        ./resource_tbird.txt
Suite Setup                     MAT Suite Setup     ${admin_credentials}
Suite Teardown                  MAT Suite Teardown
Variables                       ./data_variables_tbird.py

*** Test Cases ***

Add Logical Enclosure
    [Tags]      ADDLOGICALENCLOSURE
    Add Logical Enclosure from lists    ${logical_enclosure}
    Verify Resources for List           ${expected_logical_enclosure}

Verify Enclosure
    [Tags]      VERIFY
    ${verify_enc_statuses} =   Create List
    :FOR    ${enc}  IN  @{encs_configured}
    \   ${verify_enc}=   Verify TBird Resource     ${enc}
    \   Append To List  ${verify_enc_statuses}  ${verify_enc}
    :FOR    ${verify_enc}   IN  @{verify_enc_statuses}
    \   Run Keyword If  '${verify_enc['status']}'=='False'  Log   Verify Enclosure Failed for Enclosure ${verify_enc['name']}     WARN
    ${verify_server_statuses} =   Create List
    :FOR    ${server}  IN  @{server_configured}
    \   ${verify_server}=   Verify TBird Resource     ${server}
    \   Append To List  ${verify_server_statuses}  ${verify_server}
    :FOR    ${verify_server}   IN  @{verify_server_statuses}
    \   Run Keyword If  '${verify_server['status']}'=='False'  Log   Verify Enclosure Failed for Server ${verify_server['name']}     WARN
    ${verify_interconnects_statuses} =   Create List
    :FOR    ${interconnects}  IN  @{interconnects_configured}
    \   ${verify_interconnects}=   Verify TBird Resource     ${interconnects}
    \   Append To List  ${verify_interconnects_statuses}  ${verify_interconnects}
    :FOR    ${verify_interconnects}   IN  @{verify_interconnects_statuses}
    \   Run Keyword If  '${verify_interconnects['status']}'=='False'  Log   Verify Enclosure Failed for Interconnect ${verify_interconnects['name']}     WARN
    ${verify_sasinterconnects_statuses} =   Create List
    :FOR    ${sasinterconnects}  IN  @{sasinterconnects_configured}
    \   ${verify_sasinterconnects}=   Verify TBird Resource     ${sasinterconnects}
    \   Append To List  ${verify_sasinterconnects_statuses}  ${verify_sasinterconnects}
    :FOR    ${verify_sasinterconnects}   IN  @{verify_sasinterconnects_statuses}
    \   Run Keyword If  '${verify_sasinterconnects['status']}'=='False'  Log   Verify Enclosure Failed for SasInterconnect ${verify_sasinterconnects['name']}     WARN

Refresh Enclosure
    [Tags]      REFRESH
    ${responses}=  Refresh Enclosure Async   ${encs_configured}
    Run Keyword for List with kwargs  ${responses}  Wait For Task2  timeout=1000    interval=20
