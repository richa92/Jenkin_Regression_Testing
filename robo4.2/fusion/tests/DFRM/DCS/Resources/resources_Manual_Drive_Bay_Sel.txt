*** Settings ***
Library     RoboGalaxyLibrary
Library     FusionLibrary
Library     Collections
Library     String
Library     OperatingSystem
Library     RoboGalaxyLibrary
Library     BuiltIn
Library     SSHLibrary
Library     ../UserInputs/functions.py
Variables   ../UserInputs/variables.py
Resource    resources.txt
Resource    resources_MultiEnclsoure_ring.txt
#from robot.libraries.DateTime import Date, Time


*** Keywords ***
# --------------------------- Keywords Used in scripting ---------------------------------------------------
CREATE IND_LJBOD WITH MANUAL DRIVE BAYS SEL ALL BAYS
    [Documentation]     Keyword to Create Independent LJBOD using Manual Drive Bays selection
    [Arguments]         ${Drive_count}      ${Drive_type}   ${DE_flag}

    ${LI_resp}=     Fusion Api Get Resource     uri=/rest/sas-logical-interconnects
    ${LI_len}=      Get length                  ${LI_resp['members']}
    :FOR            ${x}                        IN RANGE                0                   ${LI_len}
    \               ${temp_drive_uris}=         Create List
    \               ${DE_uri_list}=             Create List
    \               ${DE_uri_list}=             Get From Dictionary     ${LI_resp['members'][${x}]}
    \               ...                         driveEnclosureUris
    \               ${SAS_LI_Uri}=              Get From Dictionary     ${LI_resp['members'][${x}]}     uri
    \               Run Keyword if              '${DE_flag}'=='${SingleDE}'
    \               ...                         GET REQUIRED DRIVE URI FROM SINGLE DE
    ...             ${DE_uri_list}              ${Drive_count}          ${Drive_type}       ${temp_drive_uris}
    \               Run Keyword if              '${DE_flag}'=='${MultipleDE}'
    \               ...                         GET REQUIRED DRIVE URI FROM MULTIPLE DE
    ...             ${DE_uri_list}              ${Drive_count}          ${Drive_type}       ${temp_drive_uris}
    \               Log                         ${temp_drive_uris}
    \               Set to Dictionary           ${IndLJBODDriveBaySelPayload}               name
    \               ...                         ILJBOD_DB_SEL_${Drive_type}_${x}
    \               Set to Dictionary           ${IndLJBODDriveBaySelPayload}               driveBayUris
    \               ...                         ${temp_drive_uris}
    \               Set to Dictionary           ${IndLJBODDriveBaySelPayload}               sasLogicalInterconnectUri
    \               ...                         ${SAS_LI_Uri}
    \               log                         ${IndLJBODDriveBaySelPayload}
    \               Logger                      Creating LJBOD ${x}
    \               ${Ind_ljbod_resp}=          fusion_api_post_sas_logical_jbods           ${IndLJBODDriveBaySelPayload}
    \               Remove from Dictionary      ${IndLJBODDriveBaySelPayload}               name
    \               Remove from Dictionary      ${IndLJBODDriveBaySelPayload}               driveBayUris
    \               Remove from Dictionary      ${IndLJBODDriveBaySelPayload}               sasLogicalInterconnectUri
    \               ${headers}=                 get from dictionary     ${Ind_ljbod_resp}   headers
    \               ${Location}=                get from dictionary     ${headers}          Location
    \               Wait Until Keyword Succeeds                         120s                10s
    \               ...                         runningstateagain
    ...             ${Location}

CREATE IND_LJBOD WITH MANUAL DRIVE SEL IN UPPER BAYS
    [Documentation]     Keyword to Create Independent LJBOD using Manual Drive Bays selection
    [Arguments]         ${drive_count}      ${drive_type}   ${deflag}      ${flag}

    ${li_resp}=     Fusion Api Get Resource     uri=/rest/sas-logical-interconnects
    ${li_len}=      Get length                  ${li_resp['members']}
    :FOR            ${x}                        IN RANGE                0                   ${li_len}
    \               ${temp_drive_uris}=         Create List
    \               ${de_uri_list}=             Create List
    \               ${de_uri_list}=             Get From Dictionary     ${li_resp['members'][${x}]}
    \               ...                         driveEnclosureUris
    \               ${de_up_bay_list}=          GET DRIVE ENCLSOURE URIS IN UPPER BAYS      ${de_uri_list}
    \               ${de_len_up_bays}=          Get Length              ${de_up_bay_list}
    \               Run Keyword if              '${de_len_up_bays}'=='0'                    FAIL
    \               ...                         msg="Zero Drive Enclosures Available in Upper Bays"
    \               ${sas_li_Uri}=              Get From Dictionary     ${li_resp['members'][${x}]}     uri
    \               Run Keyword if              '${deflag}'=='${SingleDE}'
    \               ...                         GET REQUIRED DRIVE URI FROM SINGLE DE
    ...             ${de_up_bay_list}           ${drive_count}          ${drive_type}       ${temp_drive_uris}
    \               Run Keyword if              '${deflag}'=='${RANDOM_BAY_SEL}'
    \               ...                         GET REQUIRED DRIVE URI FROM SINGLE DE RANDOM BAYS
    ...             ${de_up_bay_list}           ${drive_count}          ${drive_type}       ${temp_drive_uris}
    \               Run Keyword if              '${deflag}'=='${MultipleDE}'
    \               ...                         GET REQUIRED DRIVE URI FROM MULTIPLE DE
    ...             ${de_up_bay_list}           ${drive_count}          ${drive_type}       ${temp_drive_uris}
    \               Log                         ${temp_drive_uris}
    \               Run keyword if              '${flag}'=='${ERASE_ENABLE}'
    ...             Set to Dictionary           ${IndLJBODDriveBaySelPayload}               eraseData   True
    \               Set to Dictionary           ${IndLJBODDriveBaySelPayload}               name
    \               ...                         ILJBOD_DB_SEL_${drive_type}_${x}
    \               Set to Dictionary           ${IndLJBODDriveBaySelPayload}               driveBayUris
    \               ...                         ${temp_drive_uris}
    \               Set to Dictionary           ${IndLJBODDriveBaySelPayload}               sasLogicalInterconnectUri
    \               ...                         ${sas_li_Uri}
    \               log                         ${IndLJBODDriveBaySelPayload}
    \               Logger                      Creating LJBOD ${x}
    \               ${ind_ljbod_resp}=          fusion_api_post_sas_logical_jbods           ${IndLJBODDriveBaySelPayload}
    \               Remove from Dictionary      ${IndLJBODDriveBaySelPayload}               name
    \               Remove from Dictionary      ${IndLJBODDriveBaySelPayload}               driveBayUris
    \               Remove from Dictionary      ${IndLJBODDriveBaySelPayload}               sasLogicalInterconnectUri
    \               ${headers}=                 get from dictionary     ${ind_ljbod_resp}   headers
    \               ${Location}=                get from dictionary     ${headers}          Location
    \               Wait Until Keyword Succeeds                         120s                10s
    \               ...                         runningstateagain
    ...             ${Location}

GET DRIVE ENCLSOURE URIS IN UPPER BAYS
    [Documentation]     Keyword to check and edit Drive enclosure Uri list, if it exist in Upper bay of TBIRD enclosure
    [Arguments]         ${DE_uri_list}
    ${DE_Len}=          Get Length          ${DE_uri_list}
    Run Keyword if      '${DE_Len}'== '0'   FAIL
    ...                 msg=Drive Enclosure Count is Zero, Varify the test setup.
    ${up_bay_list}=     Create List
    :FOR                ${x}                IN RANGE                    0                   ${DE_Len}
    \                   ${DE_Resp}=         Fusion Api Get Resource     uri=${DE_uri_list[${x}]}
    \                   ${bay_num}=         Get from Dictionary         ${DE_Resp}          bay
    \                   Run Keyword if      '${bay_num}'<='6'           Append to list      ${up_bay_list}
    \                   ...                 ${DE_uri_list[${x}]}
    ...                 ELSE                Continue for loop
    \                   log                 ${up_bay_list}
    [Return]            ${up_bay_list}

CREATE IND_LJBOD WITH MANUAL DRIVE SEL IN LOWER BAYS
    [Documentation]     Keyword to Create Independent LJBOD using Manual Drive Bays selection in Lower Bays of TBIRD
    [Arguments]         ${Drive_count}      ${Drive_type}   ${DE_flag}

    ${LI_resp}=     Fusion Api Get Resource     uri=/rest/sas-logical-interconnects
    ${LI_len}=      Get length                  ${LI_resp['members']}
    :FOR            ${x}                        IN RANGE                0                   ${LI_len}
    \               ${temp_drive_uris}=         Create List
    \               ${DE_uri_list}=             Create List
    \               ${DE_uri_list}=             Get From Dictionary     ${LI_resp['members'][${x}]}
    \               ...                         driveEnclosureUris
    \               ${DE_lower_Bay_list}=       GET DRIVE ENCLSOURE URIS IN LOWER BAYS      ${DE_uri_list}
    \               ${DE_len_lower_bays}=       Get Length              ${DE_lower_Bay_list}
    \               Run Keyword if              '${DE_len_lower_bays}'=='0'                 FAIL
    \               ...                         msg="Zero Drive Enclosures Available in Lower Bays"
    \               ${SAS_LI_Uri}=              Get From Dictionary     ${LI_resp['members'][${x}]}     uri
    \               Run Keyword if              '${DE_flag}'=='${SingleDE}'
    \               ...                         GET REQUIRED DRIVE URI FROM SINGLE DE
    ...             ${DE_lower_Bay_list}        ${Drive_count}          ${Drive_type}       ${temp_drive_uris}
    \               Run Keyword if              '${DE_flag}'=='${MultipleDE}'
    \               ...                         GET REQUIRED DRIVE URI FROM MULTIPLE DE
    ...             ${DE_lower_Bay_list}        ${Drive_count}          ${Drive_type}       ${temp_drive_uris}
    \               Log                         ${temp_drive_uris}
    \               Set to Dictionary           ${IndLJBODDriveBaySelPayload}               name
    \               ...                         ILJBOD_DB_SEL_${Drive_type}_${x}
    \               Set to Dictionary           ${IndLJBODDriveBaySelPayload}               driveBayUris
    \               ...                         ${temp_drive_uris}
    \               Set to Dictionary           ${IndLJBODDriveBaySelPayload}               sasLogicalInterconnectUri
    \               ...                         ${SAS_LI_Uri}
    \               log                         ${IndLJBODDriveBaySelPayload}
    \               Logger                      Creating LJBOD ${x}
    \               ${Ind_ljbod_resp}=          fusion_api_post_sas_logical_jbods           ${IndLJBODDriveBaySelPayload}
    \               Remove from Dictionary      ${IndLJBODDriveBaySelPayload}               name
    \               Remove from Dictionary      ${IndLJBODDriveBaySelPayload}               driveBayUris
    \               Remove from Dictionary      ${IndLJBODDriveBaySelPayload}               sasLogicalInterconnectUri
    \               ${headers}=                 get from dictionary     ${Ind_ljbod_resp}   headers
    \               ${Location}=                get from dictionary     ${headers}          Location
    \               Wait Until Keyword Succeeds                         120s                10s
    \               ...                         runningstateagain
    ...             ${Location}

GET DRIVE ENCLSOURE URIS IN LOWER BAYS
    [Documentation]     Keyword to check and edit Drive enclosure Uri list, if it exist in lower bay of TBIRD enclosure
    [Arguments]         ${DE_uri_list}
    ${DE_Len}=          Get Length          ${DE_uri_list}
    Run Keyword if      '${DE_Len}'== '0'   FAIL
    ...                 msg=Drive Enclosure Count is Zero, Varify the test setup.
    ${low_bay_list}=    Create List
    :FOR                ${x}                IN RANGE                    0                   ${DE_Len}
    \                   ${DE_Resp}=         Fusion Api Get Resource     uri=${DE_uri_list[${x}]}
    \                   ${bay_num}=         Get from Dictionary         ${DE_Resp}          bay
    \                   Run Keyword if      '${bay_num}'>='7'           Append to list      ${low_bay_list}
    \                   ...                 ${DE_uri_list[${x}]}
    ...                 ELSE                continue for loop
    [Return]            ${low_bay_list}

CREATE IND_LJBOD WITH MANUAL DRIVE SEL IN UPPER AND LOWER BAYS
    [Documentation]     Keyword to Create Independent LJBOD using Manual Drive Bays selection in Lower Bays of TBIRD
    [Arguments]         ${Drive_count}      ${Drive_type}   ${DE_flag}

    ${LI_resp}=     Fusion Api Get Resource     uri=/rest/sas-logical-interconnects
    ${LI_len}=      Get length                  ${LI_resp['members']}
    :FOR            ${x}                        IN RANGE                0                   ${LI_len}
    \               ${temp_drive_uris}=         Create List
    \               ${DE_uri_list}=             Create List
    \               ${DE_uri_list}=             Get From Dictionary     ${LI_resp['members'][${x}]}
    \               ...                         driveEnclosureUris
    \               ${DE_Up_low_Bay_list}=      GET DRIVE ENCLSOURE URIS IN UPPER AND LOWER BAYS
    \               ...                         ${DE_uri_list}
    \               ${DE_len_Up_lower_bays}=    Get Length              ${DE_Up_low_Bay_list}
    \               Run Keyword if              '${DE_len_Up_lower_bays}'=='0'              FAIL
    \               ...                         msg="Zero Drive Enclosures Available in Lower Bays"
    \               ${SAS_LI_Uri}=              Get From Dictionary     ${LI_resp['members'][${x}]}     uri
    \               Run Keyword if              '${DE_flag}'=='${SingleDE}'
    \               ...                         GET REQUIRED DRIVE URI FROM SINGLE DE
    ...             ${DE_Up_low_Bay_list}       ${Drive_count}          ${Drive_type}       ${temp_drive_uris}
    \               Run Keyword if              '${DE_flag}'=='${MultipleDE}'
    \               ...                         GET REQUIRED DRIVE URI FROM MULTIPLE DE
    ...             ${DE_Up_low_Bay_list}       ${Drive_count}          ${Drive_type}       ${temp_drive_uris}
    \               Log                         ${temp_drive_uris}
    \               Set to Dictionary           ${IndLJBODDriveBaySelPayload}               name
    \               ...                         ILJBOD_DB_SEL_${Drive_type}_${x}
    \               Set to Dictionary           ${IndLJBODDriveBaySelPayload}               driveBayUris
    \               ...                         ${temp_drive_uris}
    \               Set to Dictionary           ${IndLJBODDriveBaySelPayload}               sasLogicalInterconnectUri
    \               ...                         ${SAS_LI_Uri}
    \               log                         ${IndLJBODDriveBaySelPayload}
    \               Logger                      Creating LJBOD ${x}
    \               ${Ind_ljbod_resp}=          fusion_api_post_sas_logical_jbods           ${IndLJBODDriveBaySelPayload}
    \               Remove from Dictionary      ${IndLJBODDriveBaySelPayload}               name
    \               Remove from Dictionary      ${IndLJBODDriveBaySelPayload}               driveBayUris
    \               Remove from Dictionary      ${IndLJBODDriveBaySelPayload}               sasLogicalInterconnectUri
    \               ${headers}=                 get from dictionary     ${Ind_ljbod_resp}   headers
    \               ${Location}=                get from dictionary     ${headers}          Location
    \               Wait Until Keyword Succeeds                         120s                10s
    \               ...                         runningstateagain
    ...             ${Location}

GET DRIVE ENCLSOURE URIS IN UPPER AND LOWER BAYS
    [Documentation]     Keyword to check and edit Drive enclosure Uri list, if it exist in lower bay of TBIRD enclosure
    [Arguments]         ${DE_uri_list}
    ${DE_Len}=          Get Length              ${DE_uri_list}
    Run Keyword if      '${DE_Len}'== '0'       FAIL                msg=Drive Enclosure Count is Zero, Varify the test setup.
    ${low_bay_list}=    GET DRIVE ENCLSOURE URIS IN LOWER BAYS      ${DE_uri_list}
    ${low_bay_len}=     Get Length              ${low_bay_list}
    Run Keyword If      '${low_bay_len}'=='0'   FAIL                msg="Zero Drive Enclosures found in lower bays of TBIRD"
    ${Up_bay_list}=     GET DRIVE ENCLSOURE URIS IN UPPER BAYS      ${DE_uri_list}
    ${up_bay_len}=      Get Length              ${Up_bay_list}
    Run Keyword If      '${up_bay_len}'=='0'    FAIL                msg="Zero Drive Enclosures found in Upper bays of TBIRD"

    [Return]    ${DE_uri_list}

CREATE PAYLOAD FOR IND_LJBOD WITH DRIVE BAY SELECTION
    [documentation]     Keyword to Create Payload for independent LJBOD with drive Selection
    [Arguments]         ${temp_drive_uris}              ${x}
    Set to Dictionary   ${IndLJBODDriveBaySelPayload}   name            IND_LJBOD_DB_SEL_${x}
    Set to Dictionary   ${IndLJBODDriveBaySelPayload}   driveBayUris    ${temp_drive_uris}

GET REQUIRED DRIVE URI FROM SINGLE DE
    [Documentation]     Test
    [Arguments]         ${DE_uri_list}                  ${Drive_count}      ${Drive_type}   ${temp_drive_uris}
    ${flag}=            set variable                    ${NORMAL_BAY_SEL}
    Run keyword IF      '${Drive_type}' == 'SASHDD'     DFRM GET SAS HDD DRIVE URI LIST FOR LJBOD
    ...                 ${DE_uri_list}                  ${Drive_count}      1               ${temp_drive_uris}      ${flag}
    Run keyword IF      '${Drive_type}' == 'SASSSD'     DFRM GET SAS SSD DRIVE URI LIST FOR LJBOD
    ...                 ${DE_uri_list}                  ${Drive_count}      1               ${temp_drive_uris}      ${flag}
    Run keyword IF      '${Drive_type}' == 'SATASSD'    DFRM GET SATA SSD DRIVE URI LIST FOR LJBOD
    ...                 ${DE_uri_list}                  ${Drive_count}      1               ${temp_drive_uris}      ${flag}
    Run keyword IF      '${Drive_type}' == 'SATAHDD'    DFRM GET SATA HDD DRIVE URI LIST FOR LJBOD
    ...                 ${DE_uri_list}                  ${Drive_count}      1               ${temp_drive_uris}      ${flag}

GET REQUIRED DRIVE URI FROM SINGLE DE RANDOM BAYS
    [Documentation]     Test
    [Arguments]         ${DE_uri_list}                  ${Drive_count}      ${Drive_type}   ${temp_drive_uris}
    ${flag}=            set variable                    ${RANDOM_BAY_SEL}
    Run keyword IF      '${Drive_type}' == 'SASHDD'     DFRM GET SAS HDD DRIVE URI LIST FOR LJBOD
    ...                 ${DE_uri_list}                  ${Drive_count}      1               ${temp_drive_uris}      ${flag}
    Run keyword IF      '${Drive_type}' == 'SASSSD'     DFRM GET SAS SSD DRIVE URI LIST FOR LJBOD
    ...                 ${DE_uri_list}                  ${Drive_count}      1               ${temp_drive_uris}      ${flag}
    Run keyword IF      '${Drive_type}' == 'SATASSD'    DFRM GET SATA SSD DRIVE URI LIST FOR LJBOD
    ...                 ${DE_uri_list}                  ${Drive_count}      1               ${temp_drive_uris}      ${flag}
    Run keyword IF      '${Drive_type}' == 'SATAHDD'    DFRM GET SATA HDD DRIVE URI LIST FOR LJBOD
    ...                 ${DE_uri_list}                  ${Drive_count}      1               ${temp_drive_uris}      ${flag}

GET REQUIRED DRIVE URI FROM MULTIPLE DE
    [Documentation]     Test
    [Arguments]         ${DE_uri_list}      ${Drive_count}      ${Drive_type}   ${temp_drive_uris}

    ${DE_len}=          get length                      ${DE_uri_list}
    ${flag}=            set variable                    ${NORMAL_BAY_SEL}
    Run keyword IF      '${Drive_type}' == 'SASHDD'     DFRM GET SAS HDD DRIVE URI LIST FOR LJBOD
    ...                 ${DE_uri_list}                  ${Drive_count}      ${DE_len}   ${temp_drive_uris}      ${flag}
    Run keyword IF      '${Drive_type}' == 'SASSSD'     DFRM GET SAS SSD DRIVE URI LIST FOR LJBOD
    ...                 ${DE_uri_list}                  ${Drive_count}      ${DE_len}   ${temp_drive_uris}      ${flag}
    Run keyword IF      '${Drive_type}' == 'SATASSD'    DFRM GET SATA SSD DRIVE URI LIST FOR LJBOD
    ...                 ${DE_uri_list}                  ${Drive_count}      ${DE_len}   ${temp_drive_uris}      ${flag}
    Run keyword IF      '${Drive_type}' == 'SATAHDD'    DFRM GET SATA HDD DRIVE URI LIST FOR LJBOD
    ...                 ${DE_uri_list}                  ${Drive_count}      ${DE_len}   ${temp_drive_uris}      ${flag}

DFRM GET SAS HDD DRIVE URI LIST FOR LJBOD
    [Documentation]     Get SAS HDD Drive URI list for drive enclosur
    [Arguments]         ${DE_uri_list}              ${Drive_count}      ${flag}                 ${temp_drive_uris}
    ...                 ${ran_flag}
    ${DE_len}=          Get length                  ${DE_uri_list}
    :FOR                ${x}                        IN RANGE            0                       ${DE_len}
    \                   ${temp_drive_list}=         Create List
    \                   ${DE_response}=             Fusion Api Get Resource                     uri=${DE_uri_list[${x}]}
    \                   GET REQUIRED DRIVE LIST     SASHDD              ${temp_drive_list}      ${DE_response}
    \                   Run Keyword if              '${ran_flag}'=='NORMAL_BAY'
    ...                 ADD REQUIRED NO OF DRIVE URIS                   ${temp_drive_uris}      ${temp_drive_list}
    ...                 ${Drive_count}
    \                   Run Keyword if              '${ran_flag}'=='RANDOM_BAY'
    ...                 ADD REQUIRED NO OF DRIVE URIS RANDOM BAYS       ${temp_drive_uris}      ${temp_drive_list}
    ...                 ${Drive_count}
    \                   Run Keyword if              '${flag}'=='1'      exit for loop

DFRM GET SAS SSD DRIVE URI LIST FOR LJBOD
    [Documentation]     Get SAS SSD Drive URI list for drive enclosur
    [Arguments]         ${DE_uri_list}              ${Drive_count}      ${flag}                 ${temp_drive_uris}
    ...                 ${ran_flag}
    ${DE_len}=          Get length                  ${DE_uri_list}
    :FOR                ${x}                        IN RANGE            0                       ${DE_len}
    \                   ${temp_drive_list}=         Create List
    \                   ${DE_response}=             Fusion Api Get Resource                     uri=${DE_uri_list[${x}]}
    \                   GET REQUIRED DRIVE LIST     SASSSD              ${temp_drive_list}      ${DE_response}
    \                   Run Keyword if              '${ran_flag}'=='NORMAL_BAY'
    ...                 ADD REQUIRED NO OF DRIVE URIS                   ${temp_drive_uris}      ${temp_drive_list}
    ...                 ${Drive_count}
    \                   Run Keyword if              '${ran_flag}'=='RANDOM_BAY'
    ...                 ADD REQUIRED NO OF DRIVE URIS RANDOM BAYS       ${temp_drive_uris}      ${temp_drive_list}
    ...                 ${Drive_count}
    \                   Run Keyword if              '${flag}'=='1'      exit for loop

DFRM GET SATA SSD DRIVE URI LIST FOR LJBOD
    [Documentation]     Get SATA SSD Drive URI list for drive enclosur
    [Arguments]         ${DE_uri_list}              ${Drive_count}      ${flag}                 ${temp_drive_uris}
    ...                 ${ran_flag}
    ${DE_len}=          Get length                  ${DE_uri_list}
    :FOR                ${x}                        IN RANGE            0                       ${DE_len}
    \                   ${temp_drive_list}=         Create List
    \                   ${DE_response}=             Fusion Api Get Resource                     uri=${DE_uri_list[${x}]}
    \                   GET REQUIRED DRIVE LIST     SATASSD             ${temp_drive_list}      ${DE_response}
    \                   Run Keyword if              '${ran_flag}'=='NORMAL_BAY'
    ...                 ADD REQUIRED NO OF DRIVE URIS                   ${temp_drive_uris}      ${temp_drive_list}
    ...                 ${Drive_count}
    \                   Run Keyword if              '${ran_flag}'=='RANDOM_BAY'
    ...                 ADD REQUIRED NO OF DRIVE URIS RANDOM BAYS       ${temp_drive_uris}      ${temp_drive_list}
    ...                 ${Drive_count}
    \                   Run Keyword if              '${flag}'=='1'      exit for loop

DFRM GET SATA HDD DRIVE URI LIST FOR LJBOD
    [Documentation]     Get SATA HDD Drive URI list for drive enclosur
    [Arguments]         ${DE_uri_list}              ${Drive_count}      ${flag}                 ${temp_drive_uris}
    ...                 ${ran_flag}
    ${DE_len}=          Get length                  ${DE_uri_list}
    :FOR                ${x}                        IN RANGE            0                       ${DE_len}
    \                   ${temp_drive_list}=         Create List
    \                   ${DE_response}=             Fusion Api Get Resource                     uri=${DE_uri_list[${x}]}
    \                   GET REQUIRED DRIVE LIST     SATAHDD             ${temp_drive_list}      ${DE_response}
    \                   Run Keyword if              '${ran_flag}'=='NORMAL_BAY'
    ...                 ADD REQUIRED NO OF DRIVE URIS                   ${temp_drive_uris}      ${temp_drive_list}
    ...                 ${Drive_count}
    \                   Run Keyword if              '${ran_flag}'=='RANDOM_BAY'
    ...                 ADD REQUIRED NO OF DRIVE URIS RANDOM BAYS       ${temp_drive_uris}      ${temp_drive_list}
    ...                 ${Drive_count}
    \                   Run Keyword if              '${flag}'=='1'      exit for loop

GET REQUIRED DRIVE LIST
    [Documentation]     Testing
    [Arguments]         ${drive_type}   ${drive_list}   ${DE_response}

    ${drive_bays_len}=      Get Length              ${DE_response['driveBays']}
    :FOR                    ${x}                    IN RANGE                0               ${drive_bays_len}
    \                       ${temp_drive_type}=     set variable            0
    \                       ${driveinfo}=           get from dictionary     ${DE_response['driveBays'][${x}]}   drive
    \                       Run Keyword If          ${driveinfo}==None      Continue For Loop
    \                       ${DriveInterface}=      get from dictionary     ${driveinfo}    deviceInterface
    \                       ${driveMedia}=          get from dictionary     ${driveinfo}    driveMedia
    \                       ${temp_drive_type}=     set variable            ${DriveInterface}${driveMedia}
    \                       ${temp_uri}=            Run Keyword If          '${temp_drive_type}'=='${drive_type}'
    \                       ...                     Get from Dictionary
    ...                     ${DE_response['driveBays'][${x}]}               uri
    \                       Run Keyword If          '${temp_drive_type}'=='${drive_type}'   Append to List      ${drive_list}
    \                       ...                     ${temp_uri}

ADD REQUIRED NO OF DRIVE URIS
    [DOCUMENTATION]     TEST
    [Arguments]         ${drive_list}       ${temp_drive_list}      ${Drive_count}
    :FOR                ${cnt}              IN RANGE                0   ${Drive_count}
    \                   Append to List      ${drive_list}           ${temp_drive_list[${cnt}]}

ADD REQUIRED NO OF DRIVE URIS RANDOM BAYS
    [DOCUMENTATION]     TEST
    [Arguments]         ${drive_list}       ${temp_drive_list}      ${Drive_count}
    :FOR                ${cnt}              IN RANGE                0   ${Drive_count}
    \                   Append to List      ${drive_list}           ${temp_drive_list[${cnt}]}
    \                   ${cnt}=             set variable            2

