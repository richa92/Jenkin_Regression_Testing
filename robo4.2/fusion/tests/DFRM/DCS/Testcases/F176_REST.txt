*** Settings ***
Documentation     Verifying the features of F176 ie LIG , EG and LE : Get , post and delete calls 

Suite Setup 		Login to Fusion Via REST
#Suite Teardown		Run Keyword If Any Critical Tests Failed		Fatal Error		msg=Critical test case failed so test suite can't continue
Library			../UserInputs/functions.py
Resource		../Resources/resources.txt
Variables		../UserInputs/variables.py
*** Test Cases ***
		
Creation of LIG
	[Documentation]			Creating combinations of logical interconnect groups from the list provided in the variables.py file \n
	[Tags]	F176	Smoke	critical
	[setup]			Run Keywords	
										
										Create LIG with bay combinations  ${LIG_Names}		
										

Getting on LIG
	[Documentation]			Getting the Sas Logical interconnect and validating each UID for Status, State, Power, Model and Serial Number \n
	[Tags]	F176 	Smoke
	[setup]			Run Keywords		
										
										Set Log Level    TRACE
										${resp}		Fusion Api Get Resource			uri=/rest/sas-logical-interconnect-groups
										Logger 		\n Validating for /rest/sas-logical-interconnect-groups
										Validate URI for the response		${resp}
										${length} =		Get Length			${resp['members']}
										:FOR	${x}	IN RANGE	0	${length}
										\	${resp_uri}		Get From Dictionary		${resp['members'][${x}]}		uri
										\	Logger 		\n Validating for ${resp_uri} 
										\	${resp_uri1}		Fusion Api Get Resource			uri=${resp_uri}
										\	Validate resource attribute  uri  ${resp_uri}  ${resp_uri1}   
										\	Validate resource attribute  status_code  ${resp_uri}  ${resp_uri1}    200
										\	Validate resource attribute  state  ${resp_uri}  ${resp_uri1}    ${lig_state}
										\	Validate resource attribute  permittedInterconnectTypeUri  ${resp_uri}  ${resp_uri1['interconnectMapTemplate']['interconnectMapEntryTemplates'][0]}  ${permittedInterconnectTypeUri}

Creation of EG with 1 Enclosure 
    [Documentation]         Creates Enclosure Group with 1 Enclosure \n
    [Tags]                  F176	Smoke
    
    ${LIG_LIST}=  Combinations  ${LIG_Names}  ${1}
    ${LIG_LENGTH} =  Get Length  ${LIG_LIST}
    :FOR  ${i}   IN RANGE  0  ${LIG_LENGTH}
    \   ${EG_NAME}=  catenate   RGEG1${i}
    \	Log to console  **************************************************${EG_NAME}********************************************************************************
    \	${LIG_ENC}=  Convert to List  ${LIG_LIST[${i}]}
    \   Create Enclosure Group  ${EG_NAME}  ${LIG_LIST[${i}]}
    \	Log to console  **************************************************${EG_NAME}********************************************************************************


Creation of EG with 2 Enclosure combinations
    [Documentation]         Creates Enclosure Group with 2 Enclosure combinations \n
    [Tags]                  F176 	Regression
    
    ${LIG_LIST}=  Combinations  ${LIG_Names}  ${2}
    ${LIG_LENGTH} =  Get Length  ${LIG_LIST}
    :FOR  ${i}   IN RANGE  0  ${LIG_LENGTH}
    \   ${EG_NAME}=  catenate   RGEG2${i}
    \	Log to console  **************************************************${EG_NAME}********************************************************************************
    \	${LIG_ENC}=  Convert to List  ${LIG_LIST[${i}]}
    \   Create Enclosure Group  ${EG_NAME}  ${LIG_LIST[${i}]}
    \	Log to console  **************************************************${EG_NAME}********************************************************************************

Deletion of EG with 2 Enclosures
    [Documentation]         Delete Enclosure Groups which have two enclosure combinations \n
    [Tags]                  F176	Regression
    
    ${LIG_LIST}=  Combinations  ${LIG_Names}  ${2}
    ${LIG_LENGTH} =  Get Length  ${LIG_LIST}
    :FOR  ${i}   IN RANGE  0  ${LIG_LENGTH}
    \   ${EG_NAME}=  catenate   RGEG2${i}
    \	Log to console  **************************************************${EG_NAME}********************************************************************************
    \	${LIG_ENC}=  Convert to List  ${LIG_LIST[${i}]}
    \	Fusion Api Delete Enclosure Group  ${EG_NAME} 
    \	Log to console  **************************************************${EG_NAME}********************************************************************************
    
Creation of EG with 3 Enclosure combinations
    [Documentation]         Creates Enclosure Group with 3 Enclosure combinations \n
    [Tags]                  F176	Regression
    ${LIG_LIST}=  Combinations  ${LIG_Names}  ${3}
    Log to console  	${LIG_LIST}
    ${LIG_LENGTH} =  Get Length  ${LIG_LIST}
    :FOR  ${i}   IN RANGE  0  ${LIG_LENGTH}
    \   ${EG_NAME}=  catenate   RGEG3${i}
    \	Log to console  **************************************************${EG_NAME}********************************************************************************
    \	${LIG_ENC}=  Convert to List  ${LIG_LIST[${i}]}
    \   Create Enclosure Group  ${EG_NAME}  ${LIG_LIST[${i}]}
    \	Log to console  **************************************************${EG_NAME}********************************************************************************

Deletion of EG with 3 Enclosures
    [Documentation]         Delete Enclosure Groups which have three enclosure combinations \n
    [Tags]                  F176	Regression 
    
    ${LIG_LIST}=  Combinations  ${LIG_Names}  ${3}
    ${LIG_LENGTH} =  Get Length  ${LIG_LIST}
    :FOR  ${i}   IN RANGE  0  ${LIG_LENGTH}
    \   ${EG_NAME}=  catenate   RGEG3${i}
    \	Log to console  **************************************************${EG_NAME}********************************************************************************
    \	${LIG_ENC}=  Convert to List  ${LIG_LIST[${i}]}
    \	Fusion Api Delete Enclosure Group  ${EG_NAME} 
    \	Log to console  **************************************************${EG_NAME}********************************************************************************
        										

Creation of LE
	[Documentation]         Create Logical Enclosure with three enclosures
    [Tags]                  F176  smoke
	[setup]			Run Keywords 
	
		    ${EGResp}=    Fusion Api Get Resource			uri=${enclosureGroupUri}
		    Logger 		\n Validating for ${enclosureGroupUri}
   		    Validate resource attribute  status_code  ${enclosureGroupUri}  ${EGResp}    200
    		Validate resource attribute  uri  ${enclosureGroupUri}  ${EGResp}
		    ${EGmembers}=  Get Length   ${EGResp['members']}
		    ${LIG_List}=  Create List
		    :FOR  ${x}  IN RANGE  0  ${LE_Enc_Num}
		    \	Append to List  ${LIG_List}  ${LIG_Names[${x}]}
		    Create Enclosure Group  ${EG_NAME}  ${LIG_List}
			${LEpayload}=   Build Logical Enclosure Payload   ${LE_Name}   ${EG_NAME}
			${LEResp}=   Fusion Api Create Logical Enclosure  ${LEpayload}
			Logger   Creating Logical Enclosure  ${LE_Name}
			Logger  ********${LEResp}		DEBUG
			Validate resource attribute  status_code  ${LEResp['uri']}  ${LEResp}    200
            Wait Until Keyword Succeeds  40 min    1 min  Validate computedPercentComplete   ${LEResp}
            Validating task URI	${LEResp}  ${LE_Create_task_status}  uri

Verifying LE & LI creation through Rest
	[Documentation]    Get the response of the Logical Enclosure and validate the creation of Logical Interconnects
    [Tags]            	F176 	 Smoke
	[setup]			Run Keywords 
    ${resp}		Fusion Api Get Resource			uri=${logicalEnclosureUri}
    Logger 		\n Validating for ${logicalEnclosureUri}
    Validate resource attribute  status_code  ${logicalEnclosureUri}  ${resp}    200
    Validate resource attribute  uri  ${logicalEnclosureUri}  ${resp}
    ${length} =		Get Length  ${resp['members'][0]['logicalInterconnectUris']}
    :FOR	${x}	IN RANGE	0	${length}    
    \	${resp1_uri}=  Set Variable    ${resp['members'][0]['logicalInterconnectUris'][${x}]}
    \	Logger 		\n Validating for ${resp1_uri}
    \	${resp1}=		Fusion Api Get Resource			uri=${resp1_uri}
    \	Validate resource attribute  status_code  ${resp1_uri}  ${resp1}    200
    \	Validate resource attribute  consistencyStatus  ${resp1_uri}  ${resp1}  CONSISTENT
    \	Validate resource attribute  permittedInterconnectTypeUri  ${resp1_uri}  ${resp1['interconnectMap']['interconnectMapEntries'][0]}  ${permittedInterconnectTypeUri}
    \	Verify sas_Interconnects  ${resp1['sasInterconnectUris']}

Deletion of LE
	[Documentation]         Delete Logical Enclosure with three enclosures and verifies LE and LI deletion
    [Tags]                  F176  Smoke		Deletion
	[setup]			Run Keywords 
	${resp}   Fusion Api Get Resource    uri=${logicalEnclosureUri}
	Logger 		\n Validating for ${logicalEnclosureUri}
    Validate resource attribute  status_code  ${logicalEnclosureUri}  ${resp}    200
    Validate resource attribute  uri  ${logicalEnclosureUri}  ${resp}
    ${length} =		Get Length  ${resp['members']}
    Run keyword If 		'${length}' == '0'		Fail	msg=No LE available for deletion
    :FOR	${x}	IN RANGE	0	${length}    
    \	${resp1_uri}=  Set Variable    ${resp['members'][${x}]['uri']}
    \	Logger 		\n Deleting ${resp1_uri} Logical Enclosure
    \	${resp1}=		Fusion Api Delete Logical Enclosure		uri=${resp1_uri}
    \	Validate resource attribute  status_code  ${resp1_uri}  ${resp1}    200
    \	Wait Until Keyword Succeeds  20 min    1 min  Validate computedPercentComplete   ${resp1}
	\	Fusion Api Delete Enclosure Group  ${EG_NAME}
	Logger		LE and LI got successfully deleted
    
   
Deletion of EG with 1 Enclosure
    [Documentation]         Delete Enclosure Groups which have one enclosure combination \n
    [Tags]                  F176	Smoke		Deletion
    
    ${LIG_LIST}=  Combinations  ${LIG_Names}  ${1}
    ${LIG_LENGTH} =  Get Length  ${LIG_LIST}
    :FOR  ${i}   IN RANGE  0  ${LIG_LENGTH}
    \   ${EG_NAME}=  catenate   RGEG1${i}
    \	Log to console  **************************************************${EG_NAME}********************************************************************************
    \	${LIG_ENC}=  Convert to List  ${LIG_LIST[${i}]}
    \	${resp}=	Fusion Api Delete Enclosure Group  ${EG_NAME}
    \	Log to console	 the resp ${resp} 
    \	Log to console  **************************************************${EG_NAME}********************************************************************************
    

Deletion of LIG 
	[Documentation]			Deletes LIGS from a given list \n
	[Tags]					F176	Smoke	Deletion

	Delete LIG from a list	${LIG_Names}
	
Creation of LIG with no bays 
	[Documentation]  Negative Testcase to create LIG with no bays configured \n
	...					where creation of LIG fails
	[Tags]		 negative	F176
	[setup]	 	Run Keywords
			
			${errormsg}=	Set Variable  Failed as the actual taskStatus is Internal error in adding SAS logical interconnect group. and expected is Added SAS logical Interconnect group.
			${Null_list}=  Create List
			Run Keyword And Expect Error  ${errormsg}	Create LIG	'abc'	${Null_list}										
										