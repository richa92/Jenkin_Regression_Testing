*** Settings ***
Documentation     Verifying the features of F636

Suite Setup 		Login to Fusion Via REST
Library			../UserInputs/functions.py
Resource		../Resources/resources.txt
Variables		../UserInputs/variables.py

*** Test Cases ***

Sas Inteconnect CPU Reset
	[Documentation]         Do a CPU reset on sas interconnect
    [Tags]                  Smoke	F636
	[setup]			Run Keywords		
	
	${CPUResetPayload}=   Build Action Payload   cpuResetState   Reset
	${resp}		Fusion Api Get Resource			uri=/rest/sas-interconnects
    Validate URI for the response		${resp}
    ${length}=   Get Length  ${resp['members']}
    :FOR  ${x}  IN RANGE   0   ${length}
    \	 ${eachRespUri}=   Get From Dictionary     ${resp['members'][${x}]}   uri
    \    ${CpuResetResp}=   Fusion Api Patch SAS Interconnect  ${CPUResetPayload}   uri=${eachRespUri}
    \	 ${task_uri}=   Get Rest Uri from URL  ${CpuResetResp}
    \	 Wait Until Keyword Succeeds  10 min    5 sec  Validate computedPercentComplete   ${CpuResetResp['headers']}  location  ${task_uri}
    \	 Validating task URI  ${CpuResetResp}  ${sas_interconnect_CPU_Reset_status}  location  ${task_uri}
    

Sas Inteconnect Device Reset
	[Documentation]         Do a Device reset on sas interconnect
    [Tags]                  Regression	F636
	[setup]			Run Keywords		
	
	${DeviceResetPayload}=   Build Action Payload   deviceResetState   Reset
	${resp}		Fusion Api Get Resource			uri=/rest/sas-interconnects
    Validate URI for the response		${resp}
    ${length}=   Get Length  ${resp['members']}
    :FOR  ${x}  IN RANGE   0   ${length}
    \	 ${eachRespUri}=   Get From Dictionary     ${resp['members'][${x}]}   uri
    \    ${DeviceResetResp}=   Fusion Api Patch SAS Interconnect  ${DeviceResetPayload}   uri=${eachRespUri}
    \	 ${task_uri}=   Get Rest Uri from URL  ${DeviceResetResp}
    \	 Wait Until Keyword Succeeds  2 min    5 sec  Validate computedPercentComplete   ${DeviceResetResp['headers']}  location  ${task_uri}
    \	 Validating task URI  ${DeviceResetResp}  ${sas_interconnect_Device_Reset_status}  location  ${task_uri}
    
    
Sas Inteconnect Power off
	[Documentation]        Power Off sas interconnect
    [Tags]                  Regression	F636
	[setup]			Run Keywords		
	
	${PowerOffPayload}=   Build Action Payload   powerState   Off
	${resp}		Fusion Api Get Resource			uri=/rest/sas-interconnects
    ${length}=   Get Length  ${resp['members']}
    :FOR  ${x}  IN RANGE   0   ${length}
    \	 ${eachRespUri}=   Get From Dictionary     ${resp['members'][${x}]}   uri
    \	 Logger		Power off for ${eachRespUri} 
    \    ${PowerOffResp}=   Fusion Api Patch SAS Interconnect  ${PowerOffPayload}   uri=${eachRespUri}
    \	 ${task_uri}=   Get Rest Uri from URL  ${PowerOffResp}
    \	 Wait Until Keyword Succeeds  2 min    5 sec  Validate computedPercentComplete   ${PowerOffResp['headers']}  location  ${task_uri}
    \	 Validating task URI  ${PowerOffResp}  ${sas_interconnect_power_control_status}  location  ${task_uri}
    
    
Sas Inteconnect Power on
	[Documentation]         Power On sas interconnect
    [Tags]                  Regression	F636
	[setup]			Run Keywords		
	${PowerOnPayload}=   Build Action Payload   powerState   On
	${resp}		Fusion Api Get Resource			uri=/rest/sas-interconnects
    Validate URI for the response		${resp}
    Logger	The complete response ${resp}	DEBUG
    ${length}=   Get Length  ${resp['members']}
    :FOR  ${x}  IN RANGE   0   ${length}
    \	 ${eachRespUri}=   Get From Dictionary     ${resp['members'][${x}]}   uri
    \	 Logger		Power on for ${eachRespUri} 
    \    ${PowerOnResp}=   Fusion Api Patch SAS Interconnect  ${PowerOnPayload}   uri=${eachRespUri}
    \	 Logger		${PowerOnResp}		DEBUG			
    \	 ${task_uri}=   Get Rest Uri from URL  ${PowerOnResp}
    \	 Run keyword and continue on Failure		Validating for the URI		${task_uri} 	${PowerOnResp}
    #\	 Wait Until Keyword Succeeds  7 min    2sec 	Validate computedPercentComplete   ${PowerOnResp['headers']}  location  ${task_uri}
    #\	 Validating task URI  ${PowerOnResp}  ${sas_interconnect_power_control_status}  location  ${task_uri}
    
    
Sas Inteconnect UID Flash
	[Documentation]         Do a UID Flash on sas interconnect
    [Tags]                  Regression	F636
	[setup]			Run Keywords		
	
	${UIDFlashPayload}=   Build Action Payload   uidState   Flashing
	${resp}		Fusion Api Get Resource			uri=/rest/sas-interconnects
    Validate URI for the response		${resp}
    ${length}=   Get Length  ${resp['members']}
    :FOR  ${x}  IN RANGE   0   ${length}
    \	 ${eachRespUri}=   Get From Dictionary     ${resp['members'][${x}]}   uri
    \    ${UidFlashResp}=   Fusion Api Patch SAS Interconnect  ${UIDFlashPayload}   uri=${eachRespUri}
    \	 ${task_uri}=   Get Rest Uri from URL  ${UidFlashResp}
    \	 Wait Until Keyword Succeeds  2 min    5 sec  Validate computedPercentComplete   ${UidFlashResp['headers']}  location  ${task_uri}
    \	 Validating task URI  ${UidFlashResp}  ${sas_interconnect_uid_light_control_status}  location  ${task_uri}
    
    
Sas Inteconnect UID Off
	[Documentation]         Do a UID Off on sas interconnect
    [Tags]                  Regression	F636
	[setup]			Run Keywords		
	
	${UIDOffPayload}=   Build Action Payload   uidState   Off
	${resp}		Fusion Api Get Resource			uri=/rest/sas-interconnects
    Validate URI for the response		${resp}
    ${length}=   Get Length  ${resp['members']}
    :FOR  ${x}  IN RANGE   0   ${length}
    \	 ${eachRespUri}=   Get From Dictionary     ${resp['members'][${x}]}   uri
    \    ${UidOffResp}=   Fusion Api Patch SAS Interconnect  ${UIDOffPayload}   uri=${eachRespUri}
    \	 ${task_uri}=   Get Rest Uri from URL  ${UidOffResp}
    \	 Wait Until Keyword Succeeds  2 min    5 sec  Validate computedPercentComplete   ${UidOffResp['headers']}  location  ${task_uri}
    \	 Validating task URI  ${UidOffResp}  ${sas_interconnect_uid_light_control_status}  location  ${task_uri}
    
    
Sas Inteconnect UID On
	[Documentation]         Do a UID on sas interconnect
    [Tags]                  Regression		F636
	[setup]			Run Keywords			
	
	${UIDOnPayload}=   Build Action Payload   uidState   On
	${resp}		Fusion Api Get Resource			uri=/rest/sas-interconnects
    Validate URI for the response		${resp}
    ${length}=   Get Length  ${resp['members']}
    :FOR  ${x}  IN RANGE   0   ${length}
    \	 ${eachRespUri}=   Get From Dictionary     ${resp['members'][${x}]}   uri
    \    ${UidOnResp}=   Fusion Api Patch SAS Interconnect  ${UIDOnPayload}   uri=${eachRespUri}
    \	 ${task_uri}=   Get Rest Uri from URL  ${UidOnResp}
    \	 Wait Until Keyword Succeeds  2 min    5 sec  Validate computedPercentComplete   ${UidOnResp['headers']}  location  ${task_uri}
   	\	 Validating task URI  ${UidOnResp}  ${sas_interconnect_uid_light_control_status}  location  ${task_uri}
    
  
Drive Enclosure Device Reset
	[Documentation]         Do a Device Reset on Drive Enclosure
    [Tags]                  Smoke 	F636
	[setup]			Run Keywords		
	
	${DeviceResetPayload}=   Build Action Payload   deviceResetState   Reset
	${resp}		Fusion Api Get Resource			uri=/rest/drive-enclosures
    Validate URI for the response		${resp}
    ${length}=   Get Length  ${resp['members']}
    :FOR  ${x}  IN RANGE   0   ${length}
    \	 ${eachRespUri}=   Get From Dictionary     ${resp['members'][${x}]}   uri
    \    ${DeviceResetResp}=   Fusion Api Patch Drive Enclosure  ${DeviceResetPayload}   uri=${eachRespUri}
    \	 ${task_uri}=   Get Rest Uri from URL  ${DeviceResetResp}
    \	 Wait Until Keyword Succeeds  4 min    5 sec  Validate computedPercentComplete   ${DeviceResetResp['headers']}  location  ${task_uri}
    \	 Validating task URI  ${DeviceResetResp}  ${drive_enc_device_reset_status}  location  ${task_uri}
    
   
Drive Enclosure Power off
	[Documentation]        Power Off Drive enclosure
    [Tags]                  Regression		F636
	[setup]			Run Keywords		
	
	${PowerOffPayload}=   Build Action Payload   powerState   Off
	${resp}		Fusion Api Get Resource			uri=/rest/drive-enclosures
    Validate URI for the response		${resp}
    ${length}=   Get Length  ${resp['members']}
    :FOR  ${x}  IN RANGE   0   ${length}
    \	 ${eachRespUri}=   Get From Dictionary     ${resp['members'][${x}]}   uri
    \    ${PowerOffResp}=   Fusion Api Patch Drive Enclosure  ${PowerOffPayload}   uri=${eachRespUri}
    \	 ${task_uri}=   Get Rest Uri from URL  ${PowerOffResp}
    \	 Wait Until Keyword Succeeds  2 min    5 sec  Validate computedPercentComplete   ${PowerOffResp['headers']}  location  ${task_uri}
    \	 Validating task URI  ${PowerOffResp}  ${drive_enc_power_control_status}  location  ${task_uri}
    
    
    
Drive Enclosure Power on
	[Documentation]         Power On Drive enclosure
    [Tags]                  Regression		F636
	[setup]			Run Keywords		
	
	${PowerOnPayload}=   Build Action Payload   powerState   On
	${resp}		Fusion Api Get Resource			uri=/rest/drive-enclosures
    Validate URI for the response		${resp}
    ${length}=   Get Length  ${resp['members']}
    :FOR  ${x}  IN RANGE   0   ${length}
    \	 ${eachRespUri}=   Get From Dictionary     ${resp['members'][${x}]}   uri
    \    ${PowerOnResp}=   Fusion Api Patch Drive Enclosure  ${PowerOnPayload}   uri=${eachRespUri}
    \	 ${task_uri}=   Get Rest Uri from URL  ${PowerOnResp}
    \	 Wait Until Keyword Succeeds  2 min    5 sec  Validate computedPercentComplete   ${PowerOnResp['headers']}  location  ${task_uri}
    \	 Validating task URI  ${PowerOnResp}  ${drive_enc_power_control_status}  location  ${task_uri}
    
    
Drive Enclosure UID Flash
	[Documentation]         Do a UID Flash on Drive enclosure
    [Tags]                  Regression		F636
	[setup]			Run Keywords		
	
	${UIDFlashPayload}=   Build Action Payload   uidState   Flashing
	${resp}		Fusion Api Get Resource			uri=/rest/drive-enclosures
    Validate URI for the response		${resp}
    ${length}=   Get Length  ${resp['members']}
    :FOR  ${x}  IN RANGE   0   ${length}
    \	 ${eachRespUri}=   Get From Dictionary     ${resp['members'][${x}]}   uri
    \    ${UidFlashResp}=   Fusion Api Patch Drive Enclosure   ${UIDFlashPayload}   uri=${eachRespUri}
    \	 ${task_uri}=   Get Rest Uri from URL  ${UidFlashResp}
    \	 Wait Until Keyword Succeeds  2 min    5 sec  Validate computedPercentComplete   ${UidFlashResp['headers']}  location  ${task_uri}
    \	 Validating task URI  ${UidFlashResp}  ${drive_enc_uid_light_control_status}  location  ${task_uri}
    
    
Drive Enclosure UID Off
	[Documentation]         Do a UID Off on Drive enclosure
    [Tags]                  Regression		F636
	[setup]			Run Keywords		
	
	${UIDOffPayload}=   Build Action Payload   uidState   Off
	${resp}		Fusion Api Get Resource			uri=/rest/drive-enclosures
    Validate URI for the response		${resp}
    ${length}=   Get Length  ${resp['members']}
    :FOR  ${x}  IN RANGE   0   ${length}
    \	 ${eachRespUri}=   Get From Dictionary     ${resp['members'][${x}]}   uri
    \    ${UidOffResp}=   Fusion Api Patch Drive Enclosure  ${UIDOffPayload}   uri=${eachRespUri}
    \	 ${task_uri}=   Get Rest Uri from URL  ${UidOffResp}
    \	 Wait Until Keyword Succeeds  2 min    5 sec  Validate computedPercentComplete   ${UidOffResp['headers']}  location  ${task_uri}
    \	 Validating task URI  ${UidOffResp}  ${drive_enc_uid_light_control_status}  location  ${task_uri}
    
 
Drive Enclosure UID On
	[Documentation]         Do a UID on Drive enclosure
    [Tags]                  Regression		F636
	[setup]			Run Keywords		
	
	${UIDOnPayload}=   Build Action Payload   uidState   On
	${resp}		Fusion Api Get Resource			uri=/rest/drive-enclosures
    Validate URI for the response		${resp}
    ${length}=   Get Length  ${resp['members']}
    :FOR  ${x}  IN RANGE   0   ${length}
    \	 ${eachRespUri}=   Get From Dictionary     ${resp['members'][${x}]}   uri
    \    ${UidOnResp}=   Fusion Api Patch Drive Enclosure  ${UIDOnPayload}   uri=${eachRespUri}
    \	 ${task_uri}=   Get Rest Uri from URL  ${UidOnResp}
    \	 Wait Until Keyword Succeeds  2 min    5 sec  Validate computedPercentComplete   ${UidOnResp['headers']}  location  ${task_uri}
    \	 Validating task URI  ${UidOnResp}  ${drive_enc_uid_light_control_status}  location  ${task_uri}
    

*** Keywords ***
Validating for the URI 
	[Arguments]		${task_uri}		${PowerOnResp}
	Wait Until Keyword Succeeds  8 min    5 sec  Validate computedPercentComplete   ${PowerOnResp['headers']}  location  ${task_uri}
    Validating task URI  ${PowerOnResp}  ${sas_interconnect_power_control_status}  location  ${task_uri}
    



    