*** Settings ***
Documentation     Verifying F175 and F170 feature.

Resource		resources.txt
Variables		variables.py



*** Test Cases ***


Login to fusion via REST
    [Documentation]         Connects to the Appliance and creates a session using the Username and Password. 
    [Tags]                  Login Fusion 	try
	[setup]			Run Keywords		
										Login to Fusion Via REST		${IP}    ${admin_credentials}
										
										
F175 Natasha Discovery
	[Documentation]			Basic Natasha discovery and management 
	#[Documentation]			Getting the Sas interconnect and validating each UID for Status, State, Power, Model and Serial Number
	[Tags]					Get Call 
	[setup]			Run Keywords		
										
										${resp}		Fusion Api Get Resource			uri=${sas_interconnect_uri}
										Logger 		\n Validating for ${sas_interconnect_uri}
										Validate resource attribute  status_code  ${sas_interconnect_uri}  ${resp}    200
										Validate resource attribute  uri  ${sas_interconnect_uri}  ${resp}
										${length} =		Get Length			${resp['members']}
										:FOR	${x}	IN RANGE	0	${length}
										\	${resp_uri}		Get From Dictionary		${resp['members'][${x}]}		uri
										\	Logger 		\n Validating for ${resp_uri} 
										\	${resp1}		Fusion Api Get Resource			uri=${resp_uri}   
										\	Validate resource attribute  status_code  ${resp_uri}  ${resp1}    200
										\	Validate resource attribute  uri  ${resp_uri}  ${resp1}
										\	Validate resource attribute  state  ${resp_uri}  ${resp1}    ${sas_interconnect_state}
										\   Validate resource attribute  powerState  ${resp_uri}  ${resp1}  ${power_state}
										\   Validate resource attribute  model   ${resp_uri}  ${resp1}  ${natasha_model}


F170 Big Bird Discovery
	[Documentation]			Basic Big Bird discovery and management
	#[Documentation]			Getting the Drive Enclosure and validating each URI for Status, State, Model , Product, power and No of Bays , Drives
	[Tags]					Get Call 	try
	[setup]			Run Keywords
	
	
										${resp}		Fusion Api Get Enclosures			uri=${drive_enclosure_uri}
										Logger 		\n Validating for ${drive_enclosure_uri}
										Validate resource attribute  status_code  ${drive_enclosure_uri}  ${resp}    200
										Validate resource attribute  uri  ${drive_enclosure_uri}  ${resp}
										${length} =   Get Length  ${resp['members']}
										:FOR    ${INDEX}    IN RANGE  0  ${length} 
        								\       ${resp_uri} =   get from dictionary  ${resp['members'][${index}]}  uri
        								\		Logger 		\n Validating for ${resp_uri}
										\       ${resp1}  Fusion Api Get Enclosures			uri=${resp_uri}   
										\		Validate resource attribute  status_code  ${resp_uri}  ${resp1}    200
										\		Validate resource attribute  uri  ${resp_uri}  ${resp1}
										\		Validate resource attribute  state  ${resp_uri}  ${resp1}    ${drive_enclosure_state}	
										\   	Validate resource attribute  productName  ${resp_uri}  ${resp1} 
										\		Validate resource attribute  powerState  ${resp_uri}  ${resp1}  ${power_state}
										\   	Validate resource attribute  model   ${resp_uri}  ${resp1}  ${big_Bird_model}
										
Validate URI for Enclosures 
	[Documentation]			Getting the Enclosures URI and validating each URI as a Pre-requiste. 
	[Tags]					Get Call 
	[setup]			Run Keywords		
										
										
										${resp}		Fusion Api Get Resource			uri=${enclosure_uri}
										Logger 		\n Validating for ${enclosure_uri}
										Validate resource attribute  status_code  ${enclosure_uri}  ${resp}    200
										Validate resource attribute  uri  ${enclosure_uri}  ${resp}
										${length} =		Get Length			${resp['members']}
										:FOR	${x}	IN RANGE	0	${length}
										\	${resp_uri}		Get From Dictionary		${resp['members'][${x}]}		uri
										\	Logger 		\n Validating for ${resp_uri}
										\	${resp1}		Fusion Api Get Resource			uri=${resp_uri}   
										\		Validate resource attribute  status_code  ${resp_uri}  ${resp1}    200
										\		Validate resource attribute  uri  ${resp_uri}  ${resp1}
										\		Validate resource attribute  state  ${resp_uri}  ${resp1}    ${enclosure_state}