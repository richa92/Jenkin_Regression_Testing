*** Settings ***
Documentation       Configures an appliance with resources found in supplied data file. Pass in specific tags with pybot -i <tag(s)> to limit processing
...  TAGS:          CONFIGURE, LOGIN, ADD STORAGE SYSTEMS, UPDATE STORAGE SYSTEMS, REMOVE STORAGE SYSTEMS, MANAGED PORTS
...  FTS:           Performs FTS on the appliance.
...  CONFIGURE:     Run all tags except FTS

Resource    ../resource/api/storage.txt
Library     Collections

*** Variables ***
${APPLIANCE_IP}     10.32.12.4

*** Test Cases ***

Login
    [Tags]  CONFIGURE  LOGIN
    ${resp} =   Fusion Api Login Appliance    ${APPLIANCE_IP}    ${admin_credentials}

Add Storage Systems
    [Tags]  ADD
    ${storage_systems} =    Get Variable Value    ${storage_systems}
    :FOR    ${storage_systems}  IN  @{storage_systems}
    \   ${ssystem_check} =  Storage System Does Exist   ${storage_systems['name']}
    \   Run Keyword and Continue on Failure     Run Keyword If  '${ssystem_check}'=='1'     Fail     msg=Storage System ${storage_systems['name']} already exists in the appliance
    \   Run Keyword If  '${ssystem_check}'=='1'     Continue For Loop
    \   Fusion Api Add Storage System   ${storage_systems}

Update Storage Systems
    [Tags]  UPDATE
    ${storage_systems} =    Get Variable Value    ${storage_systems_update}
    :FOR    ${storage_systems}  IN  @{storage_systems}
    \   ${ssystem_check} =  Storage System Does Exist   ${storage_systems['name']}
    \   Run Keyword and Continue on Failure     Run Keyword If  '${ssystem_check}' == '0'   Fail     msg=Storage System ${storage_systems['name']} is not present in the appliance
    \   Run Keyword If  '${ssystem_check}' == '0'   Continue For Loop
    \   Fusion Api Edit Storage System  ${storage_systems}
    Sleep    20

Storage Systems Managed Ports
    [Tags]  MP
    ${storage_systems_update} =     Get Variable Value  ${storage_systems_update}
    :FOR    ${storage_systems_update}   IN  @{storage_systems_update}
    \   ${ssystem_check} =  Storage System Does Exist   ${storage_systems_update['name']}
    \   Run Keyword and Continue on Failure     Run Keyword If  '${ssystem_check}' == '0'   Fail     msg=Storage System ${storage_systems_update['name']} is not present in the appliance
    \   Run Keyword If  '${ssystem_check}' == '0'   Continue For Loop
    \   Fusion Api Get Managed Port     ${storage_systems_update}

Remove Storage System
    [Tags]  REMOVE
    ${storage_systems_update} =     Get Variable Value  ${storage_systems_update}
    :FOR    ${storage_systems_update}   IN  @{storage_systems_update}
    \   ${ssystem_check} =  Storage System Does Exist    ${storage_systems_update['name']}
    \   Run Keyword and Continue on Failure     Run Keyword If  '${ssystem_check}' == '0'   Fail     msg=Storage System ${storage_systems_update['name']} is not present in the appliance
    \   Run Keyword If  '${ssystem_check}' == '0'   Continue For Loop
    \   Fusion Api Remove Storage System    ${storage_systems_update}
