*** Settings ***
Documentation		Creating Multiple VM
Resource			../resource.txt
Resource			../../../altair_keywords.txt
Test Setup			Load Test Data	${DataFile}
Test Teardown		Logout and close all browsers
Library				OperatingSystem
Library				SSHLibrary
Library				Process


*** Test Case ***
Capture deployment IP of server1
	Log into Altair Appliance as Administrator
	${server_data} =	Set Variable	${Testdata.test_server[0]}
	${ilo_ip} =		Set Variable	${server_data.ip}
	${dep_ip1}=	Get Deployment IP		${ilo_ip}
	Log		${dep_ip1}
	set global variable		${dep_ip1}

Creating VM
	Run		powershell Enable-PSRemoting -Force
	${domainusername} =	Set Variable	${TestData.clusterNode[0].domainusername}
	${domainpassword} =	Set Variable	${TestData.clusterNode[0].domainpassword}
	${switchname1} =	Set Variable	${TestData.clusterNode[0].switchname1}
	: FOR	${virtualname}	In	@{TestData.virtual}
	\	Run		powershell $Username = '${domainusername}'; $Password ='${domainpassword}'; Set-Item -force wsman:\\localhost\\client\\trustedhosts *; Restart-Service WinRM; $pass = ConvertTo-SecureString -AsPlainText $Password -Force; $Cred = New-Object System.Management.Automation.PSCredential -ArgumentList $Username,$pass; Invoke-Command -ComputerName '${dep_ip1}' -ScriptBlock { New-VM -Name ${virtualname.vmname} -path ${virtualname.path} -MemoryStartupBytes ${virtualname.memory} -NewVHDPath ${virtualname.path}${virtualname.vmname}.vhdx -NewVHDSizeBytes ${virtualname.disksize} } -credential $Cred
	\	Run		powershell $Username = '${domainusername}'; $Password ='${domainpassword}'; Set-Item -force wsman:\\localhost\\client\\trustedhosts *; Restart-Service WinRM; $pass = ConvertTo-SecureString -AsPlainText $Password -Force; $Cred = New-Object System.Management.Automation.PSCredential -ArgumentList $Username,$pass; Invoke-Command -ComputerName '${dep_ip1}' -ScriptBlock { Add-VMNetworkAdapter -VMName ${virtualname.vmname} -IsLegacy $true -Name '${virtualname.nicname}' } -credential $Cred
	\	Run		powershell $Username = '${domainusername}'; $Password ='${domainpassword}'; Set-Item -force wsman:\\localhost\\client\\trustedhosts *; Restart-Service WinRM; $pass = ConvertTo-SecureString -AsPlainText $Password -Force; $Cred = New-Object System.Management.Automation.PSCredential -ArgumentList $Username,$pass; Invoke-Command -ComputerName '${dep_ip1}' -ScriptBlock { Connect-VMNetworkAdapter -VMName ${virtualname.vmname} -Name '${virtualname.nicname}' -SwitchName '${switchname1}' } -credential $Cred
	\	Run		powershell $Username = '${domainusername}'; $Password ='${domainpassword}'; Set-Item -force wsman:\\localhost\\client\\trustedhosts *; Restart-Service WinRM; $pass = ConvertTo-SecureString -AsPlainText $Password -Force; $Cred = New-Object System.Management.Automation.PSCredential -ArgumentList $Username,$pass; Invoke-Command -ComputerName '${dep_ip1}' -ScriptBlock { Add-ClusterVirtualMachineRole -VirtualMachine ${virtualname.vmname} } -credential $Cred -Authentication credssp
