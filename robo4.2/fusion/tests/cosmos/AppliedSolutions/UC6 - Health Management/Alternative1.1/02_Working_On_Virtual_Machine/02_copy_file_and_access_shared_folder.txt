*** Settings ***
Documentation		Copy File And Access Shared Folder
Resource			../resource.txt
Test Setup			Load Test Data	${DataFile}
Library				OperatingSystem
Library				SSHLibrary


*** Test Cases ***
Copy Meat Grinder tool to VM1
	Run		powershell Enable-PSRemoting -Force	
	${username} =	set variable	${TestData.copy_file[0].username}
	${password} =	set Variable	${TestData.copy_file[0].password}
	${sourcepath} =	set variable	${TestData.copy_file[0].sourcepath}
	${destpath} =	set variable	${TestData.copy_file[0].destpath}
	${driverpath} =	set variable	${TestData.copy_file[0].DriverName}
	${filename} =	set variable	${TestData.copy_file[0].filename}
	${var} =		Set Variable	${TestData.create_vm[0]}
	connect_to_vi_server	${var.vcenter}	${var.username}	${var.password}
	vi_server_should_be_connected
	${vm2ip_address} =	get_vm_ipv4_addresses	${var.vm_name}
	${hostname} =	set variable	\\\\${vm2ip_address[0]}
	${dest_path} =	set variable	${TestData.copy_file[0].dest}
	${dest} =		set variable	${hostname}${dest_path}
	${source} =	set variable	${TestData.copy_file[0].source}
	${target} =	set variable	${TestData.copy_file[0].target}
	${Command_etd} =	Set Variable	$Username = '${username}'; $Password = '${password}'; $DriverName = '${driverpath}'; $HostName = '${hostname}'; $dest = '${dest}'; $source = '${source}'; $target = '${target}'; Set-Item -force wsman:\\localhost\\client\\trustedhosts * -Force; Restart-Service WinRM; $Pswd = ConvertTo-SecureString -String $Password -AsPlaintext -Force; $credentials = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList $UserName,$Pswd; New-PSDrive -Persist -Name $DriverName -PSProvider FileSystem -Root $dest -credential $credentials; copy-item $source -destination $target
	Run		powershell ${Command_etd}
	${rc} =	Run and Return RC	${driverpath}:
	Should Be True	-1 < ${rc} < 42

Copy Meat Grinder INI file to VM1
	Run		powershell Enable-PSRemoting -Force	
	${username} =	set variable	${TestData.copy_file[1].username}
	${password} =	set Variable	${TestData.copy_file[1].password}
	${sourcepath} =	set variable	${TestData.copy_file[1].sourcepath}
	${destpath} =	set variable	${TestData.copy_file[1].destpath}
	${driverpath} =	set variable	${TestData.copy_file[1].DriverName}
	${filename} =	set variable	${TestData.copy_file[1].filename}
	${var} =		Set Variable	${TestData.create_vm[0]}
	connect_to_vi_server	${var.vcenter}	${var.username}	${var.password}
	vi_server_should_be_connected
	${vm2ip_address} =	get_vm_ipv4_addresses	${var.vm_name}
	${hostname} =	set variable	\\\\${vm2ip_address[0]}
	${dest_path} =	set variable	${TestData.copy_file[1].dest}
	${dest} =		set variable	${hostname}${dest_path}
	${source} =	set variable	${TestData.copy_file[1].source}
	${target} =	set variable	${TestData.copy_file[1].target}
	${Command_etd} =	Set Variable	$Username = '${username}'; $Password = '${password}'; $DriverName = '${driverpath}'; $HostName = '${hostname}'; $dest = '${dest}'; $source = '${source}'; $target = '${target}'; Set-Item -force wsman:\\localhost\\client\\trustedhosts * -Force; Restart-Service WinRM; $Pswd = ConvertTo-SecureString -String $Password -AsPlaintext -Force; $credentials = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList $UserName,$Pswd; New-PSDrive -Persist -Name $DriverName -PSProvider FileSystem -Root $dest -credential $credentials; copy-item $source -destination $target
	Run		powershell ${Command_etd}
	${rc} =	Run and Return RC	${driverpath}:
	Should Be True	-1 < ${rc} < 42

Copy Meat Grinder tool to VM2
	Run		powershell Enable-PSRemoting -Force	
	${username} =	set variable	${TestData.copy_file[2].username}
	${password} =	set Variable	${TestData.copy_file[2].password}
	${sourcepath} =	set variable	${TestData.copy_file[2].sourcepath}
	${destpath} =	set variable	${TestData.copy_file[2].destpath}
	${driverpath} =	set variable	${TestData.copy_file[2].DriverName}
	${filename} =	set variable	${TestData.copy_file[2].filename}
	${var} =		Set Variable	${TestData.create_vm[1]}
	connect_to_vi_server	${var.vcenter}	${var.username}	${var.password}
	vi_server_should_be_connected
	${vm2ip_address} =	get_vm_ipv4_addresses	${var.vm_name}
	${hostname} =	set variable	\\\\${vm2ip_address[0]}
	${dest_path} =	set variable	${TestData.copy_file[2].dest}
	${dest} =		set variable	${hostname}${dest_path}
	${source} =	set variable	${TestData.copy_file[2].source}
	${target} =	set variable	${TestData.copy_file[2].target}
	${Command_etd} =	Set Variable	$Username = '${username}'; $Password = '${password}'; $DriverName = '${driverpath}'; $HostName = '${hostname}'; $dest = '${dest}'; $source = '${source}'; $target = '${target}'; Set-Item -force wsman:\\localhost\\client\\trustedhosts * -Force; Restart-Service WinRM; $Pswd = ConvertTo-SecureString -String $Password -AsPlaintext -Force; $credentials = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList $UserName,$Pswd; New-PSDrive -Persist -Name $DriverName -PSProvider FileSystem -Root $dest -credential $credentials; copy-item $source -destination $target
	Run		powershell ${Command_etd}
	${rc} =	Run and Return RC	${driverpath}:
	Should Be True	-1 < ${rc} < 42

Copy Meat Grinder INI file to VM2
	Run		powershell Enable-PSRemoting -Force	
	${username} =	set variable	${TestData.copy_file[3].username}
	${password} =	set Variable	${TestData.copy_file[3].password}
	${sourcepath} =	set variable	${TestData.copy_file[3].sourcepath}
	${destpath} =	set variable	${TestData.copy_file[3].destpath}
	${driverpath} =	set variable	${TestData.copy_file[3].DriverName}
	${filename} =	set variable	${TestData.copy_file[3].filename}
	${var} =		Set Variable	${TestData.create_vm[1]}
	connect_to_vi_server	${var.vcenter}	${var.username}	${var.password}
	vi_server_should_be_connected
	${vm2ip_address} =	get_vm_ipv4_addresses	${var.vm_name}
	${hostname} =	set variable	\\\\${vm2ip_address[0]}
	${dest_path} =	set variable	${TestData.copy_file[3].dest}
	${dest} =		set variable	${hostname}${dest_path}
	${source} =	set variable	${TestData.copy_file[3].source}
	${target} =	set variable	${TestData.copy_file[3].target}
	${Command_etd} =	Set Variable	$Username = '${username}'; $Password = '${password}'; $DriverName = '${driverpath}'; $HostName = '${hostname}'; $dest = '${dest}'; $source = '${source}'; $target = '${target}'; Set-Item -force wsman:\\localhost\\client\\trustedhosts * -Force; Restart-Service WinRM; $Pswd = ConvertTo-SecureString -String $Password -AsPlaintext -Force; $credentials = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList $UserName,$Pswd; New-PSDrive -Persist -Name $DriverName -PSProvider FileSystem -Root $dest -credential $credentials; copy-item $source -destination $target
	Run		powershell ${Command_etd}
	${rc} =	Run and Return RC	${driverpath}:
	Should Be True	-1 < ${rc} < 42