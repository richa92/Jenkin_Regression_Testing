*** Settings ***
Documentation		Access VM over network
Resource			../resource.txt
Test Setup			Load Test Data	${DataFile}
Library				OperatingSystem

*** TestCases ***
Access VM over network
	: FOR	${var}	In	@{TestData.create_vm}
	\	${vm} =	Set Variable	${var}
	\	connect_to_vi_server	${vm.vcenter}	${vm.username}	${vm.password}
	\	vi_server_should_be_connected
	\	${ip_address} =	get_vm_ipv4_addresses	${vm.vm_name}
	\	Log	${ip_address[0]}
	\	${output} =	Run	ping ${ip_address[0]} -4 -n 1
	\	Should Contain	${output}	time
	\	Log		OS is up and the machine is pinging

Check MeatGrinder stress tool is still running in VM1
	Run		powershell Enable-PSRemoting -Force	
	Run		powershell Set-Item wsman:\\localhost\\client\\trustedhosts * -Force
	Run		powershell Restart-Service WinRM	
	${username} =	set variable	${TestData.copy_file[0].username}
	${password} =	set Variable	${TestData.copy_file[0].password}
	${var} =		Set Variable	${TestData.create_vm[0]}
	connect_to_vi_server	${var.vcenter}	${var.username}	${var.password}
	vi_server_should_be_connected
	${vm2ip_address} =	get_vm_ipv4_addresses	${var.vm_name}
	${hostname} =	set variable	${vm2ip_address[0]}
	${check} =	Set Variable	$Username = '${username}'; $Password = '${password}'; $hostname = '${hostname}'; $pass = ConvertTo-SecureString -AsPlainText $Password -Force; $Cred = New-Object System.Management.Automation.PSCredential -ArgumentList $Username,$pass; Invoke-Command -ComputerName $hostname -ScriptBlock { Get-Process etdntmg } -credential $Cred
	Log	${check}
	${check_status} =	Run		powershell "${check}"

Check MeatGrinder stress tool is still running in VM2
	Run		powershell Enable-PSRemoting -Force	
	Run		powershell Set-Item wsman:\\localhost\\client\\trustedhosts * -Force
	Run		powershell Restart-Service WinRM	
	${username} =	set variable	${TestData.copy_file[0].username}
	${password} =	set Variable	${TestData.copy_file[0].password}
	${var} =		Set Variable	${TestData.create_vm[1]}
	connect_to_vi_server	${var.vcenter}	${var.username}	${var.password}
	vi_server_should_be_connected
	${vm2ip_address} =	get_vm_ipv4_addresses	${var.vm_name}
	${hostname} =	set variable	${vm2ip_address[0]}
	${check} =	Set Variable	$Username = '${username}'; $Password = '${password}'; $hostname = '${hostname}'; $pass = ConvertTo-SecureString -AsPlainText $Password -Force; $Cred = New-Object System.Management.Automation.PSCredential -ArgumentList $Username,$pass; Invoke-Command -ComputerName $hostname -ScriptBlock { Get-Process etdntmg } -credential $Cred
	Log	${check}
	${check_status} =	Run		powershell "${check}"