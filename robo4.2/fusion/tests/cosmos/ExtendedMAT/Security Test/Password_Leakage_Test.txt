*** Settings ***
Documentation		Password leakage Test
Library				OperatingSystem
Library				Process
Library				Collections
Library				String
Force Tags          dcs  security

***Variables***
${path}					C:\\DownloadFolder\\
${decpass}				Cosmos123
${encpass}				Q29zbW9zMTIz
${dest}					C:\\DownloadFolder\\Arch

*** Test Cases ***
Test Automation for password leakage test
	#List the support dump files in the directory and convert it to the string
	@{Files}=	OperatingSystem.List Files In Directory		${path}		*.sdmp		absolute
	BuiltIn.Log to console	Support dump files in the folder ${Files}
	${contostr}=	Convert To String	@{Files}
	#Log to console	${contostr}

	#Remove the .sdmp extension from the string to archive
	${Arch}=	Remove String Using Regexp	${contostr}	.sdmp
	#BuiltIn.Log to console		 ${Arch}

	#Replace ci to text2. Not to conflict with other text files
	${test2}=	Replace String Using Regexp		${Arch}	ci	text2
	#Log to console	${test2}

	#Extract the .sdmp file
	Log to console	Extracting the ${contostr} to ${path}
	${extr} = 	Run and return RC and output	7z x ${contostr} -o${path}
	#Log		${extr}

	#Archive the extracted .sdmp to Arch folder
	Log to console		Archive the ${Arch} to the folder ${dest}
	${arc} = 	Run and return RC and output	7z x ${Arch} -o${dest}
	#BuiltIn.Log to console		${arc}

	#Pass the commands to agent ransack and write logs to the text file
	Log to console	Search for the decoded password by passing parameters to agent ransack....
	${agent}=	Run and return RC and output	AgentRansack.exe -d ${dest} -c ${decpass} -o ${Arch}.txt
	#BuiltIn.Log to console		 ${agent}

	#Read the contents of the text file and check whether password is present or not
	Log to console		Checking whether password found or not in the generated text file
	${contents}=	get file	${Arch}.txt
	@{lines}=	split to lines	${contents}
	#${ge}=	get lines containing string		${contents}	${decpass}
	#log	${ge}

	${pass1}=	set variable	${decpass}
	#log to console	${ps}

	#Check if string is present in the text file, if present fails the test case
	Run Keyword If		'${pass1}' in "@{lines}"     Fail		Password Found

	Log to console	Search for the encoded password by passing parameters to agent ransack....
	${agent2}=	Run and return RC and output	AgentRansack.exe -d ${dest} -c ${encpass} -o ${test2}.txt
	BuiltIn.Log to console		 ${agent2}

	#Read the contents of the text file and check whether password is present or not
	Log to console		Checking whether password found or not in the generated text file
	${contents2}=	get file	${test2}.txt
	@{lines2}=	split to lines	${contents2}
	#${ge1}=	get lines containing string		${contents}	${encpass}
	#log	${ge1}

	${pass2}=	set variable	${encpass}
	#log to console	${ps2}
	Run Keyword If		'${pass2}' in "@{lines2}"     Fail		Password Found



