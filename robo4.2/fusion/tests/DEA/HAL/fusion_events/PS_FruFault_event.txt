*** Settings ***
Documentation    Test suite to validate Power Supply Fru related events on OneView and FLM
...    = GENERIC USAGE =
...    | pybot | -v ENC_SERIAL_NO:[enclosure serial #] | -v APPLIANCE_IP:<ipv4> | -v CIM_Linux_IP:<ipv4> |-v GIT_REPO_ROOT: | PS_FruFault_event.txt |
...    = Variables =
...    | GIT_REPO_ROOT |      Required: Repo root path if NOT defined in environment variable this is mgmtfw root location|
...    | ENC_SERIAL_NO |      Optional: If omitted, will use the 1st enclosure detected in OV |
...    | APPLIANCE_IP |       Required: OneView IPv4 address |
...    | CIM_Linux_IP |       Required:CI Manager ipv4 under test |

Variables         ${GIT_REPO_ROOT}/fusion/tests/DEA/variables/dea_variables.py
Variables         ${GIT_REPO_ROOT}/mgmtfw/tests/thunderbird/variables/tBird_variables.py
Resource          ${GIT_REPO_ROOT}${RESOURCE_ROOT}/resource_all.txt
Resource          ${GIT_REPO_ROOT}${EM_RESOURCE_ROOT}/thunderbird_all.txt
Library           RoboGalaxyLibrary
Library           MgmtFWLibrary
Library           json
Suite Setup       Configure Events Test Environment
Suite Teardown    Run Keywords  Logout of EM RIS   AND    Logout of Fusion Via REST

*** Test Case ***
TC 01: Verify PowerSupplyFru ManufacturedForInvalidFault
    [Documentation]    This test will verify the PowerSupply Fru ManufacturedForInvalidFault events
    ...                PowerSupplyFruManufacturedForInvalidFault
    [Tags]    PS    Alert    Events    FLM1.01     FLM2.00    OV3.10    Automated
    ${AvailablePS}=   Get List of Occupied PowerSupply Bays
    :FOR    ${bay}   IN   @{AvailablePS}
    \    Log    message=Flashing Invalid Manufacturer FRU in PS bay:${bay} and verify ManufacturedForInvalidFault event in diags audit log    console=True
    \    ${last_fusion_event_id}=    get last fusion event ID
    \    Flash Powersupply Fru    ${bay}    ${GIT_REPO_ROOT}${TESTDATA_ROOT}\\${Customized_FRU_Path}\\${psfru_null}
    \    RIS EM Efuse PowerSupply    ${bay}    10
    \    ${status}=    Wait for Device Degraded    ${PowerSupply_Device}    ${bay}
    \    Sleep   10
    \    Should Be True      ${status}   ${PowerSupply_Device} Warning Status not detected
    \    ${diags_50}    ${diags_auditlog_file_path}=    Get Diags Audit Log 50 Recent Entries
    \    Set Test Variable    ${EM_Event_Logger}    ${diags_auditlog_file_path}
    \    Verify Audit Log Alert Event    ${EL_PowerSupply_FruManufacturedForInvalidFault}    ${PowerSupply_Device}    ${bay}    250
    \    Verify Fusion Event Sent By EM    ${EL_PowerSupply_FruManufacturedForInvalidFault}    ${last_fusion_event_id}
    \    Flash Powersupply Fru    ${bay}    ${GIT_REPO_ROOT}${TESTDATA_ROOT}\\Fru_Files\\${CAT}\\Good_Fru\\PS\\${bay}\\fru.bin
    \    RIS EM Efuse On Powersupply    ${bay}
    \    Sleep    10
    \    RIS EM Efuse Off Powersupply    ${bay}
    [Teardown]    Run Keyword If Test Failed    Run Keywords    Ensure All PS Are In Good State   AND   Build RIS Object Model at Root Level
    ...           AND    Flash Powersupply Fru    ${bay}    ${GIT_REPO_ROOT}${TESTDATA_ROOT}\\Fru_Files\\${CAT}\\Good_Fru\\PS\\${bay}\\fru.bin
    ...           AND    RIS EM Efuse On Powersupply    ${bay}    AND   Sleep    10   AND   RIS EM Efuse Off Powersupply    ${bay}

TC 02: Verify PowerSupplyFru ManufacturedForMismatchFault
    [Documentation]    This test will verify the PowerSupplyFru ManufacturedForMismatchFault related events
    ...                PowerSupplyFruManufacturedForMismatchFault
    [Tags]    PS    Alert    Events    FLM1.01     FLM2.00    OV3.10    Automated
    ${AvailablePS}=   Get List of Occupied PowerSupply Bays
    :FOR    ${bay}   IN   @{AvailablePS}
    \    Log    message=Flashing Mismatched Manufacturer FRU in PS bay:${bay} and verify ManufacturedForMismatchFault event in diags audit log    console=True
    \    ${last_fusion_event_id}=    get last fusion event ID
    \    Flash Powersupply Fru    ${bay}    ${GIT_REPO_ROOT}${TESTDATA_ROOT}\\${Customized_FRU_Path}\\${psfru_nec}
    \    RIS EM Efuse PowerSupply    ${bay}    10
    \    ${status}=    Wait for Device Degraded    ${PowerSupply_Device}    ${bay}
    \    Sleep    10
    \    Should Be True      ${status}   ${PowerSupply_Device} Warning Status not detected
    \    ${diags_50}    ${diags_auditlog_file_path}=    Get Diags Audit Log 50 Recent Entries
    \    Set Test Variable    ${EM_Event_Logger}    ${diags_auditlog_file_path}
    \    Verify Audit Log Alert Event    ${EL_PowerSupply_FruManufacturedForMismatchFault}    ${PowerSupply_Device}    ${bay}    250 
    \    Verify Fusion Event Sent By EM    ${EL_PowerSupply_FruManufacturedForMismatchFault}    ${last_fusion_event_id}
    \    Flash Powersupply Fru    ${bay}    ${GIT_REPO_ROOT}${TESTDATA_ROOT}\\Fru_Files\\${CAT}\\Good_Fru\\PS\\${bay}\\fru.bin
    \    RIS EM Efuse On Powersupply    ${bay}
    \    Sleep    10
    \    RIS EM Efuse Off Powersupply    ${bay}
    [Teardown]    Run Keyword If Test Failed    Run Keywords    Ensure All PS Are In Good State   AND   Build RIS Object Model at Root Level
    ...           AND   Flash Powersupply Fru    ${bay}    ${GIT_REPO_ROOT}${TESTDATA_ROOT}\\Fru_Files\\${CAT}\\Good_Fru\\PS\\${bay}\\fru.bin
    ...           AND    RIS EM Efuse On Powersupply    ${bay}    AND   Sleep    10   AND   RIS EM Efuse Off Powersupply    ${bay}

TC 03: Verify PowerSupplyFruContent Faults
    [Documentation]    This test will verify the PowerSupplyFruContentFault events
    ...                PowerSupplyFruContentFault
    [Tags]    PS    Alert    Events    FLM1.01     FLM2.00    OV3.10    Automated
    ${AvailablePS}=   Get List of Occupied PowerSupply Bays
    :FOR    ${bay}   IN   @{AvailablePS}
    \    Log    message=Flashing improper content FRU in PS bay:${bay} and verify FruContent event in diags audit log    console=True
    \    ${last_fusion_event_id}=    get last fusion event ID       
    \    Flash Powersupply Fru    ${bay}    ${GIT_REPO_ROOT}${TESTDATA_ROOT}\\${Customized_FRU_Path}\\${fanfru_hpe}
    \    RIS EM Efuse PowerSupply    ${bay}    10
    \    ${status}=    Wait for Device Degraded    ${PowerSupply_Device}    ${bay}
    \    Sleep    10
    \    Should Be True      ${status}   ${PowerSupply_Device} Warning Status not detected
    \    ${diags_50}    ${diags_auditlog_file_path}=    Get Diags Audit Log 50 Recent Entries
    \    Set Test Variable    ${EM_Event_Logger}    ${diags_auditlog_file_path}
    \    Verify Audit Log Alert Event    ${EL_PowerSupply_FruContentFault}    ${PowerSupply_Device}    ${bay}    250
    \    Verify Fusion Event Sent By EM    ${EL_PowerSupply_FruContentFault}    ${last_fusion_event_id}
    \    Flash Powersupply Fru    ${bay}    ${GIT_REPO_ROOT}${TESTDATA_ROOT}\\Fru_Files\\${CAT}\\Good_Fru\\PS\\${bay}\\fru.bin
    \    RIS EM Efuse On Powersupply    ${bay}
    \    Sleep    10
    \    RIS EM Efuse Off Powersupply    ${bay}
    [Teardown]    Run Keyword If Test Failed    Run Keywords    Ensure All PS Are In Good State   AND   Build RIS Object Model at Root Level
    ...           AND   Flash Powersupply Fru    ${bay}    ${GIT_REPO_ROOT}${TESTDATA_ROOT}\\Fru_Files\\${CAT}\\Good_Fru\\PS\\${bay}\\fru.bin
    ...           AND    RIS EM Efuse On Powersupply    ${bay}    AND   Sleep    10   AND   RIS EM Efuse Off Powersupply    ${bay}

TC 04: Verify PowerSupplyFruFault
    [Documentation]    This test will verify the PowerSupplyFruFault event
    ...                PowerSupplyFruFault
    [Tags]    PS    Alert    Events    FLM2.00    OV3.10    Automated
    ${AvailablePS}=   Get List of Occupied PowerSupply Bays
    :FOR    ${bay}   IN   @{AvailablePS}
    \    Log    message=Injecting FRU fault on PS from bay:${bay} and verify Fault alert event in EM and OV    console=True
    \    ${last_fusion_event_id}=    get last fusion event ID
    \    ${PowerSupply_Status}=    em api set FRU fault Status    ${PowerSupply_Device}    true
    \    Should Be Equal As Strings    ${PowerSupply_Status}    <Response [200]>
    \    RIS EM Efuse PowerSupply    ${bay}    10
    \    Sleep    20
    \    ${PowerSupply_Status}=    em api set FRU fault Status    ${PowerSupply_Device}    false
    \    Should Be Equal As Strings    ${PowerSupply_Status}    <Response [200]>
    \    RIS EM Efuse PowerSupply    ${bay}    10
    \    Sleep    20
    \    ${diags_50}    ${diags_auditlog_file_path}=    Get Diags Audit Log 50 Recent Entries
    \    Set Test Variable    ${EM_Event_Logger}    ${diags_auditlog_file_path}
    \    Verify Audit Log Alert Event    ${EL_PS_FruFault}    ${PowerSupply_Device}    ${bay}    350
    \    Verify Fusion Event Sent By EM     ${EL_PS_FruFault}    ${last_fusion_event_id}
    [Teardown]    Run Keyword If Test Failed    Run Keywords    em api set FRU fault Status    ${PowerSupply_Device}    false
    ...    AND    RIS EM Efuse On Powersupply    ${bay}    AND   Sleep    10   AND   RIS EM Efuse Off Powersupply    ${bay}
