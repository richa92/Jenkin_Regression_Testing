*** Settings ***
Documentation     Validate EM Power Supply events on OneView
...    PowerSupplyDiscoveryComplete
...    PowerSupplyOk
...    PowerSubsystemChanged
...    PowerSupplyWarning
...    PowerSupplyCommFault
...    PowerSupplyCommFaultCleared
...
...               = GENERIC USAGE =
...               | pybot | -v GIT_REPO_ROOT:<repo root path> | -v APPLIANCE_IP:<ipv4> |EM_OV_Power_Supply_Events.txt |
...               = Variables =
...               | GIT_REPO_ROOT | Required: Repo root path if NOT defined in environment variable|
...               | APPLIANCE_IP | Required: OneView IPv4 address |
Suite Setup       Configure Events Test Environment
Suite Teardown    Logout of EM RIS
Test Setup        Build RIS Object Model at Root Level
Library           json
Library           robot.api.logger
Variables         ${GIT_REPO_ROOT}/fusion/tests/DEA/variables/dea_variables.py
Variables         ${GIT_REPO_ROOT}/mgmtfw/tests/thunderbird/variables/tBird_variables.py
Resource          ${GIT_REPO_ROOT}${RESOURCE_ROOT}/resource_all.txt
Resource          ${GIT_REPO_ROOT}/mgmtfw/tests/thunderbird/resources/thunderbird_all.txt
Library           RoboGalaxyLibrary
Library           MgmtFWLibrary
Library           FusionLibrary

*** Test Case ***
TC:01 Validate Power Supply Discovered and OK Events
    [Documentation]    Validate EM/OneView Power Supply Events
    ...    OneView Alert Events Covered:
    ...    PowerSupplyDiscoveryComplete
    ...    PowerSupplyOk
    [Tags]    PS    Alert    Events    FLM1.01     FLM2.00    OV3.10
    ${list}=    Get List of Occupied PowerSupply Bays
    Should Not Be Empty    ${list}    No Power Supplies found
    : FOR    ${bay}    IN    @{list}
    \    Log    message=\nRemoving PS from bay:${bay}    console=True
    \    RIS EM Efuse On PowerSupply    ${bay}
    \    Sleep    8
    \    ${expected_events}    Create List    ${EM_REGISTRY_VERSION}.${PS_Removed_Message_ID}
    \    ${event_list}    ${last_eventID}=    EM Diags Get Audit Log Events    Starting_EventID=${Last_EventID}    Origin_Filter=.*PowerSupply.*
    \    Check EM Event    ${expected_events}    ${event_list}    ${last_eventID}
    \    ${alert_list}=    Get Current Fusion Activity Alerts    ${Last_AlertId}    alert_filter=.*PowerSupply.*
    \    Should Not Be Empty    ${alert_list}    NO NEW Activity Alert Found Since LAST ALERT EVENT
    \    ${expected_alert_type_id}    Create List    ${FUSION_ALERTTYPE_PREFIX}.${EM_REGISTRY_VERSION}.${PS_Removed_Message_ID}
    \    ${alert_corrective_action}=    Check and Get Fusion Alert Corrective Action    ${expected_alert_type_id}    ${alert_list}
    \    Should Be Empty    ${alert_corrective_action}
    \    ${device_info}=    Get Device Info From Fusion    powerSupplyBays    ${bay}
    \    Should Be Equal    ${device_info['devicePresence']}    Absent
    \    Should Be Equal    ${device_info['status']}    ${None}
    \    Log    message=\nInserting PS to bay:${bay}    console=True
    \    RIS EM Efuse Off PowerSupply Without HealthCheck    ${bay}
    \    Sleep    8
    \    ${expected_events}    Create List    ${EM_REGISTRY_VERSION}.${PS_Inserted_Message_ID}    ${EM_REGISTRY_VERSION}.${EL_PS_DiscoveryComplete}    ${EM_REGISTRY_VERSION}.${EL_PS_Fault_OK}
    \    ${event_list}    ${last_eventID}=    EM Diags Get Audit Log Events    Starting_EventID=${Last_EventID}    Origin_Filter=.*PowerSupply.*
    \    Check EM Event    ${expected_events}    ${event_list}    ${last_eventID}
    \    ${alert_list}=    Get Current Fusion Activity Alerts    ${Last_AlertId}    alert_filter=.*PowerSupply.*
    \    Should Not Be Empty    ${alert_list}    NO NEW Activity Alert Found Since LAST ALERT EVENT
    \    ${expected_alert_type_id}    Create List    ${FUSION_ALERTTYPE_PREFIX}.${EM_REGISTRY_VERSION}.${PS_Inserted_Message_ID}    ${FUSION_ALERTTYPE_PREFIX}.${EM_REGISTRY_VERSION}.${EL_PS_DiscoveryComplete}    ${FUSION_ALERTTYPE_PREFIX}.${EM_REGISTRY_VERSION}.${EL_PS_Fault_OK}
    \    ${alert_corrective_action}=    Check and Get Fusion Alert Corrective Action    ${expected_alert_type_id}    ${alert_list}
    \    Should Be Empty    ${alert_corrective_action}
    \    ${device_info}=    Get Device Info From Fusion    powerSupplyBays    ${bay}
    \    Should Be Equal    ${device_info['devicePresence']}    Present
    \    Should Be Equal    ${device_info['status']}    OK
    [Teardown]    Run Keyword If Test Failed    RIS EM Efuse Off PowerSupply Without HealthCheck    ${bay}

TC:02 Validate Power Supply Power Subsystem Changed Events
    [Documentation]    Validate EM/OneView Power Supply Events
    ...    Events Covered:
    ...    PowerSubsystemChanged
    [Tags]    PS    Alert    Events    FLM1.01     FLM2.00    OV3.10
    ${list}=    Get List of Occupied PowerSupply Bays
    Should Not Be Empty    ${list}    No Power Supplies found
    : FOR    ${bay}    IN    @{list}
    \    Log    message=\nRemoving PS from bay:${bay}    console=True
    \    RIS EM Efuse On PowerSupply    ${bay}
    \    Sleep    30
    \    ${expected_events}    Create List    ${EM_REGISTRY_VERSION}.${EL_PowerSubsystem_Status_Change}
    \    ${event_list}    ${last_eventID}=    EM Diags Get Audit Log Events    Starting_EventID=${last_eventID}    Origin_Filter=.*Power.*
    \    Check EM Event    ${expected_events}    ${event_list}    ${last_eventID}
    \    Sleep    8
    \    ${alert_list}=    Get Current Fusion Activity Alerts    ${Last_AlertId}    alert_filter=.*Power.*
    \    Should Not Be Empty    ${alert_list}    NO NEW Activity Alert Found Since LAST ALERT EVENT
    \    ${expected_alert_type_id}    Create List    ${FUSION_ALERTTYPE_PREFIX}.${EM_REGISTRY_VERSION}.${EL_PowerSubsystem_Status_Change}
    \    ${alert_corrective_action}=    Check and Get Fusion Alert Corrective Action    ${expected_alert_type_id}    ${alert_list}
    \    Should Be Empty    ${alert_corrective_action}
    \    ${device_info}=    Get Device Info From Fusion    powerSupplyBays    ${bay}
    \    Should Be Equal    ${device_info['devicePresence']}    Absent
    \    Should Be Equal    ${device_info['status']}    ${None}
    \    Log    message=\nInserting PS to bay:${bay}    console=True
    \    RIS EM Efuse Off PowerSupply Without HealthCheck    ${bay}
    \    Sleep    8
    \    ${expected_events}    Create List    ${EM_REGISTRY_VERSION}.${EL_PowerSubsystem_Status_Change}
    \    ${event_list}    ${last_eventID}=    EM Diags Get Audit Log Events    Starting_EventID=${Last_EventID}    Origin_Filter=.*Power.*
    \    Check EM Event    ${expected_events}    ${event_list}    ${last_eventID}
    \    ${alert_list}=    Get Current Fusion Activity Alerts    ${Last_AlertId}    alert_filter=.*Power.*
    \    Should Not Be Empty    ${alert_list}    NO NEW Activity Alert Found Since LAST ALERT EVENT
    \    ${expected_alert_type_id}    Create List    ${FUSION_ALERTTYPE_PREFIX}.${EM_REGISTRY_VERSION}.${EL_PowerSubsystem_Status_Change}
    \    ${alert_corrective_action}=    Check and Get Fusion Alert Corrective Action    ${expected_alert_type_id}    ${alert_list}
    \    Should Be Empty    ${alert_corrective_action}
    \    Sleep    8
    \    ${device_info}=    Get Device Info From Fusion    powerSupplyBays    ${bay}
    \    Should Be Equal    ${device_info['devicePresence']}    Present
    \    Should Be Equal    ${device_info['status']}    OK
    [Teardown]    Run Keyword If Test Failed    RIS EM Efuse Off PowerSupply Without HealthCheck    ${bay}

TC:03 Validate Power Supply Comm Fault Clear Event
    [Documentation]    Validate EM/OneView Power Supply Fault Cleared Event
    ...    Events covered:
    ...    PowerSupplyCommFault
    ...    PowerSupplyCommFaultCleared
    [Tags]    PS    Alert    Events    FLM2.00    OV3.10    Automated
    ${operational_ps}=    Get List of Devices with Health OK    ${HPEMPowerSupply_Type}    ${PS_Device_Type}
    ${ps_count}=    Get Length    ${operational_ps}
    ${needed_ps}=    Get Needed Power Supplies In The Enclosure
    ${ps_capacity_initial}=    Get PowerSupplyCapacity
    Run Keyword If    ${ps_count}<=${needed_ps}    FAIL    There are not enough PS in the enclosure to validate this test
    : FOR    ${ps}    IN    @{operational_ps}
    \    ${last_fusion_event_id}=    get last fusion event ID
    \    Log To Console    Failing power supply in bay:${ps}
    \    ${PowerSupply_Status}=    Set EM RIS CANmic Faults    ${PowerSupply_Device}    ${ps}    true
    \    Should Be Equal As Strings    ${PowerSupply_Status}    <Response [200]>
    \    Sleep    10
    \    ${failed_ps}=    Get List of Devices with Health Warning    ${HPEMPowerSupply_Type}    ${PS_Device_Type}
    \    List Should Contain Value    ${failed_ps}    ${ps}
    \    ${diags_50}    ${diags_auditlog_file_path}=    Get Diags Audit Log 50 Recent Entries
    \    Set Test Variable    ${EM_Event_Logger}    ${diags_auditlog_file_path}
    \    Verify Audit Log Alert Event    ${EL_PS_CommFault}    ${PowerSupply_Device}    ${ps}    900
    \    Verify Fusion Event Sent By EM    ${EL_PS_CommFault}    ${last_fusion_event_id}
    \    ${PowerSupply_Status}=    Set EM RIS CANmic Faults    ${PowerSupply_Device}    ${ps}    false
    \    Should Be Equal As Strings    ${PowerSupply_Status}    <Response [200]>
    \    Sleep    10
    \    ${ok_ps_list}=    Get List of Devices with Health OK    ${HPEMPowerSupply_Type}    ${PS_Device_Type}
    \    List Should Contain Value    ${ok_ps_list}    ${ps}
    \    ${diags_50}    ${diags_auditlog_file_path}=    Get Diags Audit Log 50 Recent Entries
    \    Set Test Variable    ${EM_Event_Logger}    ${diags_auditlog_file_path}
    \    Verify Audit Log Alert Event    ${EL_PS_CommFault_Cleared}    ${PowerSupply_Device}    ${ps}    350
    \    Verify Fusion Event Sent By EM     ${EL_PS_CommFault_Cleared}    ${last_fusion_event_id}
    [Teardown]    Run Keyword If Test Failed    Run Keywords    Set EM RIS CANmic Faults    ${PowerSupply_Device}    ${ps}    false    AND    Sleep     10

TC:04 Validate Power SupplyWarning Event
    [Documentation]    Validate EM/OneView Power Supply Warning Events
    ...    Events covered:
    ...    PowerSupplyWarning
    [Tags]    PS    Alert    Events    FLM1.01     FLM2.00    OV3.10
    ${list}=    Get List of Occupied PowerSupply Bays
    Should Not Be Empty    ${list}    No Power Supplies found
    : FOR    ${bay}    IN    @{list}
    \    Log To Console    Failing the PowerSupply from bay:${bay}
    \    ${PowerSupply_Status}=    Set EM RIS CANmic Faults    ${PowerSupply_Device}    ${bay}    true
    \    Should Be Equal As Strings    ${PowerSupply_Status}    <Response [200]>
    \    Sleep    8
    \    ${expected_events}    Create List    ${EM_REGISTRY_VERSION}.${EL_PS_Fault_Warning}
    \    ${event_list}    ${last_eventID}=    EM Diags Get Audit Log Events    Starting_EventID=${Last_EventID}    Origin_Filter=.*Power.*
    \    Check EM Event    ${expected_events}    ${event_list}    ${last_eventID}
    \    Sleep    5
    \    ${alert_list}=    Get Current Fusion Activity Alerts    ${Last_AlertId}    alert_filter=.*Power.*
    \    Should Not Be Empty    ${alert_list}    NO NEW Activity Alert Found Since LAST ALERT EVENT
    \    ${expected_alert_type_id}    Create List    ${FUSION_ALERTTYPE_PREFIX}.${EM_REGISTRY_VERSION}.${EL_PS_Fault_Warning}
    \    ${alert_corrective_action}=    Check and Get Fusion Alert Corrective Action    ${expected_alert_type_id}    ${alert_list}
    \    Should Contain    ${alert_corrective_action}    Remove the power supply in bay ${bay} and re-insert it.  If the issue persists, replace the power supply.
    \    ${PowerSupply_Status}=    Set EM RIS CANmic Faults    ${PowerSupply_Device}    ${bay}    false
    \    Should Be Equal As Strings    ${PowerSupply_Status}    <Response [200]>
    \    ${device_info}=    Get Device Info From Fusion    powerSupplyBays    ${bay}
    [Teardown]    Run Keyword If Test Failed    Set EM RIS CANmic Faults    ${PowerSupply_Device}    ${bay}    false

TC 05: Validate PowerSupply Over Temperature Fault
    [Documentation]    This test will verify event PowerSupplyOverTempFault
    [Tags]    PS    Alert    Events    FLM2.00    OV3.10    Automated
    ${last_fusion_event_id}=    get last fusion event ID
    ${operational_ps}=    Get List of Devices with Health OK    ${HPEMPowerSupply_Type}    ${PS_Device_Type}
    ${ps_count}=    Get Length    ${operational_ps}
    ${needed_ps}=    Get Needed Power Supplies In The Enclosure
    ${ps_capacity_initial}=    Get PowerSupplyCapacity
    Run Keyword If    ${ps_count}<=${needed_ps}    FAIL    There are not enough PS in the enclosure to validate this test
    : FOR    ${ps}    IN    @{operational_ps}
    \    Log To Console    Failing power supply in bay:${ps}
    \    Inject Over Temperature Power Supply Fault    ${ps}
    \    Sleep    10
    \    ${failed_ps}=    Get List of Devices with Health Warning    ${HPEMPowerSupply_Type}    ${PS_Device_Type}
    \    List Should Contain Value    ${failed_ps}    ${ps}
    \    ${diags_50}    ${diags_auditlog_file_path}=    Get Diags Audit Log 50 Recent Entries
    \    Set Test Variable    ${EM_Event_Logger}    ${diags_auditlog_file_path}
    \    Verify Audit Log Alert Event    ${EL_PS_Overtemp_Fault}    ${PowerSupply_Device}    ${ps}    900
    \    Verify Fusion Event Sent By EM    ${EL_PS_Overtemp_Fault}    ${last_fusion_event_id}
    \    ${power_supply_fault_status}=    Get PowerSupply Fault Status    ${ps}    PS_OVERTEMP
    \    Should Be Equal    ${power_supply_fault_status}    ${STATUS_WARNING}
    \    Clear Over Temperature Power Supply Fault    ${ps}
    \    Sleep    10
    \    ${ok_ps_list}=    Get List of Devices with Health OK    ${HPEMPowerSupply_Type}    ${PS_Device_Type}
    \    List Should Contain Value    ${ok_ps_list}    ${ps}
    \    ${power_supply_fault_status}=    Get PowerSupply Fault Status    ${ps}    PS_OVERTEMP
    \    Should Be Equal    ${power_supply_fault_status}    ${STATUS_OK}
    [Teardown]    Run Keyword If Test Failed    Run Keywords    RIS EM Efuse PowerSupply    ${ps}    8    AND    Sleep     10

TC 06: Validate PowerSupply Reinsert Fault
    [Documentation]    This test will verify event PowerSupplyReinsertFault
    [Tags]    PS    Alert    Events    FLM2.00    OV3.10    Automated
    ${last_fusion_event_id}=    get last fusion event ID
    ${operational_ps}=    Get List of Devices with Health OK    ${HPEMPowerSupply_Type}    ${PS_Device_Type}
    ${ps_count}=    Get Length    ${operational_ps}
    ${needed_ps}=    Get Needed Power Supplies In The Enclosure
    ${ps_capacity_initial}=    Get PowerSupplyCapacity
    Run Keyword If    ${ps_count}<=${needed_ps}    FAIL    There are not enough PS in the enclosure to validate this test
    : FOR    ${ps}    IN    @{operational_ps}
    \    Log To Console    Failing power supply in bay:${ps}
    \    Inject Over Current Power Supply Fault    ${ps}
    \    Sleep    10
    \    ${failed_ps}=    Get List of Devices with Health Warning    ${HPEMPowerSupply_Type}    ${PS_Device_Type}
    \    List Should Contain Value    ${failed_ps}    ${ps}
    \    ${diags_50}    ${diags_auditlog_file_path}=    Get Diags Audit Log 50 Recent Entries
    \    Set Test Variable    ${EM_Event_Logger}    ${diags_auditlog_file_path}
    \    Verify Audit Log Alert Event    ${EL_PS_Reinsert_Fault}    ${PowerSupply_Device}    ${ps}    900
    \    Verify Fusion Event Sent By EM    ${EL_PS_Reinsert_Fault}    ${last_fusion_event_id}
    \    ${power_supply_fault_status}=    Get PowerSupply Fault Status    ${ps}    PS_REINSERT
    \    Should Be Equal    ${power_supply_fault_status}    ${STATUS_WARNING}
    \    Clear Over Current Power Supply Fault    ${ps}
    \    Sleep    10
    \    ${ok_ps_list}=    Get List of Devices with Health OK    ${HPEMPowerSupply_Type}    ${PS_Device_Type}
    \    List Should Contain Value    ${ok_ps_list}    ${ps}
    \    ${power_supply_fault_status}=    Get PowerSupply Fault Status    ${ps}    PS_REINSERT
    \    Should Be Equal    ${power_supply_fault_status}    ${STATUS_OK}
    [Teardown]    Run Keyword If Test Failed    Run Keywords    RIS EM Efuse PowerSupply    ${ps}    8    AND    Sleep     10

TC 07: Validate Power Supply Replace Fault
    [Documentation]    This test will verify event PowerSupplyReplaceFault
    [Tags]    PS    Alert    Events    FLM2.00    OV3.10    Automated
    ${last_fusion_event_id}=    get last fusion event ID
    ${operational_ps}=    Get List of Devices with Health OK    ${HPEMPowerSupply_Type}    ${PS_Device_Type}
    ${ps_count}=    Get Length    ${operational_ps}
    ${needed_ps}=    Get Needed Power Supplies In The Enclosure
    ${ps_capacity_initial}=    Get PowerSupplyCapacity
    Run Keyword If    ${ps_count}<=${needed_ps}    FAIL    There are not enough PS in the enclosure to validate this test
    : FOR    ${ps}    IN    @{operational_ps}
    \    Log To Console    Failing power supply in bay:${ps}
    \    Inject Unknown Power Supply Fault    ${ps}
    \    Sleep    10
    \    ${failed_ps}=    Get List of Devices with Health Warning    ${HPEMPowerSupply_Type}    ${PS_Device_Type}
    \    List Should Contain Value    ${failed_ps}    ${ps}
    \    ${diags_50}    ${diags_auditlog_file_path}=    Get Diags Audit Log 50 Recent Entries
    \    Set Test Variable    ${EM_Event_Logger}    ${diags_auditlog_file_path}
    \    Verify Audit Log Alert Event    ${EL_PS_Replace_Fault}    ${PowerSupply_Device}    ${ps}    900
    \    Verify Fusion Event Sent By EM    ${EL_PS_Replace_Fault}    ${last_fusion_event_id}
    \    ${power_supply_fault_status}=    Get PowerSupply Fault Status    ${ps}    PS_REPLACE
    \    Should Be Equal    ${power_supply_fault_status}    ${STATUS_WARNING}
    \    Clear Unknown Power Supply Fault    ${ps}
    \    Sleep    10
    \    ${ok_ps_list}=    Get List of Devices with Health OK    ${HPEMPowerSupply_Type}    ${PS_Device_Type}
    \    List Should Contain Value    ${ok_ps_list}    ${ps}
    \    ${power_supply_fault_status}=    Get PowerSupply Fault Status    ${ps}    PS_REPLACE
    \    Should Be Equal    ${power_supply_fault_status}    ${STATUS_OK}
    [Teardown]    Run Keyword If Test Failed    Run Keywords    RIS EM Efuse PowerSupply    ${ps}    8    AND    Sleep     10

TC 08: Validate Power Supply Input Loss Fault
    [Documentation]    This test will verify event PowerSupplyInputLossFault
    [Tags]    PS    Alert    Events    FLM2.00    OV3.10    Automated
    ${last_fusion_event_id}=    get last fusion event ID
    ${operational_ps}=    Get List of Devices with Health OK    ${HPEMPowerSupply_Type}    ${PS_Device_Type}
    ${ps_count}=    Get Length    ${operational_ps}
    ${needed_ps}=    Get Needed Power Supplies In The Enclosure
    ${ps_capacity_initial}=    Get PowerSupplyCapacity
    Run Keyword If    ${ps_count}<=${needed_ps}    FAIL    There are not enough PS in the enclosure to validate this test
    : FOR    ${ps}    IN    @{operational_ps}
    \    Log To Console    Failing power supply in bay:${ps}
    \    Inject Inputloss Power Supply Fault    ${ps}
    \    Sleep    10
    \    ${failed_ps}=    Get List of Devices with Health Warning    ${HPEMPowerSupply_Type}    ${PS_Device_Type}
    \    List Should Contain Value    ${failed_ps}    ${ps}
    \    ${diags_50}    ${diags_auditlog_file_path}=    Get Diags Audit Log 50 Recent Entries
    \    Set Test Variable    ${EM_Event_Logger}    ${diags_auditlog_file_path}
    \    Verify Audit Log Alert Event    ${EL_PS_InputLoss_Fault}    ${PowerSupply_Device}    ${ps}    900
    \    Verify Fusion Event Sent By EM    ${EL_PS_InputLoss_Fault}    ${last_fusion_event_id}
    \    ${power_supply_fault_status}=    Get PowerSupply Fault Status    ${ps}    IP_LOSS
    \    Should Be Equal    ${power_supply_fault_status}    ${STATUS_WARNING}
    \    Clear InputLoss Power Supply Fault    ${ps}
    \    Sleep    10
    \    ${ok_ps_list}=    Get List of Devices with Health OK    ${HPEMPowerSupply_Type}    ${PS_Device_Type}
    \    List Should Contain Value    ${ok_ps_list}    ${ps}
    \    ${power_supply_fault_status}=    Get PowerSupply Fault Status    ${ps}    IP_LOSS
    \    Should Be Equal    ${power_supply_fault_status}    ${STATUS_OK}
    [Teardown]    Run Keyword If Test Failed    Run Keywords    RIS EM Efuse PowerSupply    ${ps}    8    AND    Sleep     10

TC 09: Validate Power Supply Input Fault
    [Documentation]    This test will verify event PowerSupplyInputFault
    [Tags]    PS    Alert    Events    FLM2.00    OV3.10    Automated
    ${last_fusion_event_id}=    get last fusion event ID
    ${operational_ps}=    Get List of Devices with Health OK    ${HPEMPowerSupply_Type}    ${PS_Device_Type}
    ${ps_count}=    Get Length    ${operational_ps}
    ${needed_ps}=    Get Needed Power Supplies In The Enclosure
    ${ps_capacity_initial}=    Get PowerSupplyCapacity
    Run Keyword If    ${ps_count}<=${needed_ps}    FAIL    There are not enough PS in the enclosure to validate this test
    : FOR    ${ps}    IN    @{operational_ps}
    \    ${power_supply_fault_status}=    Get PowerSupply Fault Status    ${ps}    IP_OK
    \    Log To Console    Failing power supply in bay:${ps}
    \    Log To Console    fault to be injected is Input Over Voltage
    \    ${PowerSupply_Status}=    Set EM RIS Faults    PSFaultInjection    ${ps}    PS_OK    true    InputOvervoltage
    \    Should Be Equal As Strings    ${PowerSupply_Status}    <Response [200]>
    \    Log To Console    input over voltage fault injected sucessfully
    \    Sleep    10
    \    ${failed_ps}=    Get List of Devices with Health Warning    ${HPEMPowerSupply_Type}    ${PS_Device_Type}
    \    List Should Contain Value    ${failed_ps}    ${ps}
    \    ${diags_50}    ${diags_auditlog_file_path}=    Get Diags Audit Log 50 Recent Entries
    \    Set Test Variable    ${EM_Event_Logger}    ${diags_auditlog_file_path}
    \    Verify Audit Log Alert Event    ${EL_PS_InputFault}    ${PowerSupply_Device}    ${ps}    900
    \    Verify Fusion Event Sent By EM    ${EL_PS_InputFault}    ${last_fusion_event_id}
    \    ${power_supply_fault_status}=    Get PowerSupply Fault Status    ${ps}    IP_OK
    \    Should Be Equal    ${power_supply_fault_status}    ${STATUS_WARNING}
    \    Log To Console    fault to be cleared is Input Over Voltage
    \    ${PowerSupply_Status}=    Set EM RIS Faults    PSFaultInjection    ${ps}    PS_OK    false    InputOverVoltage
    \    Should Be Equal As Strings    ${PowerSupply_Status}    <Response [200]>
    \    Log To Console    input over voltage fault cleared sucessfully
    \    Sleep    10
    \    ${ok_ps_list}=    Get List of Devices with Health OK    ${HPEMPowerSupply_Type}    ${PS_Device_Type}
    \    List Should Contain Value    ${ok_ps_list}    ${ps}
    \    ${power_supply_fault_status}=    Get PowerSupply Fault Status    ${ps}    IP_OK
    \    Should Be Equal    ${power_supply_fault_status}    ${STATUS_OK}
    [Teardown]    Run Keyword If Test Failed    Run Keywords    RIS EM Efuse PowerSupply    ${ps}    8    AND    Sleep     10
