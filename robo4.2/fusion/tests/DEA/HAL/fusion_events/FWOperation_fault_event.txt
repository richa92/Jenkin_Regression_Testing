*** Settings ***
Documentation    Test suite to validate blade related events on OneView and FLM
...    It covers testing of:
...        StagedFirmwareOperationSuccessful
...
...    = GENERIC USAGE =
...    | pybot | -v ENC_SERIAL_NO:[enclosure serial #] | -v APPLIANCE_IP:<ipv4> | -v CIM_Linux_IP:<ipv4> |-v GIT_REPO_ROOT: | FWOperation_fault_event.txt |
...    = Variables =
...    | GIT_REPO_ROOT |      Required: Repo root path if NOT defined in environment variable this is mgmtfw root location|
...    | ENC_SERIAL_NO |      Optional: If omitted, will use the 1st enclosure detected in OV |
...    | APPLIANCE_IP |       Required: OneView IPv4 address |
...    | CIM_Linux_IP |       Required:CI Manager ipv4 under test |

Variables         ${GIT_REPO_ROOT}/fusion/tests/DEA/variables/dea_variables.py
Variables         ${GIT_REPO_ROOT}/mgmtfw/tests/thunderbird/variables/tBird_variables.py
Resource          ${GIT_REPO_ROOT}${RESOURCE_ROOT}/resource_all.txt
Resource          ${GIT_REPO_ROOT}${EM_RESOURCE_ROOT}/thunderbird_all.txt
Library           RoboGalaxyLibrary
Library           MgmtFWLibrary
Library           json

Suite Setup       Configure Events Test Environment
Suite Teardown    Run Keywords  Logout of EM RIS   AND    Logout of Fusion Via REST

*** Test Case ***

TC 01 Verfiy the StagedFirmwareOperationSuccessful event
    [Documentation]    Verfiy the StagedFirmwareOperationSuccessful event
    [Tags]    Other    Alert    Events    FLM2.00     OV3.10    OVD5152
    ${last_fusion_event_id}=    get last fusion event ID
    ${active_em_pre_flash}=    Get Diags EmClusterStatus Active Node
    ${standby_em_pre_flash}=    Get Diags EmClusterStatus Standby Node
    Log To Console    Active Bay Number - Before Flash: ${active_em_pre_flash}
    ${staged_firmware_version}=    Get firmware version from package    ${FW_URI}
    @{staged_firmware_version_from_package}=    Split String    ${staged_firmware_version.strip()}    =
    Log To Console    firmware version from package is @{staged_firmware_version_from_package}[1]
    # Initiate firmware staging via RIS
    Verify EM Firmware Staging   ${FW_URI}    Staging
    ${staged_firmware_version_from_EM}=    Get Enclosure Manager Version Staged    ${active_em_pre_flash}
    Should Be Equal As Strings    @{staged_firmware_version_from_package}[1]    "${staged_firmware_version_from_EM}" 
    ${staged_partition_before_activation1}=    Get staged partition number    ${active_em_pre_flash}
    ${staged_partition_before_activation2}=    Get staged partition number    ${standby_em_pre_flash}
    #Efuse On Standby Em 
    RIS EM Efuse On OTHER EM    ${standby_em_pre_flash}
    Log To Console    Removing the EM from the bay:${standby_em_pre_flash}
    #Initiate firmware activation via RIS
    ${response}=    EM API Clear EM Staged Firmware    ${RIS Tree}
    Should be Equal As Strings    ${response}    202
    Sleep    30
    #Clear will get StandyEMFailed since staged firmware version is 1.01 which is not supported
    ${result}=    Get EM Firmware Update Message
    Should Be Equal    ${result}    ${EM_REGISTRY_VERSION}.StagedFirmwareOperationSuccessful
	#Verify EM event
	${diags_50}    ${diags_auditlog_file_path}=    Get Diags Audit Log 50 Recent Entries
    Set Test Variable    ${EM_Event_Logger}    ${diags_auditlog_file_path}
	Verify Audit Log Resource Updated Event    ${EM_Device_Name}    ${EM_Staging}    ${active_em_pre_flash}    250
    #Verify Fusion event
	Verify Fusion Event Sent By EM    ${EM_Staging}    ${last_fusion_event_id}
    RIS EM Efuse Off OTHER EM    ${standby_em_pre_flash}
    Sleep    ${EM_REBOOT_TIME}
    Setup EM RIS Session
    ${staged_firmware_version_from_ActiveEM}=    Get Enclosure Manager Version Staged    ${active_em_pre_flash}
    Should Be Equal As Strings    ${staged_firmware_version_from_ActiveEM}    None 
    ${staged_firmware_version_from_StandbyEM}=    Get Enclosure Manager Version    ${standby_em_pre_flash}
    Should Be Equal As Strings    @{staged_firmware_version_from_package}[1]    "${staged_firmware_version_from_standbyEM}"
    ${response}=    Activate Staged EM Firmware
    Should be Equal As Strings    ${response}    em.StagedFwVersionsConflict
    [Teardown]    Run Keyword If Test Failed    Run Keywords    RIS EM Efuse Off OTHER EM    ${standby_em_pre_flash}
    ...    AND    Sleep    ${EM_REBOOT_TIME}    AND    Setup EM RIS Session

