*** Settings ***
Documentation   US35826:  Verifies Blade Module Configuration Action via HAL
...             = Usage =
...             | pybot | -L DEBUG | hal_blade_configuration.txt |
...             = Variables =
...             | FUSION IP     | Required; IP address of the FusionVM to use |
...             | ENCLOSURE     | Required; Enclosure name to run on (tesla, etc) |
...             = Preconditions =
...             None

Library             RoboGalaxyLibrary               # RoboGalaxy Robot Framework extensions
Library             loginPEMClass
Library             FusionLibrary                   # RoboGalaxy Fusion extensions
Resource            ../HAL/resources/hal_webapp.txt     # AM-DVT HAL webapp extensions
Resource            ../HAL/resources/system_info.txt    # System Information keywords to look up enclosure details
Resource            ../HAL/resources/perm_api.txt       # AM-DVT PERM webapp extensions
Variables           ../variables/dea_variables.py
Resource            ../resource/fusion_api_resource.txt    # AM-DVT Fusion API Resource 
Resource            ../HAL/resources/hal_resource.txt    # AM-DVT hal resource file 

Suite Setup         Run Keywords
...                 Login to Fusion Via REST
...                 Verify Claimed EM
...                 Select Random Populated Bay
Suite Teardown    Run Keywords    Login to Fusion via REST    AND    Logout of Fusion via REST    AND    Logout of Fusion via SSH


*** Test Cases ***
Verify Blade Properties
    [Documentation]    Test script to Validate Blade Properties
    # Currently, the only configuration property available from RIS is the iLo IP Address.  Therefore,
    # validate this is what we return from the HAL call.
    [Tags]    DCS    HW    HAL    Automated
    ${auth}=    Get Trusted Token
    set_header_to_pem_token    ${FUSION_IP}    ${creds}    ${auth}
    ${response}=    Get Blade Configuration    ${Bay}
    ${status}    ${opresult}=    Run Keyword and Ignore Error    Get From Dictionary    ${response}    OperationResult
    ${status}    ${ipaddress}=    Run Keyword and Ignore Error    Get From Dictionary    ${opresult}    iLO
    ${status}    ${ilo_bc}=    Run Keyword and Ignore Error    Get From Dictionary    ${ipaddress}    IpAddress
    Log    ${ilo_bc}
    ${response}=    Get EM Blade Manager Resource    ${Bay}
    ${status}    ${content}=    Run Keyword and Ignore Error    Get From Dictionary    ${response}    _content
    ${status}    ${ilo_ris}=    Should Match Regexp    ${content}    \"IpAddress\":\\s*\"(\\S*:\\S*:\\S*:\\S*:\\S*:\\S*)\"    #(IpAddress):\\s*(\\S*:\\S*:\\S*:\\S*:\\S*:\\S*)
    Should Be Equal As Strings    ${ilo_bc}    ${ilo_ris}    msg=HAL Blade Configuration does not compare to RIS output Should Match


#-----------------------------------------------------------------------
# NEGATIVE TEST CASES
#-----------------------------------------------------------------------
Get Blade Configuration for Empty Bay
    [Documentation]    Test script to Validate Blade Configuration for empty bay
    [Tags]    DCS    HW    HAL    Automated
    ${bay}=    Select Random Empty Blade Bay
    Log To Console    \nTesting on Blade in Bay ${bay}
    # Error message is received due to the empty response when attempting to get information from an empty bay
    Run Keyword and Ignore Error    Get Blade Configuration    ${bay}    # ${error_message}

Get Blade Configuration for Invalid Bay
    [Documentation]    Test script to Validate Blade Configuration for invalid bay
    [Tags]    DCS    HW    HAL    Automated
    Log To Console    \nTesting on Blade in Bay ${invalid_blade_bay}
    # Error message is received due to the empty response when attempting to get information from an invalid bay
    Run Keyword and Ignore Error    Get Blade Configuration    ${invalid_blade_bay}    #${Error Message}

Get Blade Configuration with Invalid Property
    [Documentation]    Test script to Validate Blade Configuration with invalid property
    Log To Console    \nTesting on Blade in Bay ${Bay} using bad property.
    # Error message is received due to the empty response when attempting to get information from an invalid bay
    Run Keyword and Expect Error Ignore Error    Get Blade Configuration    ${Bay}    @{Bad Config}    #${Error Message}
