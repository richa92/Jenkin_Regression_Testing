*** Settings ***
Documentation    Test suite Configures VC and Migrate Enclosure to OneView

...    = GENERIC USAGE =
...    | pybot | -c Critical | -v ENC_SERIAL_NO:[enclosure serial #] | -v APPLIANCE_IP:<ipv4> |-v GIT_REPO_ROOT: | 02_AC2_Migrate_Enclosure.txt |
...    = Variables =
...    | GIT_REPO_ROOT |      Required: Repo root path if NOT defined in environment variable this is mgmtfw root location|
...    | ENC_SERIAL_NO |      Optional: If omitted, will use the 1st enclosure detected in OV |
...    | APPLIANCE_IP |       Required: OneView IPv4 address |


Variables         ${GIT_REPO_ROOT}/fusion/tests/DEA/variables/dea_variables.py
Variables         ${GIT_REPO_ROOT}/fusion/tests/DEA/variables/data_variables.py
Resource          ${GIT_REPO_ROOT}/fusion/tests/wpst_crm/crm_austin/resources/keywords.txt
Resource          ${GIT_REPO_ROOT}${RESOURCE_ROOT}/resource_all.txt
Library           RoboGalaxyLibrary
Library           MgmtFWLibrary
Library           FusionLibrary
Library           Collections
Library           Selenium2Library

Suite Setup       Run Keywords    Set Library Search Order    keywords    common    AND    Set VC Migration Variables    AND    Login to OneView Via REST    AND    Suite Setup Tasks
Test Setup        Test Setup Tasks

*** Variables ***
${saveConfig}                   ${False}
${IsCompare}                    ${False}
${OV_IP}                        ${APPLIANCE_IP}
${Encl_Grp_Name}                EG_${Encl_Uri_Name}
${profile_basic_enet}           config/profile_enet.txt
${vc_config_showDomain}         ../../../wpst_crm/crm_austin/Common/config/vc_showDomain.txt
${vc_config_removeAll}          ../../../wpst_crm/crm_austin/Common/config/vc_removeAll.txt

*** Test Cases ***

TC 01 : AC2 - Configure VC
    [Documentation]    This test Configure VC and Migrate Enclosure to OneView
    [Tags]    Migrate    Import/Export    C7000    Automated    Critical
    CleanOV
    CleanVC
    Import VC
    Delete VC Config
    Config VC   ${profile_basic_enet}
    Add Licenses from variable    ${licenses}
    [Teardown]    Run Keyword If Test Failed    CleanOV.CleanVC

TC 02 : AC2 - Migrate Enclosure to OneView
    [Documentation]    This test Configure VC and Migrate Enclosure to OneView
    [Tags]    Migrate    Import/Export    C7000    Automated    Critical
    Report.Write.Compare
    Add Enclosure By Migration    ${RPTURI}
    [Teardown]    Run Keyword If Test Failed    CleanOV.CleanVC

TC 03 : AC2 - Verify Health Status Of Enclosure After Migration
    [Documentation]    This test verifies Health Status of Enclosure After Migration
    [Tags]    Migrate    Import/Export    C7000    Automated
    [Setup]    Set Library Search Order    common    keywords
    # Verify health status and state for Enclosure
    ${enclosure_resp}=    Fusion Api Get Enclosures
    ${enclosure_health}=    Get From Dictionary    ${enclosure_resp['members'][0]}    status
    Should Be Equal    ${enclosure_health}    OK
    ${enclosure_state}=    Get From Dictionary    ${enclosure_resp['members'][0]}    state
    Should Be Equal    ${enclosure_state}    Configured
    # Verify health status of Interconnects
    ${present_ICM_list}    ${absent_ICM_list}=   Get Interconnect Bay Present And Absent List
    ${initial_len}=    Get Length    ${present_ICM_list}
    : FOR    ${ICM_bay}    IN    @{present_ICM_list}
    \    #Retrieve the ICM health status and state from Fusion
    \    ${ICM_health}=    Get Fusion Device Health Status    ${ICMDevice_EM}    ${ICM_bay}
    \    Should Be Equal    ${ICM_health}    OK
    \    ${icm_resp}=    Get ICM Information    ${ICM_bay}
    \    ${ICM_state}=    Get From Dictionary    ${icm_resp}    state
    \    Should Be Equal    ${ICM_state}    Configured
    # Verify health status of Servers
    ${present_server_list}    ${absent_server_list}=    Get Device Bay Present And Absent List    ${BladeDevice_EM}
    ${initial_len}=    Get Length    ${present_server_list}
    : FOR    ${server_bay}    IN    @{present_server_list}
    \    #Retrieve the Server health status and state from Fusion
    \    ${server_health}=    Get Fusion Device Health Status    ${BladeDevice_EM}    ${server_bay}
    \    Should Be Equal    ${server_health}    OK
    \    ${server_resp}=    Get Server Information    ${server_bay}
    \    ${server_state}=    Get From Dictionary    ${server_resp}    state
    \    Should Be Equal    ${server_state}    ProfileApplied
    # Verify health status of Fan Bays
    ${present_fan_list}    ${absent_fan_list}=    Get Device Bay Present And Absent List    ${FANDevice_EM}
    ${initial_len}=    Get Length    ${present_fan_list}
    : FOR    ${fan_bay}    IN    @{present_fan_list}
    \    #Retrieve the Server health status from Fusion
    \    ${fan_health}=    Get Fusion Device Health Status    ${FANDevice_EM}    ${fan_bay}
    \    Should Be Equal    ${fan_health}    OK
    # Verify health status of Power Supplies
    ${present_Ps_list}    ${absent_PS_list}=    Get Device Bay Present And Absent List    ${PSDevice_EM}
    ${initial_len}=    Get Length    ${present_PS_list}
    : FOR    ${PS_bay}    IN    @{present_PS_list}
    \    #Retrieve the Server health status from Fusion
    \    ${health_status}=    Get Fusion Device Health Status    ${PSDevice_EM}    ${PS_bay}
    \    Should Be Equal    ${health_status}    OK
    # Verify Staus of Server Profile
    ${present_server_list}    ${absent_server_list}=    Get Device Bay Present And Absent List    ${BladeDevice_EM}
    : FOR    ${server_bay}    IN    @{present_server_list}
    \    ${server_state}=    Get Server State    ${server_bay}
    \    Should Be Equal    ${server_state}    ProfileApplied
    \    ${server_status}=    Get Server Status    ${server_bay}
    \    Should Be Equal    ${server_status}    OK
    \    ${profile_status}=    Get Server Profile Status    ${server_bay}
    \    Should Be Equal    ${profile_status}    OK

TC 04 : AC2 - Verify If Server Profile Can Be Created After Migrating Enclosure
    [Documentation]    This test verifies If Server Profile Can Be Created After Migrating Enclosure
    [Tags]    Migrate    Import/Export    C7000    Automated
    [Setup]   Set Library Search Order    common    keywords
    #[Setup]    Set Library Search Order    common    server_profile    resource_all    server_hardware    fusion_api_appliance_setup    fusion_api_appliance_teardown
    Power off ALL Servers
    Remove All Server Profiles
    ${present_server_list}    ${absent_server_list}=    Get Device Bay Present And Absent List    ${BladeDevice_EM}
    ${server_bay}=    Evaluate    random.sample(${present_server_list}, 1)   random
    ${server_profile_body}=    Build Ethernet Server Profile body     ${server_bay[0]}    ${server_profiles[0]}
    Create Server Profile    ${server_profile_body}
    ${server_state}=    Get Server State    ${server_bay[0]}
    Should Be Equal    ${server_state}    ProfileApplied
    ${server_status}=    Get Server Status    ${server_bay[0]}
    Should Be Equal    ${server_status}    OK
    ${profile_status}=    Get Server Profile Status    ${server_bay[0]}
    Should Be Equal    ${profile_status}    OK

TC 05 : Teardown
    [Documentation]    Cleans up OV and VC
    [Tags]    Migrate    Import/Export    C7000    Automated
    [Setup]    Set Library Search Order    keywords    common
    CleanOV
    Sleep    60
    CleanVC

**** keywords ****

Set VC Migration Variables
    [Documentation]    This Keyword Prepares Variables for VC Migration Keywords
    ${OA_CREDENTIAL_DATA}=    Create Dictionary    oaIpAddress=${OA_IP}    oaUsername=${OA_USERNAME}    oaPassword=${OA_Password}
    ${VC_CREDENTIAL_DATA}=    Create Dictionary    vcmIpAddress=${VC_IP}    vcmUsername=${VC_USERNAME}    vcmPassword=${VC_PASSWORD}
    ${ADMIN_CREDENTIALS}=    Create Dictionary    userName=${OA_USERNAME}    password=${OA_Password}
    ${OAVC_CREDENTIALS}=    Create Dictionary    &{OA_CREDENTIAL_DATA}    &{VC_CREDENTIAL_DATA}
    Set Suite Variable    ${OA_CREDENTIAL_DATA}
    Set Suite Variable    ${VC_CREDENTIAL_DATA}
    Set Suite Variable    ${OAVC_CREDENTIALS}
    Set Suite Variable    ${ADMIN_CREDENTIALS}
