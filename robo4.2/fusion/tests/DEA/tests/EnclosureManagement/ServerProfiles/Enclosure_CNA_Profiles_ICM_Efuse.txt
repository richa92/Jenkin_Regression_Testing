*** Settings ***
Documentation     Test suite to verify the CNA profile and blade status after efuse ICM
Variables         ${GIT_REPO_ROOT}/fusion/tests/DEA/variables/dea_variables.py
Variables         ${GIT_REPO_ROOT}/fusion/tests/DEA/variables/data_variables.py
Variables         ${GIT_REPO_ROOT}/mgmtfw/tests/thunderbird/variables/tBird_variables.py
Resource          ${GIT_REPO_ROOT}${RESOURCE_ROOT}/resource_all.txt
Resource          ${GIT_REPO_ROOT}${EM_RESOURCE_ROOT}/thunderbird_all.txt
Library           RoboGalaxyLibrary
Library           FusionLibrary
Library           MgmtFWLibrary
Library           Selenium2Library
Library           Collections

Suite Setup       Run Keywords    Login to Fusion Via REST    AND    Clean UP Environment    AND    Setup Ethernet FCoE Appliance
Suite Teardown    Logout of Fusion Via REST
 
*** Test Cases ***

TC 01: Verify Enet profiles and Blade will sustain after the Efuse ICM
    [Documentation]    Verify Enet profiles and Blade can sustain after the Efuse ICM 
    [Tags]    PE    API    Automated    CNA    Ethernet
    [Setup]    Set Library Search Order    fusion_api_resource    ssh    em_ris    fusion_api_em_ris    fusion_api_validation    common
    Power off ALL Servers
    Sleep    120
    Remove All Server Profiles
    Login to Fusion via SSH
    Login And Create EM Session
    ${bay_list}=    Get CNA Mezz Server Bay List
    :FOR    ${blade_bay}    IN    @{bay_list}
    \    ${blade_bay}=    Convert To Integer    ${blade_bay}
    \    Set To Dictionary    ${enet_connection['connections'][0]}    networkUri    ETH:${Ethernet_Name}
    \    ${server_profile_body}=    Update Ethernet Server Profile body     ${blade_bay}    ${server_profiles[0]}
    \    ${resp}=    Fusion Api Create Server Profile    body=${server_profile_body}
    \    ${task} =    Wait For TaskType Success State    ${resp}     timeout=20 mins    interval=20s
    \    ${task_state} =     Get From dictionary     ${task}     taskState
    \    Should Match Regexp    ${task_state}   ((?i)Warning|Completed)
    \    ${server_state}=    Get Server State    ${blade_bay}
    \    Should Be Equal    ${server_state}    ProfileApplied
    \    ${server_status}=    Get Server Status    ${blade_bay}
    \    Should Be Equal    ${server_status}    OK
    \    ${profile_status}=    Get Server Profile Status    ${blade_bay}
    \    Should Be Equal    ${server_status}    OK
    \    ${server_info}=    Get Server Information    ${blade_bay}
    \    ${serverProfileUri}=    Get From Dictionary    ${server_info}    serverProfileUri
    \    ${ICM_Bay}=    Convert To Integer    ${ICM_Bay}
    \    ${icm_status}=    Get Fusion Device Health Status    ${ICMDevice_EM}    ${ICM_Bay}
    \    Should Be Equal    ${icm_status}    OK
    \    Efuse Interconnect Device    EFuseOn    ${ICM_Bay}
    \    Wait For Device Status    ${ICMDevice_EM}    ${ICM_Bay}    Absent
    \    Sleep    60
    \    ${taskResp}=    Fusion Api Get Resource     ${serverProfileUri}
    \    ${profile_status}=  Get from Dictionary    ${taskResp}  status
    \    Should Be Equal    ${profile_status}    Critical
    \    ${server_status}=    Get Server Status    ${blade_bay}
    \    Should Be Equal    ${server_status}   OK
    \    Efuse Interconnect Device    EFuseOff   ${ICM_Bay}
    \    Wait For Device State     ${ICMDevice_EM}    ${ICM_Bay}   Configured   
    \    Sleep    60
    \    ${server_status}=    Get Server Status    ${blade_bay}
    \    Should Be Equal    ${server_status}    OK
    \    ${server_state}=    Get Server State    ${blade_bay}
    \    Should Be Equal    ${server_state}    ProfileApplied
    \    ${taskResp}=    Fusion Api Get Resource     ${serverProfileUri}
    \    ${profile_status}=  Get from Dictionary    ${taskResp}  status
    \    Should Be Equal    ${profile_status}    OK
    \    ${icm_status}=    Get Fusion Device Health Status    ${ICMDevice_EM}    ${ICM_Bay}
    \    Should Be Equal    ${icm_status}    OK
    \    Power OFF Server Blade Bay    ${blade_bay}
    \    Sleep    120
    \    Remove Server Profile Blade Bay    ${blade_bay}
    \    Sleep    120
    [Teardown]    Run Keyword If Test Failed    Run Keywords      Efuse Interconnect Device    EFuseOff   ${ICM_Bay}   AND    Wait For Device Status    ${ICMDevice_EM}    ${ICM_Bay}    OK
    ...   AND    Power OFF Server Blade Bay    ${blade_bay}    AND    Remove Server Profile Blade Bay    ${blade_bay}
        
TC 02: Verify FCOE profiles and Blade will sustain after the ICM Efuse
    [Documentation]    Verify FCOE profiles and Blade will sustain after the ICM Efuse
    [Tags]    PE    API    Automated    CNA    FCOE
    [Setup]    Set Library Search Order    fusion_api_resource    ssh    em_ris    fusion_api_em_ris    fusion_api_validation    common
    Power off ALL Servers
    Sleep    180
    Remove All Server Profiles
    Sleep    60
    Login to Fusion via SSH
    Login And Create EM Session    
    ${bay_list}=    Get CNA Mezz Server Bay List
    :FOR    ${blade_bay}    IN    @{bay_list}
    \    ${blade_bay}=    Convert To Integer    ${blade_bay}
    \    Set To Dictionary    ${fcoe_connection['connections'][0]}    networkUri    FCOE:${FCOE_Name}
    \    ${server_profile_body}=    Update FCOE Server Profile body     ${blade_bay}    ${server_profiles[0]}
    \    ${resp}=    Fusion Api Create Server Profile    body=${server_profile_body}
    \    ${task} =    Wait For TaskType Success State    ${resp}     timeout=20 mins    interval=20s
    \    ${task_state} =     Get From dictionary     ${task}     taskState
    \    Should Match Regexp    ${task_state}   ((?i)Warning|Completed)
    \    ${server_state}=    Get Server State    ${blade_bay}
    \    Should Be Equal    ${server_state}    ProfileApplied
    \    ${server_status}=    Get Server Status    ${blade_bay}
    \    Should Be Equal    ${server_status}    OK
    \    ${profile_status}=    Get Server Profile Status    ${blade_bay}
    \    Should Be Equal    ${server_status}    OK
    \    ${server_info}=    Get Server Information    ${blade_bay}
    \    ${serverProfileUri}=    Get From Dictionary    ${server_info}    serverProfileUri
    \    ${ICM_Bay}=    Convert To Integer    ${ICM_Bay}
    \    ${icm_status}=    Get Fusion Device Health Status    ${ICMDevice_EM}    ${ICM_Bay}
    \    Should Be Equal    ${icm_status}    OK
    \    Efuse Interconnect Device    EFuseOn    ${ICM_Bay}
    \    Wait For Device Status    ${ICMDevice_EM}    ${ICM_Bay}    Absent
    \    Sleep    60
    \    ${taskResp}=    Fusion Api Get Resource     ${serverProfileUri}
    \    ${profile_status}=  Get from Dictionary    ${taskResp}  status
    \    Should Be Equal    ${profile_status}    Critical
    \    ${server_status}=    Get Server Status    ${blade_bay}
    \    Should Be Equal    ${server_status}   OK
    \    Efuse Interconnect Device    EFuseOff   ${ICM_Bay}
    \    Wait For Device State     ${ICMDevice_EM}    ${ICM_Bay}   Configured   
    \    Sleep    60 
    \    Wait For Device Status    ${ICMDevice_EM}    ${ICM_Bay}    OK
    \    ${server_status}=    Get Server Status    ${blade_bay}
    \    Should Be Equal    ${server_status}    OK
    \    ${server_state}=    Get Server State    ${blade_bay}
    \    Should Be Equal    ${server_state}    ProfileApplied
    \    ${taskResp}=    Fusion Api Get Resource     ${serverProfileUri}
    \    ${profile_status}=  Get from Dictionary    ${taskResp}  status
    \    Should Be Equal    ${profile_status}    OK
    \    ${icm_status}=    Get Fusion Device Health Status    ${ICMDevice_EM}    ${ICM_Bay}
    \    Should Be Equal    ${icm_status}    OK
    \    Power OFF Server Blade Bay    ${blade_bay}
    \    Sleep    120
    \    Remove Server Profile Blade Bay    ${blade_bay}
    \    Sleep    120    
    [Teardown]    Run Keyword If Test Failed    Run Keywords      Efuse Interconnect Device    EFuseOff   ${ICM_Bay}   AND    Wait For Device Status    ${ICMDevice_EM}    ${ICM_Bay}    OK
     ...   AND    Power OFF Server Blade Bay    ${blade_bay}    AND    Remove Server Profile Blade Bay    ${blade_bay}