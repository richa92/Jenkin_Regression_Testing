*** Settings ***
Documentation     Test suite to test the backup and restore functionality
...               pybot -L Trace -v APPLIANCE_IP:<APP_IPv4-IPv6> -v Server_Bay:<server bay>    Backup_Restore_Multiple_Backups.txt

Variables         ${GIT_REPO_ROOT}/fusion/tests/DEA/variables/dea_variables.py
Variables         ${GIT_REPO_ROOT}/fusion/tests/DEA/variables/data_variables.py
Variables         ${GIT_REPO_ROOT}/mgmtfw/tests/thunderbird/variables/tBird_variables.py
Resource          ${GIT_REPO_ROOT}${RESOURCE_ROOT}/petest_resource.txt
Resource          ${GIT_REPO_ROOT}/fusion/Resources/api/settings/backups.txt
Resource          ${GIT_REPO_ROOT}/fusion/Resources/api/settings/restores.txt
Resource          ${GIT_REPO_ROOT}${EM_RESOURCE_ROOT}/thunderbird_all.txt
Library           RoboGalaxyLibrary
Library           FusionLibrary
Library           MgmtFWLibrary
Library           Selenium2Library
Library           Collections
Suite Setup       Run Keywords    Login to Fusion Via REST    AND    Clean UP Environment    AND    Cleanup Backup Restore Environment    AND    Setup Ethernet FCoE Appliance   
Suite Teardown    Run Keywords    Clean UP Environment    AND    Logout of Fusion Via REST

*** Test Cases ***
TC 01: Multiple backup files. Restore from 1st backup file
    [Documentation]    Multiple backup files. Take 2 backup files and download the backupfiles and restore from the 1st downloaded backup file.
    [Tags]    Backup-Restore    Automated1
    ${bay_list}=  BuiltIn.Create List  ${Server_Bay}
    ${last_eventID}=    Get Last Fusion Event Id
    ${server_profile_body}=    Update Ethernet Server Profile body    ${Server_Bay}    ${server_profiles[0]}
    Create Server Profile    ${server_profile_body}
    Power ON Server Blade Bay    ${Server_Bay} 
    Sleep    180   
    ${pre_ENC_COUNT} =    Fusion Api Get Enclosures
    ${pre_LE_COUNT} =    Fusion Api Get Logical Enclosure
    ${pre_HW_COUNT} =    Fusion Api Get Server Hardware
    ${pre_EG_COUNT} =    Fusion Api Get Enclosure Groups
    ${pre_SP_COUNT} =    Fusion Api Get Server Profiles
    ${pre_LIG_COUNT} =    Fusion Api Get LIG
    ${pre_IC_COUNT} =    Fusion Api Get Interconnect
    ${pre_ETH_COUNT} =    Fusion Api Get Ethernet Networks
    ${pre_FCOE_COUNT} =    Fusion Api Get FCoE Networks

#   Get server details before backup
    ${pre_backup_server_details}=  Get server Information    ${Server_Bay}
#    Get server details post restore
    ${pre_backup_profile_details}=    Fusion Api Get Server Profiles     ${pre_backup_server_details['serverProfileUri']}
     Log   ${pre_backup_profile_details['connectionSettings']['connections']}
    ${Backup_file1}=  Build OV Back up File Name
#   Create a first backup and download the backup  
    Create Backup
    ${backup_uri}=    Get Backup URI
    Download Backup    ${backup_uri}    ${Backup_file1}
    Delete Server Profile   ${bay_list}  
#   Create a second backup and download the backup    
    ${Backup_file2}=  Build OV Back up File Name
    Create Backup
    ${backup_uri}=    Get Backup URI
    Download Backup    ${backup_uri}    ${Backup_file2}
#   Upload the first local backup file    
    Upload Backup    ${Backup_file1}
    ${backup_uri}=    Get Backup URI
    Initiate Restore    ${backup_uri}
    Wait Until Keyword Succeeds    90m    30s    OneView Restore Complete
    Run Keywords    Login to Fusion Via REST
    ${resp}=   Fusion Api Get Server Profiles
    ${profile_list}=  Get From Dictionary  ${resp}  members
    ${status}=    Validate alertID in fusion events    ${last_eventID}    ${Server_Virtual_MACfault_AlertID}
    ${server_state}=    Run Keyword If    '${status}'=='PASS'
    ...    Run Keywords    Power OFF Server Blade Bay    ${Server_Bay}
    ...    AND    Sleep    120
    ...    AND    Unassign Profiles From Servers    ${profile_list}
    ...    AND    Assign Profiles To Servers    ${profile_list}
    ...    AND    Power ON Server Blade Bay    ${Server_Bay}
    ...    AND    Sleep   240

#   Get server details post restore
    ${post_backup_server_details}=  Get server Information    ${Server_Bay}
#   Get server details post restore
    ${post_backup_profile_details}=    Fusion Api Get Server Profiles     ${post_backup_server_details['serverProfileUri']}
#   post backup device counts
    ${post_ENC_COUNT} =    Fusion Api Get Enclosures
    ${post_LE_COUNT} =    Fusion Api Get Logical Enclosure
    ${post_HW_COUNT} =    Fusion Api Get Server Hardware
    ${post_EG_COUNT} =    Fusion Api Get Enclosure Groups
    ${post_SP_COUNT} =    Fusion Api Get Server Profiles
    ${post_LIG_COUNT} =    Fusion Api Get LIG
    ${post_IC_COUNT} =    Fusion Api Get Interconnect
    ${post_ETH_COUNT} =    Fusion Api Get Ethernet Networks
    ${post_FCOE_COUNT} =    Fusion Api Get FCoE Networks
#   Compare the pre and post counts
    Should be Equal    ${pre_ENC_COUNT['count']}  ${post_ENC_COUNT['count']}
    Should be Equal    ${pre_LE_COUNT['count']}  ${post_LE_COUNT['count']}
    Should be Equal    ${pre_HW_COUNT['count']}  ${post_HW_COUNT['count']}
    Should be Equal    ${pre_EG_COUNT['count']}  ${post_EG_COUNT['count']}
    Should be Equal    ${pre_SP_COUNT['count']}  ${post_SP_COUNT['count']}
    Should be Equal    ${pre_LIG_COUNT['count']}  ${post_LIG_COUNT['count']}
    Should be Equal    ${pre_IC_COUNT['count']}  ${post_IC_COUNT['count']}
    Should be Equal    ${pre_FCOE_COUNT['count']}  ${post_FCOE_COUNT['count']}
#   Compare the server details before and after restore
    Should be Equal    ${pre_backup_server_details['model']}  ${post_backup_server_details['model']}
    Should be Equal    ${pre_backup_server_details['mpHostInfo']}  ${post_backup_server_details['mpHostInfo']}
    Should be Equal    ${pre_backup_server_details['mpState']}  ${post_backup_server_details['mpState']}
    Should be Equal    ${pre_backup_server_details['portMap']}  ${post_backup_server_details['portMap']}
    Should be Equal    ${pre_backup_server_details['name']}  ${post_backup_server_details['name']}
    Should be Equal    ${pre_backup_server_details['position']}  ${post_backup_server_details['position']}
    Should be Equal    ${pre_backup_server_details['powerState']}  ${post_backup_server_details['powerState']}
    Should be Equal    ${pre_backup_server_details['remoteSupportUri']}  ${post_backup_server_details['remoteSupportUri']}
    Should be Equal    ${pre_backup_server_details['serverHardwareTypeUri']}  ${post_backup_server_details['serverHardwareTypeUri']}
    Should be Equal    ${pre_backup_server_details['state']}  ${post_backup_server_details['state']}
    Should be Equal    ${pre_backup_server_details['uidState']}  ${post_backup_server_details['uidState']}
#   Compare the server profile details before and after restore
    Should be Equal    ${pre_backup_profile_details['boot']}  ${post_backup_profile_details['boot']}
    Should be Equal    ${pre_backup_profile_details['bootMode']}  ${post_backup_profile_details['bootMode']}
    Should be Equal    ${pre_backup_profile_details['connectionSettings']['connections']}  ${post_backup_profile_details['connectionSettings']['connections']}
    Should be Equal    ${pre_backup_profile_details['state']}  ${post_backup_profile_details['state']}
    Should be Equal    ${pre_backup_profile_details['status']}  ${post_backup_profile_details['status']}
    Should be Equal    ${pre_backup_profile_details['serialNumber']}  ${post_backup_profile_details['serialNumber']}
    Should be Equal    ${pre_backup_profile_details['enclosureBay']}  ${post_backup_profile_details['enclosureBay']}
    Delete Server Profile   ${bay_list}  
    [Teardown]    Run Keyword If Test Failed    Run Keyword   Delete Server Profile  ${bay_list}

TC 02: Multiple backup files. Restore from 2nd local backup file
    [Documentation]    Multiple backup files. Take 2 backup files and download the backupfiles and restore from the 2nd downloaded backup file.
    [Tags]    Backup-Restore    Automated
    ${bay_list}=  BuiltIn.Create List  ${Server_Bay}
    Delete Server Profile   ${bay_list}
    ${update_profile} =    Common.Copy Dictionary    ${server_profiles[0]}
    ${server_profile_body}=    Update FCOE Server Profile body    ${Server_Bay}    ${server_profiles[0]}
    Create Server Profile    ${server_profile_body}
    ${Backup_file1}=  Build OV Back up File Name
#   Create a first backup and download the backup  
    Create Backup
    ${backup_uri}=    Get Backup URI
    Download Backup    ${backup_uri}    ${Backup_file1}
    ${enet_connection}=    Create List
    ${enet_connection}=    Set Test Variable    ${enet_connection}
    ${Server_Bay_list}=    Create List   ${Server_Bay}
    Power OFF Server Blade Bay    ${Server_Bay}  
    Change BW Values   ${Server_Bay_list}    ${update_profile}     ${enet_connection}    ${Legacy_bootmode}   ${Gen9_boot}  ${NONE}
    Power ON Server Blade Bay    ${Server_Bay}
    Sleep    180
    ${pre_ENC_COUNT} =    Fusion Api Get Enclosures
    ${pre_LE_COUNT} =    Fusion Api Get Logical Enclosure
    ${pre_HW_COUNT} =    Fusion Api Get Server Hardware
    ${pre_EG_COUNT} =    Fusion Api Get Enclosure Groups
    ${pre_SP_COUNT} =    Fusion Api Get Server Profiles
    ${pre_LIG_COUNT} =    Fusion Api Get LIG
    ${pre_IC_COUNT} =    Fusion Api Get Interconnect
    ${pre_ETH_COUNT} =    Fusion Api Get Ethernet Networks
    ${pre_FCOE_COUNT} =    Fusion Api Get FCoE Networks
#   Get server details before backup
    ${pre_backup_server_details}=  Get server Information    ${Server_Bay}
#    Get server details post restore
    ${pre_backup_profile_details}=    Fusion Api Get Server Profiles     ${pre_backup_server_details['serverProfileUri']}
#   Create a second backup and download the backup    
    ${Backup_file2}=  Build OV Back up File Name
    Log to console     ${Backup_file2}
    Create Backup
    ${backup_uri}=    Get Backup URI
    Download Backup    ${backup_uri}    ${Backup_file2}
#   Upload the second local backup file    
    Upload Backup    ${Backup_file2}
    ${backup_uri}=    Get Backup URI
    Initiate Restore    ${backup_uri}
    Wait Until Keyword Succeeds    90m    30s    OneView Restore Complete
    Run Keywords    Login to Fusion Via REST
#   Get server details post restore
    ${post_backup_server_details}=  Get server Information    ${Server_Bay}
#   Get server details post restore
    ${post_backup_profile_details}=    Fusion Api Get Server Profiles     ${post_backup_server_details['serverProfileUri']}
#   post backup device counts
    ${post_ENC_COUNT} =    Fusion Api Get Enclosures
    ${post_LE_COUNT} =    Fusion Api Get Logical Enclosure
    ${post_HW_COUNT} =    Fusion Api Get Server Hardware
    ${post_EG_COUNT} =    Fusion Api Get Enclosure Groups
    ${post_SP_COUNT} =    Fusion Api Get Server Profiles
    ${post_LIG_COUNT} =    Fusion Api Get LIG
    ${post_IC_COUNT} =    Fusion Api Get Interconnect
    ${post_ETH_COUNT} =    Fusion Api Get Ethernet Networks
    ${post_FCOE_COUNT} =    Fusion Api Get FCoE Networks
#   Compare the pre and post counts   
    Should be Equal    ${pre_ENC_COUNT['count']}  ${post_ENC_COUNT['count']}
    Should be Equal    ${pre_LE_COUNT['count']}  ${post_LE_COUNT['count']}
    Should be Equal    ${pre_HW_COUNT['count']}  ${post_HW_COUNT['count']}
    Should be Equal    ${pre_EG_COUNT['count']}  ${post_EG_COUNT['count']}
    Should be Equal    ${pre_SP_COUNT['count']}  ${post_SP_COUNT['count']}
    Should be Equal    ${pre_LIG_COUNT['count']}  ${post_LIG_COUNT['count']}
    Should be Equal    ${pre_IC_COUNT['count']}  ${post_IC_COUNT['count']}
    Should be Equal    ${pre_FCOE_COUNT['count']}  ${post_FCOE_COUNT['count']}
#   Compare the server details before and after restore
    Should be Equal    ${pre_backup_server_details['model']}  ${post_backup_server_details['model']}
    Should be Equal    ${pre_backup_server_details['mpHostInfo']}  ${post_backup_server_details['mpHostInfo']}
    Should be Equal    ${pre_backup_server_details['mpState']}  ${post_backup_server_details['mpState']}
    Should be Equal    ${pre_backup_server_details['portMap']}  ${post_backup_server_details['portMap']}
    Should be Equal    ${pre_backup_server_details['name']}  ${post_backup_server_details['name']}
    Should be Equal    ${pre_backup_server_details['position']}  ${post_backup_server_details['position']}
    Should be Equal    ${pre_backup_server_details['powerState']}  ${post_backup_server_details['powerState']}
    Should be Equal    ${pre_backup_server_details['remoteSupportUri']}  ${post_backup_server_details['remoteSupportUri']}
    Should be Equal    ${pre_backup_server_details['serverHardwareTypeUri']}  ${post_backup_server_details['serverHardwareTypeUri']}
    Should be Equal    ${pre_backup_server_details['state']}  ${post_backup_server_details['state']}
    Should be Equal    ${pre_backup_server_details['uidState']}  ${post_backup_server_details['uidState']}
#   Compare the server profile details before and after restore
    Should be Equal    ${pre_backup_profile_details['boot']}  ${post_backup_profile_details['boot']}
    Should be Equal    ${pre_backup_profile_details['bootMode']}  ${post_backup_profile_details['bootMode']}
    Should be Equal    ${pre_backup_profile_details['connectionSettings']['connections']}  ${post_backup_profile_details['connectionSettings']['connections']}
    Should be Equal    ${pre_backup_profile_details['state']}  ${post_backup_profile_details['state']}
    Should be Equal    ${pre_backup_profile_details['status']}  ${post_backup_profile_details['status']}
    Should be Equal    ${pre_backup_profile_details['serialNumber']}  ${post_backup_profile_details['serialNumber']}
    Should be Equal    ${pre_backup_profile_details['enclosureBay']}  ${post_backup_profile_details['enclosureBay']}
    Delete Server Profile   ${bay_list}  
    [Teardown]    Run Keyword If Test Failed    Run Keyword   Delete Server Profile  ${bay_list}
    
TC 03: Multiple backup files. Restore from OV backup file
    [Documentation]    Multiple backup files. Take 2 backup files and download the backupfiles and restore from OV backup file.
    [Tags]    Backup-Restore    Automated
    ${bay_list}=  BuiltIn.Create List  ${Server_Bay}
    ${last_eventID}=    Get Last Fusion Event Id
    Delete Server Profile   ${bay_list}
    ${update_profile} =    Common.Copy Dictionary    ${server_profiles[0]}
    ${server_profile_body}=    Update FCOE Server Profile body    ${Server_Bay}    ${server_profiles[0]}
    Create Server Profile    ${server_profile_body}
    ${Backup_file1}=  Build OV Back up File Name
#   Create a first backup and download the backup  
    Create Backup
    ${backup_uri}=    Get Backup URI
    Download Backup    ${backup_uri}    ${Backup_file1}
    ${enet_connection}=    Create List
    ${enet_connection}=    Set Test Variable    ${enet_connection}
    ${Server_Bay_list}=    Create List   ${Server_Bay}
    Power OFF Server Blade Bay    ${Server_Bay}  
    Change BW Values   ${Server_Bay_list}    ${update_profile}     ${enet_connection}    ${Legacy_bootmode}   ${Gen9_boot}  ${NONE}
    Power ON Server Blade Bay    ${Server_Bay}
    Sleep    180
    ${pre_ENC_COUNT} =    Fusion Api Get Enclosures
    ${pre_LE_COUNT} =    Fusion Api Get Logical Enclosure
    ${pre_HW_COUNT} =    Fusion Api Get Server Hardware
    ${pre_EG_COUNT} =    Fusion Api Get Enclosure Groups
    ${pre_SP_COUNT} =    Fusion Api Get Server Profiles
    ${pre_LIG_COUNT} =    Fusion Api Get LIG
    ${pre_IC_COUNT} =    Fusion Api Get Interconnect
    ${pre_ETH_COUNT} =    Fusion Api Get Ethernet Networks
    ${pre_FCOE_COUNT} =    Fusion Api Get FCoE Networks 
#   Get server details before backup
    ${pre_backup_server_details}=  Get server Information    ${Server_Bay}
#    Get server details post restore
    ${pre_backup_profile_details}=    Fusion Api Get Server Profiles     ${pre_backup_server_details['serverProfileUri']}
#   Create a second backup and download the backup    
    ${Backup_file2}=  Build OV Back up File Name
    Create Backup
    ${backup_uri}=    Get Backup URI
    Download Backup    ${backup_uri}    ${Backup_file2}
#   Upload the second OV backup file    
    ${backup_uri}=    Get Backup URI
    Initiate Restore    ${backup_uri}
    Wait Until Keyword Succeeds    90m    30s    OneView Restore Complete
    Run Keywords    Login to Fusion Via REST
    ${resp}=   Fusion Api Get Server Profiles
    ${profile_list}=  Get From Dictionary  ${resp}  members
    ${status}=    Validate alertID in fusion events    ${last_eventID}    ${Server_Virtual_MACfault_AlertID}
    ${server_state}=    Run Keyword If    '${status}'=='PASS'
    ...    Run Keywords    Power OFF Server Blade Bay    ${Server_Bay}
    ...    AND    Sleep    120
    ...    AND    Unassign Profiles From Servers    ${profile_list}
    ...    AND    Assign Profiles To Servers    ${profile_list}
    ...    AND    Power ON Server Blade Bay    ${Server_Bay}
    ...    AND    Sleep   240
#   Get server details post restore
    ${post_backup_server_details}=  Get server Information    ${Server_Bay}
#   Get server details post restore
    ${post_backup_profile_details}=    Fusion Api Get Server Profiles     ${post_backup_server_details['serverProfileUri']}
#   post backup device counts
    ${post_ENC_COUNT} =    Fusion Api Get Enclosures
    ${post_LE_COUNT} =    Fusion Api Get Logical Enclosure
    ${post_HW_COUNT} =    Fusion Api Get Server Hardware
    ${post_EG_COUNT} =    Fusion Api Get Enclosure Groups
    ${post_SP_COUNT} =    Fusion Api Get Server Profiles
    ${post_LIG_COUNT} =    Fusion Api Get LIG
    ${post_IC_COUNT} =    Fusion Api Get Interconnect
    ${post_ETH_COUNT} =    Fusion Api Get Ethernet Networks
    ${post_FCOE_COUNT} =    Fusion Api Get FCoE Networks
#   Compare the pre and post counts   
    Should be Equal    ${pre_ENC_COUNT['count']}  ${post_ENC_COUNT['count']}
    Should be Equal    ${pre_LE_COUNT['count']}  ${post_LE_COUNT['count']}
    Should be Equal    ${pre_HW_COUNT['count']}  ${post_HW_COUNT['count']}
    Should be Equal    ${pre_EG_COUNT['count']}  ${post_EG_COUNT['count']}
    Should be Equal    ${pre_SP_COUNT['count']}  ${post_SP_COUNT['count']}
    Should be Equal    ${pre_LIG_COUNT['count']}  ${post_LIG_COUNT['count']}
    Should be Equal    ${pre_IC_COUNT['count']}  ${post_IC_COUNT['count']}
    Should be Equal    ${pre_FCOE_COUNT['count']}  ${post_FCOE_COUNT['count']}
#   Compare the server details before and after restore
    Should be Equal    ${pre_backup_server_details['model']}  ${post_backup_server_details['model']}
    Should be Equal    ${pre_backup_server_details['mpHostInfo']}  ${post_backup_server_details['mpHostInfo']}
    Should be Equal    ${pre_backup_server_details['mpState']}  ${post_backup_server_details['mpState']}
    Should be Equal    ${pre_backup_server_details['portMap']}  ${post_backup_server_details['portMap']}
    Should be Equal    ${pre_backup_server_details['name']}  ${post_backup_server_details['name']}
    Should be Equal    ${pre_backup_server_details['position']}  ${post_backup_server_details['position']}
    Should be Equal    ${pre_backup_server_details['powerState']}  ${post_backup_server_details['powerState']}
    Should be Equal    ${pre_backup_server_details['remoteSupportUri']}  ${post_backup_server_details['remoteSupportUri']}
    Should be Equal    ${pre_backup_server_details['serverHardwareTypeUri']}  ${post_backup_server_details['serverHardwareTypeUri']}
    Should be Equal    ${pre_backup_server_details['state']}  ${post_backup_server_details['state']}
    Should be Equal    ${pre_backup_server_details['uidState']}  ${post_backup_server_details['uidState']}
#   Compare the server profile details before and after restore
    Should be Equal    ${pre_backup_profile_details['boot']}  ${post_backup_profile_details['boot']}
    Should be Equal    ${pre_backup_profile_details['bootMode']}  ${post_backup_profile_details['bootMode']}
    Should be Equal    ${pre_backup_profile_details['connectionSettings']['connections']}  ${post_backup_profile_details['connectionSettings']['connections']}
    Should be Equal    ${pre_backup_profile_details['state']}  ${post_backup_profile_details['state']}
    Should be Equal    ${pre_backup_profile_details['status']}  ${post_backup_profile_details['status']}
    Should be Equal    ${pre_backup_profile_details['serialNumber']}  ${post_backup_profile_details['serialNumber']}
    Should be Equal    ${pre_backup_profile_details['enclosureBay']}  ${post_backup_profile_details['enclosureBay']}
    Delete Server Profile   ${bay_list}    
    [Teardown]    Run Keyword If Test Failed    Run Keyword   Delete Server Profile  ${bay_list}  
