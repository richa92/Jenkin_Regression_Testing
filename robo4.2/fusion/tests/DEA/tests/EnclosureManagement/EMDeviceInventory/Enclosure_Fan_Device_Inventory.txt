*** Settings ***
Documentation    Test suite to validate Inventory of Enclosure hardware - FAN

...    = GENERIC USAGE =
...    | pybot | -v ENC_SERIAL_NO:[enclosure serial #] | -v APPLIANCE_IP:<ipv4> | -v CIM_Linux_IP:<ipv4> |-v GIT_REPO_ROOT: | Enclosure_Fan_Device_Inventory.txt |
...    = Variables =
...    | GIT_REPO_ROOT | Required: Repo root path if NOT defined in environment variable this is mgmtfw root location
...    | ENC_SERIAL_NO | Optional: If omitted, will use the 1st enclosure detected in OV
...    | APPLIANCE_IP | Required: OneView IPv4 address

Library            RoboGalaxyLibrary
Library            MgmtFWLibrary
Library            FusionLibrary
Library            Collections
Library            Selenium2Library

Variables          ${GIT_REPO_ROOT}/fusion/tests/DEA/variables/dea_variables.py
Variables          ${GIT_REPO_ROOT}/fusion/tests/DEA/variables/data_variables.py
Variables          ${GIT_REPO_ROOT}/mgmtfw/tests/thunderbird/variables/tBird_variables.py
Resource           ${GIT_REPO_ROOT}${RESOURCE_ROOT}/resource_all.txt
Resource           ${GIT_REPO_ROOT}${EM_RESOURCE_ROOT}/thunderbird_all.txt

Suite Setup       Run Keywords    Login to Fusion via REST    AND    Login to Fusion via SSH    AND    Login to EM And Create Session
Suite Teardown    Run Keywords    Logout of Fusion Via REST    AND    Logout of Fusion Via SSH

***Test Cases***

TC 01: Fan Device Inventory: Validate Fan Inventory Details Present Or Absent In The List Before and After Fan Re-seated
    [Documentation]    This test verifies if Fan inventory details are present or absent in the list before and after fan re-seated
    [Tags]    PE    API    Automated    Fan    EM
    #Pass the device name <FAN> as argument
    ${present_fan_list}    ${absent_fan_list}=    Get Device Bay Present And Absent List    ${FANDevice_EM}
    ${initial_len}=    Get Length    ${present_fan_list}
    : FOR    ${fan_bay}    IN    @{present_fan_list}
    \    #Retrieve the Fan health status from Fusion
    \    ${health_before_efuse}=    Get Fusion Device Health Status    ${FANDevice_EM}    ${fan_bay}
    \    #Efuse-On each fan bay
    \    Efuse Fan Device   EFuseOn    ${fan_bay}
    \    #Wait for the Fan absence state
    \    Wait For Device Status    ${FANDevice_EM}    ${fan_bay}    Absent
    \    #Retrieve the device present and absent list after efuse-on
    \    ${present_fan_list_after_efuse}    ${empty_fan_list_after_efuse}=    Get Device Bay Present And Absent List    ${FANDevice_EM}
    \    List Should Not Contain Value    ${present_fan_list_after_efuse}    ${fan_bay}
    \    List Should Contain Value    ${empty_fan_list_after_efuse}    ${fan_bay}
    \    #Efuse-Off each fan bay
    \    Efuse Fan Device    EFuseOff    ${fan_bay}
    \    #Wait for the Fan to return to OK status
    \    Wait For Device Status    ${FANDevice_EM}    ${fan_bay}    OK
    \    #Compare the device present and absent list after efuse-off
    \    ${present_fan_list_after_efuseoff}    ${empty_fan_list_after_efuseoff}=    Get Device Bay Present And Absent List    ${FANDevice_EM}
    \    List Should Contain Value    ${present_fan_list_after_efuseoff}    ${fan_bay}
    \    List Should Not Contain Value    ${empty_fan_list_after_efuseoff}    ${fan_bay}
    \    #Retrieve the Fan health status after efuse and compare
    \    ${health_after_efuse}=    Get Fusion Device Health Status    ${FANDevice_EM}    ${fan_bay}
    \    Should Be Equal    ${health_before_efuse}    ${health_after_efuse}
    [Teardown]    Run Keyword If Test Failed    Run Keywords    Efuse Fan Device    EFuseOff    ${fan_bay}    AND    Wait For Device Status    ${FANDevice_EM}    ${fan_bay}    OK