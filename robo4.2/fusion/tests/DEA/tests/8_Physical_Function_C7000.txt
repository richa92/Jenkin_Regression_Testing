*** Settings ***

Documentation     8_Physical_Function_C7000.txt - Test 8 Physical Functions of an adapter
            ...   =  USAGE =
            ...   | pybot | -L Trace | -v APPLIANCE_IP:<APP_IPv4-IPv6> | OA_IP:<OA_IPv4-IPv6>  -v Adapter_Test:<Adapter_Name> | -v Enclosures:<Encl_Name> | CNA_Ethernet_Parity_C7000.txt
            ...   =  Parameters  =
            ...   Fill in command required field for APPLIANCE_IP, Adapter_Test, and Enclosures.
Variables         ../variables/dea_variables.py
Variables         ../variables/data_variables.py
Resource          ../resource/resource_all.txt
Resource          ../resource/Altair_Resource.txt

Library           RoboGalaxyLibrary
Library           FusionLibrary
Library           Selenium2Library
Library           Collections
Library           OperatingSystem
Library           AltairLibrary

Suite Setup       Run Keywords    Login to Fusion Via REST   AND    Clean UP C7000 Environment    AND    Setup C7000 8PF Appliance

*** Test Cases ***

TC 117: Create Server Profile with 16 Physical Functions for C7000 in Legacy mode and PXE boot in Port 1a
    [Documentation]    Create Server Profile with 16 Physical Functions for C7000 in Legacy mode and PXE boot in Port 1a with ${Adapter_Test}
    [Tags]    DEA    API    Automated    CNA    PXE    GEN9   TEST
    ${Adapter_Model} =  Get Adapter Name from List    ${Adapter_Test}  ${C7000_Adapter_Models}
    ${Gen9_list} =  Get Server Type List    Gen9
    Should Not Be Empty    ${Gen9_list}    msg=No Gen9 server present in the enclosure
    ${result_list} =  Get Adapter Bay List    ${Gen9_list}  ${Adapter_Model}
    Should Not Be Empty    ${result_list}    msg=No Gen9 server with ${Adapter_Test} adapter present in the enclosure
    Power Off ALL Servers
    Remove All Server Profiles
    :FOR    ${x}    IN    @{result_list}
    \    ${server_info}=    Get Server Info    ${x}
    \    ${mezz_list}=    Get Test Tag Mezz Bay List    ${server_info}
    \    ${server_profile_body}=    Build Ethernet Primary Boot Legacy Mode Server Profile body  ${x}  ${server_profiles_eth[0]}  ${enet_connection_primary_8pf}
    \    Create Server Profile    ${server_profile_body}
    \    ${server_state}=    Get Server State    ${x}
    \    Should Be Equal    ${server_state}    ProfileApplied
    \    ${server_status}=    Get Server Status    ${x}
    \    Should Be Equal    ${server_status}    OK
    \    ${profile_status}=    Get Server Profile Status    ${x}
    \    Should Be Equal    ${server_status}    OK
