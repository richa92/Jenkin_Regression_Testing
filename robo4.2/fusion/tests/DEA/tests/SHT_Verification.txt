*** Settings ***
Documentation     HBA Server Hardware Type Test Suite
...    = Usage =
...    | pybot | -L DEBUG | GIT_REPO_ROOT:<path> | APPLIANCE_IP:<fusion_ipv4> | SHT_Verification.txt |
...    = Variables =
...    | GIT_REPO_ROOT | Required; Repo root path if NOT defined in environment variable|
...    | APPLIANCE IP     | Required; OneView IP address under test |

Variables         ${GIT_REPO_ROOT}/fusion/tests/DEA/variables/dea_variables.py
Variables         ${GIT_REPO_ROOT}/fusion/tests/DEA/variables/data_variables.py
Resource          ${GIT_REPO_ROOT}${RESOURCE_ROOT}/resource_all.txt
Resource          ${GIT_REPO_ROOT}${EM_RESOURCE_ROOT}/thunderbird_all.txt

Library           RoboGalaxyLibrary
Library           FusionLibrary
Library           Collections

Suite Setup       Run Keywords    Login to Fusion Via REST
Suite Teardown    Logout of Fusion Via REST

*** Test Cases ***
TC 01: Verify the SHT information displayed in OneView for HBAs
    [Documentation]    For the HBAs, verify that the SHT information displayed in OneView matches the defined specs
    [Tags]    PE    API    Automated    HBA
    ${bay_list}=    Get HBA Mezz Server Bay List
    Lists Should Be Equal    ${Filled_Server_Bays}    ${bay_list}  msg=server_bays:${bay_list} not found in known filled server bays:${Filled_Server_Bays}
    ${bay_list_length}=    Get Length    ${bay_list}
    Run Keyword If    ${bay_list_length}==0    Log    No HBA mezz cards found in the enclosure    WARN
    ${all_mezz}=    Build Server Adapter Mapping    ${bay_list}
    :FOR    ${mezz_dict}    IN    @{all_mezz}
    \    ${key}=    Get Dictionary Keys    ${mezz_dict}
    \    ${server_bay}=    Set Variable    @{key}[0]
    \    ${val}=    Get Dictionary Values    ${mezz_dict}
    \    ${mezz}=    Set Variable    @{val}[0]
    \    List Should Contain Value    ${Filled_Server_Mezz_Slots}    ${mezz_dict}
    ...  msg=${mezz_dict} not found in known server hardware:${Filled_Server_Mezz_Slots}
    \    Log to Console   Verifying HBA SHT information in bay ${server_bay} in mezz slot ${mezz}
    \    ${server_info}=    Get Server Info    ${server_bay}
    \    ${sht_info}=    Get Server HW Type Info    ${server_info}
    \    ${mezz_sht_info}=    Get SHT Adapter Info   ${sht_info}    ${mezz}
    \    ${port_count}=    Get Length    ${mezz_sht_info['ports']}
    \    ${port1}=    Get SHT Adapter Port Info    ${mezz_sht_info}    1
    \    ${port2}=    Get SHT Adapter Port Info    ${mezz_sht_info}    2
    \    ${virtualPorts_port1}=    Get Length    ${port1['virtualPorts']}
    \    ${virtualPorts_port2}=    Get Length    ${port2['virtualPorts']}
    \    ${virtual_ports}=    Evaluate    ${virtualPorts_port1}+${virtualPorts_port2}
    \    ${device_type}=    Run Keyword If    '${port1['type']}'=='${port2['type']}'    Set Variable    ${port1['type']}
    ...  ELSE    Set Variable    None
    \    ${max_port_speed}=    Run Keyword If    ${port1['maxSpeedMbps']} == ${port2['maxSpeedMbps']}    Set Variable    ${port1['maxSpeedMbps']}
    ...  ELSE    Set Variable    0
    \    ${hba_model_names}=    Get Dictionary Values    ${Tbird_HBA_models}
    \    List Should Contain Value    ${hba_model_names}    ${mezz_sht_info['model']}
    \    ${control_sht_info}=    Set Variable    ${Tbird_Adapter_SHT['${mezz_sht_info['model']}']}
    \    Should Be Equal    ${control_sht_info['physicalPorts']}    ${port_count}
    \    Should Be Equal    ${control_sht_info['availableVF']}    ${mezz_sht_info['maxVFsSupported']}
    \    Should Be Equal    ${control_sht_info['vfIncrement']}    ${mezz_sht_info['minVFsIncrement']}
    \    List Should Contain Sub List    ${mezz_sht_info['capabilities']}    ${control_sht_info['capabilities']}
    \    Should Be Equal    ${control_sht_info['virtualPorts']}    ${virtual_ports}
    \    Should Be Equal    ${control_sht_info['deviceType']}    ${device_type}
    \    Should Be Equal    ${control_sht_info['maxPortSpeed']}    ${max_port_speed}
