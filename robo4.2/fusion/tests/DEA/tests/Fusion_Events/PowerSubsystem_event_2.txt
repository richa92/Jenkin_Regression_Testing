*** Settings ***
Documentation    Test suite to validate Power Subsytem related events on OneView and FLM
...               It covers testing of:
...               PowerSubsystemAllocationCollectionChanged
...               PowewrSusbsystemAllocationDeleted
...               PowewrSusbsystemAllocationDPatched
...               PowewrSusbsystemAllocationPosted
...    = GENERIC USAGE =
...    | pybot | -v ENC_SERIAL_NO:[enclosure serial #] | -v APPLIANCE_IP:<ipv4> | -v CIM_Linux_IP:<ipv4> |-v GIT_REPO_ROOT: | PowerSubsystem_event_2.txt |
...    = Variables =
...    | GIT_REPO_ROOT |      Required: Repo root path if NOT defined in environment variable this is mgmtfw root location|
...    | ENC_SERIAL_NO |      Optional: If omitted, will use the 1st enclosure detected in OV |
...    | APPLIANCE_IP |       Required: OneView IPv4 address |
...    | CIM_Linux_IP |       Required:CI Manager ipv4 under test |

Variables         ${GIT_REPO_ROOT}/fusion/tests/DEA/variables/dea_variables.py
Variables         ${GIT_REPO_ROOT}/mgmtfw/tests/thunderbird/variables/tBird_variables.py
Resource          ${GIT_REPO_ROOT}${RESOURCE_ROOT}/resource_all.txt
Resource          ${GIT_REPO_ROOT}${EM_RESOURCE_ROOT}/thunderbird_all.txt
Library           RoboGalaxyLibrary
Library           MgmtFWLibrary
Library           json
Suite Setup       Configure Events Test Environment
Suite Teardown    Run Keywords  Logout of EM RIS   AND    Logout of Fusion Via REST


*** Test Case ***

TC 01: Verify Events For PowerSubsystemOverLimit And PowerSubsystemOverLimitCleared
    [Documentation]    This test will validate the events for PowerSubsystemOverLimit And PowerSubsystemOverLimitCleared
    [Tags]    PowerSubsystem    FLM2.00    Automated
    ${last_fusion_event_id}=    get last fusion event ID
    ${pwrAllocatedWatts}=    Get PowerAllocatedWatts
    ${pwr_limit_less_than_alloc_watts}=    Evaluate    ${pwrAllocatedWatts} - 200
    Set And Verify Input Power Limit State Is On
    ${set_enc_power_limit_less_than_alloc_watts}=    Set Input Power Limit Watts    ${pwr_limit_less_than_alloc_watts}
    Should Be Equal As Integers    ${set_enc_power_limit_less_than_alloc_watts}    200
    ${input_pwr_limit}=    Get Input Power Limit Watts
    Should Be Equal    ${input_pwr_limit}    ${pwr_limit_less_than_alloc_watts}
    ${encl_status}=    Get Enclosure Health
    Should Be Equal    ${encl_status}    ${HEALTH_WARNING}
    ${pwr_efficiency}=    Get Power Efficiency Percentage
    ${diags_50}    ${diags_auditlog_file_path}=    Get Diags Audit Log 50 Recent Entries
    Set Test Variable    ${EM_Event_Logger}    ${diags_auditlog_file_path}
    Verify Audit Log Alert Event    ${EL_Power_Subsystem_Overlimit}    PowerMetrics    None    250
    Verify Fusion Event Sent By EM    ${EL_Power_Subsystem_Overlimit}    ${last_fusion_event_id}    ${Enclosure_category}
    ${pwr_limit_greater_than_alloc_watts}=    Evaluate    100 * ${pwrAllocatedWatts} / ${pwr_efficiency} + 10
    ${set_enc_power_limit_greater_than_alloc_watts}=    Set Input Power Limit Watts    ${pwr_limit_greater_than_alloc_watts}
    Should Be Equal As Integers    ${set_enc_power_limit_greater_than_alloc_watts}    200
    ${output_pwr_limit}=    Get Output Power Limit Watts
    Should Be True    ${output_pwr_limit} >= ${pwrAllocatedWatts}
    Wait for Enclosure Health OK
    ${diags_50}    ${diags_auditlog_file_path}=    Get Diags Audit Log 50 Recent Entries
    Set Test Variable    ${EM_Event_Logger}    ${diags_auditlog_file_path}
    Verify Audit Log Alert Event    ${EL_Power_Subsystem_Overlimit_Cleared}    PowerMetrics    None    250
    Verify Fusion Event Sent By EM    ${EL_Power_Subsystem_Overlimit_Cleared}    ${last_fusion_event_id}    ${Enclosure_category}
    Set Input Power Limit Off
    [Teardown]    Run Keyword If Test Failed    Set Input Power Limit Off

TC 02: Validate service event by triggering the Power subsystem overload Fault
    [Documentation]   Trigger the Powersubsystemoverload Fault alert
    [Tags]    PowerSubsystem    FLM2.0    Automated    Disabled
    ${last_fusion_event_id}=    Get Last Fusion Event Id
    Set the Fake Backend ERS    true
    # Generate  the power supply fru fault
    ${present_list}    ${absent_list}=    Get Device Bay Present And Absent List    ${PSDevice_EM}
    ${ps_bay}=   Get Random Item From List    ${present_list}
    Flash All Power Supply FRU    ${GIT_REPO_ROOT}${TESTDATA_ROOT}\\${Customized_FRU_Path}\\${Cust_PS_Fru_Path}
    Verify Set Redundant Power Mode
    Fail PS Until PowerSuppliesGood is less than PowerSuppliesNeededWithoutBonus
    ${diags_50}    ${diags_auditlog_file_path}=    Get Diags Audit Log 50 Recent Entries
    Set Test Variable    ${EM_Event_Logger}    ${diags_auditlog_file_path}
    Verify Audit Log Alert Event    ${Power_Subsystem_Overload}    PowerMetrics    ${ps_bay}    240
    Verify Fusion Event Sent By EM    ${Power_Subsystem_Overload}    ${last_fusion_event_id}
    # Clear the power supply fru  fault
    Ensure All PS Are In Good State
    Set the Fake Backend ERS    true
    ${diags_50}    ${diags_auditlog_file_path}=    Get Diags Audit Log 50 Recent Entries
    Set Test Variable    ${EM_Event_Logger}    ${diags_auditlog_file_path}
    Verify Audit Log Alert Event    ${Power_Subsystem_Overload_Cleared}    PowerMetrics    ${ps_bay}    240
    Verify Fusion Event Sent By EM    ${Power_Subsystem_Overload_Cleared}    ${last_fusion_event_id}
    Flash All Power Supply FRU    ${GIT_REPO_ROOT}${TESTDATA_ROOT}\\Fru_Files\\${CAT}\\Good_Fru\\${Good_PS_Fru_Path}
    [Teardown]   Run Keyword If Test Failed    Run Keywords    Ensure All PS Are In Good State    AND    Flash All Power Supply FRU    ${GIT_REPO_ROOT}${TESTDATA_ROOT}\\Fru_Files\\${CAT}\\Good_Fru\\${Good_PS_Fru_Path}
