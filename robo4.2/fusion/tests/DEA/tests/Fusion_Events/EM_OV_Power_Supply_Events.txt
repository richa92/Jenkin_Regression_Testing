*** Settings ***
Documentation     Validate EM Power Supply events on OneView
...    PowerSupplyDiscoveryComplete
...    PowerSupplyOk
...    PowerSubsystemChanged
...    PowerSupplyWarning
...    PowerSupplyCommFault
...    PowerSupplyCommFaultCleared
...
...    = GENERIC USAGE =
...    | pybot | -v GIT_REPO_ROOT:<repo root path> | -v APPLIANCE_IP:<ipv4> |EM_OV_Power_Supply_Events.txt |
...    = Variables =
...    | GIT_REPO_ROOT | Required: Repo root path if NOT defined in environment variable|
...    | APPLIANCE_IP | Required: OneView IPv4 address |

Suite Setup       Configure Events Test Environment
Suite Teardown    Logout of EM RIS
Test Setup        Build RIS Object Model at Root Level
Library           json
Library           robot.api.logger
Variables         ${GIT_REPO_ROOT}/fusion/tests/DEA/variables/dea_variables.py
Variables         ${GIT_REPO_ROOT}/mgmtfw/tests/thunderbird/variables/tBird_variables.py
Resource          ${GIT_REPO_ROOT}${RESOURCE_ROOT}/resource_all.txt
Resource          ${GIT_REPO_ROOT}/mgmtfw/tests/thunderbird/resources/thunderbird_all.txt
Library           RoboGalaxyLibrary
Library           MgmtFWLibrary
Library           FusionLibrary

*** Test Case ***

TC:01 Validate Power Supply Comm Fault Clear Event
    [Documentation]    Validate EM/OneView Power Supply Fault Cleared Event
    ...    Events covered:
    ...    PowerSupplyCommFault
    ...    PowerSupplyCommFaultCleared
    [Tags]    PS    FLM2.00    Automated
    ${operational_ps}=    Get List of Devices with Health OK    ${HPEMPowerSupply_Type}    ${PS_Device_Type}
    ${ps_count}=    Get Length    ${operational_ps}
    ${needed_ps}=    Get Needed Power Supplies In The Enclosure
    ${ps_capacity_initial}=    Get PowerSupplyCapacity
    Run Keyword If    ${ps_count}<=${needed_ps}    FAIL    There are not enough  PS in the enclosure to validate this test
    : FOR    ${ps}    IN    @{operational_ps}
    \    ${last_fusion_event_id}=    get last fusion event ID
    \    Log To Console    Failing power supply in bay:${ps}
    \    ${PowerSupply_Status}=    Set EM RIS CANmic Faults    ${PowerSupply_Device}    ${ps}    true
    \    Should Be Equal As Strings    ${PowerSupply_Status}    <Response [200]>
    \    Sleep    40
    \    ${failed_ps}=    Get List of Devices with Health Warning    ${HPEMPowerSupply_Type}    ${PS_Device_Type}
    \    List Should Contain Value    ${failed_ps}    ${ps}
    \    ${diags_50}    ${diags_auditlog_file_path}=    Get Diags Audit Log 50 Recent Entries
    \    Set Test Variable    ${EM_Event_Logger}    ${diags_auditlog_file_path}
    \    Verify Audit Log Alert Event    ${EL_PS_CommFault}    ${PowerSupply_Device}    ${ps}    900
    \    Verify Fusion Event Sent By EM    ${EL_PS_CommFault}    ${last_fusion_event_id}    ${Enclosure_category}
    \    ${PowerSupply_Status}=    Set EM RIS CANmic Faults    ${PowerSupply_Device}    ${ps}    false
    \    Should Be Equal As Strings    ${PowerSupply_Status}    <Response [200]>
    \    Sleep    10
    \    ${ok_ps_list}=    Get List of Devices with Health OK    ${HPEMPowerSupply_Type}    ${PS_Device_Type}
    \    List Should Contain Value    ${ok_ps_list}    ${ps}
    \    ${diags_50}    ${diags_auditlog_file_path}=    Get Diags Audit Log 50 Recent Entries
    \    Set Test Variable    ${EM_Event_Logger}    ${diags_auditlog_file_path}
    \    Verify Audit Log Alert Event    ${EL_PS_CommFault_Cleared}    ${PowerSupply_Device}    ${ps}    350
    \    Verify Fusion Event Sent By EM     ${EL_PS_CommFault_Cleared}    ${last_fusion_event_id}    ${Enclosure_category}
    [Teardown]    Run Keyword If Test Failed    Run Keywords    Set EM RIS CANmic Faults    ${PowerSupply_Device}    ${ps}    false    AND    Sleep    10

TC 02: Validate PowerSupply Over Temperature Fault
    [Documentation]    This test will verify event PowerSupplyOverTempFault
    [Tags]    PS    FLM2.00    Automated
    ${last_fusion_event_id}=    get last fusion event ID
    ${operational_ps}=    Get List of Devices with Health OK    ${HPEMPowerSupply_Type}    ${PS_Device_Type}
    ${ps_count}=    Get Length    ${operational_ps}
    ${needed_ps}=    Get Needed Power Supplies In The Enclosure
    ${ps_capacity_initial}=    Get PowerSupplyCapacity
    Run Keyword If    ${ps_count}<=${needed_ps}    FAIL    There are not enough PS in the enclosure to validate this test
    : FOR    ${ps}    IN    @{operational_ps}
    \    Log To Console    Failing power supply in bay:${ps}
    \    Inject Over Temperature Power Supply Fault    ${ps}
    \    Sleep    10
    \    ${failed_ps}=    Get List of Devices with Health Warning    ${HPEMPowerSupply_Type}    ${PS_Device_Type}
    \    List Should Contain Value    ${failed_ps}    ${ps}
    \    ${diags_50}    ${diags_auditlog_file_path}=    Get Diags Audit Log 50 Recent Entries
    \    Set Test Variable    ${EM_Event_Logger}    ${diags_auditlog_file_path}
    \    Verify Audit Log Alert Event    ${EL_PS_Overtemp_Fault}    ${PowerSupply_Device}    ${ps}    900
    \    Verify Fusion Event Sent By EM    ${EL_PS_Overtemp_Fault}    ${last_fusion_event_id}    ${Enclosure_category}
    \    ${power_supply_fault_status}=    Get PowerSupply Fault Status    ${ps}    PS_OVERTEMP
    \    Should Be Equal    ${power_supply_fault_status}    ${STATUS_WARNING}
    \    Clear Over Temperature Power Supply Fault    ${ps}
    \    Sleep    10
    \    ${ok_ps_list}=    Get List of Devices with Health OK    ${HPEMPowerSupply_Type}    ${PS_Device_Type}
    \    List Should Contain Value    ${ok_ps_list}    ${ps}
    \    ${power_supply_fault_status}=    Get PowerSupply Fault Status    ${ps}    PS_OVERTEMP
    \    Should Be Equal    ${power_supply_fault_status}    ${STATUS_OK}
    [Teardown]    Run Keyword If Test Failed    Run Keywords    RIS EM Efuse PowerSupply    ${ps}    8    AND    Sleep     10

TC 03: Validate PowerSupply Reinsert Fault
    [Documentation]    This test will verify event PowerSupplyReinsertFault
    [Tags]    PS    FLM2.00    Automated
    ${last_fusion_event_id}=    get last fusion event ID
    ${operational_ps}=    Get List of Devices with Health OK    ${HPEMPowerSupply_Type}    ${PS_Device_Type}
    ${ps_count}=    Get Length    ${operational_ps}
    ${needed_ps}=    Get Needed Power Supplies In The Enclosure
    ${ps_capacity_initial}=    Get PowerSupplyCapacity
    Run Keyword If    ${ps_count}<=${needed_ps}    FAIL    There are not enough PS in the enclosure to validate this test
    : FOR    ${ps}    IN    @{operational_ps}
    \    Log To Console    Failing power supply in bay:${ps}
    \    Inject Over Current Power Supply Fault    ${ps}
    \    Sleep    10
    \    ${failed_ps}=    Get List of Devices with Health Warning    ${HPEMPowerSupply_Type}    ${PS_Device_Type}
    \    List Should Contain Value    ${failed_ps}    ${ps}
    \    ${diags_50}    ${diags_auditlog_file_path}=    Get Diags Audit Log 50 Recent Entries
    \    Set Test Variable    ${EM_Event_Logger}    ${diags_auditlog_file_path}
    \    Verify Audit Log Alert Event    ${EL_PS_Reinsert_Fault}    ${PowerSupply_Device}    ${ps}    900
    \    Verify Fusion Event Sent By EM    ${EL_PS_Reinsert_Fault}    ${last_fusion_event_id}    ${Enclosure_category}
    \    ${power_supply_fault_status}=    Get PowerSupply Fault Status    ${ps}    PS_REINSERT
    \    Should Be Equal    ${power_supply_fault_status}    ${STATUS_WARNING}
    \    Clear Over Current Power Supply Fault    ${ps}
    \    Sleep    10
    \    ${ok_ps_list}=    Get List of Devices with Health OK    ${HPEMPowerSupply_Type}    ${PS_Device_Type}
    \    List Should Contain Value    ${ok_ps_list}    ${ps}
    \    ${power_supply_fault_status}=    Get PowerSupply Fault Status    ${ps}    PS_REINSERT
    \    Should Be Equal    ${power_supply_fault_status}    ${STATUS_OK}
    [Teardown]    Run Keyword If Test Failed    Run Keywords    RIS EM Efuse PowerSupply    ${ps}    8    AND    Sleep     10

TC 04: Validate Power Supply Replace Fault
    [Documentation]    This test will verify event PowerSupplyReplaceFault
    [Tags]    PS    FLM2.00    Automated
    ${last_fusion_event_id}=    get last fusion event ID
    ${operational_ps}=    Get List of Devices with Health OK    ${HPEMPowerSupply_Type}    ${PS_Device_Type}
    ${ps_count}=    Get Length    ${operational_ps}
    ${needed_ps}=    Get Needed Power Supplies In The Enclosure
    ${ps_capacity_initial}=    Get PowerSupplyCapacity
    Run Keyword If    ${ps_count}<=${needed_ps}    FAIL    There are not enough PS in the enclosure to validate this test
    : FOR    ${ps}    IN    @{operational_ps}
    \    Log To Console    Failing power supply in bay:${ps}
    \    Inject Unknown Power Supply Fault    ${ps}
    \    Sleep    10
    \    ${failed_ps}=    Get List of Devices with Health Warning    ${HPEMPowerSupply_Type}    ${PS_Device_Type}
    \    List Should Contain Value    ${failed_ps}    ${ps}
    \    ${diags_50}    ${diags_auditlog_file_path}=    Get Diags Audit Log 50 Recent Entries
    \    Set Test Variable    ${EM_Event_Logger}    ${diags_auditlog_file_path}
    \    Verify Audit Log Alert Event    ${EL_PS_Replace_Fault}    ${PowerSupply_Device}    ${ps}    900
    \    Verify Fusion Event Sent By EM    ${EL_PS_Replace_Fault}    ${last_fusion_event_id}    ${Enclosure_category}
    \    ${power_supply_fault_status}=    Get PowerSupply Fault Status    ${ps}    PS_REPLACE
    \    Should Be Equal    ${power_supply_fault_status}    ${STATUS_WARNING}
    \    Clear Unknown Power Supply Fault    ${ps}
    \    Sleep    10
    \    ${ok_ps_list}=    Get List of Devices with Health OK    ${HPEMPowerSupply_Type}    ${PS_Device_Type}
    \    List Should Contain Value    ${ok_ps_list}    ${ps}
    \    ${power_supply_fault_status}=    Get PowerSupply Fault Status    ${ps}    PS_REPLACE
    \    Should Be Equal    ${power_supply_fault_status}    ${STATUS_OK}
    [Teardown]    Run Keyword If Test Failed    Run Keywords    RIS EM Efuse PowerSupply    ${ps}    8    AND    Sleep     10

