*** Settings ***
Documentation    Test suite to validate Fan Fru related events on OneView and FLM
...    = GENERIC USAGE =
...    | pybot | -v ENC_SERIAL_NO:[enclosure serial #] | -v APPLIANCE_IP:<ipv4> | -v CIM_Linux_IP:<ipv4> |-v GIT_REPO_ROOT: | Fan_Fru_event_faults.txt |
...    = Variables =
...    | GIT_REPO_ROOT |      Required: Repo root path if NOT defined in environment variable this is mgmtfw root location|
...    | ENC_SERIAL_NO |      Optional: If omitted, will use the 1st enclosure detected in OV |
...    | APPLIANCE_IP |       Required: OneView IPv4 address |
...    | CIM_Linux_IP |       Required:CI Manager ipv4 under test |

Variables         ${GIT_REPO_ROOT}/fusion/tests/DEA/variables/dea_variables.py
Variables         ${GIT_REPO_ROOT}/mgmtfw/tests/thunderbird/variables/tBird_variables.py
Resource          ${GIT_REPO_ROOT}${RESOURCE_ROOT}/resource_all.txt
Resource          ${GIT_REPO_ROOT}${EM_RESOURCE_ROOT}/thunderbird_all.txt
Library           RoboGalaxyLibrary
Library           MgmtFWLibrary
Library           json
Suite Setup       Configure Events Test Environment
Suite Teardown    Run Keywords  Logout of EM RIS   AND    Logout of Fusion Via REST

*** Test Case ***
TC 1: Verify FanFru ManufacturedForInvalidFault
    [Documentation]    This test will verify the FAN Fru ManufacturedForInvalidFault events
    ...                FanFruManufacturedForInvalidFault
    [Tags]    Fan    Automated    FLM1.01    FRU
    ${AvailableFan}=   Get List of Occupied Fan Bays
    :FOR    ${bay}   IN   @{AvailableFan}
    \    Log    message=\nFlashing incompatable FRU to \ Fan in bay ${bay} and verify ManufacturedForInvalidFault event in diags audit log    console=True
    \    ${last_fusion_event_id}=    get last fusion event ID
    \    Flash Fan Fru    ${bay}    ${GIT_REPO_ROOT}${TESTDATA_ROOT}\\${Customized_FRU_Path}\\${fanfru_null}
    \    RIS EM Efuse On Fan    ${bay}
    \    ${status}=    Wait for Device Degraded    ${Fan_Device}    ${bay}
    \    Sleep    10
    \    RIS EM Efuse Off Fan Without HealthCheck    ${bay}
    \    Sleep    60
    \    ${Fan_Health}=    Get Fan Health    ${bay}
    \    Should Be Equal As Strings    ${Fan_Health}    ${HEALTH_CRITICAL}
    \    #Verify EM events in the audit log
    \    ${diags_50}    ${diags_auditlog_file_path}=    Get Diags Audit Log 50 Recent Entries
    \    Set Test Variable    ${EM_Event_Logger}    ${diags_auditlog_file_path}
    \    Verify Audit Log Alert Event    ${EL_Fan_FruInvalid}    ${Fan_Device}    ${bay}    250
    \    #Verify EM events in Fusion log
    \    Verify Fusion Event Sent By EM    ${EL_Fan_FruInvalid}    ${last_fusion_event_id}    ${Enclosure_category}
    \    Flash Fan Fru    ${bay}    ${GIT_REPO_ROOT}${TESTDATA_ROOT}\\Fru_Files\\${CAT}\\Good_Fru\\FAN\\${bay}\\fru.bin
    \    RIS EM Efuse On Fan    ${bay}
    \    Sleep    10
    \    RIS EM Efuse Off Fan    ${bay}
    \    ${Fan_Health}=    Get Fan Health    ${bay}
    \    Should Be Equal As Strings    ${Fan_Health}    ${HEALTH_OK}
    [Teardown]    Run Keyword If Test Failed    Run Keywords    Flash Fan Fru    ${bay}    ${GIT_REPO_ROOT}${TESTDATA_ROOT}\\Fru_Files\\${CAT}\\Good_Fru\\FAN\\${bay}\\fru.bin
    ...           AND    RIS EM Efuse On Fan    ${bay}    AND   Sleep    10   AND   RIS EM Efuse Off Fan    ${bay}

TC 2: Verify FanFru ManufacturedForMismatchFault
    [Documentation]     This test will verify the ManufacturedForMismatchFault events
    ...                 ManufacturedForMismatchFault
    [Tags]    Fan    Automated    FLM1.01    FRU
    ${AvailableFan}=   Get List of Occupied Fan Bays
    :FOR    ${bay}   IN   @{AvailableFan}
    \    Log    message=\nFlashing incompatable FRU to \ Fan in bay ${bay} and verify ManufacturedForMismatchFault event in diags audit log    console=True
    \    ${last_fusion_event_id}=    get last fusion event ID
    \    Flash Fan Fru    ${bay}    ${GIT_REPO_ROOT}${TESTDATA_ROOT}\\${Customized_FRU_Path}\\${fanfru_nec}
    \    RIS EM Efuse On Fan    ${bay}
    \    ${status}=    Wait for Device Degraded    ${Fan_Device}    ${bay}
    \    Sleep    10
    \    RIS EM Efuse Off Fan Without HealthCheck    ${bay}
    \    Sleep    60
    \    ${Fan_Health}=    Get Fan Health    ${bay}
    \    Should Be Equal As Strings    ${Fan_Health}    ${HEALTH_CRITICAL}
    \    #Verify EM events in the audit log
    \    ${diags_50}    ${diags_auditlog_file_path}=    Get Diags Audit Log 50 Recent Entries
    \    Set Test Variable    ${EM_Event_Logger}    ${diags_auditlog_file_path}
    \    Verify Audit Log Alert Event    ${EL_Fan_FruMismatch}    ${Fan_Device}    ${bay}    250
    \    #Verify EM events in Fusion log
    \    Verify Fusion Event Sent By EM    ${EL_Fan_FruMismatch}    ${last_fusion_event_id}    ${Enclosure_category}
    \    Flash Fan Fru    ${bay}    ${GIT_REPO_ROOT}${TESTDATA_ROOT}\\Fru_Files\\${CAT}\\Good_Fru\\FAN\\${bay}\\fru.bin
    \    RIS EM Efuse On Fan    ${bay}
    \    Sleep    10
    \    RIS EM Efuse Off Fan    ${bay}
    \    ${Fan_Health}=    Get Fan Health    ${bay}
    \    Should Be Equal As Strings    ${Fan_Health}    ${HEALTH_OK}
    [Teardown]    Run Keyword If Test Failed    Run Keywords    Flash Fan Fru    ${bay}    ${GIT_REPO_ROOT}${TESTDATA_ROOT}\\Fru_Files\\${CAT}\\Good_Fru\\FAN\\${bay}\\fru.bin
    ...           AND    RIS EM Efuse On Fan    ${bay}    AND   Sleep    10   AND   RIS EM Efuse Off Fan    ${bay}

TC 3: Verify FanFruContentFault
    [Documentation]    This test will verify the FanFruContentFault events
    ...                FanFruContentFault
    [Tags]    Fan    Automated    FLM1.01     FRU
    ${AvailableFan}=   Get List of Occupied Fan Bays
    :FOR    ${bay}   IN   @{AvailableFan}
	\    Log    message=\nFlashing incompatable FRU to \ Fan in bay ${bay} and verify FanFruContentFault event in diags audit log    console=True
    \    ${last_fusion_event_id}=    get last fusion event ID
    \    Flash Fan Fru    ${bay}    ${GIT_REPO_ROOT}${TESTDATA_ROOT}\\${Customized_FRU_Path}\\${fanfru_nosn}
    \    RIS EM Efuse On Fan    ${bay}
    \    ${status}=    Wait for Device Degraded    ${Fan_Device}    ${bay}
    \    Sleep    10
    \    RIS EM Efuse Off Fan Without HealthCheck    ${bay}
    \    Sleep    60
    \    ${Fan_Health}=    Get Fan Health    ${bay}
    \    Should Be Equal As Strings    ${Fan_Health}    ${HEALTH_CRITICAL}
    \    #Verify EM events in the audit log
    \    ${diags_50}    ${diags_auditlog_file_path}=    Get Diags Audit Log 50 Recent Entries
    \    Set Test Variable    ${EM_Event_Logger}    ${diags_auditlog_file_path}
    \    Verify Audit Log Alert Event    ${EL_Fan_FruContentFault}    ${Fan_Device}    ${bay}    250
    \    #Verify EM events in Fusion log
    \    Verify Fusion Event Sent By EM    ${EL_Fan_FruContentFault}    ${last_fusion_event_id}    ${Enclosure_category}
    \    Flash Fan Fru    ${bay}    ${GIT_REPO_ROOT}${TESTDATA_ROOT}\\Fru_Files\\${CAT}\\Good_Fru\\FAN\\${bay}\\fru.bin
    \    RIS EM Efuse On Fan    ${bay}
    \    Sleep    10
    \    RIS EM Efuse Off Fan    ${bay}
    \    ${Fan_Health}=    Get Fan Health    ${bay}
    \    Should Be Equal As Strings    ${Fan_Health}    ${HEALTH_OK}
    [Teardown]    Run Keyword If Test Failed    Run Keywords    Flash Fan Fru    ${bay}    ${GIT_REPO_ROOT}${TESTDATA_ROOT}\\Fru_Files\\${CAT}\\Good_Fru\\FAN\\${bay}\\fru.bin
    ...           AND    RIS EM Efuse On Fan    ${bay}    AND   Sleep    10   AND   RIS EM Efuse Off Fan    ${bay}

TC 04: Fan FruFaultInjection Events show up in OV UI
    [Documentation]    This test is to verify events for Fan status change using FruFaultInjection
    ...                FanFruFault
    [Tags]    Fan    Automated    FLM2.00    FRU
    ${AvailableFan}=   Get List of Occupied Fan Bays
    Should Not Be Empty    ${AvailableFan}    msg=No Fans present in the enlcosure
    :FOR    ${bay}   IN   @{AvailableFan}
    \    Log    message=Failing the Fan for bay:${bay} and verify failed status/alert event in diags audit log    console=True
    \    ${last_fusion_event_id}=    get last fusion event ID
    \    ${Fan_Fault_Status}=    Set EM RIS Faults    FruFaultInjection    ${Fan_Device}    true
    \    Should Be Equal As Strings    ${Fan_Fault_Status}    <Response [200]>
    \    RIS EM Efuse On Fan    ${bay}
    \    Sleep    8
    \    RIS EM Efuse Off Fan without Healthcheck      ${bay}
    \    Wait for Device Critical    ${Fan_Device}    ${bay}
    \    #Verifying alert event in diags audit log with 50 recent entries
    \    ${diags_50}    ${diags_auditlog_file_path}=    Get Diags Audit Log 50 Recent Entries
    \    Set Test Variable    ${EM_Event_Logger}    ${diags_auditlog_file_path}
    \    Verify Audit Log Alert Event    ${EL_Fan_FruFault}    ${Fan_Device}    ${bay}    250
    \    Verify Fusion Event Sent By EM    ${EL_Fan_FruFault}    ${last_fusion_event_id}    ${Enclosure_category}
    \    ${Fan_Fault_Status}=    Set EM RIS Faults    FruFaultInjection    ${Fan_Device}    false
    \    Should Be Equal As Strings    ${Fan_Fault_Status}    <Response [200]>
    \    RIS EM Efuse On Fan    ${bay}
    \    Sleep    8
    \    RIS EM Efuse Off Fan    ${bay}
    [Teardown]    Run Keyword If Test Failed    Run Keywords    Set EM RIS Faults    FruFaultInjection    ${Fan_Device}   false   AND
    ...    EM Clear Fan Status    ${bay}