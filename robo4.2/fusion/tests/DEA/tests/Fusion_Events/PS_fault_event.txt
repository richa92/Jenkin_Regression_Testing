*** Settings ***
Documentation    Test suite to validate Power Supply related events on OneView and FLM
...    = GENERIC USAGE =
...    | pybot | -v ENC_SERIAL_NO:[enclosure serial #] | -v APPLIANCE_IP:<ipv4> | -v CIM_Linux_IP:<ipv4> |-v GIT_REPO_ROOT: | PS_fault_event.txt |
...    = Variables =
...    | GIT_REPO_ROOT |      Required: Repo root path if NOT defined in environment variable this is mgmtfw root location|
...    | ENC_SERIAL_NO |      Optional: If omitted, will use the 1st enclosure detected in OV |
...    | APPLIANCE_IP |       Required: OneView IPv4 address |
...    | CIM_Linux_IP |       Required:CI Manager ipv4 under test |

Variables         ${GIT_REPO_ROOT}/fusion/tests/DEA/variables/dea_variables.py
Variables         ${GIT_REPO_ROOT}/mgmtfw/tests/thunderbird/variables/tBird_variables.py
Resource          ${GIT_REPO_ROOT}${RESOURCE_ROOT}/resource_all.txt
Resource          ${GIT_REPO_ROOT}${EM_RESOURCE_ROOT}/thunderbird_all.txt
Library           RoboGalaxyLibrary
Library           MgmtFWLibrary
Library           json
Suite Setup       Configure Events Test Environment
Suite Teardown    Run Keywords  Logout of EM RIS   AND    Logout of Fusion Via REST

*** Test Case ***
TC 01: Verify PowerSupply Inserted\Removed
    [Documentation]    This test will verify the PowerSupply Inserted and Removed events
    ...                PowerSupplyInserted
    ...                PowerSupplyRemoved
    [Tags]    PS    Automated    FLM1.01
    ${AvailablePS}=   Get List of Occupied PowerSupply Bays
    :FOR    ${bay}   IN   @{AvailablePS}
    \    Log    message=Removing and inserting PS from bay:${bay} and verify resource removed\inserted event in diags audit log    console=True
    \    ${last_fusion_event_id}=    get last fusion event ID
    \    RIS EM Efuse On Powersupply    ${bay}
    \    Sleep    10
    \    RIS EM Efuse Off Powersupply    ${bay}
    \    ${diags_50}    ${diags_auditlog_file_path}=    Get Diags Audit Log 50 Recent Entries
    \    Set Test Variable    ${EM_Event_Logger}    ${diags_auditlog_file_path}
    \    Verify Audit Log Resource Removed Event    ${PowerSupply_Device}     ${EL_PowerSupply_Removed}    ${bay}    250
    \    Verify Audit Log Resource Added Event    ${PowerSupply_Device}     ${EL_PowerSupply_Inserted}    ${bay}    250
    \    Verify Fusion Event Sent By EM    ${EL_PowerSupply_Removed}    ${last_fusion_event_id}    ${Enclosure_category}
    \    Verify Fusion Event Sent By EM     ${EL_PowerSupply_Inserted}    ${last_fusion_event_id}    ${Enclosure_category}
    [Teardown]    Run Keywords    Ensure All PS Are In Good State   AND   Build RIS Object Model at Root Level

TC 02: Verify PowerSupplyPsOkFault and PowerSupplyPsFaultCleared
    [Documentation]    This test will verify the PowerSupply Fault events
    ...                PowerSupplyPsOkFault
    ...                PowerSupplyPSFaultCleared
    [Tags]    PS    Automated    FLM2.00
    ${AvailablePS}=   Get List of Occupied PowerSupply Bays
    :FOR    ${bay}   IN   @{AvailablePS}
    \    Log    message=Failing and recovering PS from bay:${bay} and verify Fault\Clear alert event in diags audit log    console=True
    \    ${last_fusion_event_id}=    get last fusion event ID
    \    Set EM RIS Faults    PSFaultInjection    ${bay}    PS_OK    true
    \    Sleep    20
    \    Set EM RIS Faults    PSFaultInjection    ${bay}    PS_OK    false
    \    sleep    20
    \    ${diags_50}    ${diags_auditlog_file_path}=    Get Diags Audit Log 50 Recent Entries
    \    Set Test Variable    ${EM_Event_Logger}    ${diags_auditlog_file_path}
    \    Verify Audit Log Alert Event    ${EL_PS_OK_Fault}    ${PowerSupply_Device}    ${bay}    250
    \    Verify Audit Log Alert Event    ${EL_PS_Fault_Cleared}    ${PowerSupply_Device}    ${bay}    250
    \    Verify Fusion Event Sent By EM     ${EL_PS_OK_Fault}    ${last_fusion_event_id}    ${Enclosure_category}
    \    Verify Fusion Event Sent By EM    ${EL_PS_Fault_Cleared}    ${last_fusion_event_id}     ${Enclosure_category} 
    [Teardown]    Run Keywords    Ensure All PS Are In Good State   AND   Build RIS Object Model at Root Level

TC 03: Verify PowerSupplyInternalCommFault and PowerSupplyInternalCommFaultCleared
    [Documentation]    This test will verify the PowerSupply Fault events
    ...                PowerSupplyInternalCommFault
    ...                PowerSupplyInternalCommFaultCleared
    [Tags]     PS    Automated    FLM2.00
    ${AvailablePS}=   Get List of Occupied PowerSupply Bays
    :FOR    ${bay}   IN   @{AvailablePS}
    \    Log    message=Failing and recovering PS from bay:${bay} and verify Fault\Clear alert event in diags audit log    console=True
    \    ${last_fusion_event_id}=    get last fusion event ID
    \    Set EM RIS Faults    PSFaultInjection    ${bay}    PS_COMM    true
    \    Sleep    20
    \    Set EM RIS Faults    PSFaultInjection    ${bay}    PS_COMM    false
    \    sleep    20
    \    ${diags_50}    ${diags_auditlog_file_path}=    Get Diags Audit Log 50 Recent Entries
    \    Set Test Variable    ${EM_Event_Logger}    ${diags_auditlog_file_path}
    \    Verify Audit Log Alert Event    ${EL_PS_Internal_CommFault}    ${PowerSupply_Device}    ${bay}    250
    \    Verify Audit Log Alert Event    ${EL_PS_Internal_CommFault_Cleared}    ${PowerSupply_Device}    ${bay}    250
    \    Verify Fusion Event Sent By EM     ${EL_PS_Internal_CommFault}    ${last_fusion_event_id}    ${Enclosure_category}
    \    Verify Fusion Event Sent By EM    ${EL_PS_Internal_CommFault_Cleared}    ${last_fusion_event_id}    ${Enclosure_category}
    [Teardown]    Run Keywords    Ensure All PS Are In Good State   AND   Build RIS Object Model at Root Level

TC 04: Verify PowerSupplyInsertFault and PowerSupplyInsertFaultCleared
    [Documentation]    This test will verify the PowerSupply Insert Fault events
    ...                PowerSupplyInsertFault
    ...                PowerSupplyInsertFaultCleared
    [Tags]     PS     Automated    FLM2.00
    Set Test Variable    ${device}    PowerSupply
    Set Test Variable    ${device_diag_response}    PS
    ${AvailablePS}=   Get List of Occupied PowerSupply Bays
    Should Not Be Empty    ${AvailablePS}    msg=No power supply's present in the enclosure
    Log To Console    \rRemoving and Inserting the ${device} in bay: @{AvailablePS}[0]
    ${last_fusion_event_id}=    get last fusion event ID
    ${result}=    EM API Get Diags    deviceStateTransition/${device}/@{AvailablePS}[0]/remove
    Should Contain    ${result}    Successfully sent diag state transition event remove for ${device_diag_response} @{AvailablePS}[0]
    ${result}=    EM API Get Diags    ShowState/${device}/@{AvailablePS}[0]
    Should Contain    ${result}    State: SM_STATE_ABSENT
    ${result}=    EM API Get Diags    deviceStateTransition/${device}/@{AvailablePS}[0]/operational
    Should Contain    ${result}    Successfully sent diag state transition event operational for ${device_diag_response} @{AvailablePS}[0]
    ${result}=    EM API Get Diags    ShowState/${device}/@{AvailablePS}[0]
#    Should Contain    ${result}    State: SM_STATE_OPERATIONAL
    Log    message=Verifying Insert error for PS in bay :@{AvailablePS}[0]    console=True
    ${status}    ${result}=    Wait timeout for Device State    ${device}    @{AvailablePS}[0]    SM_STATE_INSERTED_ERR    600
#    Should Be True    ${status}    msg=expectedSM_STATE_INSERTED_ERR but got ${result}
    ${diags_50}    ${diags_auditlog_file_path}=    Get Diags Audit Log 50 Recent Entries
    Set Test Variable    ${EM_Event_Logger}    ${diags_auditlog_file_path}
    Verify Audit Log Alert Event    ${EL_PS_Insert_Fault}    ${PowerSupply_Device}    @{AvailablePS}[0]    250
    Verify Fusion Event Sent By EM     ${EL_PS_Insert_Fault}    ${last_fusion_event_id}    ${Enclosure_category}
    ${result}=    EM API Get Diags    deviceStateTransition/${device}/@{AvailablePS}[0]/operational
    Should Contain    ${result}    Successfully sent diag state transition event operational for ${device_diag_response} @{AvailablePS}[0]
    ${result}=    EM API Get Diags    ShowState/${device}/@{AvailablePS}[0]
#    Should Contain     ${result}    State: SM_STATE_INSERTED_ERR
    ${result}=    EM API Get Diags    deviceStateTransition/${device}/@{AvailablePS}[0]/insert
    Should Contain    ${result}    Successfully sent diag state transition event insert for ${device_diag_response} @{AvailablePS}[0]
    ${result}=    EM API Get Diags    ShowState/${device}/@{AvailablePS}[0]
#    Should Contain    ${result}    State: SM_STATE_HW_READY
    Log    message=Verifying Insert error clearance for PS in bay :@{AvailablePS}[0]    console=True
    ${diags_50}    ${diags_auditlog_file_path}=    Get Diags Audit Log 50 Recent Entries
    Set Test Variable    ${EM_Event_Logger}    ${diags_auditlog_file_path}
    Verify Audit Log Alert Event    ${EL_PS_Insert_Fault_Cleared}    ${PowerSupply_Device}    @{AvailablePS}[0]    250
    Verify Fusion Event Sent By EM     ${EL_PS_Insert_Fault_Cleared}    ${last_fusion_event_id}    ${Enclosure_category}
    ${result}=    EM API Get Diags    ShowState/${device}/@{AvailablePS}[0]
#   Should Contain    ${result}    State: SM_STATE_INTEGRATED
    [Teardown]    Run Keyword if Test Failed    RIS EM Efuse PowerSupply    @{AvailablePS}[0]    ${EM_EFUSE_Duration}
