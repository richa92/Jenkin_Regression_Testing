*** Settings ***
Documentation     Validate EM Enclosure Manager events on OneView
...               = GENERIC USAGE =
...               | pybot | -v GIT_REPO_ROOT:<repo root path> | -v APPLIANCE_IP:<ipv4> |EM_OV_Enclosure_Manager_Events_2.txt |
...               = Variables =
...               | GIT_REPO_ROOT | Required: Repo root path if NOT defined in environment variable|
...               | APPLIANCE_IP | Required: OneView IPv4 address |
Suite Setup       Configure Events Test Environment
Suite Teardown    Run Keywords    Reboot FLM after the suite    AND    Logout of EM RIS    AND    Logout of Fusion Via REST
Variables         ${GIT_REPO_ROOT}/fusion/tests/DEA/variables/dea_variables.py
Variables         ${GIT_REPO_ROOT}/mgmtfw/tests/thunderbird/variables/tBird_variables.py
Resource          ${GIT_REPO_ROOT}${RESOURCE_ROOT}/resource_all.txt
Resource          ${GIT_REPO_ROOT}${EM_RESOURCE_ROOT}/thunderbird_all.txt
Library           RoboGalaxyLibrary
Library           MgmtFWLibrary
Library           json

*** Test Cases ***
TC01: Verify EmInsertFault and EmInsertFaultCleared events
    [Documentation]    Verify Device States when inserting and removing Standby EM
    [Tags]    EM    FLM2.00    Automated
    Run Keyword and Ignore Error    Wait for Node Consistent
    Wait for Device OK    ${EM_Device}    1
    Wait for Device OK    ${EM_Device}    2
    Set Test Variable    ${device}    EnclosureManager
    Set Test Variable    ${device_diag_response}    EM
    ${device_list}=    Get List of Occupied EnclosureManager Bays
    ${em_count}=    Get Length    ${device_list}
    Run Keyword If    ${em_count}==1    Fail    msg=No Standby EM present - test cannot be run
    ${standby_em}=    Get Diags EmClusterStatus Standby Node
    ${last_fusion_event_id}=    get last fusion event ID
    ${result}=    EM API Get Diags    ShowState/${device}/${standby_em}
    Should Contain    ${result}    SM_STATE_INTEGRATED
    ${result}=    EM API Get Diags    deviceStateTransition/${device}/${standby_em}/remove
    Should Contain    ${result}    Successfully sent diag state transition event remove for ${device_diag_response} ${standby_em}
    ${result}=    EM API Get Diags    ShowState/${device}/${standby_em}
    Should Contain    ${result}    State: SM_STATE_ABSENT
    ${result}=    EM API Get Diags    deviceStateTransition/${device}/${standby_em}/operational
    Should Contain    ${result}    Successfully sent diag state transition event operational for ${device_diag_response} ${standby_em}
    Sleep    30
    ${result}=    EM API Get Diags    ShowState/${device}/${standby_em}
    Should Contain    ${result}    State: SM_STATE_OPERATIONAL
    ${status}    ${result}=    Wait timeout for Device State    ${device}    @{device_list}[0]    SM_STATE_INSERTED_ERR    600 
    #Should Be True    ${status}    msg=expectedSM_STATE_INSERTED_ERR but got ${result}
    #Should Contain    ${result}    State: SM_STATE_INSERTED_ERR
    ${diags_50}    ${diags_auditlog_file_path}=    Get Diags Audit Log All Alerts
    Set Test Variable    ${EM_Event_Logger}    ${diags_auditlog_file_path}
    Verify Audit Log Alert Event    ${EL_Em_InsertFault}    EnclosureManager    ${standby_em}    800
    Verify Fusion Event Sent By EM    ${EL_Em_InsertFault}    ${last_fusion_event_id}    ${Enclosure_category}
    ${result}=    EM API Get Diags    deviceStateTransition/${device}/${standby_em}/insert
    Should Contain    ${result}    Successfully sent diag state transition event insert for ${device_diag_response} ${standby_em}
    Sleep    30
    ${result}=    EM API Get Diags    ShowState/${device}/${standby_em}
    Should Contain    ${result}    SM_STATE_INTEGRATED
    ${diags_50}    ${diags_auditlog_file_path}=    Get Diags Audit Log All Alerts
    Set Test Variable    ${EM_Event_Logger}    ${diags_auditlog_file_path}
    Verify Audit Log Alert Event    ${EL_Em_InsertFault_Cleared}    EnclosureManager    ${standby_em}    450
    Verify Fusion Event Sent By EM    ${EL_Em_InsertFault_Cleared}    ${last_fusion_event_id}    ${Enclosure_category}
    Sleep    ${EM_REBOOT_TIME}
    [Teardown]    Run Keyword If Test Failed    Run Keywords    EM API Get Diags    deviceStateTransition/${device}/${standby_em}/insert
    ...    AND    Sleep    ${EM_REBOOT_TIME}

TC02: Verify EmInternalLinkDisconnectedCleared_PeerEmRemoved Event
    [Documentation]    Verify EmInternalLinkDisconnectedCleared_PeerEmRemoved event
    [Tags]    EM    FLM1.01    Automated
    Run Keyword and Ignore Error    Wait for Node Consistent
    ${standby_em_bay}=    Get Diags EmClusterStatus Standby Node
    ${active_em_bay}=    Get Diags EmClusterStatus Active Node
    ${last_fusion_event_id}=    get last fusion event ID
    Log To Console    Killing other EM
    ${enabled_switch_port}=    Get List of Enabled Switchports
    ${result_sim_dead}=    EM API Get Diags    OtherEM_SimDead
    Log To Console    Sleeping 12 minutes
    Sleep    720
    Login to EM Via RIS
    ${diags_50}    ${diags_auditlog_file_path}=    Get Diags Audit Log 50 Recent Entries
    Set Test Variable    ${EM_Event_Logger}    ${diags_auditlog_file_path}
    Verify Audit Log Alert Event    ${EM_InternalLinkDisconnected}    ${EM_Device_Name}    ${standby_em_bay}    780
    Verify Audit Log Alert Event    ${EM_LinkDisconnected}    ${EM_Device_Name}    ${standby_em_bay}    780
    Verify Fusion Event Sent By EM    ${EM_InternalLinkDisconnected}    ${last_fusion_event_id}    ${Enclosure_category}
    Verify Fusion Event Sent By EM    ${EM_LinkDisconnected}    ${last_fusion_event_id}    ${Enclosure_category}
    Log To Console    Removing other EM
    RIS EM Efuse On OTHER EM    ${standby_em_bay}
    Log To Console    Sleeping 2 minutes
    Sleep    120
    ${diags_50}    ${diags_auditlog_file_path}=    Get Diags Audit Log 50 Recent Entries
    Set Test Variable    ${EM_Event_Logger}    ${diags_auditlog_file_path}
    Verify Audit Log Alert Event    ${EM_InternalLinkDisconnectedClearedPeerEmRemoved}    ${EM_Device_Name}    ${standby_em_bay}    240
    Verify Fusion Event Sent By EM    ${EM_InternalLinkDisconnectedClearedPeerEmRemoved}    ${last_fusion_event_id}    ${Enclosure_category}
    # Additional time needed for the active EM to determine that the standby is operational.Confirmed with dev on the wait time
    Log To Console    Restoring other EM
    ${result_em_restore}=    EM API Get Diags    OtherEM_Restore
    Log to Console    Sleeping 5 minutes
    Sleep    ${EM_REBOOT_TIME}
    [Teardown]    Run Keyword If Test Failed    Run Keywords    EM API Get Diags    OtherEM_Restore    AND    Sleep    ${EM_REBOOT_TIME}
