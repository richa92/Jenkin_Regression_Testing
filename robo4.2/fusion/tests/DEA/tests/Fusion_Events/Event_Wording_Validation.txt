*** Settings ***
Documentation    Test suite to validate alert wordings(Message/Resolution/Severity) of mergerd file
...              against control file
...
...    = GENERIC USAGE =
...    | pybot | -v ENC_SERIAL_NO:[enclosure serial #] | -v APPLIANCE_IP:<ipv4> |-v GIT_REPO_ROOT: | Event_wording_validation.txt |
...    = Variables =
...    | GIT_REPO_ROOT |      Required: Repo root path if NOT defined in environment variable this is mgmtfw root location|
...    | ENC_SERIAL_NO |      Optional: If omitted, will use the 1st enclosure detected in OV |
...    | APPLIANCE_IP |       Required: OneView IPv4 address |

Variables         ${GIT_REPO_ROOT}/fusion/tests/DEA/variables/dea_variables.py
Resource          ${GIT_REPO_ROOT}${RESOURCE_ROOT}/resource_all.txt
Resource          ${GIT_REPO_ROOT}${EM_RESOURCE_ROOT}/thunderbird_all.txt

Suite Setup       Configure Events Test Environment
Suite Teardown    Run Keywords  Logout of EM RIS    AND    Logout of Fusion Via REST


*** Test Cases ***

TC 01:Validate Alert Wording Of Merged File Against A Local Control File
    [Documentation]    Test case to  validate alert wordings(Message/Resolution/Severity) of mergerd file
    ...                against control file
    [Tags]    Alert    OVemRegistry    Automated
    ${LOCAL_OV_REGISTRY_BASELINE} =    Get Local OV Registry Event Baseline
    ${listOfLocalAlerts} =    Get Dictionary Keys    ${LOCAL_OV_REGISTRY_BASELINE}
    ${listOfLocalAlerts} =    Convert To LIst    ${LOCAL_OV_REGISTRY_BASELINE}
    :FOR    ${alert}    IN    @{listOfLocalAlerts}
        \    Log to console    Validating ${alert}
        \    ${localAlert} =    Get From Dictionary    ${LOCAL_OV_REGISTRY_BASELINE}    ${alert}
        \    ${mergedAlert} =    Get From Dictionary    ${OV_REGISTRY_BASELINE}    ${alert}
        \    Run Keyword And Continue On Failure    Should Be Equal As Strings    ${localAlert["Message"]}    ${mergedAlert["Message"]}    This ${alert} alert has different message in both files    values=True
        \    Run Keyword And Continue On Failure    Should Be Equal As Strings    ${localAlert["Resolution"]}    ${mergedAlert["Resolution"]}    This ${alert} alert has different resolution in both files    values=True
        \    Run Keyword And Continue On Failure    Should Be Equal As Strings    ${localAlert["Severity"]}    ${mergedAlert["Severity"]}    This ${alert} alert has different severity in both files    values=True
