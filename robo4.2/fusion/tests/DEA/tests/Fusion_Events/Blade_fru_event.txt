*** Settings ***
Documentation    Test suite to validate blade related events on OneView and FLM
...    It covers testing of:
...        BladeFruContentFault
...        BladeFruFault
...        BladeMezzFruContentFault 
...        BladeMezzFruFault
...        BladeMezzFruManufacturedForInvalidFault
...        BladeMezzFruManufacturedForMismatchFault
...        BladeFruManufacturedForInvalidFault
...        BladeFruManufacturedForMismatchFault
...    = GENERIC USAGE =
...    | pybot | -v ENC_SERIAL_NO:[enclosure serial #] | -v APPLIANCE_IP:<ipv4> | -v CIM_Linux_IP:<ipv4> |-v GIT_REPO_ROOT: | Blade_fru_event.txt |
...    = Variables =
...    | GIT_REPO_ROOT |      Required: Repo root path if NOT defined in environment variable this is mgmtfw root location|
...    | ENC_SERIAL_NO |      Optional: If omitted, will use the 1st enclosure detected in OV |
...    | APPLIANCE_IP |       Required: OneView IPv4 address |
...    | CIM_Linux_IP |       Required:CI Manager ipv4 under test |

Variables         ${GIT_REPO_ROOT}/fusion/tests/DEA/variables/dea_variables.py
Variables         ${GIT_REPO_ROOT}/mgmtfw/tests/thunderbird/variables/tBird_variables.py
Resource          ${GIT_REPO_ROOT}${RESOURCE_ROOT}/resource_all.txt
Resource          ${GIT_REPO_ROOT}${EM_RESOURCE_ROOT}/thunderbird_all.txt
Library           RoboGalaxyLibrary
Library           MgmtFWLibrary
Library           json

Suite Setup       Configure Events Test Environment
Suite Teardown    Run Keywords  Logout of EM RIS   AND    Logout of Fusion Via REST

*** Test Case ***
TC 01: Blade Event - Validate Blade FruContentFault Event
    [Documentation]    This test will verify Frucontent fault event for Blade device
    [Tags]    Blade     FLM1.01    FRU    Automated
    ${occupied_blade_list}=    Get List of Occupied iLO Blade Bays
    Should Not Be Empty    ${occupied_blade_list}    msg=No Blades present in the enclosure
    : FOR    ${bladebay}    IN    @{occupied_blade_list}
    \    ${last_fusion_event_id}=    get last fusion event ID
    \    #Flash Invalid camic Bay Fru for Server Bay
    \    ${blade_type}=    Get Blade Type    ${bladebay}
    \    ${ilo_ip}=    Get iLO IPv6 LL Address from EM RIS      ${bladebay}
    \    ${flash_status}=    Run Keyword If    '${blade_type}' == 'BlackBird'    Flash Blade FRU    ${bladebay}    ${GIT_REPO_ROOT}${TESTDATA_ROOT}\\${Customized_FRU_Path}\\${ContentFault_blackbirdfru}
    \    ...   ELSE IF    '${blade_type}' == 'RedBird'    Flash Blade FRU    ${bladebay}    ${GIT_REPO_ROOT}${TESTDATA_ROOT}\\${Customized_FRU_Path}\\${ContentFault_redbirdfru}
    \    ...   ELSE IF    '${blade_type}' == 'FireBird2s'    Flash Blade FRU    ${bladebay}    ${GIT_REPO_ROOT}${TESTDATA_ROOT}\\${Customized_FRU_Path}\\${bigbirdfru_hpe}    
    \    ...   ELSE IF    '${blade_type}' == 'FireBird4s'    Flash Blade FRU    ${bladebay}    ${GIT_REPO_ROOT}${TESTDATA_ROOT}\\${Customized_FRU_Path}\\${bigbirdfru_hpe}    
    \    RIS EM Efuse Blade    ${bladebay}    10
    \    Sleep    10
    \    ${status}=    Wait for Device Critical    ${Blade_Device}    ${bladebay}
    \    Should Be True      ${status}   ${Blade_Device} Critical Status not detected
    \    Sleep    60    # wait for event to be populated in audit log
    \    ${diags_50}    ${diags_auditlog_file_path}=    Get Diags Audit Log 50 Recent Entries
    \    Set Test Variable    ${EM_Event_Logger}    ${diags_auditlog_file_path}
    \    Verify Audit Log Alert Event    ${EL_Blade_FruContentFault}    ${Blade_Device}    ${bladebay}    250
    \    Verify Fusion Event Sent By EM    ${EL_Blade_FruContentFault}    ${last_fusion_event_id}    ${Enclosure_Category}
    \    #Check Blade Power status
    \    Sleep    60    # wait for iLO to boot up
    \    Validate Blade Power Status    ${bladebay}    ${iLO_Username}    ${iLO_Password}    Off
    \    # Flash the Good Fru
    \    Log To Console    Flash Good Fru to bay: ${bladebay}
    \    Flash Blade Fru    ${bladebay}    ${GIT_REPO_ROOT}${TESTDATA_ROOT}\\Fru_Files\\${CAT}\\Good_Fru\\BLADE\\${blade_bay}\\fru.bin
    \    RIS EM Efuse On Blade    ${bladebay}
    \    Sleep    10
    \    RIS EM Efuse Off Blade    ${bladebay}
    \    Login to iLO   ${ilo_ip}    ${iLO_Username}    ${iLO_Password}
    \    Wait for iLO Blade PowerOn
    \    Logout of iLO
    \    Validate Blade Power Status    ${bladebay}    ${iLO_Username}    ${iLO_Password}    On
    [Teardown]    Run Keyword If Test Failed    Run Keywords    Flash Blade Fru    ${bladebay}    ${GIT_REPO_ROOT}${TESTDATA_ROOT}\\Fru_Files\\${CAT}\\Good_Fru\\BLADE\\${blade_bay}\\fru.bin    AND    RIS EM Efuse On Blade    ${bladebay}    AND    Sleep    10    AND    RIS EM Efuse Off Blade    ${bladebay}

TC 02: Blade Event - Validate Blade FruFault Event
    [Documentation]    This test is to verify Blade Fru Fault events for blade devices 
    [Tags]    Blade     FLM1.01    FRU    Automated
    ${present_blade_list}=    Get List of Occupied Blade Bays
    Should Not Be Empty    ${present_blade_list}    msg=No Blades present in the enlcosure
    : FOR    ${blade_bay}    IN    @{present_blade_list}
    \    Log    message=Injecting Blade fru fault for bay:${blade_bay} and verify failed status/alert event in diags audit log    console=True
    \    ${Blade_Fault_Status}=    Set EM RIS FRU Faults    ${Blade_Device}    true
    \    Should Be Equal As Strings    ${Blade_Fault_Status}    <Response [200]>
    \    RIS EM Efuse Blade    ${blade_bay}    8
    \    Sleep    ${EM_EFUSE_Duration}
    \    #Verifying resource updated event in diags audit log with 50 recent entries
    \    ${diags_50}    ${diags_auditlog_file_path}=    Get Diags Audit Log 50 Recent Entries
    \    Set Test Variable    ${EM_Event_Logger}    ${diags_auditlog_file_path}
    \    Verify Audit Log Status Change MessageID Event    ${EL_Blade_Critical}    ${Blade_Device}    ${blade_bay}    250
    \    Verify Audit Log Alert Event    ${EL_Blade_FruFault}    ${Blade_Device}    ${blade_bay}    250
    \    Log    message=Clearing Blade fru fault injection for bay:${blade_bay} and verify ok status/alert event in diags audit log    console=True
    \    ${Blade_Fault_Status}=    Set EM RIS FRU Faults    ${Blade_Device}    false
    \    Should Be Equal As Strings    ${Blade_Fault_Status}    <Response [200]>
    \    RIS EM Efuse Blade    ${blade_bay}    8
    \    Sleep    ${EM_EFUSE_Duration}
    \    Wait for Device OK    ${Blade_Device}    ${blade_bay}
    \    #Verifying resource updated event in diags audit log with 50 recent entries
    \    ${diags_50}    ${diags_auditlog_file_path}=    Get Diags Audit Log 50 Recent Entries
    \    Set Test Variable    ${EM_Event_Logger}    ${diags_auditlog_file_path}
    \    Verify Audit Log Status Change MessageID Event    ${EL_Blade_OK}    ${Blade_Device}    ${blade_bay}    250
    [Teardown]    Run Keyword If Test Failed    Run Keywords    Set EM RIS FRU Faults    ${Blade_Device}    false    AND
    ...    EM Clear Blade Status    ${blade_bay}

TC 03: Verify BladeFruManufacturedForInvalidFault Event
    [Documentation]    This test will validate Compatability check when ManufacturedFor field in Midplane is HPE and in Blade is Foo
    [Tags]    Blade     FLM1.01    FRU    Automated    Disabled
    ${ManufacturedFor}=    Get ManufacturedFor From Midplane FRU
    Should Be Equal As Strings    ${ManufacturedFor}    HPE
    ${occupied_blade_list}=    Get List of Occupied iLO Blade Bays
    Should Not Be Empty    ${occupied_blade_list}    msg=No Blades present in the enclosure
    : FOR    ${bladebay}    IN    @{occupied_blade_list}
    \    ${last_fusion_event_id}=    get last fusion event ID 
    \    #Flash InCompatible Fru
    \    ${blade_type}=    Get Blade Type    ${bladebay}
    \    ${ilo_ip}=    Get iLO IPv6 LL Address from EM RIS      ${bladebay}    
    \    ${flash_status}=    Run Keyword If    '${blade_type}' == 'BlackBird'    Flash Blade BaseBoard FRU    ${ilo_ip}     ${Ilo_Username}     ${Ilo_Password}    ${GIT_REPO_ROOT}${TESTDATA_ROOT}\\${Customized_FRU_Path}\\    ${GIT_REPO_ROOT}${TESTDATA_ROOT}\\${Customized_FRU_Path}\\${blackbirdfru_foo}
    \    ...   ELSE IF    '${blade_type}' == 'RedBird'    Flash Blade BaseBoard FRU    ${ilo_ip}     ${Ilo_Username}     ${Ilo_Password}    ${GIT_REPO_ROOT}${TESTDATA_ROOT}\\${Customized_FRU_Path}\\    ${GIT_REPO_ROOT}${TESTDATA_ROOT}\\${Customized_FRU_Path}\\${redbirdfru_foo}
    \    ...   ELSE IF    '${blade_type}' == 'FireBird2s'    Flash Blade BaseBoard FRU    ${ilo_ip}     ${Ilo_Username}     ${Ilo_Password}    ${GIT_REPO_ROOT}${TESTDATA_ROOT}\\${Customized_FRU_Path}\\    ${GIT_REPO_ROOT}${TESTDATA_ROOT}\\${Customized_FRU_Path}\\${FireBird2sfru_foo}    
    \    ...   ELSE IF    '${blade_type}' == 'FireBird4s'    Flash Blade BaseBoard FRU    ${ilo_ip}     ${Ilo_Username}     ${Ilo_Password}    ${GIT_REPO_ROOT}${TESTDATA_ROOT}\\${Customized_FRU_Path}\\    ${GIT_REPO_ROOT}${TESTDATA_ROOT}\\${Customized_FRU_Path}\\${firebird4sfru_foo}    
    \    RIS EM Efuse Blade    ${bladebay}    10
    \    Sleep    ${EM_EFUSE_Duration}
    \    ${status}=    Wait for Device Critical    ${Blade_Device}    ${bladebay}
    \    Should Be True      ${status}   ${Blade_Device} Critical Status not detected
    \    ${ManufacturedFor_Blade}=    Get ManufacturedFor From BaseBoardFru    ${bladebay}
    \    List Should Not Contain Value    ${Compatible_Devices}    ${ManufacturedFor_Blade}
    \    ${Blade_Health}=    Get Blade Health    ${bladebay}
    \    Should Be Equal As Strings    ${Blade_Health}    ${HEALTH_CRITICAL}
    \    ${Blade_Fault_Status}=    Get Blade Fault Status    ${bladebay}    FRUManufacturedForInvalid
    \    Should Be Equal As Strings    ${Blade_Fault_Status}    ${STATUS_CRITICAL}
    \    ${Blade_Fault_Status}=    Get Blade Fault Status    ${bladebay}    FRUManufacturedForMismatch
    \    Should Be Equal As Strings    ${Blade_Fault_Status}    ${STATUS_OK}
    \    Sleep    10    # wait for event to be populated in audit log
    \    ${diags_50}    ${diags_auditlog_file_path}=    Get Diags Audit Log 50 Recent Entries
    \    Set Test Variable    ${EM_Event_Logger}    ${diags_auditlog_file_path}
    \    Verify Audit Log Alert Event    ${EL_Blade_FruManufacturedForInvalidFault}    ${Blade_Device}    ${bladebay}    250
    \    Verify Fusion Event Sent By EM    ${EL_Blade_FruManufacturedForInvalidFault}    ${last_fusion_event_id}    ${Server_Category}
    \    #Check Blade Power status
    \    Validate Blade Power Status    ${bladebay}    ${iLO_Username}    ${iLO_Password}    Off
    \    # Flash the Good Fru
    \    Log To Console    Flash Good Fru to bay: ${bladebay}
    \    Flash Good BaseBoardFru For Blade Device    ${bladebay}    ${ilo_ip}     ${Ilo_Username}     ${Ilo_Password}
    \    RIS EM Efuse On Blade    ${bladebay}
    \    Sleep    ${EM_EFUSE_Duration}
    \    RIS EM Efuse Off Blade    ${bladebay}
    \    Login to iLO   ${ilo_ip}    ${iLO_Username}    ${iLO_Password}
    \    Wait for iLO Blade PowerOn   
    \    Logout of iLO 
    \    Validate Blade Power Status    ${bladebay}    ${iLO_Username}    ${iLO_Password}    On
    [Teardown]    Run Keyword If Test Failed    Run Keywords    Flash Good BaseBoardFru For Blade Device    ${bladebay}    ${ilo_ip}     ${Ilo_Username}     ${Ilo_Password}    AND    RIS EM Efuse On Blade    ${bladebay}    AND    Sleep    10    AND    RIS EM Efuse Off Blade    ${bladebay}    

TC 04: Verify BladeFruManufacturedForMismatchFault Event
    [Documentation]    This test will validate Compatability check when ManufacturedFor field in Midplane is HPE and in Blade is NEC
    [Tags]    Blade     FLM1.01    FRU    Automated    Disabled
    ${ManufacturedFor}=    Get ManufacturedFor From Midplane FRU
    Should Be Equal As Strings    ${ManufacturedFor}    HPE
    ${occupied_blade_list}=    Get List of Occupied iLO Blade Bays
    Should Not Be Empty    ${occupied_blade_list}    msg=No Blades present in the enclosure
    : FOR    ${bladebay}    IN    @{occupied_blade_list}
    \    #Check Blade Power status
    \    Sleep     40
    \    ${last_fusion_event_id}=    get last fusion event ID
    \    #Flash InCompatible Fru
    \    ${blade_type}=    Get Blade Type    ${bladebay}
    \    ${ilo_ip}=    Get iLO IPv6 LL Address from EM RIS      ${bladebay}    
    \    ${flash_status}=    Run Keyword If    '${blade_type}' == 'BlackBird'    Flash Blade BaseBoard FRU    ${ilo_ip}     ${Ilo_Username}     ${Ilo_Password}    ${GIT_REPO_ROOT}${TESTDATA_ROOT}\\${Customized_FRU_Path}\\    ${GIT_REPO_ROOT}${TESTDATA_ROOT}\\${Customized_FRU_Path}\\${blackbirdfru_nec}
    \    ...   ELSE IF     '${blade_type}' == 'RedBird'    Flash Blade BaseBoard FRU    ${ilo_ip}     ${Ilo_Username}     ${Ilo_Password}    ${GIT_REPO_ROOT}${TESTDATA_ROOT}\\${Customized_FRU_Path}\\    ${GIT_REPO_ROOT}${TESTDATA_ROOT}\\${Customized_FRU_Path}\\${redbirdfru_nec}
    \    ...   ELSE IF    '${blade_type}' == 'FireBird2s'    Flash Blade BaseBoard FRU    ${ilo_ip}     ${Ilo_Username}     ${Ilo_Password}    ${GIT_REPO_ROOT}${TESTDATA_ROOT}\\${Customized_FRU_Path}\\    ${GIT_REPO_ROOT}${TESTDATA_ROOT}\\${Customized_FRU_Path}\\${FireBird2sfru_nec}    
    \    ...   ELSE IF    '${blade_type}' == 'FireBird4s'    Flash Blade BaseBoard FRU    ${ilo_ip}     ${Ilo_Username}     ${Ilo_Password}    ${GIT_REPO_ROOT}${TESTDATA_ROOT}\\${Customized_FRU_Path}\\    ${GIT_REPO_ROOT}${TESTDATA_ROOT}\\${Customized_FRU_Path}\\${firebird4sfru_nec}    
    \    RIS EM Efuse Blade    ${bladebay}    10
    \    Sleep    ${EM_EFUSE_Duration}
    \    ${status}=    Wait for Device Critical    ${Blade_Device}    ${bladebay}
    \    Should Be True      ${status}   ${Blade_Device} Critical Status not detected
    \    ${ManufacturedFor_Blade}=    Get ManufacturedFor From BaseBoardFru    ${bladebay}
    \    List Should Contain Value    ${Compatible_Devices}    ${ManufacturedFor_Blade}
    \    ${Blade_Health}=    Get Blade Health    ${bladebay}
    \    Should Be Equal As Strings    ${Blade_Health}    ${HEALTH_CRITICAL}
    \    ${Blade_Fault_Status}=    Get Blade Fault Status    ${bladebay}    FRUManufacturedForMismatch
    \    Should Be Equal As Strings    ${Blade_Fault_Status}    ${STATUS_CRITICAL}
    \    Sleep    10    # wait for event to be populated in audit log
    \    ${diags_50}    ${diags_auditlog_file_path}=    Get Diags Audit Log 50 Recent Entries
    \    Set Test Variable    ${EM_Event_Logger}    ${diags_auditlog_file_path}
    \    Verify Audit Log Alert Event    ${EL_Blade_FruManufacturedForMismatchFault}    ${Blade_Device}    ${bladebay}    250
    \    Verify Fusion Event Sent By EM    ${EL_Blade_FruManufacturedForMismatchFault}    ${last_fusion_event_id}    ${Server_Category}
    \    #Check Blade Power status
    \    Validate Blade Power Status    ${bladebay}    ${iLO_Username}    ${iLO_Password}    Off
    \    # Flash the Good Fru
    \    Log To Console    Flash Good Fru to bay: ${bladebay}
    \    Flash Good BaseBoardFru For Blade Device    ${bladebay}    ${ilo_ip}     ${Ilo_Username}     ${Ilo_Password}
    \    RIS EM Efuse On Blade    ${bladebay}
    \    Sleep    ${EM_EFUSE_Duration}
    \    
    \    RIS EM Efuse Off Blade    ${bladebay}
    \    Login to iLO   ${ilo_ip}    ${iLO_Username}    ${iLO_Password}
    \    Wait for iLO Blade PowerOn   
    \    Logout of iLO 
    \    Validate Blade Power Status    ${bladebay}    ${iLO_Username}    ${iLO_Password}    On
    [Teardown]    Run Keyword If Test Failed    Run Keywords    Flash Good BaseBoardFru For Blade Device    ${bladebay}    ${ilo_ip}     ${Ilo_Username}     ${Ilo_Password}    AND    RIS EM Efuse On Blade    ${bladebay}    AND    Sleep    10    AND    RIS EM Efuse Off Blade    ${bladebay}
