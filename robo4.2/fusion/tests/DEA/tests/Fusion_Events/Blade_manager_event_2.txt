*** Settings ***
Documentation    Test suite to validate blade related events on OneView and FLM
...    It covers testing of:
...        BladeManagerFault
...        BladeManagerFaultCleared
...        BladeManagerInternalCritical
...        BladeManagerInternalCriticalCleared
...        BladeManagerInternalWarning
...        BladeManagerInternalWarningCleared
...    = GENERIC USAGE =
...    | pybot | -v ENC_SERIAL_NO:[enclosure serial #] | -v APPLIANCE_IP:<ipv4> | -v CIM_Linux_IP:<ipv4> |-v GIT_REPO_ROOT: | blade_manager_event_2.txt |
...    = Variables =
...    | GIT_REPO_ROOT |      Required: Repo root path if NOT defined in environment variable this is mgmtfw root location|
...    | ENC_SERIAL_NO |      Optional: If omitted, will use the 1st enclosure detected in OV |
...    | APPLIANCE_IP |       Required: OneView IPv4 address |
...    | CIM_Linux_IP |       Required:CI Manager ipv4 under test |

Variables         ${GIT_REPO_ROOT}/fusion/tests/DEA/variables/dea_variables.py
Variables         ${GIT_REPO_ROOT}/mgmtfw/tests/thunderbird/variables/tBird_variables.py
Resource          ${GIT_REPO_ROOT}${RESOURCE_ROOT}/resource_all.txt
Resource          ${GIT_REPO_ROOT}${EM_RESOURCE_ROOT}/thunderbird_all.txt
Library           RoboGalaxyLibrary
Library           MgmtFWLibrary
Library           json
Library           Telnet

Suite Setup       Configure Events Test Environment
Suite Teardown    Run Keywords  Logout of EM RIS   AND    Logout of Fusion Via REST

*** Test Case ***

TC 01: Blade Manager Event - Validate BladeManagerIloInternalCritical and BladeManagerIloInternalCriticalCleared events 
    [Documentation]    This test is to verify events for BladeManagerIloInternalCritical and BladeManagerIloInternalCriticalCleared events using telnet blade ilo
    [Tags]    Blade    FLM2.00    Automated    Disabled
    ${present_blade_list}=    Get List of Occupied iLO Blade Bays    #Get List of Occupied Debug iLO Blade Bays
    Should Not Be Empty    ${present_blade_list}    msg=No Debg Ilo Blades present in the enlcosure
    : FOR    ${blade_bay}    IN    @{present_blade_list}
    \    ${ilo_ip}=    Get iLO IPv6 LL Address from EM RIS    ${blade_bay}
    \    ${last_fusion_event_id}=    get last fusion event ID
    \    Telnet.Open Connection    ${ilo_ip}    alias=server    port=8
    \    Telnet.Write    h fail 3     # Fail the Sensor Inlet Ambiant 
    \    Sleep  3
    \    ${fail_output}=    Telnet.Read
    \    Should Contain  ${fail_output}  set to 1
    \    Telnet.Write    h ok 3       # Set OK state to Sensor Inlet Ambiant
    \    Sleep  3
    \    ${ok_output}=    Telnet.Read 
    \    Should Contain  ${ok_output}  set to 0
    \    Wait for Device OK    ${Blade_Device}    ${blade_bay}
    \    #Verifying resource updated event in diags audit log with 50 recent entries
    \    Sleep  20
    \    ${diags_50}    ${diags_auditlog_file_path}=    Get Diags Audit Log 50 Recent Entries
    \    Set Test Variable    ${EM_Event_Logger}    ${diags_auditlog_file_path}
    \    Verify Audit Log Alert Event    ${EL_Blade_Manager_iLo_Critical}    ${Blade_Device}    ${blade_bay}    250
    \    Verify Audit Log Alert Event    ${EL_Blade_Manager_iLo_Critical_Cleared}    ${Blade_Device}    ${blade_bay}    250
    \    Verify Fusion Event Sent By EM    ${EL_Blade_Manager_iLo_Critical}    ${last_fusion_event_id}
    \    Verify Fusion Event Sent By EM    ${EL_Blade_Manager_iLo_Critical_Cleared}    ${last_fusion_event_id}
    [Teardown]    Run Keyword If Test Failed    Run Keywords    RIS EM Efuse Blade    ${blade_bay}    10    AND    Sleep    10     AND    Wait for Device OK    ${Blade_Device}    ${blade_bay}
    