*** Settings ***
Documentation     Validate EM Power Supply events on OneView
...    PowerSupplyDiscoveryComplete
...    PowerSupplyOk
...    PowerSubsystemChanged
...    PowerSupplyWarning
...    PowerSupplyCommFault
...    PowerSupplyCommFaultCleared
...
...    = GENERIC USAGE =
...    | pybot | -v GIT_REPO_ROOT:<repo root path> | -v APPLIANCE_IP:<ipv4> |EM_OV_Power_Supply_Events_2.txt |
...    = Variables =
...    | GIT_REPO_ROOT | Required: Repo root path if NOT defined in environment variable|
...    | APPLIANCE_IP | Required: OneView IPv4 address |
Suite Setup       Configure Events Test Environment
Suite Teardown    Logout of EM RIS
Test Setup        Build RIS Object Model at Root Level
Library           json
Library           robot.api.logger
Variables         ${GIT_REPO_ROOT}/fusion/tests/DEA/variables/dea_variables.py
Variables         ${GIT_REPO_ROOT}/mgmtfw/tests/thunderbird/variables/tBird_variables.py
Resource          ${GIT_REPO_ROOT}${RESOURCE_ROOT}/resource_all.txt
Resource          ${GIT_REPO_ROOT}/mgmtfw/tests/thunderbird/resources/thunderbird_all.txt
Library           RoboGalaxyLibrary
Library           MgmtFWLibrary
Library           FusionLibrary

*** Test Case ***
TC 01: Validate Power Supply Input Loss Fault
    [Documentation]    This test will verify event PowerSupplyInputLossFault
    [Tags]    PS    FLM2.00    Automated
    ${last_fusion_event_id}=    get last fusion event ID
    ${operational_ps}=    Get List of Devices with Health OK    ${HPEMPowerSupply_Type}    ${PS_Device_Type}
    ${ps_count}=    Get Length    ${operational_ps}
    ${needed_ps}=    Get Needed Power Supplies In The Enclosure
    ${ps_capacity_initial}=    Get PowerSupplyCapacity
    Run Keyword If    ${ps_count}<=${needed_ps}    FAIL    There are not enough PS in the enclosure to validate this test
    : FOR    ${ps}    IN    @{operational_ps}
    \    Log To Console    Failing power supply in bay:${ps}
    \    Inject Inputloss Power Supply Fault    ${ps}
    \    Sleep    10
    \    ${failed_ps}=    Get List of Devices with Health Warning    ${HPEMPowerSupply_Type}    ${PS_Device_Type}
    \    List Should Contain Value    ${failed_ps}    ${ps}
    \    ${diags_50}    ${diags_auditlog_file_path}=    Get Diags Audit Log 50 Recent Entries
    \    Set Test Variable    ${EM_Event_Logger}    ${diags_auditlog_file_path}
    \    Verify Audit Log Alert Event    ${EL_PS_InputLoss_Fault}    ${PowerSupply_Device}    ${ps}    900
    \    Verify Fusion Event Sent By EM    ${EL_PS_InputLoss_Fault}    ${last_fusion_event_id}    ${Enclosure_category}
    \    ${power_supply_fault_status}=    Get PowerSupply Fault Status    ${ps}    IP_LOSS
    \    Should Be Equal    ${power_supply_fault_status}    ${STATUS_WARNING}
    \    Clear InputLoss Power Supply Fault    ${ps}
    \    Sleep    10
    \    ${ok_ps_list}=    Get List of Devices with Health OK    ${HPEMPowerSupply_Type}    ${PS_Device_Type}
    \    List Should Contain Value    ${ok_ps_list}    ${ps}
    \    ${power_supply_fault_status}=    Get PowerSupply Fault Status    ${ps}    IP_LOSS
    \    Should Be Equal    ${power_supply_fault_status}    ${STATUS_OK}
    [Teardown]    Run Keyword If Test Failed    Run Keywords    RIS EM Efuse PowerSupply    ${ps}    8    AND    Sleep     10

TC 02: Validate Power Supply Input Fault
    [Documentation]    This test will verify event PowerSupplyInputFault
    [Tags]    PS    FLM2.00    Automated
    ${last_fusion_event_id}=    get last fusion event ID
    ${operational_ps}=    Get List of Devices with Health OK    ${HPEMPowerSupply_Type}    ${PS_Device_Type}
    ${ps_count}=    Get Length    ${operational_ps}
    ${needed_ps}=    Get Needed Power Supplies In The Enclosure
    ${ps_capacity_initial}=    Get PowerSupplyCapacity
    Run Keyword If    ${ps_count}<=${needed_ps}    FAIL    There are not enough PS in the enclosure to validate this test
    : FOR    ${ps}    IN    @{operational_ps}
    \    ${power_supply_fault_status}=    Get PowerSupply Fault Status    ${ps}    IP_OK
    \    Log To Console    Failing power supply in bay:${ps}
    \    Log To Console    fault to be injected is Input Over Voltage
    \    ${PowerSupply_Status}=    Set EM RIS Faults    PSFaultInjection    ${ps}    PS_OK    true    InputOvervoltage
    \    Should Be Equal As Strings    ${PowerSupply_Status}    <Response [200]>
    \    Log To Console    input over voltage fault injected sucessfully
    \    Sleep    10
    \    ${failed_ps}=    Get List of Devices with Health Warning    ${HPEMPowerSupply_Type}    ${PS_Device_Type}
    \    List Should Contain Value    ${failed_ps}    ${ps}
    \    ${diags_50}    ${diags_auditlog_file_path}=    Get Diags Audit Log 50 Recent Entries
    \    Set Test Variable    ${EM_Event_Logger}    ${diags_auditlog_file_path}
    \    Verify Audit Log Alert Event    ${EL_PS_InputFault}    ${PowerSupply_Device}    ${ps}    900
    \    Verify Fusion Event Sent By EM    ${EL_PS_InputFault}    ${last_fusion_event_id}    ${Enclosure_category}
    \    ${power_supply_fault_status}=    Get PowerSupply Fault Status    ${ps}    IP_OK
    \    Should Be Equal    ${power_supply_fault_status}    ${STATUS_WARNING}
    \    Log To Console    fault to be cleared is Input Over Voltage
    \    ${PowerSupply_Status}=    Set EM RIS Faults    PSFaultInjection    ${ps}    PS_OK    false    InputOverVoltage
    \    Should Be Equal As Strings    ${PowerSupply_Status}    <Response [200]>
    \    Log To Console    input over voltage fault cleared sucessfully
    \    Sleep    10
    \    ${ok_ps_list}=    Get List of Devices with Health OK    ${HPEMPowerSupply_Type}    ${PS_Device_Type}
    \    List Should Contain Value    ${ok_ps_list}    ${ps}
    \    ${power_supply_fault_status}=    Get PowerSupply Fault Status    ${ps}    IP_OK
    \    Should Be Equal    ${power_supply_fault_status}    ${STATUS_OK}
    [Teardown]    Run Keyword If Test Failed    Run Keywords    RIS EM Efuse PowerSupply    ${ps}    8    AND    Sleep     10
