*** Settings ***
Documentation     Test suite to verify port mapping for a server bay.
...               pybot -L TRACE | GIT_REPO_ROOT:<path> | APPLIANCE_IP:<fusion_ipv4> | FUSION_PASSWORD:<password> | ADAPTER_BAY:<bay> | ADAPTER_MEZZ_SLOT<slot_number> | Port_Mapping.txt

Variables         ${GIT_REPO_ROOT}/fusion/tests/DEA/variables/dea_variables.py
Variables         ${GIT_REPO_ROOT}/fusion/tests/DEA/variables/data_variables.py
Variables         ${GIT_REPO_ROOT}/mgmtfw/tests/thunderbird/variables/tBird_variables.py
Resource          ${GIT_REPO_ROOT}${RESOURCE_ROOT}/resource_all.txt
Resource          ${GIT_REPO_ROOT}${EM_RESOURCE_ROOT}/thunderbird_all.txt

Library           RoboGalaxyLibrary
Library           MgmtFWLibrary
Library           FusionLibrary
Library           Collections

Suite Setup       Login to Fusion Via REST
Suite Teardown    Logout of Fusion Via REST

*** Test Cases ***
TC01: Verify Mezz Card port mapping against known mapping for Port 1
    [Documentation]    Verifies that the ICM mapped to the given mezz card for port 1 matches what bay and name the ICM is expected to have
    [Tags]    PE    API    Automated    EM
    ${server_info}=    Get Server Information    ${ADAPTER_BAY}
    Should Not Be Equal    ${server_info}    False    msg=Bay ${ADAPTER_BAY} does not have a blade
    ${mezz_info}=    Get Mezz Bay info    ${server_info}    ${ADAPTER_MEZZ_SLOT}
    Should Not Be Empty    ${mezz_info['deviceName']}    msg=Mezz slot ${ADAPTER_MEZZ_SLOT} does not have a mezz card
    ${port_info}=    Get Mezz Port Info    ${mezz_info}    ${1}
    # Get ICM URI that is mapped to port 1
    ${icm_uri_from_mezz}=    Set Variable    ${port_info['interconnectUri']}
    ${present_icm_list}    ${absent_icm_list} =    Get Interconnect Bay Present And Absent List
    # Find the ICM info for the ICM that is mapped to port 1 by URI
    :FOR    ${icm_bay}    IN    @{present_icm_list}
    \    ${icm_info}=    Get ICM Info    ${icm_bay}
    \    ${icm_uri}=    Run Keyword If    '${icm_uri_from_mezz}' == '${icm_info['uri']}'    Set Variable    ${icm_info['uri']}
    \    Run Keyword If    '${icm_uri}' == '${icm_uri_from_mezz}'    Exit For Loop
    ${icm_name}=    Run Keyword If    '${icm_uri}' != 'None'    Set Variable    ${icm_info['productName']}
    ${icm_bays}=    Set Variable    ${Expected_Server_Mezz_ICM_Mapping['${ADAPTER_BAY}']['${ADAPTER_MEZZ_SLOT}']}
    ${length}=    Get Length    ${icm_bays}
    ${expected_icm_bay}=    Run Keyword If    ${length} > 0    Set Variable    ${Expected_Server_Mezz_ICM_Mapping['${ADAPTER_BAY}']['${ADAPTER_MEZZ_SLOT}'][0]}
    Run Keyword If    '${expected_icm_bay}' != 'None'    Should Be Equal    ${icm_bay}    ${expected_icm_bay}
    Run Keyword If    '${expected_icm_bay}' != 'None'    Should be Equal    ${icm_name}    ${Tbird_Filled_ICMS['${expected_icm_bay}']}    msg=Incorrect ICM found in expected bay ${expected_icm_bay}

TC02: Verify Mezz Card port mapping against known mapping for Port 2
    [Documentation]    Verifies that the ICM mapped to the given mezz card for port 2 matches what bay and name the ICM is expected to have
    [Tags]    PE    API    Automated    EM
    ${server_info}=    Get Server Information    ${ADAPTER_BAY}
    Should Not Be Equal    ${server_info}    False    msg=Bay ${ADAPTER_BAY} does not have a blade
    ${mezz_info}=    Get Mezz Bay info    ${server_info}    ${ADAPTER_MEZZ_SLOT}
    Should Not Be Empty    ${mezz_info['deviceName']}    msg=Mezz slot ${ADAPTER_MEZZ_SLOT} does not have a mezz card
    ${port_info}=    Get Mezz Port Info    ${mezz_info}    ${2}
    # Get ICM URI that is mapped to port 2
    ${icm_uri_from_mezz}=    Set Variable    ${port_info['interconnectUri']}
    ${present_icm_list}    ${absent_icm_list} =    Get Interconnect Bay Present And Absent List
    # Find the ICM info for the ICM that is mapped to port 2 by URI
    :FOR    ${icm_bay}    IN    @{present_icm_list}
    \    ${icm_info}=    Get ICM Info    ${icm_bay}
    \    ${icm_uri}=    Run Keyword If    '${icm_uri_from_mezz}' == '${icm_info['uri']}'    Set Variable    ${icm_info['uri']}
    \    Run Keyword If    '${icm_uri}' == '${icm_uri_from_mezz}'    Exit For Loop
    ${icm_name}=    Run Keyword If    '${icm_uri}' != 'None'    Set Variable    ${icm_info['productName']}
    ${icm_bays}=    Set Variable    ${Expected_Server_Mezz_ICM_Mapping['${ADAPTER_BAY}']['${ADAPTER_MEZZ_SLOT}']}
    ${length}=    Get Length    ${icm_bays}
    ${expected_icm_bay}=    Run Keyword If    ${length} > 1    Set Variable    ${Expected_Server_Mezz_ICM_Mapping['${ADAPTER_BAY}']['${ADAPTER_MEZZ_SLOT}'][1]}
    Run Keyword If    '${expected_icm_bay}' != 'None'    Should Be Equal    ${icm_bay}    ${expected_icm_bay}
    Run Keyword If    '${expected_icm_bay}' != 'None'    Should be Equal    ${icm_name}    ${Tbird_Filled_ICMS['${expected_icm_bay}']}    msg=Incorrect ICM found in expected bay ${expected_icm_bay}

TC03: Verify Mezz Card ICM Mapping for Port 1 using OV
    [Documentation]    Verifies that the interconnect used for port 1 of the mezz card, if one exists, matches what interconnect is expected in that bay by comparing their URIs
    [Tags]    PE    API    Automated    EM
    ${server_info}=    Get Server Information    ${ADAPTER_BAY}
    Should Not Be Equal    ${server_info}    False    msg=Bay ${ADAPTER_BAY} does not have a blade
    ${mezz_info}=    Get Mezz Bay info    ${server_info}    ${ADAPTER_MEZZ_SLOT}
    Should Not Be Empty    ${mezz_info['deviceName']}    msg=Mezz slot ${ADAPTER_MEZZ_SLOT} does not have a mezz card
    ${port_info}=    Get Mezz Port Info    ${mezz_info}    ${1}
    ${icm_uri_from_mezz}=    Set Variable    ${port_info['interconnectUri']}
    ${icm_bay}=    Set Variable    ${Tbird_Mezz_ICM_Mappings['${ADAPTER_MEZZ_SLOT}'][0]}
    ${icm_info}=    Run Keyword If    '${icm_uri_from_mezz}'!='None'    Get ICM Info    ${icm_bay}
    ${icm_uri_from_ov}=    Run Keyword If    '${icm_uri_from_mezz}'!='None'    Get From Dictionary    ${icm_info}    uri
    Run Keyword If    '${icm_uri_from_mezz}'!='None' and '${icm_uri_from_ov}'!='None'    Should Be Equal    ${icm_uri_from_mezz}    ${icm_uri_from_ov}
    Run Keyword If    '${icm_uri_from_mezz}'=='None'    Should Be Equal    '${icm_uri_from_ov}'    'None'

TC04: Verify Mezz Card ICM Mapping for Port 2 using ov
    [Documentation]    Verifies that the interconnect used for port 2 of the mezz card, if one exists, matches what interconnect is expected in that bay by comparing their URIs
    [Tags]    PE    API    Automated    EM
    ${server_info}=    Get Server Information    ${ADAPTER_BAY}
    Should Not Be Equal    ${server_info}    False    msg=Bay ${ADAPTER_BAY} does not have a blade
    ${mezz_info}=    Get Mezz Bay info    ${server_info}    ${ADAPTER_MEZZ_SLOT}
    Should Not Be Empty    ${mezz_info['deviceName']}    msg=Mezz slot ${ADAPTER_MEZZ_SLOT} does not have a mezz card
    ${port_info}=    Get Mezz Port Info    ${mezz_info}    ${2}
    ${icm_uri_from_mezz}=    Set Variable    ${port_info['interconnectUri']}
    ${icm_bay}=    Set Variable    ${Tbird_Mezz_ICM_Mappings['${ADAPTER_MEZZ_SLOT}'][1]}
    ${icm_info}=    Run Keyword If    '${icm_uri_from_mezz}'!='None'    Get ICM Info    ${icm_bay}
    ${icm_uri_from_ov}=    Run Keyword If    '${icm_uri_from_mezz}'!='None'    Get From Dictionary    ${icm_info}    uri
    Run Keyword If    '${icm_uri_from_mezz}'!='None' and '${icm_uri_from_ov}'!='None'    Should Be Equal    ${icm_uri_from_mezz}    ${icm_uri_from_ov}
    Run Keyword If    '${icm_uri_from_mezz}'=='None'    Should Be Equal    '${icm_uri_from_ov}'    'None'