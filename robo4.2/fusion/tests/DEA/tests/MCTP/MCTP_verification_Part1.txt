*** Settings ***
Documentation    Test suite executes scenarios how OV handles iLO5 disable MCTP UI feature with presence of a single networking-based adapter

...    = GENERIC USAGE =
...    pybot -L Trace -v APPLIANCE_IP:<APP_IPv4-IPv6> -v Server_Bay:<server bay> -v Enclosures:<Enclosure_Serial_no.> -v Adapter_Mezz_Slot:<mezz_slot_no.>    MCTP_verification_Part1.txt
...    = Variables =
...    | GIT_REPO_ROOT |      Required: Repo root path if NOT defined in environment variable this is mgmtfw root location|
...    | APPLIANCE_IP |       Required: OneView IPv4 address |


Variables         ${GIT_REPO_ROOT}/fusion/tests/DEA/variables/dea_variables.py
Variables         ${GIT_REPO_ROOT}/fusion/tests/DEA/variables/data_variables.py
Variables         ${GIT_REPO_ROOT}/mgmtfw/tests/thunderbird/variables/tBird_variables.py
Resource          ${GIT_REPO_ROOT}${RESOURCE_ROOT}/resource_all.txt
Resource          ${GIT_REPO_ROOT}${EM_RESOURCE_ROOT}/thunderbird_all.txt
Library           ${GIT_REPO_ROOT}${RESOURCE_ROOT}/iLO/PERISClient.py
Library           ${GIT_REPO_ROOT}${RESOURCE_ROOT}/iLO/ILOAPIKeywords.py
Library           RoboGalaxyLibrary
Library           MgmtFWLibrary
Library           FusionLibrary
Library           Collections
Library           Selenium2Library

Suite Setup       Run Keywords    Login to Fusion Via REST    AND    Login to Fusion via SSH    AND    Login to EM And Create Session    AND    Clean UP Environment
Suite Teardown    Run Keywords    Sleep    60    AND    Efuse Server Device    EFuseOn    ${Server_Bay}    AND    Sleep    60    AND
...    Efuse Server Device    EFuseOff    ${Server_Bay}    AND    Wait For OV To Add Specify Server    OK    ${Server_Bay}    AND
...    Refresh Server Hardware Bay    ${Server_Bay}    AND    Clean UP Environment    AND    Logout of Fusion Via REST    AND    Logout of Fusion Via SSH

*** Variables ***
${DisableMCTPOnServeruri}      /redfish/v1/Chassis/1/Actions/Oem/Hpe/HpeServerChassis.DisableMCTPOnServer/
${FactoryResetMCTPuri}         /redfish/v1/Chassis/1/Actions/Oem/Hpe/HpeServerChassis.FactoryResetMCTP/

*** Test Cases ***

TC 01: Test Case Executes Disable MCTP At The Server Level - No Profile / Single Adapter, And Validate
    [Documentation]    This Test Executes Disable MCTP At The Server Level - No Profile / Single Adapter, And Validate
    [Tags]    MCTP    Automated
    [Setup]   Set Library Search Order    ILOAPIKeywords    MgmtFWLibrary
    ${last_fusion_event_id}=    Get Last Fusion Event Id
    ${TRUE}=    Convert to Boolean    true
    ${FALSE}=    Convert to Boolean    false
    ${ilo_ip}=    Get Server iLO IP    ${Server_Bay}
    Set Global Variable    ${ilo_ip}
    ${status}=    Login to iLO ipv4     ${ilo_ip}    ${iLO_UserName}    ${iLO_Password}
    Should Be Equal    ${status}    PASS
    Sleep    60
    ${post}=    ILOAPIKeywords.iLo Ris Post Object    uri=${DisableMCTPOnServeruri}
    Sleep    60
    ${Output} =   Efuse Server Device    EFuseOn    ${Server_Bay}
    Sleep    60
    ${Output} =   Efuse Server Device    EFuseOff    ${Server_Bay}
    Wait For OV To Add Specify Server    Critical    ${Server_Bay}
    Refresh Server Hardware Bay    ${Server_Bay}
    ${alert_status}=    Validate alertID in fusion events    ${last_fusion_event_id}    ${MCTPDisabled_Alert}
    Should Be Equal    ${alert_status}    PASS
    ${status}=    Login to iLO ipv4     ${ilo_ip}    ${iLO_UserName}    ${iLO_Password}
    Should Be Equal    ${status}    PASS
    Sleep    60
    ${obj}=    Ris Get Chassis Info
    ${state}=     Get From Dictionary    ${obj}    Oem
    ${mctp_state}=    Get From Dictionary    ${state['Hpe']}    MCTPEnabledOnServer
    Should Be Equal    ${mctp_state}    ${FALSE}
    ${reset}=    ILOAPIKeywords.iLo Ris Post Object    uri=${FactoryResetMCTPuri}
    Sleep    60
    ${Output} =   Efuse Server Device    EFuseOn    ${Server_Bay}
    Sleep    60
    ${Output} =   Efuse Server Device    EFuseOff    ${Server_Bay}
    Wait For OV To Add Specify Server    OK    ${Server_Bay}
    Sleep    120
    Refresh Server Hardware Bay    ${Server_Bay}
    ${status}=    Validate alertID in fusion events    ${last_fusion_event_id}    ${MCTPEnabled_ALert}
    Should Be Equal    ${status}    PASS
    ${status}=    Login to iLO ipv4     ${ilo_ip}    ${iLO_UserName}    ${iLO_Password}
    Should Be Equal    ${status}    PASS
    Sleep    60
    ${obj}=    Ris Get Chassis Info
    ${state}=     Get From Dictionary    ${obj}    Oem
    ${mctp_state}=    Get From Dictionary    ${state['Hpe']}    MCTPEnabledOnServer
    Should Be Equal    ${mctp_state}    ${TRUE}
    [Teardown]    Run Keyword If Test Failed    Run Keywords    Login to iLO ipv4     ${ilo_ip}    ${iLO_UserName}    ${iLO_Password}    AND
    ...    Sleep    60    AND    ILOAPIKeywords.iLo Ris Post Object    uri=${FactoryResetMCTPuri}    AND    Sleep    60    AND
    ...    Efuse Server Device    EFuseOn    ${Server_Bay}    AND    Sleep    60    AND    Efuse Server Device    EFuseOff    ${Server_Bay}    AND
    ...    Wait For OV To Add Specify Server    OK    ${Server_Bay}    AND    Refresh Server Hardware Bay    ${Server_Bay}

TC 02: Test Case Executes Disable MCTP At The Devices Level For Single Mezz Slot - No Profile / Single Adapter, And Validate
    [Documentation]    This Test Executes Disable MCTP At The Devices Level For Single Mezz Slot - No Profile / Single Adapter, And Validate
    [Tags]    MCTP    Automated
    [Setup]   Set Library Search Order    ILOAPIKeywords    MgmtFWLibrary
    ${last_fusion_event_id}=    Get Last Fusion Event Id
    ${TRUE}=    Convert to Boolean    true
    ${FALSE}=    Convert to Boolean    false
    ${ilo_ip}=    Get Server iLO IP    ${Server_Bay}
    Set Global Variable    ${ilo_ip}
    ${status}=    Login to iLO ipv4     ${ilo_ip}    ${iLO_UserName}    ${iLO_Password}
    Should Be Equal    ${status}    PASS
    Sleep    60
    #${Adapter_Mezz_Slot} = mezz slot where adapter is present
    ${post}=    ILOAPIKeywords.iLo Ris Patch Object    mezzslot=${Adapter_Mezz_Slot}
    Sleep    60
    ${Output} =   Efuse Server Device    EFuseOn    ${Server_Bay}
    Sleep    60
    ${Output} =   Efuse Server Device    EFuseOff    ${Server_Bay}
    Wait For OV To Add Specify Server    Critical    ${Server_Bay}
    #Refresh Server Hardware Bay    ${Server_Bay}
    Sleep    200
    ${alert_status}=    Validate alertID in fusion events    ${last_fusion_event_id}    ${MCTPDisabled_Alert}
    Should Be Equal    ${alert_status}    PASS
    ${status}=    Login to iLO ipv4     ${ilo_ip}    ${iLO_UserName}    ${iLO_Password}
    Should Be Equal    ${status}    PASS
    Sleep    60
    ${obj}=    ILOAPIKeywords.iLo Ris Get Object    uri=/redfish/v1/Chassis/1/Devices/${Adapter_Mezz_Slot}/
    ${state}=     Get From Dictionary    ${obj}    MCTPProtocolDisabled
    Should Be Equal    ${state}    ${TRUE}
    ${reset}=    ILOAPIKeywords.iLo Ris Post Object    uri=${FactoryResetMCTPuri}
    Sleep    60
    ${Output} =   Efuse Server Device    EFuseOn    ${Server_Bay}
    Sleep    60
    ${Output} =   Efuse Server Device    EFuseOff    ${Server_Bay}
    Wait For OV To Add Specify Server    OK    ${Server_Bay}
    Refresh Server Hardware Bay    ${Server_Bay}
    ${status}=    Validate alertID in fusion events    ${last_fusion_event_id}    ${MCTPEnabled_ALert}
    Should Be Equal    ${status}    PASS
    ${status}=    Login to iLO ipv4     ${ilo_ip}    ${iLO_UserName}    ${iLO_Password}
    Should Be Equal    ${status}    PASS
    Sleep    60
    ${obj}=    ILOAPIKeywords.iLo Ris Get Object    uri=/redfish/v1/Chassis/1/Devices/${Adapter_Mezz_Slot}/
    ${state}=     Get From Dictionary    ${obj}    MCTPProtocolDisabled
    Should Be Equal    ${state}    ${FALSE}
    [Teardown]    Run Keyword If Test Failed    Run Keywords    Login to iLO ipv4     ${ilo_ip}    ${iLO_UserName}    ${iLO_Password}    AND
    ...    Sleep    60    AND    ILOAPIKeywords.iLo Ris Post Object    uri=${FactoryResetMCTPuri}    AND    Sleep    60    AND
    ...    Efuse Server Device    EFuseOn    ${Server_Bay}    AND    Sleep    60    AND    Efuse Server Device    EFuseOff    ${Server_Bay}    AND
    ...    Wait For OV To Add Specify Server    OK    ${Server_Bay}    AND    Refresh Server Hardware Bay    ${Server_Bay}

TC 03: Test Case Executes Disable MCTP at the Devices Level for all Mezz slots - No Profile / Single Adapter, And Validate
    [Documentation]    This Test Executes Disable MCTP at the Devices Level for all Mezz slots - No Profile / Single Adapter, And Validate
    [Tags]    MCTP    Automated
    [Setup]   Set Library Search Order    ILOAPIKeywords    MgmtFWLibrary
    ${last_fusion_event_id}=    Get Last Fusion Event Id
    ${TRUE}=    Convert to Boolean    true
    ${FALSE}=    Convert to Boolean    false
    ${info}=    Get Server Info    ${Server_Bay}
    ${port_map}=     Get From Dictionary    ${info}    portMap
    ${device_slots}=    Get From Dictionary    ${port_map}    deviceSlots
    ${mezz_slots}=    Get Length  ${device_slots}
    ${mezz_slots}=    Evaluate    ${mezz_slots}+1
    ${ilo_ip}=    Get Server iLO IP    ${Server_Bay}
    Set Global Variable    ${ilo_ip}
    ${status}=    Login to iLO ipv4     ${ilo_ip}    ${iLO_UserName}    ${iLO_Password}
    Should Be Equal    ${status}    PASS
    Sleep    60
    :FOR    ${bay}    IN RANGE    1    ${mezz_slots}
    \    ${post}=    ILOAPIKeywords.iLo Ris Patch Object    mezzslot=${bay}
    \    Sleep    120
    \    ${obj}=    ILOAPIKeywords.iLo Ris Get Object    uri=/redfish/v1/Chassis/1/Devices/${bay}/
    \    ${state}=     Get From Dictionary    ${obj}    MCTPProtocolDisabled
    \    Should Be Equal    ${state}    ${TRUE}
    ${Output} =   Efuse Server Device    EFuseOn    ${Server_Bay}
    Sleep    60
    ${Output} =   Efuse Server Device    EFuseOff    ${Server_Bay}
    Wait For OV To Add Specify Server    Critical    ${Server_Bay}
    Sleep    60
    Refresh Server Hardware Bay    ${Server_Bay}
    ${alert_status}=    Validate alertID in fusion events    ${last_fusion_event_id}    ${MCTPDisabled_Alert}
    Should Be Equal    ${alert_status}    PASS
    ${status}=    Login to iLO ipv4     ${ilo_ip}    ${iLO_UserName}    ${iLO_Password}
    Should Be Equal    ${status}    PASS
    Sleep    60
    ${reset}=    ILOAPIKeywords.iLo Ris Post Object    uri=${FactoryResetMCTPuri}
    Sleep    60
    ${Output} =   Efuse Server Device    EFuseOn    ${Server_Bay}
    Sleep    60
    ${Output} =   Efuse Server Device    EFuseOff    ${Server_Bay}
    Wait For OV To Add Specify Server    OK    ${Server_Bay}
    Sleep    60
    Refresh Server Hardware Bay    ${Server_Bay}
    ${status}=    Validate alertID in fusion events    ${last_fusion_event_id}    ${MCTPEnabled_ALert}
    Should Be Equal    ${status}    PASS
    ${status}=    Login to iLO ipv4     ${ilo_ip}    ${iLO_UserName}    ${iLO_Password}
    Should Be Equal    ${status}    PASS
    Sleep    60
    :FOR    ${bay}    IN RANGE    1    ${mezz_slots}
    \    ${obj}=    ILOAPIKeywords.iLo Ris Get Object    uri=/redfish/v1/Chassis/1/Devices/${bay}/
    \    ${state}=     Get From Dictionary    ${obj}    MCTPProtocolDisabled
    \    Should Be Equal    ${state}    ${FALSE}
    [Teardown]    Run Keyword If Test Failed    Run Keywords    Login to iLO ipv4     ${ilo_ip}    ${iLO_UserName}    ${iLO_Password}    AND
    ...    Sleep    60    AND    ILOAPIKeywords.iLo Ris Post Object    uri=${FactoryResetMCTPuri}    AND    Sleep    60    AND
    ...    Efuse Server Device    EFuseOn    ${Server_Bay}    AND    Sleep    60    AND    Efuse Server Device    EFuseOff    ${Server_Bay}    AND
    ...    Wait For OV To Add Specify Server    OK    ${Server_Bay}    AND    Refresh Server Hardware Bay    ${Server_Bay}

TC 04: Test Case Executes Disable MCTP at the Server Level - With Profile / Single Adapter, And Validate
    [Documentation]    This Test Executes Disable MCTP at the Server Level - With Profile / Single Adapter, And Validate
    [Tags]    MCTP    Automated
    [Setup]   Set Library Search Order    ILOAPIKeywords    MgmtFWLibrary
    ${TRUE}=    Convert to Boolean    true
    ${FALSE}=    Convert to Boolean    false
    Clean UP Environment
    ${bay_list}=    Create List    ${Server_Bay}
    Setup Ethernet FCoE Appliance
    ${server_profile_body}=    Update Ethernet Server Profile body     ${Server_Bay}    ${server_profiles[0]}
    Set to dictionary  ${server_profile_body}    connectionSettings   ${None}
    Power OFF Server Blade Bay    ${Server_Bay}
    Sleep    60
    Create Server Profile    ${server_profile_body}
    Sleep    60
    ${Output} =   Efuse Server Device    EFuseOn    ${Server_Bay}
    Sleep    60
    ${Output} =   Efuse Server Device    EFuseOff    ${Server_Bay}
    Wait For OV To Add Specify Server    OK    ${Server_Bay}
    Sleep    120
    ${server_state}=    Get Server State    ${Server_Bay}
    Should Be Equal    ${server_state}    ProfileApplied
    ${last_fusion_event_id}=    Get Last Fusion Event Id
    ${ilo_ip}=    Get Server iLO IP    ${Server_Bay}
    Set Global Variable    ${ilo_ip}
    ${status}=    Login to iLO ipv4     ${ilo_ip}    ${iLO_UserName}    ${iLO_Password}
    Should Be Equal    ${status}    PASS
    Sleep    60
    ${post}=    ILOAPIKeywords.iLo Ris Post Object    uri=${DisableMCTPOnServeruri}
    Sleep    60
    Refresh Server Hardware Bay    ${Server_Bay}
    ${Output} =   Efuse Server Device    EFuseOn    ${Server_Bay}
    Sleep    60
    ${Output} =   Efuse Server Device    EFuseOff    ${Server_Bay}
    Wait For OV To Add Specify Server    Critical    ${Server_Bay}
    Sleep    120
    ${server_details}=  Get server Information    ${Server_Bay}
    ${status}=    Get From Dictionary    ${server_details}    status
    Should be Equal    ${status}    Critical
    ${profile_details}=    Fusion Api Get Server Profiles     ${server_details['serverProfileUri']}
    Should be Equal    ${profile_details['status']}    Critical
    ${alert_status}=    Validate alertID in fusion events    ${last_fusion_event_id}    ${MCTPDisabled_Alert}
    Should Be Equal    ${alert_status}    PASS
    ${status}=    Login to iLO ipv4     ${ilo_ip}    ${iLO_UserName}    ${iLO_Password}
    Should Be Equal    ${status}    PASS
    Sleep    60
    ${obj}=    Ris Get Chassis Info
    ${state}=     Get From Dictionary    ${obj}    Oem
    ${mctp_state}=    Get From Dictionary    ${state['Hpe']}    MCTPEnabledOnServer
    Should Be Equal    ${mctp_state}    ${FALSE}
    ${reset}=    ILOAPIKeywords.iLo Ris Post Object    uri=${FactoryResetMCTPuri}
    Sleep    60
    Refresh Server Hardware Bay    ${Server_Bay}
    ${Output} =   Efuse Server Device    EFuseOn    ${Server_Bay}
    Sleep    60
    ${Output} =   Efuse Server Device    EFuseOff    ${Server_Bay}
    Wait For OV To Add Specify Server    OK    ${Server_Bay}
    Sleep    120
    ${status}=    Validate alertID in fusion events    ${last_fusion_event_id}    ${MCTPEnabled_ALert}
    Should Be Equal    ${status}    PASS
    ${status}=    Login to iLO ipv4     ${ilo_ip}    ${iLO_UserName}    ${iLO_Password}
    Should Be Equal    ${status}    PASS
    Sleep    60
    ${obj}=    Ris Get Chassis Info
    ${state}=     Get From Dictionary    ${obj}    Oem
    ${mctp_state}=    Get From Dictionary    ${state['Hpe']}    MCTPEnabledOnServer
    Should Be Equal    ${mctp_state}    ${TRUE}
    ${server_details}=  Get server Information    ${Server_Bay}
    ${status}=    Get From Dictionary    ${server_details}    status
    Should be Equal    ${status}    OK
    ${profile_details}=    Fusion Api Get Server Profiles     ${server_details['serverProfileUri']}
    Should be Equal    ${profile_details['status']}    OK
    Run Keyword And Ignore Error    Delete Server Profile    ${bay_list}
    [Teardown]    Run Keywords    Login to iLO ipv4     ${ilo_ip}    ${iLO_UserName}    ${iLO_Password}    AND
    ...    Sleep    60    AND    ILOAPIKeywords.iLo Ris Post Object    uri=${FactoryResetMCTPuri}    AND    Sleep    60    AND
    ...    Efuse Server Device    EFuseOn    ${Server_Bay}    AND    Sleep    60    AND    Efuse Server Device    EFuseOff    ${Server_Bay}    AND
    ...    Wait For OV To Add Specify Server    OK    ${Server_Bay}    AND    Refresh Server Hardware Bay    ${Server_Bay}    AND    Clean UP Environment

TC 05: Test Case Executes Disable MCTP At The Devices Level For Single Mezz Slot - With Profile / Single Adapter, And Validate
    [Documentation]    This Test Executes Disable MCTP At The Devices Level For Single Mezz Slot - With Profile / Single Adapter, And Validate
    [Tags]    MCTP    Automated
    [Setup]   Set Library Search Order    ILOAPIKeywords    MgmtFWLibrary
    ${TRUE}=    Convert to Boolean    true
    ${FALSE}=    Convert to Boolean    false
    Clean UP Environment
    ${bay_list}=    Create List    ${Server_Bay}
    Set To Dictionary   ${encl_group['interconnectBayMappings'][0]}   logicalInterconnectGroupUri   LIG:${LIG_Name}
    Setup Ethernet FCoE Appliance
    Set To Dictionary   ${enet_connection['connections'][0]}   networkUri   ETH:${Ethernet_Name}
    ${server_profile_body}=    Update Ethernet Server Profile body     ${Server_Bay}    ${server_profiles[0]}
    Set to dictionary  ${server_profile_body}    connectionSettings   ${None}
    Power OFF Server Blade Bay    ${Server_Bay}
    Sleep    60
    Create Server Profile    ${server_profile_body}
    Sleep    60
    ${Output} =   Efuse Server Device    EFuseOn    ${Server_Bay}
    Sleep    60
    ${Output} =   Efuse Server Device    EFuseOff    ${Server_Bay}
    Wait For OV To Add Specify Server    OK    ${Server_Bay}
    Sleep    120
    ${server_state}=    Get Server State    ${Server_Bay}
    Should Be Equal    ${server_state}    ProfileApplied
    ${last_fusion_event_id}=    Get Last Fusion Event Id
    ${ilo_ip}=    Get Server iLO IP    ${Server_Bay}
    Set Global Variable    ${ilo_ip}
    ${status}=    Login to iLO ipv4     ${ilo_ip}    ${iLO_UserName}    ${iLO_Password}
    Should Be Equal    ${status}    PASS
    Sleep    60
    #${Adapter_Mezz_Slot} = mezz slot where adapter is present
    ${post}=    ILOAPIKeywords.iLo Ris Patch Object    mezzslot=${Adapter_Mezz_Slot}
    Sleep    60
    Refresh Server Hardware Bay    ${Server_Bay}
    ${Output} =   Efuse Server Device    EFuseOn    ${Server_Bay}
    Sleep    60
    ${Output} =   Efuse Server Device    EFuseOff    ${Server_Bay}
    Wait For OV To Add Specify Server    Critical    ${Server_Bay}
    Sleep    120
    ${server_details}=  Get server Information    ${Server_Bay}
    ${status}=    Get From Dictionary    ${server_details}    status
    Should be Equal    ${status}    Critical
    ${profile_details}=    Fusion Api Get Server Profiles     ${server_details['serverProfileUri']}
    Should be Equal    ${profile_details['status']}    Critical
    ${alert_status}=    Validate alertID in fusion events    ${last_fusion_event_id}    ${MCTPDisabled_Alert}
    Should Be Equal    ${alert_status}    PASS
    ${status}=    Login to iLO ipv4     ${ilo_ip}    ${iLO_UserName}    ${iLO_Password}
    Should Be Equal    ${status}    PASS
    Sleep    60
    ${obj}=    ILOAPIKeywords.iLo Ris Get Object    uri=/redfish/v1/Chassis/1/Devices/${Adapter_Mezz_Slot}/
    ${state}=     Get From Dictionary    ${obj}    MCTPProtocolDisabled
    Should Be Equal    ${state}    ${TRUE}
    ${reset}=    ILOAPIKeywords.iLo Ris Post Object    uri=${FactoryResetMCTPuri}
    Sleep    60
    Refresh Server Hardware Bay    ${Server_Bay}
    ${Output} =   Efuse Server Device    EFuseOn    ${Server_Bay}
    Sleep    60
    ${Output} =   Efuse Server Device    EFuseOff    ${Server_Bay}
    Wait For OV To Add Specify Server    OK    ${Server_Bay}
    ${status}=    Validate alertID in fusion events    ${last_fusion_event_id}    ${MCTPEnabled_ALert}
    Should Be Equal    ${status}    PASS
    ${status}=    Login to iLO ipv4     ${ilo_ip}    ${iLO_UserName}    ${iLO_Password}
    Should Be Equal    ${status}    PASS
    Sleep    60
    ${obj}=    ILOAPIKeywords.iLo Ris Get Object    uri=/redfish/v1/Chassis/1/Devices/${Adapter_Mezz_Slot}/
    ${state}=     Get From Dictionary    ${obj}    MCTPProtocolDisabled
    Should Be Equal    ${state}    ${FALSE}
    ${server_details}=  Get server Information    ${Server_Bay}
    ${status}=    Get From Dictionary    ${server_details}    status
    Should be Equal    ${status}    OK
    ${profile_details}=    Fusion Api Get Server Profiles     ${server_details['serverProfileUri']}
    Should be Equal    ${profile_details['status']}    OK
    Run Keyword And Ignore Error    Delete Server Profile    ${bay_list}
    [Teardown]    Run Keywords    Login to iLO ipv4     ${ilo_ip}    ${iLO_UserName}    ${iLO_Password}    AND
    ...    Sleep    60    AND    ILOAPIKeywords.iLo Ris Post Object    uri=${FactoryResetMCTPuri}    AND    Sleep    60    AND
    ...    Efuse Server Device    EFuseOn    ${Server_Bay}    AND    Sleep    60    AND    Efuse Server Device    EFuseOff    ${Server_Bay}    AND
    ...    Wait For OV To Add Specify Server    OK    ${Server_Bay}    AND    Refresh Server Hardware Bay    ${Server_Bay}    AND    Clean UP Environment

TC 06: Test Case Executes Disable MCTP At The Devices Level For All Mezz Slots - With Profile / Single Adapter, And Validate
    [Documentation]    This Test Executes Disable MCTP At The Devices Level For All Mezz Slots - With Profile / Single Adapter, And Validate
    [Tags]    MCTP    Automated
    [Setup]   Set Library Search Order    ILOAPIKeywords    MgmtFWLibrary
    ${TRUE}=    Convert to Boolean    true
    ${FALSE}=    Convert to Boolean    false
    Clean UP Environment
    ${bay_list}=    Create List    ${Server_Bay}
    Set To Dictionary   ${encl_group['interconnectBayMappings'][0]}   logicalInterconnectGroupUri   LIG:${LIG_Name}
    Setup Ethernet FCoE Appliance
    Set To Dictionary   ${enet_connection['connections'][0]}   networkUri   ETH:${Ethernet_Name}
    ${server_profile_body}=    Update Ethernet Server Profile body     ${Server_Bay}    ${server_profiles[0]}
    Set to dictionary  ${server_profile_body}    connectionSettings   ${None}
    Power OFF Server Blade Bay    ${Server_Bay}
    Sleep    60
    Create Server Profile    ${server_profile_body}
    Sleep    60
    ${Output} =   Efuse Server Device    EFuseOn    ${Server_Bay}
    Sleep    60
    ${Output} =   Efuse Server Device    EFuseOff    ${Server_Bay}
    Wait For OV To Add Specify Server    OK    ${Server_Bay}
    Sleep    120
    ${server_state}=    Get Server State    ${Server_Bay}
    Should Be Equal    ${server_state}    ProfileApplied
    ${last_fusion_event_id}=    Get Last Fusion Event Id
    ${info}=    Get Server Info    ${Server_Bay}
    ${port_map}=     Get From Dictionary    ${info}    portMap
    ${device_slots}=    Get From Dictionary    ${port_map}    deviceSlots
    ${mezz_slots}=    Get Length  ${device_slots}
    ${mezz_slots}=    Evaluate    ${mezz_slots}+1
    ${ilo_ip}=    Get Server iLO IP    ${Server_Bay}
    Set Global Variable    ${ilo_ip}
    ${status}=    Login to iLO ipv4     ${ilo_ip}    ${iLO_UserName}    ${iLO_Password}
    Should Be Equal    ${status}    PASS
    Sleep    60
    :FOR    ${bay}    IN RANGE    1    ${mezz_slots}
    \    ${post}=    ILOAPIKeywords.iLo Ris Patch Object    mezzslot=${bay}
    \    Sleep    120
    \    ${obj}=    ILOAPIKeywords.iLo Ris Get Object    uri=/redfish/v1/Chassis/1/Devices/${bay}/
    \    ${state}=     Get From Dictionary    ${obj}    MCTPProtocolDisabled
    \    Should Be Equal    ${state}    ${TRUE}
    Refresh Server Hardware Bay    ${Server_Bay}
    ${Output} =   Efuse Server Device    EFuseOn    ${Server_Bay}
    Sleep    60
    ${Output} =   Efuse Server Device    EFuseOff    ${Server_Bay}
    Wait For OV To Add Specify Server    Critical    ${Server_Bay}
    Sleep    120
    ${server_details}=  Get server Information    ${Server_Bay}
    ${status}=    Get From Dictionary    ${server_details}    status
    Should be Equal    ${status}    Critical
    ${profile_details}=    Fusion Api Get Server Profiles     ${server_details['serverProfileUri']}
    Should be Equal    ${profile_details['status']}    Critical
    ${alert_status}=    Validate alertID in fusion events    ${last_fusion_event_id}    ${MCTPDisabled_Alert}
    Should Be Equal    ${alert_status}    PASS
    ${status}=    Login to iLO ipv4     ${ilo_ip}    ${iLO_UserName}    ${iLO_Password}
    Should Be Equal    ${status}    PASS
    Sleep    60
    ${reset}=    ILOAPIKeywords.iLo Ris Post Object    uri=${FactoryResetMCTPuri}
    Sleep    60
    Refresh Server Hardware Bay    ${Server_Bay}
    ${Output} =   Efuse Server Device    EFuseOn    ${Server_Bay}
    Sleep    60
    ${Output} =   Efuse Server Device    EFuseOff    ${Server_Bay}
    Wait For OV To Add Specify Server    OK    ${Server_Bay}
    Sleep    60
    ${status}=    Validate alertID in fusion events    ${last_fusion_event_id}    ${MCTPEnabled_ALert}
    Should Be Equal    ${status}    PASS
    ${status}=    Login to iLO ipv4     ${ilo_ip}    ${iLO_UserName}    ${iLO_Password}
    Should Be Equal    ${status}    PASS
    Sleep    60
    :FOR    ${bay}    IN RANGE    1    ${mezz_slots}
    \    ${obj}=    ILOAPIKeywords.iLo Ris Get Object    uri=/redfish/v1/Chassis/1/Devices/${bay}/
    \    ${state}=     Get From Dictionary    ${obj}    MCTPProtocolDisabled
    \    Should Be Equal    ${state}    ${FALSE}
    ${server_details}=  Get server Information    ${Server_Bay}
    ${status}=    Get From Dictionary    ${server_details}    status
    Should be Equal    ${status}    OK
    ${profile_details}=    Fusion Api Get Server Profiles     ${server_details['serverProfileUri']}
    Should be Equal    ${profile_details['status']}    OK
    Run Keyword And Ignore Error    Delete Server Profile    ${bay_list}
    [Teardown]    Run Keywords    Login to iLO ipv4     ${ilo_ip}    ${iLO_UserName}    ${iLO_Password}    AND
    ...    Sleep    60    AND    ILOAPIKeywords.iLo Ris Post Object    uri=${FactoryResetMCTPuri}    AND    Sleep    60    AND
    ...    Efuse Server Device    EFuseOn    ${Server_Bay}    AND    Sleep    60    AND    Efuse Server Device    EFuseOff    ${Server_Bay}    AND
    ...    Wait For OV To Add Specify Server    OK    ${Server_Bay}    AND    Refresh Server Hardware Bay    ${Server_Bay}    AND    Clean UP Environment
