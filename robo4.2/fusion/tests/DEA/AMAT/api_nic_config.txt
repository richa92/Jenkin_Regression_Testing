*** Settings ***
Documentation
...    = Usage =
...    | pybot | -L DEBUG | server_hardware.txt |
...    = Variables =
...    | ENCLOSURE | Required. Dictionary key from variables.py representing the desired enclosure. |
...    = Preconditions =
...    1. Server Profile with one or more Ethernet network connection is required.

Library           Collections
Library           json
Library           String
Variables         ../resources/variables.py    ${ENCLOSURE}
Resource          ../resources/defaults.txt
Resource          ../resources/fusion_api.txt
Force Tags        API    HW

Suite Setup       Verify Server Profile with a network exists
Suite Teardown    Logout Of Fusion Via REST

*** Variables ***
@{ports}    a  b  c  d

*** Test Cases ***
Modify SP Connection Speed and Verify
    ${Speed}=    Set Variable    1000

    # Modify Server Profile Connection Speed
    ${Connections}=    Modify SP Network Connection Payload    Mbps=${Speed}
    Set TO Dictionary    ${SP}    connections    ${Connections}
    Modify Server Profile    ${SP}

    # Verify Change
    ${ServerProfiles}=    Get Server Profile
    ${ServerProfile}=    Set Variable    ${ServerProfiles['members'][0]}
    Should Be Equal as Strings    ${ServerProfile['connections'][0]['requestedMbps']}    ${Speed}    msg=Failed to modify Server Profile connection speed.

    # Update Server Profile Global Variable
    Set Suite Variable    ${SP}    ${ServerProfile}

    Run Keyword And Continue On Failure
    ...    Verify Server Hardware Adapter

Modify SP Connection Maximum Bandwidth and Verify
    ${MaxMbps}=    Set Variable    15000

    # Modify Server Profile Connection Speed
    ${Connections}=    Modify SP Network Connection Payload    MaxMbps=${MaxMbps}
    Set TO Dictionary    ${SP}    connections    ${Connections}
    Modify Server Profile    ${SP}

    # Verify Change
    ${ServerProfiles}=    Get Server Profile
    ${ServerProfile}=    Set Variable    ${ServerProfiles['members'][0]}
    Should Be Equal as Strings    ${ServerProfile['connections'][0]['maximumMbps']}    ${MaxMbps}    msg=Failed to modify Server Profile maximum connection speed.

    # Update Server Profile Global Variable
    Set Suite Variable    ${SP}    ${ServerProfile}

    Run Keyword And Continue On Failure
    ...    Verify Server Hardware Adapter

Modify SP Connection portId and Verify
    ${portId}=    Set Variable    Mezz 1:1-a

    # Modify Server Profile Connection Speed
    ${Connections}=    Modify SP Network Connection Payload    portId=${portId}
    Set TO Dictionary    ${SP}    connections    ${Connections}
    Modify Server Profile    ${SP}

    # Verify Change
    ${ServerProfiles}=    Get Server Profile
    ${ServerProfile}=    Set Variable    ${ServerProfiles['members'][0]}
    Should Be Equal as Strings    ${ServerProfile['connections'][0]['portId']}    ${portId}    msg=Failed to modify Server Profile connection portId.

    # Update Server Profile Global Variable
    Set Suite Variable    ${SP}    ${ServerProfile}

    Run Keyword And Continue On Failure
    ...    Verify Server Hardware Adapter

Modify SP Connection Virtual Functions and Verify
    ${VFs}=    Set Variable    8

    # Modify Server Profile Connection Speed
    ${Connections}=    Modify SP Network Connection Payload    requestedVFs=${VFs}
    Set TO Dictionary    ${SP}    connections    ${Connections}
    Modify Server Profile    ${SP}

    # Verify Change
    ${ServerProfiles}=    Get Server Profile
    ${ServerProfile}=    Set Variable    ${ServerProfiles['members'][0]}
    Should Be Equal as Strings    ${ServerProfile['connections'][0]['requestedVFs']}    ${VFs}    msg=Failed to modify Server Profile requested Virtual Functions.

    # Update Server Profile Global Variable
    Set Suite Variable    ${SP}    ${ServerProfile}

    Run Keyword And Continue On Failure
    ...    Verify Server Hardware Adapter

*** Keywords ***
Verify Server Profile with a network exists
    Login To Fusion Via REST
    Verify Logical Enclosure exists
    Verify Server Profile exists
    Verify Server Profile has a network connection
    Run Keyword And Continue On Failure
    ...    Verify Server Hardware Adapter

Verify Logical Enclosure exists
    ${LE}=    Get Logical Enclosure
    Should be Equal as Strings    ${LE['count']}    1    msg=Logical Enclosure not found.

Verify Server Profile exists
    ${ServerProfile}=    Get Server Profile
    Should be Equal as Strings    ${ServerProfile['count']}    1    msg=Server Profile not found.
    ${SP}=    Set Variable    ${ServerProfile['members'][0]}
    Set Suite Variable    ${SP}

Verify Server Profile has a network connection
    ${Connections}=    Set Variable    ${SP['connections']}
    ${size}=    Get Length    ${Connections}
    Should not be equal as integers    ${size}    0    msg=Server Profile does not have any network connections.

    ${index}=    Evaluate    random.randint(0, ${size}-1)    random
    Set Suite Variable    ${Network}    ${Connections[${index}]}

Verify Server Hardware Adapter
    ${SH}=    Get Server Hardware From URI    ${SP['serverHardwareUri']}

    # Get Port Data
    ${match}    ${NIC}    ${mezz}    ${port}=    Should Match Regexp    ${SP['connections'][0]['portId']}    Mezz (\\d):(\\d)-(\\w)
    ${NIC_index}=    Evaluate    ${NIC}-1
    ${mezz_index}=    Evaluate    ${mezz}-1
    ${port_index}=    Get Index From List    ${ports}    ${port}

    ${NetworkAdapter}=    Set Variable    ${SH['portMap']['deviceSlots'][${NIC_index}]['physicalPorts'][${mezz_index}]['virtualPorts'][${port_index}]}
    ${Connection}=    Set Variable    ${SP['connections'][0]}


    Should Be Equal as Strings    ${NetworkAdapter['mac']}    ${Connection['mac']}    msg=Server Profile connection 'mac' does not match Server Hardware Adapter.
    Should Be Equal as Strings    ${NetworkAdapter['currentAllocatedVirtualFunctionCount']}    ${Connection['allocatedVFs']}    msg=Server Profile connection 'VirtualFunctionCount' does not match Server Hardware Adapter.
    Should Be Equal as Strings    ${NetworkAdapter['portFunction']}    ${port}    msg=Server Profile connection 'portFunction' does not match Server Hardware Adapter.
    ${port_index}=    Evaluate    ${port_index}+1
    Should Be Equal as Strings    ${NetworkAdapter['portNumber']}    ${port_index}    msg=Server Profile connection 'portNumber' does not match Server Hardware Adapter.
    # Should Be Equal as Strings    ${NetworkAdapter['wwnn']}    ${Connection['wwnn']}    msg=Server Profile connection 'wwnn' does not match Server Hardware Adapter.
    # Should Be Equal as Strings    ${NetworkAdapter['wwpn']}    ${Connection['wwpn']}    msg=Server Profile connection 'wwpn' does not match Server Hardware Adapter.

Modify SP Network Connection Payload
    [Arguments]    ${networkUri}=${Network['networkUri']}
    ...            ${interconnectUri}=${Network['interconnectUri']}
    ...            ${Mbps}=${Network['requestedMbps']}
    ...            ${maxMbps}=${Network['maximumMbps']}
    ...            ${type}=${Network['functionType']}
    ...            ${requestedVFs}=${Network['requestedVFs']}
    ...            ${allocatedVFs}=${Network['allocatedVFs']}
    ...            ${macType}=${Network['macType']}
    ...            ${wwpnType}=${Network['wwpnType']}
    ...            ${portId}=${Network['portId']}

    # Connection Attributes
    ${maxMbps}=         Convert To Integer    ${maxMbps}
    ${allocatedVFs}=    Convert To Integer    ${allocatedVFs}

    # Create Connection
    ${Connections}=    Create List
    ${Connection}=    Create Dictionary    id=${Network['id']}
    ...                                    name=${Network['name']}
    ...                                    functionType=${type}
    ...                                    networkUri=${NetworkUri}
    ...                                    interconnectUri=${InterconnectUri}
    ...                                    requestedMbps=${Mbps}
    ...                                    allicatedMbps=${Mbps}
    ...                                    maximumMbps=${maxMbps}
    ...                                    portId=${portId}
    ...                                    requestedVFs=${requestedVFs}
    ...                                    allocatedVFs=${allocatedVFs}
    ...                                    macType=${macType}
    ...                                    wwpnType=${wwpnType}
    Append To List    ${Connections}    ${Connection}

    [Return]    ${Connections}