*** Settings ***
Documentation
...    = Usage =
...    | pybot | -L DEBUG | api_create_fusion_elements.txt |
...    = Variables =
...    | ENCLOSURE | Required. Dictionary key from variables.py representing the desired enclosure. |

Library           Collections
Library           RoboGalaxyLibrary            # DVTs Robot Framework extensions
Library           FusionLibrary                # DVTs Robot Framework extensions
Variables         ../resources/variables.py    ${ENCLOSURE}
Resource          ../resources/em_api.txt
Resource          ../resources/defaults.txt
Resource          ../resources/fusion_ssh.txt  # DVT fusion API extensions
Resource          ../resources/fusion_api.txt  # DVT fusion API extensions
Resource          ../resources/system_info.txt
Resource          ../resources/enclosure_info.txt
Force Tags        API    HW

Suite Setup       Run Keywords
...          Login To Fusion Via REST
...          Login To Fusion Via SSH
...          EM Api Create Session
Suite Teardown    Logout Of Fusion Via REST

*** Variables ***
${Bay}           ${None}
${UplinkSets}    ${None}
${ICM Port}      Q1.2
${Connections}    ${None}

${ICM Bay}    1

*** Test Cases ***
Verify Enclosure in Monitored State
    [Tags]    Monitored
    Verify Enclosure in Monitored State

Create Ethernet Networks
    [Tags]    Network
    Create Ethernet Network    Network1    101
    Create Ethernet Network    Network2    102
    Verify Enclosure in Monitored State

Add Uplink Set to LIG
    [Tags]    UplinkSet
    ${ICM Bay}=    Select Bay    interconnectBays    ${ICM Bay}

    ${UplinkSets}=    Create Uplink Set Payload    ${ICM Port}    ${ICM Bay}
    Set Suite Variable    ${UplinkSets}

Create Logical Interconnect Group
   [Tags]    LIG
    Create LIG    UPLINK_SETS=${UplinkSets}
    Verify Enclosure in Monitored State

Create Enclosure Group
    [Tags]    EG
    Create Enclosure Group
    Verify Enclosure in Monitored State

Create Logical Enclosure
    [Tags]    LE
    Create Logical Enclosure
    Verify Enclosure in Configured State
    # Verify Logical Enclosure in 'Consistent' state
    # Verify Server Hardware in Managed state (not Unmanaged/Monitored)
    # Verify Logical Interconnects created

Add Connections to SP
    [Tags]    Connections    SP
    [Documentation]    Create Payload for connection with Network[0] with server profile
    ${Networks}=    Get Ethernet Networks
    ${Connections}=    Create SP Connections Payload    ${ICM Bay}    ${Networks[0]['uri']}
    Set Suite Variable    ${Connections}
    Log List    ${Connections}

Create Server Profile
    [Tags]    SP
    # Get Server Hardware for Profile
    ${ServerHardwareBay}=    Select Bay    deviceBays    ${Bay}
    ${ServerHardware}=       Get Server Hardware    ${ServerHardwareBay}

    # Poweroff Server Hardware if powered on.
    Run Keyword If    "${ServerHardware['powerState']}"=="On"
    ...    Power Off Server Hardware ${ServerHardware['uuid']}

    # Create Server Profile
    ${Response}=    Create Server Profile    ${SP_NAME}    ${ServerHardware['name']}    Connections=${Connections}
    ${Errors}=    Get Length    ${Response['taskErrors']}
    Should Be Equal as Integers    ${Errors}    0    msg=Errors encountered when creating Server Profile ${SP_NAME}.

    Verify Enclosure in Configured State
    # Verify Server Hardware in Configured state
    # Verify Interconnect state?
    # Verify Server Profile connection if used.

*** Keywords ***
Select Bay
    [Arguments]    ${DeviceBayType}    ${Bay}=${None}
    [Documentation]    Select random bay if Bay variable is 'None'.
    ${Bay}=    Run Keyword If    "${Bay}"=="${None}"
    ...    Select Random Present Enclosure ${DeviceBayType}
    ...    ELSE    Set Variable    ${Bay}
    [Return]    ${Bay}