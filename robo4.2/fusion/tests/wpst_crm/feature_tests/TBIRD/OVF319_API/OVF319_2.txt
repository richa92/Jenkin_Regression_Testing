*** Settings ***
Documentation       Feature Test: Provide AutoNeg-Disabled control for 40Gb QSFP ports for interoperability with Nexus 9K when CR4 based DAC cables are used


Variables           data_variables_F319.py

#Suite Setup        Run FTS and test-specific setup
#Suite Teardown     Suite Teardown

Resource            ../../../../resource/fusion_api_all_resource_files.txt

Library             Collections
Library             json
Library             OperatingSystem

*** Variables ***
${count}    0
${APPLIANCE_IP}    15.115.13.49
*** Test Cases ***

Create an LIG with portspeed Auto for Qx.1
    Set Log Level   TRACE
    Run Keyword and Ignore Error    Write To ciDebug Log
    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}
    ${body} =   Build LIG body      ${ligs['2']}
    ${resp} =   Fusion Api Create LIG   ${body}
    ${task_state} =         Fusion Api Get Task     uri=${resp['uri']}
    ${valDict} =    Create Dictionary   status_code=${200}
    ...                                 taskState=Completed
    Validate Response Regex     ${task_state}   ${valDict}


Edit LIG with portspeed 40G for port Qx.1
    Set Log Level   TRACE
    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}
    ${resp} =   Fusion Api Get Lig    param=?filter="'name'=='${LIG1}'"
    ${lig_uri} =    Get From Dictionary     ${resp['members'][0]}   uri
    ${body} =   Build LIG body      ${lig_edit['1']}
    ${resp} =   Fusion Api Edit Lig     ${body}     ${lig_uri}
    ${task} =   Wait For Task   ${resp}     120s    2s
    ${task_state} =     Get From dictionary     ${task}     taskState
    Should Match Regexp ${task_state}   ((?i)Completed)


Edit LIG with portspeed Auto for port Qx.1
    Set Log Level   TRACE
    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}
    ${resp} =   Fusion Api Get Lig    param=?filter="'name'=='${LIG1}'"
    ${lig_uri} =    Get From Dictionary     ${resp['members'][0]}   uri
    ${body} =   Build LIG body      ${lig_edit['2']}
    ${resp} =   Fusion Api Edit Lig     ${body}     ${lig_uri}
    ${task} =   Wait For Task   ${resp}     120s    2s
    ${task_state} =     Get From dictionary     ${task}     taskState
    Should Match Regexp ${task_state}   ((?i)Completed)


Edit LIG with portspeed 40G for port Qx.2
    Set Log Level   TRACE
    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}
    ${resp} =   Fusion Api Get Lig    param=?filter="'name'=='${LIG1}'"
    ${lig_uri} =    Get From Dictionary     ${resp['members'][0]}   uri
    ${body} =   Build LIG body      ${lig_edit['3']}
    ${resp} =   Fusion Api Edit Lig     ${body}     ${lig_uri}
    ${task} =       Wait For Task   ${resp}     5 min   15s
    ${error} =  Get From Dictionary     ${task['taskErrors'][0]}        errorCode
    Should Match Regexp ${error}    ((?i)CRM_INVALID_40GB_DESIRED_PORT_SPEED)


Edit LI with portspeed 40G for Qx.1
    Set Log Level   TRACE
    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}
    ${li_uri} =         Get LI URI   ${ENC1}-${LIG1}
    ${us} =             Copy Dictionary ${li_uplink_sets['us1']}
    ${body} =           Build US body   ${us}   ${li_uri}
    ${resp} =    Fusion Api Get Uplink Set    param=?filter="'name'=='${US_edit}'"
    ${uri} =    Get From Dictionary     ${resp['members'][0]}   uri
    ${resp} =       Fusion Api Edit Uplink Set  body=${body}    uri=${uri}
    ${task} =       Wait For Task   ${resp}     5 min   15s
    ${valDict} =    Create Dictionary   status_code=${200}
    ...                                 taskState=Completed
    Validate Response   ${task} ${valDict}
    Log to Console and Logfile    \n Edited uplinkset with portspeed 40Gb successfully
    Log to Console and Logfile    \n Verifying the uplinkport status is Linked
    ${len}   Get Length   ${INTERCONNECTS}
    :FOR   ${IC}   IN RANGE    0    ${len}
    \   Get Port List from IC    ${Linked_Uplink_port[${IC}]}    ${INTERCONNECTS[${IC}]}        Uplink


Edit LI with portspeed Auto for Qx.1
    Set Log Level   TRACE
    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}
    ${li_uri} =         Get LI URI   ${ENC1}-${LIG1}
    ${us} =             Copy Dictionary ${li_uplink_sets['us2']}
    ${body} =           Build US body   ${us}   ${li_uri}
    ${resp} =    Fusion Api Get Uplink Set    param=?filter="'name'=='${US_edit}'"
    ${uri} =    Get From Dictionary     ${resp['members'][0]}   uri
    ${resp} =       Fusion Api Edit Uplink Set  body=${body}    uri=${uri}
    ${task} =       Wait For Task   ${resp}     5 min   15s
    ${valDict} =    Create Dictionary   status_code=${200}
    ...                                 taskState=Completed
    Validate Response   ${task} ${valDict}
    Log to Console and Logfile    \n Edited uplinkset with portspeed Auto successfully
   ${len}   Get Length   ${INTERCONNECTS}
    :FOR   ${IC}   IN RANGE    0    ${len}
    \   Get Port List from IC for unlinked    ${Linked_Uplink_port[${IC}]}    ${INTERCONNECTS[${IC}]}       Uplink


NEGATIVE - Edit LI with portspeed 40G for port Qx.2
    [Tags]  1    NEGATIVE
    Set Log Level   TRACE
    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}
    ${li_uri} =         Get LI URI   ${ENC1}-${LIG1}
    ${us} =             Copy Dictionary ${li_uplink_sets['us3']}
    ${body} =           Build US body   ${us}   ${li_uri}
    ${resp} =    Fusion Api Get Uplink Set    param=?filter="'name'=='${US_edit}'"
    ${uri} =    Get From Dictionary     ${resp['members'][0]}   uri
    ${resp} =       Fusion Api Edit Uplink Set  body=${body}    uri=${uri}
    ${valDict} =    Create Dictionary   status_code=${400}
    ...                                 errorCode=CRM_INVALID_40GB_DESIRED_PORT_SPEED
    Validate Response Regex     ${resp} ${valDict}

*** Keywords ***


Get Port List from IC for unlinked
    [Arguments]    ${port_no}   ${IC}   ${portType}
    ${uri} =    Get IC URI    ${IC}
    ${len}    Get Length    ${port_no}
    :FOR    ${y}    IN RANGE    0    ${len}
    \    ${ic_uri} =        catenate    ${uri}/ports
    \    ${resp}        Fusion Api Get Interconnect     ${uri}
    \    Verify Port Status Unlinked    ${resp['ports']}    ${port_no[${y}]}    ${portType}


Get Port List from IC
    [Arguments]    ${port_no}   ${IC}   ${portType}
    ${uri} =    Get IC URI    ${IC}
    ${len}    Get Length    ${port_no}
    :FOR    ${y}    IN RANGE    0    ${len}
    \    ${ic_uri}    catenate    ${uri}/ports
    \    ${resp}    Fusion Api Get Interconnect     ${uri}
    \    Verify Port Status    ${resp['ports']}    ${port_no[${y}]}    ${portType}


 Verify Port Status
    [Arguments]     ${resp}    ${port_no}   ${portType}
    ${len} =    Get Length    ${resp}
    :FOR    ${y}    IN RANGE    0  ${len}-1
    \    Log to Console    \n inside verify port befor run
    \    Run Keyword If    '${resp[${y}]['portName']}' != '${port_no}'    Continue For Loop
    \    Wait Until Keyword Succeeds    1min   15s       Should Match Regexp     ${resp[${y}]['portStatus']}    Linked
    \    ${count}    Evaluate    ${count} +1
    \    Run Keyword If    ${count}==${len}    Exit For Loop


 Verify Port Status Unlinked
    [Arguments]     ${resp}    ${port_no}   ${portType}
    ${len} =    Get Length    ${resp}
    :FOR    ${y}    IN RANGE    0  ${len}-1
    \    Log to Console    \n inside verify port befor run
    \    Run Keyword If    '${resp[${y}]['portName']}' != '${port_no}'    Continue For Loop
    \    Wait Until Keyword Succeeds    2min   15s       Should Match Regexp     ${resp[${y}]['portStatus']}    Unlinked
    \    ${count}    Evaluate    ${count} +1
    \    Run Keyword If    ${count}==${len}    Exit For Loop


