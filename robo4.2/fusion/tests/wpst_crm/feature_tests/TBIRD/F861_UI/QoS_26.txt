*** Settings ***
Documentation       Feature Test: FQoS_26
Resource            OVAConfig.txt
#Force Tags         Buildup
Suite Setup         Load Test Data and Open Browser
Suite Teardown     Logout And Close All Browsers
Library            Dialogs
Library            String
Library            BuiltIn
Library            Collections


	
*** Test Cases ***
00 LOG INTO FUSION AS ADMINISTRATOR
	[Documentation]    Log in to Appliance
    Log To Console    *********Log into Appliance as Administrator****************
    ${user} =    Get Data By Property    ${TestData.users}    name    Administrator
    fusion_ui_login_to_appliance    ${user[0].name}
    Log to Console    Successfully logged in as Administrator
	fusion_ui_delete_all_appliance_logical_enclosures
	Fusion UI Remove All Enclosure Groups 
	Fusion UI Remove All Logical Interconnect Groups

01 CREATING LIG
    ${Status1}=    fusion_ui_create_tbird_logical_interconnect_group     @{TestData.ligs_traffic}		
    Log to Console  ${Status1}
    Run Keyword If	'${Status1}' == 'True'	Log to Console	LIG CREATED SUCCESSFULLY	ELSE	fail

02 CREATING EG and LE
	fusion_ui_create_tbird_enclosure_group    @{TestData.encgroups_tbird}	
	fusion_ui_create_tbird_logical_enclosure	@{TestData.les}
	Interconnect ping	${IC_IP}

03 EDITING LIG
    ${Status1}=    fusion_ui_validate_qos_configuration		@{TestData.ligs26}
    Log to Console  ${Status1}
    Run Keyword If	'${Status1}' == 'True'	Log to Console	LIG CONFIGURED SUCCESSFULLY	ELSE	fail
	
04 BEFORE BACKUP AND RESTORE VERIFING LIG PAGE
    ${resp}=    fusion_ui_get_qos_class_values		@{TestData.ligs26}
	Log to Console  ${resp}

05 BACKUP AND RESTORE
    #backup
    Log to console  \n backingup
    Fusion UI Create Backup	
	${Status1}=    fusion_ui_edit_logical_interconnect_group    @{TestData.lig26}
	Log to Console  ${Status1}
    Run Keyword If	'${Status1}' == 'True'	Log to Console	LIG CONFIGURED SUCCESSFULLY	ELSE	fail
	
	#Restoring
    Log to console  \nexecuting backup
    Fusion UI Restore From Backup 
     
	Log To Console    Log in to Appliance
    Log To Console    *********Log into Appliance as Administrator****************
    ${user} =    Get Data By Property    ${TestData.users}    name    Administrator
    fusion_ui_login_to_appliance    ${user[0].name}
    Log to Console    Successfully logged in as Administrator

06 AFTER BACKUP AND RESTORE VERIFING LIG PAGE
    ${resp1}=    fusion_ui_get_qos_class_values			@{TestData.ligs26}
	Log to Console  ${resp1}	    
	${ret_status}=    Run Keyword And Return Status    Lists Should Be Equal    ${resp}    ${resp1}
    Log to console and logfile    ${ret_status}	
	Fusion UI Update Logical Interconnect From Group	@{TestData.li5_26}
	
07 Verify real time class scenarios in both LIG and LI
	@{resp}=	fusion_ui_get_qos_class_values	@{TestData.li_16}
	Log To Console		${resp}
	Log To Console		${resp[0]}
	Log To Console		${resp[1]}
	${conns} =  Create List
	${l} = 	Get Length	${resp[0]}
	Log to console	length is ${l}
	:FOR	${x}	IN RANGE	0	${l}
	\	${c}=	Create List	${resp[0][${x}]}	${resp[1][${x}]}	
	\   append to list  ${conns}    ${c}
	Log to console	${conns}
	sort list  ${conns}
	Log to console	${conns}
	Interconnect ping	${IC_IP}
	Open SNMP Client and Login		${IC_IP}
	${a}=  Write  ${command}
	Log to console		${a}
	${Id} =  Read Until    ${prompt}	
    Log to console		${Id}
	@{lines}=   Split To Lines		${Id}	18	50    
    Log to console	${lines}
	Remove Values From List 	${lines} 	${EMPTY}
	Log to console	${lines}
	${l} = 	Get Length	${lines}
	${output} =  Create List
	:FOR	${x}	IN RANGE	0	${l}-1
	\	Log to console	${x}
	\	${a}=	Split String	${lines[${x}]}
	\	${out}=	Create List	${a[1]}	${a[4]}
	\	Log to console	${out}
	\	append to list  ${output}    ${out}
	Log to console	${output}
	Lists Should Be Equal	${conns}	${output}

08 Cleanup	
	fusion_ui_delete_all_appliance_logical_enclosures
	Fusion UI Remove All Enclosure Groups 
	Fusion UI Remove All Logical Interconnect Groups


***Keywords***

###SNMP Keywords###
Open SNMP Client and Login
	[Arguments]         ${SSH_SNMP_IP}=localhost   ${SSH_USER}=netop
    Open Connection     ${SSH_SNMP_IP}     timeout=180s
    Set Suite variable  ${SSH_PASS}     netoppwd
    Login               ${SSH_USER}     ${SSH_PASS}
	log to console    Logged into the Snmp client : ${SSH_SNMP_IP}
Interconnect ping
	[Arguments]		${host}
    ${Output}=    Run    ping -n 4 ${host}
    Log to console and logfile    ${Output}