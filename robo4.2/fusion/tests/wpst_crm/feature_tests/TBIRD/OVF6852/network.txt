***Settings ***
Documentation	Allow networks to be associated with networkSets at creation time
Resource		../../../../../resources/api/fusion_api_resource.txt
Resource		../FVT/fvt-keywords.txt
Resource		../FVT/Resources/fvt_resource.txt
	
Library			FusionLibrary
Library			../FVT/fvt_api.py

Suite Setup		Login User

*** Keywords ***
Login User
    [Documentation]     Login Administrator To OneView
    Set Log Level    Trace
    Fusion Api Login Appliance    ${appliance_ip}    ${admin_credentials}
	[Return]

Verify Network In NetworkSets 
    [Documentation]     Verify Network Exists In NetworkSet
    [Arguments]    ${network}    ${networkset}
	Log To Console	\n network == ${network}
	${network} =	FVT Api Get Ethernet Network By Name	${network}
	${networkset} =	FVT Api Get Network Set By Name	${networkset}
	List Should Contain Value	${networkset['networkUris']}	${network['uri']}
	[Return]

***Test Cases***
Add User Network Administrator	
	[Documentation]	Creating User Network Administrator
	#Pass Execution	\Skip Add User Network Administrator	
	${resp}    Fusion Api Add User      body=${user}
	Run Keyword If	'${resp['status_code']}' != '200'	Fail	"Create network administrator user failed"
	Log	User network administrator created successfully
	
Create Bulk Networks With No NetworkSets List
	[Documentation]	Creating Bulk Networks With No NetworkSets List
	#Pass Execution	\nSkip Create Bulk Networks With No NetworkSets List
	Set To Dictionary	${networks}	vlanIdRange	401-405
	${task} =	Fusion Api Create Ethernet Bulk Networks	${networks}
	Run Keyword If	${task['status_code']} != 202	Fail	"Creating bulk networks with no networkSets list failed"
	${task} =	Wait For Task	${task}	timeout=5m	interval=1s	
	Log	Bulk networks with no networkSets list created success    console=True

Create Network Sets
	[Documentation]	Creating Network Sets
	#Pass Execution	\nSkip Create Network Sets	
	Set To Dictionary	${ns_dto}	networkSetType	Regular
	:FOR	${i}	IN RANGE	401	405
	\	Set To Dictionary	${ns_dto}	name	RNS_${i}
	\	${list} =	Create List	net_${i}	
	\	Set To Dictionary	${ns_dto}	networkUris	${list}
	\	Create Network Set	${ns_dto}	timeout=5m	interval=1s
	\	${resp} =	Fvt Api Get Network Set By Name	RNS_${i}
	\	Run keyword if	$resp == None	Fail	"Creating networkSet ${ns_dto['name']} failed"
	Log	NetworkSets created success    console=True

Create Network With No NetworkSets List
	[Documentation]	Creating Network With No Networksets List
	#Pass Execution	\nSkip Create Network With No NetworkSets List
	Set to Dictionary	${networks}	vlanIdRange	410
	Set to Dictionary	${networks}	namePrefix	network_with_no_networksets	
    ${task}    Fusion Api Create Ethernet Bulk Networks   ${networks}
	Run keyword if    ${task['status_code']} != 202	Fail    "Unable to create ${networks['namePrefix']}"
    ${task} =	Wait For Task	${task}	timeout=5m	interval=1s
	${resp}	Fvt Api Get Ethernet Network By Name	${networks['namePrefix']}_${networks['vlanIdRange']}
	Run keyword if	$resp == None	Fail	"Network ${networks['namePrefix']} does not exist"
	Log	Network with no networkSets list created success    console=True
	
Create Network With Non Existing NetworkSet   
	[Documentation]	Creating Network With A NetworkSet That Doesn't Exist
	#Pass Execution	\nSkip Create Network With Non Existing NetworkSet
	Set to Dictionary	${networks}	vlanIdRange	411
	Set to Dictionary	${networks}	namePrefix	network_with_non_existing_networkset	
	${netset} =	Create List	/rest/network-sets/non_existing_networkset
	Set to Dictionary	${networks}	networkSetUris	${netset}	
    ${task} =	Fusion Api Create Ethernet Bulk Networks     ${networks}
	Run keyword if	${task['status_code']} == 202    Fail    "Creating ${networks['namePrefix']} should not succeed"
	Should Be Equal As Strings	${task['errorCode']}	CRM_ID_NOT_UUID
	Log	Network not created since networkSet does not exist    console=True
   
Create Network With Empty NetworkSets List   
	[Documentation]    Creating Network With Empty NetworkSets list
	#Pass Execution	\nSkip Create Network With Empty NetworkSets List
	Set to Dictionary	${networks}	vlanIdRange	411
	Set to Dictionary	${networks}	namePrefix	network_with_empty_networksets	
	${netset} =	Create List
	Set to Dictionary	${networks}	networkSetUris	${netset}	
    ${task}    Fusion Api Create Ethernet Bulk Networks     ${networks}
	Run keyword if    ${task['status_code']} != 202	Fail	"Creating ${networks['namePrefix']} failed"
    ${task} =	Wait For Task	${task}	timeout=5m	interval=1s
	${resp} =	Fvt Api Get Ethernet Network By Name	${networks['namePrefix']}_411
	Run keyword if	$resp == None	Fail	"Network ${networks['namePrefix']} does not exist"
	Log	Network with empty networksets created success    console=True
	
Create Network With Single NetworkSet List
	[Documentation]	Creating Network With Single NetworkSet List
	#Pass Execution	\nSkip Create Network With Single NetworkSet List
	Set to Dictionary	${networks}	vlanIdRange	412
	Set to Dictionary	${networks}	namePrefix	network_with_single_networkset
	${resp} =	Fvt Api Get Network Set By Name	RNS_401
	${netset} =	Create List	${resp['uri']}
	Set to Dictionary	${networks}	networkSetUris	${netset}	
    ${task} =	Fusion Api Create Ethernet Bulk Networks     ${networks}
	Run keyword if    ${task['status_code']} != 202	Fail	"Creating ${networks['namePrefix']} failed"
    ${task} =	Wait For Task	${task}	timeout=5m	interval=1s	
	${resp} =	Fvt Api Get Ethernet Network By Name	${networks['namePrefix']}
	Run keyword if	$resp == None	Fail	"Network ${networks['namePrefix']} does not exist"
	Verify Network In NetworkSets	${networks['namePrefix']}	RNS_401
	Log	Network with single networkNet list created success    console=True

Create Network With Multiple NetworkSets List
	[Documentation]	Creating Network With Multiple NetworkSets List
	#Pass Execution	\nSkip Create Network With Multiple NetworkSets List
	Set to Dictionary	${networks}	vlanIdRange	413
	Set to Dictionary	${networks}	namePrefix	network_with_multiple_networksets
	${netset1} =	Fvt Api Get Network Set By Name	RNS_401
	${netset2} =	Fvt Api Get Network Set By Name	RNS_402
	${networkset} =	Create List	${netset1['uri']}	${netset2['uri']}
	Set to Dictionary	${networks}	networkSetUris	${networkset}	
    ${task}    Fusion Api Create Ethernet Bulk Networks    ${networks}
	Run keyword if	${task['status_code']} != 202	Fail	"Creating ${networks['namePrefix']} failed"
    ${task} =	Wait For Task	${task}	timeout=5m	interval=1s	    
	${resp} =	Fvt Api Get Ethernet Network By Name	${networks['namePrefix']}
	Run keyword if	$resp == None	Fail	"Network ${networks['namePrefix']} does not exist"
	Verify Network In NetworkSets	${networks['namePrefix']}	RNS_401
	Verify Network In NetworkSets	${networks['namePrefix']}	RNS_402
	Log	Network with multiple networksets list created success    console=True

Create Logical Enclosure
	[Documentation]	Creating Logical Enclosure
	#Pass Execution	\nSkip Create Logical Enclosure
	Add Logical Interconnect Group	${lig}	timeout=10m	interval=1s
	FVT Add Enclosure Group		${enc_group}
	Add Logical Enclosure	${les}	timeout=20m	interval=5s
	Sleep	10s
	${resp}	Fvt Api Get Logical Enclosure By Name	${les['name']}
	Run keyword if	$resp == None	Fail	"Logical enclosure ${les['name']} does not exist"
	Should Be Equal As Strings	${resp['status']}	OK
	Should Be Equal As Strings	${resp['state']}	Consistent
	${resp}	Fvt Api Get Logical Interconnect BY Name	${les['name']}-${lig['name']}
	Should Be Equal As Strings	${resp['consistencyStatus']}	CONSISTENT
	FVT Verify Interconnects In LI	${les['name']}-${lig['name']}
	Log	Logical enclosure created success	console=True   

Add Network To NetworkSet In Uplink Set
	[Documentation]	Adding Network To NetworkSet In Uplink Set
	#Pass Execution	\nSkip Add Network To NetworkSet In Uplink Set
    Fusion Api Login Appliance    ${appliance_ip}    ${network_admin}
	${networkset} =	Fvt Api Get Network Set By Name	RNS_401
	${network} =	Fvt Api Get Ethernet Network By Name	network_with_no_networksets_410
	Append To List	${networkset['networkUris']}	${network['uri']}
	${task} =	Fusion Api Edit Network Set	uri=${networkset['uri']}	body=${networkset}  
	Run keyword If	${task['status_code']} != 202	Fail	"Editing NetworkSet RNS_401 Failed"
	Wait For Task	${task}	timeout=5m	interval=1s
	Verify Network In NetworkSets	network_with_no_networksets_410	RNS_401
	${resp} =	Get Uplink Set By Name	${les['name']}-${lig['name']}	${uplink_set['name']}
	List Should Contain Value	${resp['networkUris']}	${network['uri']}
	sleep	2m
	FVT Verify Interconnects In LI	${les['name']}-${lig['name']}
	Log    Added network to networkSet used in uplink set successfully	console=True 
	
Add Network To NetworkSet In Uplink Set And Profile
    [Documentation]	Adding Network To NetworkSet Used In Uplink Set And Profile
	#Pass Execution	\nSkip Add Network To NetworkSet In Uplink Set And Profile
    Fusion Api Login Appliance    ${appliance_ip}    ${admin_credentials}
	Sleep	2m
	Fvt Add Server Profile	${profile}	timeout=5m	interval=1s
    Fusion Api Login Appliance    ${appliance_ip}    ${network_admin}
	${networkset} =	Fvt Api Get Network Set By Name	RNS_401
	${network} =	Fvt Api Get Ethernet Network By Name	network_with_empty_networksets_411
	Append To List	${networkset['networkUris']}	${network['uri']}
	${task} =	Fusion Api Edit Network Set	uri=${networkset['uri']}	body=${networkset}  
	Run keyword If	${task['status_code']} != 202	Fail	"Editing NetworkSet RNS_401 Failed"
	Wait For Task	${task}	timeout=5m	interval=1s
	Verify Network In NetworkSets	network_with_empty_networksets_411	RNS_401
	${resp} =	Get Uplink Set By Name	${les['name']}-${lig['name']}	${uplink_set['name']}
	List Should Contain Value	${resp['networkUris']}	${network['uri']}
	Log	Added network to networkSet used in uplink set and profile successfully	console=True      
	
Create Bulk Networks With Empty NetworkSets List
	[Documentation]	Creating Bulk Networks With Empty NetworkSet List
	#Pass Execution	\nSkip Create Bulk Networks With Empty NetworkSets List
	Set To Dictionary	${networks}	namePrefix	net
	Set To Dictionary	${networks}	vlanIdRange	456-460
	${netset} =	Create List
	Set to Dictionary	${networks}	networkSetUris	${netset}		
	${task} =	Fusion Api Create Ethernet Bulk Networks	${networks}
	Run keyword if	${task['status_code']} != 202	Fail	"Creating bulk networks with empty networkSets list failed"
	${task} =	Wait For Task	${task}	timeout=5m	interval=1s	
	Log	Bulk networks with empty networkNets created success    console=True
	
Create Bulk Ethernet Networks With Single NetworkSet List
	[Documentation]	Create Bulk Ethernet Networks With Single NetworkSet List
	#Pass Execution	\nSkip Create Bulk Ethernet Networks With Single NetworkSet List
	Set To Dictionary	${networks}	namePrefix	net
	Set To Dictionary	${networks}	vlanIdRange	461-465
	${resp} =	Fvt Api Get Network Set By Name	RNS_403
	${netset} =	Create List	${resp['uri']}
	Set to Dictionary	${networks}	networkSetUris	${netset}		
	${task} =	Fusion Api Create Ethernet Bulk Networks	${networks}
	Run keyword if	${task['status_code']} != 202	Fail	"Creating bulk networks with single networkSet list failed"
	${task} =	Wait For Task	${task}	timeout=5m	interval=1s	
	:For	${i}	IN RANGE	461	465
	\	Verify Network In NetworkSets	net_${i}	RNS_403
	Log	Bulk networks with single network set list created success    console=True

Create Bulk Networks With Multiple NetworkSets List
	[Documentation]	Create Bulk Networks With Multiple NetworkSets List
	#Pass Execution	\nSkip Create Bulk Networks With Multiple NetworkSets List
	Set To Dictionary	${networks}	namePrefix	net
	Set To Dictionary	${networks}	vlanIdRange	466-470
	${nset1} =	Fvt Api Get Network Set By Name	RNS_403
	${nset2} =	Fvt Api Get Network Set By Name	RNS_404	
	${netset} =	Create List	${nset1['uri']}	${nset2['uri']}
	Set to Dictionary	${networks}	networkSetUris	${netset}	
	${task} =	Fusion Api Create Ethernet Bulk Networks	${networks}
	Run keyword if	${task['status_code']} != 202	Fail	"Creating bulk networks with multiple networkSets list failed"
	${task} =	Wait For Task	${task}	timeout=5m	interval=1s	
	:For	${i}	IN RANGE	466	470
	\	Verify Network In NetworkSets	net_${i}	RNS_403
	\	Verify Network In NetworkSets	net_${i}	RNS_404
	Log	Bulk networks with multiple network sets list created success    console=True

Cleanup 
    [Documentation]	Delete Resources Created
	#Pass Execution	\nSkip Delete Resources Created
	sleep	2m
    Fusion Api Login Appliance    ${appliance_ip}    ${admin_credentials}
 	${resp}	Fusion Api Remove User	uri=/rest/users/${user['userName']}
	Run Keyword If	'${resp['status_code']}' != '204'	Fail	"Remove network administrator failed"	
	Power off ALL Servers
	Remove All Server Profiles	force=True
	Remove All LEs
	Remove All Enclosure Groups
	Remove All LIGs
	Remove All Network Sets
	Remove All Ethernet Networks
	Log	Clean up completed







