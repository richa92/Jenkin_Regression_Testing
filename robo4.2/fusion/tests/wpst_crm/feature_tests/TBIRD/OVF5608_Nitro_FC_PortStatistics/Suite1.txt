***Settings***
Documentation   OVF5608
Variables       datavariables_rig.py
#Variables       datavariables.py
Library         json
Library         FusionLibrary
Library         RoboGalaxyLibrary
Library         Collections
Library         SSHLibrary
Library         String
Resource            ../../../../../Resources/api/fusion_api_resource.txt
Resource           OVF5608_keywords.txt
Library         Telnet
Library         background_ping.py
Suite Setup          Suite Setup Tasks

***Variables***
${stats}    statistics

***Test Cases***

1 Login to Appliance
    [Documentation]    Login to Appliance
    Set Log Level    TRACE
    ${resp}    Fusion Api Login Appliance    ${APPLIANCE_IP}        ${appliance_credentials}

2 Creating Server Profile
    [Documentation]  Creating Server profile through rest calls
    Set Log Level    TRACE

    Log    \n\n Powering off servers    console = True
    Power off ALL Servers
    Log    \n\n Creating server profile    console = True
    ${resp}    Add Server Profiles from variable   ${server_profiles}

    ${l}    Get Length    ${resp}
    :FOR    ${x}    IN RANGE    0   ${l}
    \    Run Keyword If  '${resp[${x}]['status_code']}' == '202'    Wait For Task2    ${resp[${x}]}    20m    1m    ELSE    Fail    Log    failed    console = True
    \    Power on server    ${server_profiles[${x}]['serverHardwareUri']}
    Sleep    10min

3 Getting IP of server and pass traffic
    [Documentation]     Getting Ip of server and pass traffic
    Set Log Level    TRACE
    Log    \nfetching ip     console=True
    ${ip_list1}    ${ip_list2}    Get IP In a List    ${ilo_details}
    Set Suite Variable    ${ip_list1}    ${ip_list1}
    Set Suite Variable    ${ip_list2}    ${ip_list2}

    Log    \nFetching ICM URI    console=True
    ${ic_uris}    Create List
    :FOR    ${icm}    IN    @{Interconnect_name}
    \    ${uri}    Get IC URI    ${icm}
    \    Run Keyword If    '${icm}' == '${Interconnect_name[0]}'    Set Suite Variable    ${ICM3_uri}    ${uri}
    \    ...    ELSE IF    '${icm}' == '${Interconnect_name[1]}'    Set Suite Variable    ${ICM6_uri}    ${uri}
    \    Append To List    ${ic_uris}    ${uri}


################## Pass continuous traffic and Verify FC FA and DA Port statistics ######################
TC_1_API_Pass continuous traffic and Verify FC FA and DA Port statistics
    [Documentation]     Pass continuous traffic and Verify FC FA and DA Port statistics
    [Tags]    Basic
    Set Log Level    TRACE
    execute Traffic In Servers    ${ilo_details}    ${ip_list1}    ${server_details}    ${kill_diskspd}    ${diskspd_cmd_1hr}
    Sleep    60sec

    :FOR    ${x}    IN RANGE    0    5
    \    Wait Until Keyword Succeeds     15 min   10s     Counter Value Validation    ${IC1_ports}    ${Interconnect_name[0]}    ${counters}    ${FC_counters}    ${traffic_time[0]}

################## Clear Port Counters ######################
TC_2_1_API_Clear Port Counter and verify statistics after passing traffic
    [Tags]    ClearCounter
    [Documentation]    Clear Port Counter and verify statistics after passing traffic
    Set Log Level    TRACE
    Log    \nexecute traffic    console=True
    ${len}    Get Length    ${ilo_details}
    :FOR    ${x}    IN RANGE    0    ${len}
    \     execute_traffic    ${ip_list1[0]}    ${server_details['username']}    ${server_details['password']}    ${kill_diskspd}
    \     execute_traffic    ${ip_list1[1]}    ${server_details['username']}    ${server_details['password']}    ${kill_diskspd}

    Log    \n\n Clearing port counters    console=True
    Clear Port Counters    ${Interconnect_name[0]}
    Sleep    2min

    ${counter_values1}    Validating FC Counter Values    ${Interconnect_name[0]}    ${stats}    ${IC1_ports[0]}    ${counters}    ${FC_counters}
    :FOR    ${x}    IN    @{counter_values1}
    \    Run Keyword If    ${x} <= 1000    Log    Successfully cleared FA port counter values    console=True

    ${counter_values2}    Validating FC Counter Values    ${Interconnect_name[0]}    ${stats}    ${IC1_ports[1]}    ${counters}    ${FC_counters}
    :FOR    ${x}    IN    @{counter_values2}
    \    Run Keyword If    ${x} <= 1000    Log    Successfully cleared DA port counter values    console=True

TC_2_2_Execute traffic and verify if counter values are increased
   [Documentation]    Clear Port Counter and verify statistics after passing traffic
    Set Log Level    TRACE
    execute Traffic In Servers    ${ilo_details}    ${ip_list1}    ${server_details}    ${kill_diskspd}    ${diskspd_cmd}
    Sleep    60sec

    Wait Until Keyword Succeeds     15 min   10s    Counter Value Validation    ${IC1_ports}    ${Interconnect_name[0]}    ${counters}    ${FC_counters}    ${traffic_time[0]}

################### Edit uplinkset and change different FA port speed and verify FC statistics ####################
TC_3_1_Edit uplinkset and change different port speed from 32Gb to 16Gb and verify FC statistics
    [Documentation]    Edit LIG to change ports speed
    [Tags]    PortSpeed16Gb
    Set Log Level    TRACE

    ${ip_list1}    ${ip_list2}    Get IP In a List    ${ilo_details}
    Log    \n\nExecuting traffic in two servers     console=True
    Execute Traffic In Servers    ${ilo_details}    ${ip_list1}    ${server_details}    ${kill_diskspd}    ${diskspd_cmd}
    Execute Traffic In Servers    ${ilo_details}    ${ip_list2}    ${server_details}    ${kill_diskspd}    ${diskspd_cmd}
    Sleep    60sec

    Log     \n\nEdit LI uplinkset US - FA1 & US - FA2 uplinks from 32Gb to 16GB     console=True

    ${len}    Get Length    ${Uplink_speed_16G}
    :FOR    ${x}    IN RANGE    0    ${len}
    \    ${resp}    Edit uplinkset    ${US_name_FA[${x}]}    ${li_uplinksets['${Uplink_speed_16G[${x}]}']}    ${LI}
    \    ${task}    Wait For Task    ${resp}    5min    15s
    \    Should Be Equal As Strings    ${task['taskState']}    Completed

    Log     \n\n Wait for speed change reflected in OV    console=True
    Sleep    2min

    Log      \n\n Verify uplink portStatus and updated operational speed    console=True

    Wait Until Keyword Succeeds     15 min   10s    Verify Port    ${ICM3_uri}    ${FA_PORTS[0]}    status=OK    portStatus=Linked    opSpeed=Speed16G
    Wait Until Keyword Succeeds     15 min   10s    Verify Port    ${ICM6_uri}    ${FA_PORTS[1]}    status=OK    portStatus=Linked    opSpeed=Speed16G

TC_3_2_Verify statistics for FA ports of ICM3
    [Documentation]     Verify statistics for FA ports of ICM3
    Set Log Level    TRACE
    Wait Until Keyword Succeeds     15 min   10s     Counter Value Validation    ${ICM3_FA_port}    ${Interconnect_name[0]}    ${counters}    ${FC_counters}    ${traffic_time[0]}


TC_3_3_Edit uplinkset and change different port speed from 16Gb to 8Gb and verify FC statistics
    [Documentation]    Edit LIG to change ports speed
    [Tags]    PortSpeed8Gb
    Set Log Level    TRACE
    Log    \nfetch ip    console=True
    ${ip_list1}    ${ip_list2}    Get IP In a List    ${ilo_details}
    Log    \n\n Executing traffic in two servers     console=True
    Execute Traffic In Servers    ${ilo_details}    ${ip_list1}    ${server_details}    ${kill_diskspd}    ${diskspd_cmd}
    Execute Traffic In Servers    ${ilo_details}    ${ip_list2}    ${server_details}    ${kill_diskspd}    ${diskspd_cmd}
    Sleep    60sec

    Log     \n\nEdit LI uplinkset US - FA1 & US - FA2 uplinks from 16Gb to 8Gb    console=True

    ${len}    Get Length    ${Uplink_speed_8G_FA}
    :FOR    ${x}    IN RANGE    0    ${len}
    \    ${resp}    Edit uplinkset    ${US_name_FA[${x}]}    ${li_uplinksets['${Uplink_speed_8G_FA[${x}]}']}    ${LI}
    \    ${task}    Wait For Task    ${resp}    5min    15s
    \    Should Be Equal As Strings    ${task['taskState']}    Completed

    Log     \n\nWait for speed change reflected in OV    console=True
    Sleep    2min

    Log      \n\nVerify uplink portStatus and updated operational speed    console=True

    Wait Until Keyword Succeeds     15 min   10s    Verify Port    ${ICM3_uri}    ${FA_PORTS[0]}    status=OK    portStatus=Linked    opSpeed=Speed8G
    Wait Until Keyword Succeeds     15 min   10s    Verify Port    ${ICM6_uri}    ${FA_PORTS[1]}    status=OK    portStatus=Linked    opSpeed=Speed8G

TC_3_4_Verify statistics for FA ports of ICM3
    [Documentation]     Verify statistics for FA ports of ICM3
    Set Log Level    TRACE

    Wait Until Keyword Succeeds     15 min   10s    Counter Value Validation    ${ICM3_FA_port}    ${Interconnect_name[0]}    ${counters}    ${FC_counters}    ${traffic_time[0]}

TC_3_5_Edit uplinkset and change port speed back to 32GB and verify FC statistics
    [Documentation]    Edit LIG to change ports speed
    [Tags]    PortSpeed8Gb
    Set Log Level    TRACE

    ${ip_list1}    ${ip_list2}    Get IP In a List    ${ilo_details}
    Log    \n\n Executing traffic in icm3 of two servers     console=True
    Execute Traffic In Servers    ${ilo_details}    ${ip_list1}    ${server_details}    ${kill_diskspd}    ${diskspd_cmd}
    Execute Traffic In Servers    ${ilo_details}    ${ip_list2}    ${server_details}    ${kill_diskspd}    ${diskspd_cmd}
    Sleep    60sec

    Log    \nPerform ufg    console=True

    Update Logical Interconnect from Group    ${LI_dto}

    Wait Until Keyword Succeeds    5 min    20s      IC reached state    ${ICM3_uri}    Configured
    Wait Until Keyword Succeeds    5 min    20s      IC reached state    ${ICM6_uri}    Configured

    Log    \n\n Wait for speed change reflected in OV    console=True
    Sleep    2min

    Log     \n\n Verify uplink portStatus and updated operational speed    console=True
    Wait Until Keyword Succeeds     15 min   10s    Verify Port    ${ICM3_uri}    ${FA_PORTS[0]}    status=OK    portStatus=Linked    opSpeed=Speed32G
    Wait Until Keyword Succeeds     15 min   10s    Verify Port    ${ICM6_uri}    ${FA_PORTS[1]}    status=OK    portStatus=Linked    opSpeed=Speed32G

TC_3_6_Verify statistics for FA ports of ICM3
    [Documentation]     Verify statistics for FA ports of ICM3
    Set Log Level    TRACE

    Wait Until Keyword Succeeds     15 min   10s    Counter Value Validation    ${ICM3_FA_port}    ${Interconnect_name[0]}    ${counters}    ${FC_counters}    ${traffic_time[0]}


##### Happy Path - Verify FC port statistics by passing traffic for FC network with different packet size
################################
TC_4_Verify FC statistics for different packet size
    [Documentation]    Happy path verification for different packet size
    Set Log Level    TRACE

    ${ip_list}    Create List
    ${l}     Get Length    ${ilo_details}
    :FOR    ${x}    IN RANGE    0    ${l}
    \    ${IP}    ${gate_ip}    Get Server Ip Windows    ${ilo_details[${x}]}
    \    Append to List    ${ip_list}    ${IP[0]}
    Set Suite Variable    ${ip_list}    ${ip_list}
    Log    \n\nip list${ip_list}    console=True
    ${len}     Get Length    ${diskspd_cmd1}
    :FOR    ${x}    IN RANGE    0    ${len}
    \    execute_traffic    ${ip_list[0]}    ${server_details['username']}    ${server_details['password']}    ${kill_diskspd}
    \    Sleep    60sec
    \    execute_traffic    ${ip_list[1]}    ${server_details['username']}    ${server_details['password']}    ${kill_diskspd}
    \    Sleep    60sec
    \    execute_traffic    ${ip_list[0]}    ${server_details['username']}    ${server_details['password']}    ${diskspd_cmd1[${x}]}
    \    execute_traffic    ${ip_list[1]}    ${server_details['username']}    ${server_details['password']}    ${diskspd_cmd2[${x}]}
    \    Wait Until Keyword Succeeds     15 min   10s    Counter Value Validation    ${IC1_ports}    ${Interconnect_name[0]}    ${counters}    ${FC_counters}    ${traffic_time[0]}


################### Edit uplinkset and change different DA port speed and verify FC statistics ####################
TC_5_1_Edit uplinkset and change different port speed from 16Gb to 8Gb and verify FC statistics
    [Documentation]    Edit LIG to change ports speed
    [Tags]    PortSpeed8Gb
    Set Log Level    TRACE

    ${ip_list1}    ${ip_list2}    Get IP In a List    ${ilo_details}
    Log    \n\n Executing traffic in two servers     console=True
    Execute Traffic In Servers    ${ilo_details}    ${ip_list1}    ${server_details}    ${kill_diskspd}    ${diskspd_cmd}
    Execute Traffic In Servers    ${ilo_details}    ${ip_list2}    ${server_details}    ${kill_diskspd}    ${diskspd_cmd}
    Sleep    60sec

    Log     \n\n Edit LI uplinkset US - DA1 & US - DA2 uplinks from 16Gb to 8GB     console=True

    ${len}    Get Length    ${Uplink_speed_8G_DA}
    :FOR    ${x}    IN RANGE    0    ${len}
    \    ${resp}    Edit uplinkset    ${US_name_DA[${x}]}    ${li_uplinksets['${Uplink_speed_8G_DA[${x}]}']}    ${LI}
    \    ${task}    Wait For Task    ${resp}    5min    15s
    \    Should Be Equal As Strings    ${task['taskState']}    Completed

    Log     \n\n Wait for speed change reflected in OV    console=True
    Sleep    2min

    Log      \n\n Verify uplink portStatus and updated operational speed    console=True

    Wait Until Keyword Succeeds     15 min   10s    Verify Port    ${ICM3_uri}    ${DA_PORTS[0]}    status=OK    portStatus=Linked    opSpeed=Speed8G
    Wait Until Keyword Succeeds     15 min   10s    Verify Port    ${ICM6_uri}    ${DA_PORTS[1]}    status=OK    portStatus=Linked    opSpeed=Speed8G


TC_5_2_Verify statistics for DA ports of ICM3
    [Documentation]     Verify statistics for FA ports of ICM3
    Set Log Level    TRACE
    Wait Until Keyword Succeeds     15 min   10s    Counter Value Validation    ${ICM3_DA_port}    ${Interconnect_name[0]}    ${counters}    ${FC_counters}    ${traffic_time[0]}

TC_5_3_Edit uplinkset and change port speed back to 16GB and verify FC statistics
    [Documentation]    Edit LIG to change ports speed
    [Tags]    PortSpeed8Gb
    Set Log Level    TRACE
    ${ip_list1}    ${ip_list2}    Get IP In a List    ${ilo_details}
    Log    \n\n Executing traffic in icm3 of two servers     console=True
    Execute Traffic In Servers    ${ilo_details}    ${ip_list1}    ${server_details}    ${kill_diskspd}    ${diskspd_cmd}
    Execute Traffic In Servers    ${ilo_details}    ${ip_list2}    ${server_details}    ${kill_diskspd}    ${diskspd_cmd}
    Sleep    60sec

    Log    \nPerform ufg    console=True

    Update Logical Interconnect from Group    ${LI_dto}

    Wait Until Keyword Succeeds    5 min    20s      IC reached state    ${ICM3_uri}    Configured
    Wait Until Keyword Succeeds    5 min    20s      IC reached state    ${ICM6_uri}    Configured

    Log    \n\n Wait for speed change reflected in OV    console=True
    Sleep    2min

    Log     \n\n Verify uplink portStatus and updated operational speed    console=True
    Wait Until Keyword Succeeds     15 min   10s    Verify Port    ${ICM3_uri}    ${DA_PORTS[0]}    status=OK    portStatus=Linked    opSpeed=Speed16G
    Wait Until Keyword Succeeds     15 min   10s    Verify Port    ${ICM6_uri}    ${DA_PORTS[1]}    status=OK    portStatus=Linked    opSpeed=Speed16G

TC_5_4_Verify statistics for DA ports of ICM3
    [Documentation]     Verify statistics for DA ports of ICM3
    Set Log Level    TRACE
    Wait Until Keyword Succeeds     15 min   10s    Counter Value Validation    ${ICM3_DA_port}    ${Interconnect_name[0]}    ${counters}    ${FC_counters}    ${traffic_time[0]}

##################################################### Test Case 6 - Backup & Restore & Verify S-channel statistics #######################################################
TC_6_1_Create Backup
    [Documentation]    Create Backup
    [Tags]  CreateBackup
    Set Log Level    TRACE

    Log    \n - Creating the backup in OV    console=True
    Power off ALL Servers    PressAndHold
    Create Backup

TC_6_2_Disabling ports of ICM3
    [Documentation]    Disabling ports of ICM3
    Set Log Level    TRACE
    Log    Fetching ICM URI    console=True
    ${ic_uris}    Create List
    :FOR    ${icm}    IN    @{Interconnect_name}
    \    ${uri}    Get IC URI    ${icm}
    \    Run Keyword If    '${icm}' == '${Interconnect_name[0]}'    Set Suite Variable    ${ICM3_uri}    ${uri}
    \    ...    ELSE IF    '${icm}' == '${Interconnect_name[1]}'   Set Suite Variable    ${ICM6_uri}    ${uri}
    \    Append To List    ${ic_uris}    ${uri}

    Log    \n\n Disabling uplink port FA & DA of ICM3    console=True

    :FOR    ${port}    IN    @{IC1_ports}
    \    ${Resp}    Get IC Port    ${ICM3_uri}    ${port}
    \    Set to Dictionary   ${Resp}   enabled    False
    \    ${Return}    Update IC Port    ${Interconnect_name[0]}    ${port}    ${Resp}
    \    Wait Until Keyword Succeeds    5 min    20s      IC reached state    ${ICM3_uri}    Configured
    \    Log    Verifying if Port is disabled    console=True
    \    Wait Until Keyword Succeeds     15 min   10s    Verify Port Status    ${ICM3_uri}    ${port}    verify=portStatusReason    status=AdminDisabled
    Sleep    3min

TC_6_3_Restoring from backup
    [Documentation]    Restoring from backup
    Set Log Level    TRACE
    Log     \n\n Restoring from the backup in the appliance    console=True
    Restore From Backup
    Sleep   15 min
    Fusion Api Login Appliance    ${APPLIANCE_IP}    ${appliance_credentials}

TC_6_4_Verifying if restored properly
    [Documentation]     Verifying if restored properly
    Set Log Level    TRACE
    Wait Until Keyword Succeeds    15 min    20s    Verify Port    ${ICM3_uri}    ${IC1_ports[0]}    status=OK    portStatus=Linked
    Wait Until Keyword Succeeds    15 min    20s    Verify Port    ${ICM3_uri}    ${IC1_ports[1]}    status=OK    portStatus=Linked

TC_6_5_Powering on servers and verifying statistics
    [Documentation]    Powering on servers after restore
    Set Log Level    TRACE
    Log    \nUnassigning and reassigning profile    console=True
    ${uprofiles}    Get Profiles
    Unassign profiles      ${uprofiles}
    Re-assign profiles     ${uprofiles}

Tc_6_6_Power on servers and verify statistics
    [Documentation]    Powering on servers after restore
    Set Log Level    TRACE
    ${len}     Get Length    ${server_profiles}
    :FOR    ${x}    IN RANGE    0    ${len}
    \    Power on server     ${server_profiles[${x}]['serverHardwareUri']}
    Sleep   10min

    ${ip_list1}    ${ip_list2}    Get IP In a List    ${ilo_details}
    Log    \n\n Executing traffic in servers    console=True
    Execute Traffic In Servers    ${ilo_details}    ${ip_list1}    ${server_details}    ${kill_diskspd}    ${diskspd_cmd}
    Sleep    100sec

    Log    \n\n Validating counters     console=True
    Wait Until Keyword Succeeds     15 min   10s    Counter Value Validation    ${IC1_ports}    ${Interconnect_name[0]}    ${counters}    ${FC_counters}    ${traffic_time[0]}
