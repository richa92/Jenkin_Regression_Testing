***Settings***
Documentation   OVF5608
Variables       datavariables_rig.py
#Variables       datavariables.py
Library         json
Library         FusionLibrary
Library         RoboGalaxyLibrary
Library         Collections
Library         SSHLibrary
Library         String
Resource            ../../../../../Resources/api/fusion_api_resource.txt
Resource           OVF5608_keywords.txt
Library         Telnet
Library         background_ping.py
Suite Setup          Suite Setup Tasks

***Variables***
${stats}    statistics

***Test cases***

1 Login to Appliance
    [Documentation]    Login to Appliance
    [Tags]  add   POSITIVE
    Set Log Level    TRACE
    ${resp}    Fusion Api Login Appliance    ${APPLIANCE_IP}        ${appliance_credentials}

2 Creating Server Profile
    [Documentation]  Creating Server profile through rest calls
    [Tags]  ServerProfile
    Set Log Level    TRACE

    ${resp}    Add Server Profiles from variable   ${server_profiles}

    ${l}    Get Length    ${resp}
    :FOR    ${x}    IN RANGE    0   ${l}
    \    Run Keyword If  '${resp[${x}]['status_code']}' == '202'    Wait For Task2    ${resp[${x}]}    20m    1m    ELSE    Fail    Log    failed    console=True
    \    Power on server    ${server_profiles[${x}]['serverHardwareUri']}
    Sleep    10min

3 Getting IP of server and pass traffic
    [Documentation]     Getting Ip of server and pass traffic
    Set Log Level    TRACE
    ${ip_list1}    ${ip_list2}    Get IP In a List    ${ilo_details}
    Set Suite Variable    ${ip_list1}    ${ip_list1}
    Set Suite Variable    ${ip_list2}    ${ip_list2}
    ${ic_uris}    Create List
    :FOR    ${icm}    IN    @{Interconnect_name}
    \    ${uri} =    Get IC URI    ${icm}
    \    Run Keyword If    '${icm}' == '${Interconnect_name[0]}'    Set Suite Variable    ${ICM3_uri}    ${uri}
    \    ...    ELSE IF    '${icm}' == '${Interconnect_name[1]}'   Set Suite Variable    ${ICM6_uri}    ${uri}
    \    Append To List    ${ic_uris}    ${uri}
    Log     ${ICM3_uri}    console=True
    Log     ${ICM6_uri}    console=True
    Set Suite Variable    ${ICM_uris}    ${ic_uris}

######## Enable/Disable FA and DA ports are verify FC statistics #####
1_1_Disable/ Enable Uplink Port
    [Documentation]      Enable/Disable FA ports and verify FC ports statistics
    ${ip_list1}    ${ip_list2}    Get IP In a List    ${ilo_details}
    Log    \n\n Executing traffic in icm3 of two servers     console=True
    Execute Traffic In Servers    ${ilo_details}    ${ip_list1}    ${server_details}    ${kill_diskspd}    ${diskspd_cmd}
    Sleep    60sec
    Wait Until Keyword Succeeds     5 min   10s    Counter Value Validation    ${IC1_ports}    ${Interconnect_name[0]}    ${counters}    ${FC_counters}    ${traffic_time[0]}

1_2_Disable Uplink Port
    [Documentation]      Disable FA ports and verify FC ports statistics
    Log    \n\n Disabling uplink port    console=True
    :FOR    ${port}    IN    @{IC1_ports}
    \    ${Resp}    Get IC Port    ${ICM3_uri}    ${port}
    \    Set to Dictionary   ${Resp}   enabled    False
    \    ${Return}    Update IC Port    ${Interconnect_name[0]}    ${port}    ${Resp}
    \    Wait Until Keyword Succeeds    5 min    20s      IC reached state    ${ICM3_uri}    Configured
    \    Log    Verifying if Port is disabled    console=True
    \    Wait Until Keyword Succeeds     5 min   10s    Verify Port Status    ${ICM3_uri}    ${port}    verify=portStatusReason    status=AdminDisabled
    Sleep    3min

1_3_Verify statistics after disabling port
    [Documentation]    Verify statistics after disabling port
    Log    \n\n Validating if values are not increasing in master icm    console=True
    ${len}    Get Length    ${IC1_ports}
    :For    ${x}    IN RANGE    0    ${len}
    \    Wait Until Keyword Succeeds     15 min   10s    Validate If Counters are not increased    ${IC1_ports[${x}]}    ${Interconnect_name[0]}    ${counters}    ${FC_counters}     ${stats}


1_4_Verify statistics in subordinate icm
    [Documentation]    Verify statistics in subordinate icm

    Log    \n\n Executing traffic in icm6 of two servers    console=True
    Execute Traffic In Servers    ${ilo_details}    ${ip_list2}    ${server_details}    ${kill_diskspd}    ${diskspd_cmd}
    Sleep    60sec
    Log    \n\n Validating if counters are increasing in ICM6   console=True
    Wait Until Keyword Succeeds     15 min   10s    Counter Value Validation    ${IC2_ports}    ${Interconnect_name[1]}    ${counters}    ${FC_counters}    ${traffic_time[0]}

1_5_Enable Uplink Port
    [Documentation]      Enable FA ports and verify FC ports statistics
    Log    \n\n Enabling uplink port    console=True
    :FOR    ${port}    IN    @{IC1_ports}
    \    ${Resp}    Get IC Port    ${ICM3_uri}    ${port}
    \    Set to Dictionary   ${Resp}   enabled    True
    \    ${Return}    Update IC Port    ${Interconnect_name[0]}    ${port}    ${Resp}
    \    Wait Until Keyword Succeeds    5 min    20s      IC reached state    ${ICM3_uri}    Configured
    \    Log    Verifying if Port is enabled    console=True
    \    Wait Until Keyword Succeeds     5 min   10s    Verify Port Status    ${ICM3_uri}    ${port}    verify=portStatusReason    status=LoggedIn

    Execute Traffic In Servers    ${ilo_details}    ${ip_list1}    ${server_details}    ${kill_diskspd}    ${diskspd_cmd}
    Sleep    60sec
    Log    \n\n Validating if counters are increasing in ICM3    console=True
    Wait Until Keyword Succeeds     15 min   10s    Counter Value Validation    ${IC1_ports}    ${Interconnect_name[0]}    ${counters}    ${FC_counters}    ${traffic_time[0]}

##### PowerOn/Off ########
TC_2_API_TC_Verify FC statistics after Power off/on ICM.
    [Documentation]   Verify FC statistics before Power off master ICM.
    [Tags]    PowerICM
    Set Log Level    TRACE
    ${ip_list1}    ${ip_list2}    Get IP In a List    ${ilo_details}
    Log    \n\n Executing traffic in icm3 of both servers    console=True
    Execute Traffic In Servers    ${ilo_details}    ${ip_list1}    ${server_details}    ${kill_diskspd}    ${diskspd_cmd}
    Log    \n\n Executing traffic in icm6 of both servers    console=True
    Execute Traffic In Servers    ${ilo_details}    ${ip_list2}    ${server_details}    ${kill_diskspd}    ${diskspd_cmd}

    Sleep    60sec
    Wait Until Keyword Succeeds     15 min   10s    Counter Value Validation    ${IC1_ports}    ${Interconnect_name[0]}    ${counters}    ${FC_counters}    ${traffic_time[0]}

TC_2_1_Power off the master ICM
    [Documentation]    Power off the master ICM
    Set Log Level    TRACE
    Patch Interconnect     ${Interconnect_dto[0]}    op=replace    path=/powerState   value=Off    timeout=60    interval=10
    Wait Until Keyword Succeeds    5 min    20s      IC reached state    ${ICM3_uri}    Maintenance
    Sleep    60sec

TC_2_2_Powering on the master ICM
    [Documentation]    Powering on the master ICM
    Set Log Level    TRACE
    Patch Interconnect     ${Interconnect_dto[0]}    op=replace    path=/powerState    value=On    timeout=60    interval=10

    Wait Until Keyword Succeeds    15 min    20s      IC reached state    ${ICM3_uri}    Configured

    Wait Until Keyword Succeeds     5 min   10s      Get Interconnect stackingDomainRole    ${Interconnect_name[0]}    Subordinate

    Wait Until Keyword Succeeds     5 min   10s      Get Interconnect stackingDomainRole    ${Interconnect_name[1]}   Master

TC_2_3_Verify port speed are same
    [Documentation]    Verify port speed are same
    Set Log Level    TRACE
    Log    \n\n Verify all uplink speed are expected    console=True

    Wait Until Keyword Succeeds    5 min    20s    Verify Port    ${ICM3_uri}    ${IC1_ports[0]}    status=OK    portStatus=Linked    opSpeed=Speed32G
    Wait Until Keyword Succeeds    5 min    20s    Verify Port    ${ICM3_uri}    ${IC1_ports[1]}    status=OK    portStatus=Linked    opSpeed=Speed16G
    Sleep    60sec

TC_2_4_Execute traffic and verify statistics in master icm
    [Documentation]     Execute traffic and verify statistics in master icm
    Set Log Level    TRACE
    ${ip_list1}    ${ip_list2}    Get IP In a List    ${ilo_details}
    Log    \n\n Executing traffic in icm3 of both servers    console=True
    Execute Traffic In Servers    ${ilo_details}    ${ip_list1}    ${server_details}    ${kill_diskspd}    ${diskspd_cmd}
    Sleep    60sec
    Log    \n\n Validating values are increasing in icm3    console=True
    Wait Until Keyword Succeeds     15 min   10s    Counter Value Validation    ${IC2_ports}    ${Interconnect_name[1]}    ${counters}    ${FC_counters}    ${traffic_time[0]}

TC_2_5_Powering on/off the subordinate icm
    [Documentation]    Powering on/off the subordinate icm
    Set Log Level    TRACE
    Patch Interconnect     ${Interconnect_dto[1]}    op=replace    path=/powerState    value=Off    timeout=60    interval=10
    Wait Until Keyword Succeeds    5 min    20s      IC reached state    ${ICM6_uri}    Maintenance

    Patch Interconnect     ${Interconnect_dto[1]}    op=replace    path=/powerState    value=On    timeout=60    interval=10
    Wait Until Keyword Succeeds    15 min    20s      IC reached state    ${ICM6_uri}    Configured

TC_2_6_Verify port speed are expected
    [Documentation]    Verify port speed are expected
    Set Log Level    TRACE
    Log    \n\n Verify all uplink speed are expected    console=True

    Wait Until Keyword Succeeds    5 min    20s    Verify Port    ${ICM6_uri}    ${IC2_ports[0]}    status=OK    portStatus=Linked    opSpeed=Speed32G
    Wait Until Keyword Succeeds    5 min    20s    Verify Port    ${ICM6_uri}    ${IC2_ports[1]}    status=OK    portStatus=Linked    opSpeed=Speed16G

TC_2_7_Execute traffic and verify statistics in master icm
    [Documentation]     Execute traffic and verify statistics in master icm
    Set Log Level    TRACE

    ${ip_list1}    ${ip_list2}    Get IP In a List    ${ilo_details}
    Log    \n\n Executing traffic in icm3 of both servers    console=True
    Execute Traffic In Servers    ${ilo_details}    ${ip_list1}    ${server_details}    ${kill_diskspd}    ${diskspd_cmd}
    Sleep    60sec
    Log    \n\n Validating values are increasing in icm3    console=True
    Wait Until Keyword Succeeds     15 min   10s    Counter Value Validation    ${IC1_ports}    ${Interconnect_name[0]}    ${counters}    ${FC_counters}    ${traffic_time[0]}


################## Reset ICM      ######################

TC_3_1_API_TC_Verify FC statistics after Reset ICM.

    [Documentation]   Execute traffic and validate stats in master.
    [Tags]    ResetMasterICM
    Set Log Level    TRACE
    ${ip_list1}    ${ip_list2}    Get IP In a List    ${ilo_details}

    Log    \n\n Executing traffic in icm3 of both servers    console=True
    Execute Traffic In Servers    ${ilo_details}    ${ip_list1}    ${server_details}    ${kill_diskspd}    ${diskspd_cmd}

    Sleep    60sec
    Log    \n\n Validating counters in master icm     console=True
    Wait Until Keyword Succeeds     15 min   10s    Counter Value Validation    ${IC1_ports}    ${Interconnect_name[0]}    ${counters}    ${FC_counters}    ${traffic_time[0]}

TC_3_2_Resetting master icm
    [Documentation]    Resetting master icm
    Set Log Level    TRACE
    Log    \n\n Reseting master interconnect     console=True
    Patch Interconnect     ${Interconnect_dto[0]}    op=replace    path=/deviceResetState    value=Reset    timeout=600    interval=10

TC_3_3_Verify port status and IC role
    [Documentation]     Verify port status and IC role
    Set Log Level    TRACE
    Wait Until Keyword Succeeds     5 min   10s      Get Interconnect stackingDomainRole    ${Interconnect_name[0]}    Subordinate
    Wait Until Keyword Succeeds     5 min   10s      Get Interconnect stackingDomainRole    ${Interconnect_name[1]}    Master

    Log    \n\n Verify all uplink speed are expected    console=True
    :FOR    ${uplink}    IN    @{IC1_ports}
    \    Wait Until Keyword Succeeds    5 min    20s    Verify Port    ${ICM3_uri}    ${IC1_ports[0]}    status=Unknown    portStatus=Unknown

TC_3_4_Validate if counters are not increased in master icm
    [Documentation]     Validate if counters are not increased in ICM3
    Set Log Level    TRACE
     Wait Until Keyword Succeeds     5 min   10s    Validate If Counters Are Zero    ${IC1_ports[0]}    ${Interconnect_name[0]}    ${counters}    ${FC_counters}     ${stats}

TC_3_5_Verify if ICM3 is up and ports are linked
    [Documentation]     Verify if ICM3 is up and ports are linked
    Set Log Level    TRACE
    Log    \n\n Verify all uplink speed are expected    console=True
    WaitUntil Keyword Succeeds    5 min    20s    Verify Port    ${ICM3_uri}    ${IC1_ports[0]}    status=OK    portStatus=Linked    opSpeed=Speed32G
    WaitUntil Keyword Succeeds    5 min    20s    Verify Port    ${ICM3_uri}    ${IC1_ports[1]}    status=OK    portStatus=Linked    opSpeed=Speed16G

TC_3_6_Execute traffic and verify counters in ICM6
    [Documentation]    Execute traffic and verify stats in ICM6
    Set Log Level    TRACE
    ${ip_list1}    ${ip_list2}    Get IP In a List    ${ilo_details}

    Log    \n\n Executing traffic in icm6 of both servers    console=True
    Execute Traffic In Servers    ${ilo_details}    ${ip_list1}    ${server_details}    ${kill_diskspd}    ${diskspd_cmd}

    Log    \n\n Validating if statistics are increasing in subordinate    console=True
    Wait Until Keyword Succeeds     15 min   10s    Counter Value Validation    ${IC2_ports}    ${Interconnect_name[1]}    ${counters}    ${FC_counters}    ${traffic_time[0]}

TC_3_7_Resetting to revert back master icm
    [Documentation]     Resetting to revert back master icm
    Set Log Level    TRACE
    Log    \n\n Reseting subordinate interconnect     console=True
    Patch Interconnect     ${Interconnect_dto[1]}    op=replace  path=/deviceResetState    value=Reset    timeout=60    interval=10
    Wait Until Keyword Succeeds     5 min   10s      Get Interconnect stackingDomainRole    ${Interconnect_name[1]}    Subordinate
    Wait Until Keyword Succeeds     5 min   10s      Get Interconnect stackingDomainRole    ${Interconnect_name[0]}    Master

    Log    Verify all uplink speed are expected    console=True

    Wait Until Keyword Succeeds    5 min    20s    Verify Port    ${ICM6_uri}    ${IC2_ports[0]}    status=OK    portStatus=Linked    opSpeed=Speed32G
    Wait Until Keyword Succeeds    5 min    20s    Verify Port    ${ICM6_uri}    ${IC2_ports[1]}    status=OK    portStatus=Linked    opSpeed=Speed16G


############   Efuse ICM   ################################

TC_4_API_TC_Verify FC statistics after Efuse on/off ICM.
    [Documentation]   Verify FC statistics after Efuse on/off ICM.
    [Tags]    EfuseICM
    Set Log Level    TRACE

    ${ip_list1}    ${ip_list2}    Get IP In a List    ${ilo_details}
    Execute Traffic In Servers    ${ilo_details}    ${ip_list1}    ${server_details}    ${kill_diskspd}    ${diskspd_cmd}
    Sleep    60sec
    Wait Until Keyword Succeeds     15 min   10s    Counter Value Validation    ${IC1_ports}    ${Interconnect_name[0]}    ${counters}    ${FC_counters}    ${traffic_time[0]}

TC_4_1_Efuse Remove ICM3 and verify status
    [Documentation]    Efuse Remove ICM3 and verify status
    Set Log Level    TRACE
    Get EM IP    ${ENC1}
    Get EM Token    ${ENC1}
    Efuse ICM    EFuseOn    ${bay_numbers[0]}
    Log    \n\n Verifying if module is absent    console=True
    Wait Until Keyword Succeeds    5 min    20s      IC reached state    ${ICM3_uri}    Absent

TC_4_2_Validate if counters are increased in subordinate after removing the master ICM
    [Documentation]    Validate if counters are increased in subordinate after removing the master ICM
    Set Log Level    TRACE

    ${ip_list1}    ${ip_list2}    Get IP In a List    ${ilo_details}

    Log    \n\n Executing traffic in icm6 of both servers    console=True
    Execute Traffic In Servers    ${ilo_details}    ${ip_list1}    ${server_details}    ${kill_diskspd}    ${diskspd_cmd}

    Log    \n\n Validating if statistics are increasing in subordinate    console=True
    Wait Until Keyword Succeeds     15 min   10s    Counter Value Validation    ${IC2_ports}    ${Interconnect_name[1]}    ${counters}    ${FC_counters}    ${traffic_time[0]}

TC_4_3_Efuse Insert ICM3 and verify status
    [Documentation]    Efuse Insert ICM3 and verify status
    Set Log Level    TRACE
    Get EM IP    ${ENC1}
    Get EM Token    ${ENC1}
    Efuse ICM    EFuseOff    ${bay_numbers[0]}
    Log    \n\n Verifying if module is Configured    console=True

    Wait Until Keyword Succeeds    15 min    20s      IC reached state    ${ICM3_uri}    Configured
    Wait Until Keyword Succeeds     5 min   10s      Get Interconnect stackingDomainRole    ${Interconnect_name[0]}    Subordinate
    Wait Until Keyword Succeeds     5 min   10s      Get Interconnect stackingDomainRole    ${Interconnect_name[1]}    Master

    Log    \n\n Verify all uplink speed are expected    console=True

    Wait Until Keyword Succeeds    5 min    20s    Verify Port    ${ICM3_uri}    ${IC1_ports[0]}    status=OK    portStatus=Linked    opSpeed=Speed32G
    Wait Until Keyword Succeeds    5 min    20s    Verify Port    ${ICM3_uri}    ${IC1_ports[1]}    status=OK    portStatus=Linked    opSpeed=Speed16G

TC_4_4_Execute traffic and verify if counters are increased in subordinate ICM
    [Documentation]    Execute traffic and verify if counters are increased in subordinate ICM
    Set Log Level    TRACE
    ${ip_list1}    ${ip_list2}    Get IP In a List    ${ilo_details}
    Execute Traffic In Servers    ${ilo_details}    ${ip_list1}    ${server_details}    ${kill_diskspd}    ${diskspd_cmd}
    Sleep    200sec
    Wait Until Keyword Succeeds    15 min    20s    Counter Value Validation    ${IC2_ports}    ${Interconnect_name[1]}    ${counters}    ${FC_counters}    ${traffic_time[0]}

TC_4_5_Bringing back the ICM3 as master
    [Documentation]    Bringing back the ICM3 as master
    Get EM IP    ${ENC2}
    Get EM Token    ${ENC2}
    Efuse ICM    EFuseOn    ${bay_numbers[1]}
    Wait Until Keyword Succeeds    5 min    20s      IC reached state    ${ICM6_uri}    Absent
    Sleep    60sec
    Get EM IP    ${ENC2}
    Get EM Token    ${ENC2}
    Efuse ICM    EFuseOff    ${bay_numbers[1]}
    Wait Until Keyword Succeeds    15 min    20s      IC reached state    ${ICM6_uri}    Configured
    Wait Until Keyword Succeeds     5 min   10s      Get Interconnect stackingDomainRole    ${Interconnect_name[0]}    Master
    Wait Until Keyword Succeeds     5 min   10s      Get Interconnect stackingDomainRole    ${Interconnect_name[1]}    Subordinate

    Log    \n\n Verify all uplink speed are expected    console=True

    Wait Until Keyword Succeeds    5 min    20s    Verify Port    ${ICM6_uri}    ${IC2_ports[0]}    status=OK    portStatus=Linked    opSpeed=Speed32G
    Wait Until Keyword Succeeds    5 min    20s    Verify Port    ${ICM6_uri}    ${IC2_ports[1]}    status=OK    portStatus=Linked    opSpeed=Speed16G


