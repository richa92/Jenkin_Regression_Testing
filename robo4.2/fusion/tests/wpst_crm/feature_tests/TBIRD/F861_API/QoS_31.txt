*** Settings ***
Documentation		TearDown using FusionLibrary API keywords
Variables		data_variables.py
Library			json
Library			FusionLibrary
Library			RoboGalaxyLibrary
Library			Collections
Library			String
Library			SSHLibrary
Resource		resource.txt
#Suite Teardown	Suite Teardown

*** Variables ***
${APPLIANCE_IP}		15.245.131.222

*** Test Cases ***

1. Login to Appliance
	[Tags]  add   POSITIVE
	Set Log Level    TRACE
	Fusion Api Login Appliance    ${APPLIANCE_IP}        ${admin_credentials}
***comments****	 
2. Creating LiG  
    ${body} =   Build LIG body     ${LIGS_TB[0]}
	${resp} = 	Fusion Api Create LIG	${body}
	${task} =   Wait For Task    ${resp} 	400s	2s
	log to console		response is:${resp}
	Run Keyword If	'${resp['status_code']}' != '202'	fail    ELSE    Log to Console  \n-LIG  created successfully
 
3. Create EG
    Log to console	\n Creating EG
	${Resp} =	Add Enclosure Group from variable		${enc_group}
	Run Keyword If  '${Resp['status_code']}' != '201'  Fail    ELSE  log to console   \n-created EG successfully

4. Creating LE
    Log to console	\n Creating LE
	${Resp} =	Add Logical Enclosure from variable     ${Logical_Enclosure[0]}
	Run Keyword If  '${Resp['status_code']}' != '202'  Fail    ELSE  log to console   \n-created LE successfully 
	
5. Adding Different user
	${l} = 	Get Length	${users}
	:FOR	${x}	IN RANGE	0	${l}
	\   ${resp}		Fusion Api Add User		body=${users[${x}]} 
    \   Log to console	\nResponse of ${users[${x}]} is ${resp}
	\	Run Keyword If  '${resp['status_code']}' != '200'  Fail    ELSE  log to console   \n-Created ${users[${x}]['roles']} user successfully
	
	${resp}		Fusion Api Logout Appliance
	Run Keyword If  '${resp['status_code']}' != '204'  Fail    ELSE  log to console   \n-Logged out successfully
	Log to console	\n Logged out successfully response ${resp}    
***comments***
***Test Cases***   
6. Logging in as different user
	${l} = 	Get Length	${users}
	Log to console	\n ${l}
	:FOR	${x}	IN RANGE	0	${l}
	\   ${resp}		Fusion Api Login Appliance		${APPLIANCE_IP}		${usercred[${x}]} 
	\	Log to console	\n Logged in successfully as ${usercred[${x}]['userName']}
	\	${resp} =    Fusion Api Get Li 
	\	log to console	\nget li Li with QoS ${resp}
    \	${uri} =     Get From Dictionary        ${resp['members'][0]}    uri
	\   ${Resp} = 	Fusion Api Update qos aggregated configuration			body=${QoS_NoFcoe['qosConfiguration']}	uri=${uri}
	\	Run Keyword If		'${Resp['status_code']}' != '202'      log to console   \nThe ${usercred[${x}]['userName']} user is not authorized    ELSE		User Validation		${x}	${Resp}
	\   ${resp}		Fusion Api Logout Appliance
	\	Run Keyword If  '${resp['status_code']}' != '204'  Fail    ELSE  log to console   \n-Logged out successfully

7. Login to Appliance
	[Tags]  add   POSITIVE
	Set Log Level    TRACE
	Fusion Api Login Appliance    ${APPLIANCE_IP}        ${admin_credentials}

***Keywords***

User Validation

	[Arguments] 	${x}		${Resp}
	${task} =	Wait For Task 	${Resp} 	1200s	2s    
	${resp} =    Fusion Api Get Li
	Log to console	\nget li after editing ${resp} 
	Log to console	\nmembers ${resp['members'][0]['qosConfiguration']['activeQosConfig']['configType']}
    Run Keyword If      '${resp['members'][0]['qosConfiguration']['activeQosConfig']['configType']}' != '${QoS_NoFcoe['qosConfiguration']['activeQosConfig']['configType']}'  Fail    ELSE   log to console   \nThe ${usercred[${x}]['userName']} user is authorized
	
	
