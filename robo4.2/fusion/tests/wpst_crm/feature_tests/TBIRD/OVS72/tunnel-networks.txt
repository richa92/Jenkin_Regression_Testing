*** Settings ***
Documentation   Feature Test: OVF268

Resource        C:/latest/fusion/tests/resource/fusion_api_all_resource_files.txt
Resource        ../FVT/fvt-keywords.txt
Resource		../FVT/Resources/fvt_resource.txt

Variables       ./enclosure_map.py
Variables       ./data_variables.py
Variables       ./tunnel_network_data.py

Library			FusionLibrary
Library			../FVT/fvt_api.py

*** Variables ***
${LI}    LE-LIG1
${frame}    1

*** Keywords ***
Initialize Globals
	[Arguments]	${frame}
	Set Global Variable	${LIG}	enc${frame}-LIG
	Set Global Variable	${EG}	enc${frame}-EG
	Set Global Variable	${LE}	enc${frame}-LE
	Set Global Variable	${LI}	enc${frame}-LI

Create LIG
	[Documentation]	Create LIG Red
	[Arguments]		${lig}	${timeout}=3 m	${interval}=1 m

	${variables} =     Get Variables      no_decoration=Yes
    Set to dictionary	${lig}	interconnectMapTemplate	${variables['Enc${frame}Map']}
    log     Updated Enc Map
    Log     ${lig}


	${resp} =	Add LIG from variable	${lig}
	Should Be Equal As Integers	${resp['status_code']}	202
	Wait For Task	${resp}	${timeout}	${interval}

	${resp}	Fvt Api Get Logical Interconnect Group By Name	${lig['name']}
	Should Be Equal As Strings	${resp['name']}	${lig['name']}

Create EG
	[Documentation]	Create EG
	[Arguments]		${eg}	${timeout}=3 m	${interval}=1 m
	${resp} =	Add Enclosure Group from variable	${eg}

	${resp}	Fvt Api Get Enclosure Group By Name	${eg['name']}

	Should Be Equal As Strings	${resp['status']}	OK
	Should Be Equal As Strings	${resp['name']}	${eg['name']}

Create LE
	[Documentation]	Create LE
	[Arguments]		${le}	${timeout}=30 m	${interval}=1 m
	${resp} =	Add Logical Enclosure from variable	${le}

	${resp}	Fvt Api Get Logical Enclosure By Name	${le['name']}

	Should Be Equal As Strings	${resp['name']}	${le['name']}
	Should Match Regexp	${resp['status']}	((?i)Warning|OK)

Exceed Uplink Set Limit In LI
	[Documentation]    Exceed Uplink Set Limit In LI
	[Arguments]    ${li}   ${timeout}=30 m    ${interval}=1 m

	${resp}	Fvt Api Get Logical Interconnect By Name	${li}
	Run Keyword If	${resp} != None	Set Global Variable	${LI_URI}	${resp['uri']}

	${us} = 	Copy Dictionary	${li_add_us}
	${body} = 	Build US body 	${us}	${li_uri}
	${resp} = 	Fusion Api Create Uplink Set	body=${body}
	Should Be Equal As Strings	${resp['errorCode']}	CRM_VLAN_REGISTRATION_VLAN_RANGE_DEPLETED_TUNNEL_AND_UNTAGGED

Check LI State
	[Documentation]    Check LI State
	[Arguments]    ${li}   ${state}    ${timeout}=30 m    ${interval}=1 m
	${resp}	Fvt Api Get Logical Interconnect By Name	${li}
	Should Be Equal As Strings	${resp['consistencyStatus']}	${state}

Clean LE
	[Documentation]	Create LE
	[Arguments]		${le}	${eg}	${lig}	${timeout}=30 m	${interval}=1 m

	#Pass Execution    "Clean LE Skipped"

	${resp}	Fvt Api Get Logical Enclosure By Name	${le}
	Should Be Equal As Strings	${resp['name']}	${le}
	${resp}	Fusion Api Delete Logical Enclosure	uri=${resp['uri']}
	Should Be Equal As Integers	${resp['status_code']}	202
	Wait For Task	${resp}	timeout=600m	interval=1m
	${resp}	Fvt Api Get Logical Enclosure By Name	${LE}
	Should Be Equal As Strings	${resp}	None

	${resp}	Fusion Api Delete Enclosure Group	${eg}
	Should Be Equal As Integers	${resp['status_code']}	204
	${resp}	Fvt Api Get Enclosure Group BY Name	${eg}
	Should Be Equal As Strings	${resp}	None

	${resp}	Fusion Api Delete LIG	${lig}
	Should Be Equal As Integers	${resp['status_code']}	202
	Wait For Task	${resp}	timeout=5m	interval=1s

*** Variables ***
${LIG}	None
${EG}	None
${LE}	None
${LI}	None
${LI_uri}	None

${frame}	1

*** Test Cases ***
Login In User
	Set Log Level	TRACE
	Fusion Api Login Appliance	${APPLIANCE_IP}	${admin_credentials}
	#Pass Execution	"Finished Login User"

	Initialize Globals	${frame}
	#Delete Ethernet Networks By PayLoad     ${taggedNetworks}
	#Delete Ethernet Networks By PayLoad     ${networks}

Create Networks
	Pass Execution    "Passed Create Ethernet Networks"
	Create Ethernet Networks	 ${taggedNetworks}
	Create Ethernet Networks	 ${networks}

OVF268 Test Basic Multi Tunnel Networks Per LI
	Pass Execution    "Skipped Test 1"

	# Create LE with with 2 LIGS with 2 and 10 uplinks sets in them
	#
	${resp} =	Fusion Api Get Fabric
	Set Global Variable	${FABRIC_URI}	${resp['members'][0]['uri']}
	Fusion Api Update Fabric Reserved Vlan Range    uri=${FABRIC_URI}    body=${vlan_reserved_pools[3]}
	${resp}    Fusion Api Get Fabric Reserved Vlan Range    ${FABRIC_URI}

	#Create LIG    ${lig1_nored['LIG1']}

	${resp} =	Add LIG from variable	${lig1_nored['LIG1']}
	Should Be Equal As Integers	${resp['status_code']}	202
	Wait For Task	${resp}	timeout=5m	interval=10s

	#Create LIG    ${lig2_nored['LIG2']}

	${resp} =	Add LIG from variable	${lig2_nored['LIG2']}
	Should Be Equal As Integers	${resp['status_code']}	202
	Wait For Task	${resp}	timeout=5m	interval=10s

	Create EG     ${eg_nored[0]}
	Create LE     ${les[0]}
	Check LI State    LE-LIG1   CONSISTENT
	Check LI State    LE-LIG2   CONSISTENT

	Clean LE    ${les[0]['name']}    ${eg_nored[0]['name']}    LIG1
	${resp}	Fusion Api Delete LIG	LIG2
	Should Be Equal As Integers	${resp['status_code']}	202
	Wait For Task	${resp}	timeout=5m	interval=1s


OVF268 Test Max Tunnel Networks Per LI
	Pass Execution  "Skipped Test 2"
	#
	# Create LE with 100 uplink sets
	#
	${resp} =	Fusion Api Get Fabric
	Set Global Variable	${FABRIC_URI}	${resp['members'][0]['uri']}
	Fusion Api Update Fabric Reserved Vlan Range    uri=${FABRIC_URI}    body=${vlan_reserved_pools[3]}
	${resp}    Fusion Api Get Fabric Reserved Vlan Range    ${FABRIC_URI}
	Should Be Equal As Integers	${resp['length']}	100

	Create LIG    ${lig1_red['LIG1']}
	Create EG     ${eg_red[0]}
	Create LE     ${les[1]}
	Check LI State    LE-LIG1   CONSISTENT

	Clean LE    ${les[0]['name']}    ${eg_nored[0]['name']}    LIG1

OVF268 Exhaust Max Tunnel Networks Per LI
	Pass Execution    "Skipped Test 3"

	${resp} =	Fusion Api Get Fabric
	Set Global Variable	${FABRIC_URI}	${resp['members'][0]['uri']}
	Fusion Api Update Fabric Reserved Vlan Range   uri=${FABRIC_URI}    body=${vlan_reserved_pools[3]}
	${resp}    Fusion Api Get Fabric Reserved Vlan Range   ${FABRIC_URI}
	Should Be Equal As Integers	${resp['length']}	100

	#Create Ethernet Networks	 ${network_129}
	Create LIG    ${lig1_red['LIG1']}
	Create EG     ${eg_red[1]}
	Create LE     ${les[2]}
	Check LI State    LE-LIG1   CONSISTENT

	Exceed Uplink Set Limit In LI    LE-LIG1

	${resp}	Fvt Api Get Logical Interconnect By Name	LE-LIG1
	Run Keyword If	${resp} != None	Set Global Variable	${LI_URI}	${resp['uri']}

    ${uris} =	Fvt Api Convert Resources To Uris	${updated_internal_network_list}
	${resp} =	Fvt Api Update Internal Networks	${uris}	${LI_URI}
	Should Be Equal As Strings	${resp['errorCode']}	CRM_VLAN_REGISTRATION_VLAN_RANGE_DEPLETED_TUNNEL_AND_UNTAGGED

	Clean LE    ${les[0]['name']}    ${eg_nored[0]['name']}    LIG1

OVF268 Exhaust Internal Vlan Pool Thru Internal Networks
	#Pass Execution     "Skipped Test 4"

	${resp} =	Fusion Api Get Fabric
	Set Global Variable	${FABRIC_URI}	${resp['members'][0]['uri']}
	Fusion Api Update Fabric Reserved Vlan Range    uri=${FABRIC_URI}    body=${vlan_reserved_pools[4]}
	${resp}    Fusion Api Get Fabric Reserved Vlan Range    ${FABRIC_URI}
	Should Be Equal As Integers	${resp['length']}	98

	Add FC Networks from variable    ${fcnetworks}

	Create LIG    ${lig1_fc['LIG1']}
	Create EG     ${eg_red[2]}
	Create LE     ${les[3]}
	Check LI State    LE-LIG1    CONSISTENT

	${network_list} =    Create List
	:FOR	${x}	IN RANGE	103 	199
    \   Append to List    ${network_list}    tunn_${x}

	${resp}	Fvt Api Get Logical Interconnect By Name	LE-LIG1
	Run Keyword If	${resp} != None	Set Global Variable	${LI_URI}	${resp['uri']}

	${uris} =	Fvt Api Convert Resources To Uris    ${network_list}
	${task}	Fusion Api Update Li Internal Networks	uri=${LI_URI}	body=${uris}


	${network_list} =    Create List
	:FOR	${x}	IN RANGE	102 	232
    \   Append to List    ${network_list}    tunn_${x}

	${uris} =	Fvt Api Convert Resources To Uris    ${network_list}
	${task}	Fusion Api Update Li Internal Networks	uri=${LI_URI}	body=${uris}
	Should Be Equal As Strings	${task['errorCode']}	CRM_VLAN_REGISTRATION_VLAN_RANGE_DEPLETED_TUNNEL_AND_UNTAGGED

	# Try adding an uplink set to LI
	Exceed Uplink Set Limit In LI    LE-LIG1

	Clean LE     ${les[0]['name']}    ${eg_nored[0]['name']}    LIG1

	Delete Ethernet Networks By PayLoad     ${taggedNetworks}
	Delete Ethernet Networks By PayLoad     ${networks}
	Remove All FC Networks
