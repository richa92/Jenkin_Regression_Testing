*** Settings ** *
Library             RoboGalaxyLibrary
Library             FusionLibrary
Library             SSHLibrary
Library             OperatingSystem
Library             XML
Library             String
Library             Dialogs

*** Variables ***
${DataFile}         F118Data.xml
${ApplianceUrl}     https://15.245.131.132
${Browser}      FireFox
#${Browser}     Chrome
#${browser}     googlechrome
#${Browser}     IE
${SeleniumSpeed}    0.1
${PauseTestCase}    True
${vlan1_verify} Enter values between 2 and 4094
${duplicate_enet_verify}    Unable to create network.\nA network with the name eth-102 already exists.
${duplicate_fcoe_verify}    Unable to create network.\nA network with the name fcoe-1003 already exists.
${multiple_ICM_select}      value c Unable to create uplink set.\nWhen FCoE networks are present in an uplink set, the uplink ports must be selected from a single FCoE capable interconnect module.\nResolution Remove uplink ports until only a single interconnect module is being used or remove all FCoE networks from the uplink set.
${bay_electron}    3

*** Keywords ** *

Load Test Data and Open Browser
        Set Log Level    TRACE
        Load Test Data  ${DataFile}
        Log Variables
        Open Browser  ${ApplianceUrl}  ${Browser}   #ff_profile_dir=${profile}
        Maximize Browser Window
        #Run Keyword if "{Browser}" == "IE" Go To javascript:Document.getElementById('overridelink').click()
        Set Selenium Speed  ${SeleniumSpeed}

Logout and Close All Browsers
        Fusion UI Logout of Appliance
        Close All Browsers

Log into Fusion appliance as Administrator
        ${user} =   Get Data By Property    ${TestData.users}   name    Administrator
        Fusion UI Login to Appliance    ${user[0].name}

Perform SSH connection test
      [Arguments]      ${IP}    ${USER1}    ${PASSWORD}
      Set Default Configuration    prompt=${PROMPT}  timeout=1 minute
      ${id}=           Open Connection   ${IP}
      ${ssh_status}    ${output}=  Run Keyword And Ignore Error  Login  ${USER1}    ${PASSWORD}
      Run keyword if    '${ssh_status}'=='FAIL' Log to Console  "SSH to Server: Failed"
      Run keyword if    '${ssh_status}'=='PASS' Log to Console  "SSH to Server: Passed"
      Close Connection
      Log to Console    "Closed SSH channel"
      Log to Console    "SSH_status"
      Log to Console    ${ssh_status}
      [return]  ${ssh_status}
