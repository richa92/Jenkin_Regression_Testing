*** Settings ***
Documentation		Feature Test: F108 Compliance Test
...					Usage:
...					Note: update Enclosure serial #s in data_common.py file and run following command
...						AR51 ME: pybot -d logs -T -V data_ha_cl10.py -v frame:3 -v APPLIANCE_IP:15.245.131.12 compliance-ha-redundant.txt


Variables 			../data_common.py
Resource            ../../../../../../Resources/api/fusion_api_resource.txt
Resource            ../../FVT/fvt-keywords.txt
Resource			../../FVT/Resources/fvt_resource.txt	

Library				FusionLibrary
Library				../../FVT/fvt_api.py

*** Keywords ***
FVT Logical Interconnect Compliance
    [Documentation]    LI compliance keyword
	[Arguments]		${LE}	${LI}	${FROM}
	Run Keyword And Continue On Failure	FVT Edit Telemetry Configurations Of LI	${LE}	${LI}	${telemetry}	${FROM}
	Run Keyword And Continue On Failure	FVT Edit Ethernet Settings Of LI	${LE}	${LI}	${ethernet_setting}	${FROM}
	Run Keyword And Continue On Failure	FVT Add Uplink Set To LI	${LE}	${LI}	${li_add_uplinkset}	${FROM}
	Run Keyword And Continue On Failure	FVT Edit Uplink Set Of LI	${LE}	${LI}	${li_edit_uplinkset}	${FROM}
	Run Keyword And Continue On Failure	FVT Delete Uplink Set From LI	${LE}	${LI}	${lig_uplinkset}	${FROM}
	Log To Console	Finished Logical Interconnect Compliance From ${FROM}
	[Return]
	
FVT Create LIG Compliance Payload
    [Documentation]    Payload for LIG compliance
	[Arguments]	${payload}	${name}	${icmap}	${encindexes}
	Set To Dictionary	${payload}	name	${name}
	Set To Dictionary	${payload}	interconnectMapTemplate	${icmap}
	Set To Dictionary	${payload}	enclosureIndexes	${encindexes}
	[Return]
	
FVT Logical Interconnect Group Compliance
    [Documentation]    LIG compliance keyword
	[Arguments]		${LE}	${LIG}	${FROM}
	Sleep    3 secs
	${encindexes} =	Create List
	:For	${x}	in range	1	${frame}+1
	\	Append To List	${encindexes}	${x}
	${variables} =	Get Variables	no_decoration=Yes
	${icmap} =	Set Variable	${variables['Enc${frame}Map']}	
	FVT Create LIG Compliance Payload	${edit_telemetry}	${LIG}	${icmap}	${encindexes}
	Run Keyword And Continue On Failure	FVT Edit Telemetry Configurations Of LIG	${LE}	${LE}-${LIG}	${edit_telemetry}	${FROM}
	FVT Create LIG Compliance Payload	${edit_ethernetSettings}	${LIG}	${icmap}	${encindexes}
	Run Keyword And Continue On Failure	FVT Edit Edit Ethernet Settings Of LIG	${LE}	${LE}-${LIG}	${edit_ethernetSettings}	${FROM}
	FVT Create LIG Compliance Payload	${edit_add_uplinkset}	${LIG}	${icmap}	${encindexes}
	Run Keyword And Continue On Failure	FVT Add Uplink Set To LIG	${LE}	${LE}-${LIG}	${edit_add_uplinkset}	${FROM}
	FVT Create LIG Compliance Payload	${edit_delete_uplinkset}	${LIG}	${icmap}	${encindexes}		
	Run Keyword And Continue On Failure	FVT Delete Uplink Set From LIG	${LE}	${LE}-${LIG}	${edit_delete_uplinkset}	${FROM}
	FVT Create LIG Compliance Payload	${edit_edit_uplinkset}	${LIG}	${icmap}	${encindexes}		
	Run Keyword And Continue On Failure	FVT Edit Uplink Set Of LIG	${LE}	${LE}-${LIG}	${edit_edit_uplinkset}	${FROM}
	Log To Console	Finished Logical Interconnect Group Compliance From ${FROM}
	[Return]
	
*** Test Cases ***
Login In User
    [Documentation]    Common login and setting variables keyword for test cases
	Set Log Level	TRACE
	Fusion Api Login Appliance	${appliance_ip}	${admin_credentials}
	Set Suite Variable	${LIG}	Enc${frame}-LIG
	Set Suite Variable	${EG}	Enc${frame}-EG
	Set Suite Variable	${LE}	Enc${frame}-LE
	Set Suite Variable	${LI}	${LE}-${LIG}
	Pass Execution	Finished Login User
	
FVT Create Ethernet Networks
    [Documentation]    Create Ethernet networks
	#Pass Execution	Skip Create Ethernet Networks
	Create Ethernet Networks	${ethernet_networks}
	Pass Execution	Finished Create Ethernet Networks
	
Create Logical Enclosure 
    [Documentation]    Create LIG, EG and LE
	#Pass Execution	Skip Create Logical Enclosure
	Add Logical Interconnect Group	${ligs['${LIG}']}	timeout=10m	interval=1s	
	FVT Add Enclosure Group	${enc_group['${EG}']}
	Add Logical Enclosure	${les['${LE}']}	timeout=90m	interval=1m
	${resp}	Fvt Api Get Logical Enclosure By Name	${LE}
	Should Be Equal As Strings	${resp['status']}	OK
	Should Be Equal As Strings	${resp['state']}	Consistent
	${resp}	Fvt Api Get Logical Interconnect BY Name	${LI}
	Should Be Equal As Strings	${resp['consistencyStatus']}	CONSISTENT
	FVT Verify Interconnects	Enc${frame}Map

Create Server Profiles
    [Documentation]    Create Server Profiles
	#Pass Execution	Skip Create Profiles
    :FOR    ${x}   IN RANGE	1	${frame}+1
	\	Set to Dictionary	${profiles['Profile${x}']}	enclosureGroupUri	${EG}
	\	FVT Add Server Profile	${profiles['Profile${x}']}	timeout=20m	interval=1s
	\	${resp}	Fvt Api Get Server Profile BY Name	${profiles['Profile${x}']['name']}
	\	Should Be Equal As Strings	${resp['status']}	OK

Logical Interconnect Compliance From LI	
    [Documentation]    LI compliance from LI
	#Pass Execution	Skip Logical Interconnect Compliance From LI
	FVT Logical Interconnect Compliance	${LE}	${LI}	LI

Logical Interconnect Compliance From LE
    [Documentation]    LI compliance from LE
	#Pass Execution	Skip Logical Interconnect Compliance From LE
	FVT Logical Interconnect Compliance	${LE}	${LI}	LE
	
Logical Interconnect Group Compliance From LI
    [Documentation]    LIG compliance from LI
	#Pass Execution	Skip Logical Interconnect Group Compliance From LI
	FVT Logical Interconnect Group Compliance	${LE}	${LIG}	LI
	
Logical Interconnect Group Compliance From LE
    [Documentation]    LIG compliance from LE
	#Pass Execution	Skip Logical Interconnect Group Compliance From LE
	FVT Logical Interconnect Group Compliance	${LE}	${LIG}	LE

Delete Profiles
    [Documentation]    Delete Server Profiles
	#Pass Execution	Skip Delete Profiles With Ping
    :FOR    ${x}   IN RANGE	1	${frame}+1
	\	${name} =	Get From Dictionary	${profiles['Profile${x}']}	name
	\	${task}	Fusion Api Delete Server Profile	name=${name}	param=?force=true
	\	Should Be Equal As Integers	${task['status_code']}	202
	\ 	${task} =	Wait For Task	${task}	timeout=10m	interval=2s	
	\	${resp}	Fvt Api Get Server Profile BY Name	${name}
	\	Should Be Equal As Strings	${resp}	None

Delete Logical Enclosure
    [Documentation]    Delete LE, EG and LIG
	#Pass Execution	Skip Delete Logical Enclosure
	### Delete Logical Enclosure ###
	Fvt Delete Logical Enclosure	${LE}
	${resp}	Fvt Api Get Logical Enclosure BY Name	${LE}
	Should Be Equal As Strings	${resp}	None
	${resp}	Fvt Api Get Logical Interconnect BY Name	${LI}
	Should Be Equal As Strings	${resp}	None
	
	### Delete Enclosure Groups ###
	FVT Delete Enclosure Group	${EG}
	${resp}	Fvt Api Get Enclosure Group BY Name	${EG}
	Should Be Equal As Strings	${resp}	None

	### Delete Logical Interconnect Groups ###
	FVT Delete Logical Interconnect Group	${LIG}
	${resp}	Fvt Api Get Logical Interconnect Group BY Name	${LIG}
	Should Be Equal As Strings	${resp}	None
	Pass Execution	Finished Compliance Testing