***Settings***
Documentation    Mini FIT Regression Suite_Network Set Suite
#Variables       FC_FCoE_Common_Variables.py
#Variables       FC_FCoE_Data_Variable.py
Variables       data_variables_ethernet.py
Library         json
Library         FusionLibrary
Library         RoboGalaxyLibrary
Library         Collections
Library         SSHLibrary
Library         String
Library         server_operations
Library         data_variables_ethernet
Resource            ../../../../../Resources/api/fusion_api_resource.txt
Resource           common_keywords.txt
Library         Telnet

***Variables***

***Test cases***

Fetch ICM URI
    [Documentation]    fetches the interconnect's uri and server ip's
    Set Log Level    TRACE
    [Tags]    Common

    Fusion Api Login Appliance    ${appliance_ip}    ${admin_credentials}

    Log    Fetching ICM URI    console=True
    ${ic_uris}    Create List
    :FOR    ${icm}    IN    @{Interconnect_name}
    \    ${uri} =    Get IC URI    ${icm}
    \    Run Keyword If    '${icm}' == '${Interconnect_name[0]}'    Set Suite Variable    ${ICM3_uri}    ${uri}
    \    ...    ELSE IF    '${icm}' == '${Interconnect_name[1]}'   Set Suite Variable    ${ICM6_uri}    ${uri}
    \    Append To List    ${ic_uris}    ${uri}
    Log     ${ICM3_uri}    console=True
    Log     ${ICM6_uri}    console=True
    Set Suite Variable    ${ICM_uris}    ${ic_uris}


Edit the server profile and add the networks to the network sets(LAG)
    [Documentation]    Edit the server profile and add the networks to the network sets(LAG)
    [TAGS]    Ethernet    non_critical

    Power off Servers in Profiles    ${sp_networkset_lag}
    :FOR    ${pro}    IN    @{sp_networkset_lag}
    \    Set To Dictionary    ${pro}    enclosureGroupUri    EG:${EG}
    ${resp}    Edit Server Profiles from variable    ${sp_networkset_lag}
    ${l}    Get Length    ${resp}
    :FOR    ${x}    IN RANGE    0   ${l}
    \    Run Keyword If  '${resp[${x}]['status_code']}' == '202'
    \    ...    Wait For Task2    ${resp[${x}]}    20m    1m    ELSE    Fail    Log    failed    console=True

    Power on Servers in Profiles    ${sp_networkset_lag}
    Sleep    ${SERVER_BOOT_WAIT}

1_Verify ping for MLAG server with network set connections
    [TAGS]    Ethernet    critical
    [Documentation]    Verify ping for MLAG server with network set connections


    ${adapter_name_list}    Getting Server Adapter Names    ${ENC1_SERVER_LAG_NS_ILO}    ${ENC1_SERVER_LAG_NS_win_cred}    ${ENC1_SERVER_LAG_NS}    ${Powershell_get_mac}    ${ENC1_SERVER_LAG_NS_win_cred['username']}    ${ENC1_SERVER_LAG_NS_win_cred['password']}    ${file1}    ${ENC1_SERVER_LAG_NS_ILO['type']}    mac_length=${mac_len_same_phy_port[1]}

    ${server_details}    Get IP For All Servers    ${ENC1_SERVER_LAG_NS_ILO}    ${ENC1_SERVER_LAG_NS_win_cred}
    ${ip}    Get From Dictionary    ${server_details}    ip
    Set Suite Variable    ${ip}    ${ip}

    Create Teaming windows     ${adapter_name_list[0]}    ${adapter_name_list[1]}   ${Powershell_get_mac1}    ${ENC1_SERVER_LAG_NS_win_cred}    ${ip[0]}

    Execute Powershell Command    ${ip[0]}    ${ENC1_SERVER_LAG_NS_win_cred}    ${Powershell_tagging_1}

    Getting Server Ip And Verifying Traffic    ${ENC1_SERVER_LAG_NS_ILO}    ${ENC1_SERVER_LAG_NS_win_cred}    ${ping_file}    ${ENC1_SERVER_LAG_NS_win_cred['OS']}    ${Ping_Lost}    ${percentage_loss[0]}

    #Delete teaming
    Delete Windows Teaming    ${ip[0]}    ${ENC1_SERVER_LAG_NS_win_cred}    ${delete_team_cmd0}

2_Verify s-channel statistics and historic data for server profile created with network set
    [TAGS]    Ethernet    critical
    [Documentation]    Verify s-channel statistics and historic data for server profile created with network set

    ${ns_server_details}    Get IP For All Servers    ${ENC2_SERVER_NON_LAG_NS_ILO}    ${ENC2_SERVER_NON_LAG_NS_win_cred}
    ${ip}    Get From Dictionary    ${ns_server_details}    ip
    Set Suite Variable    ${ip}    ${ip}

    ${adapter_name_list}    Getting Server Adapter Names    ${ENC2_SERVER_NON_LAG_NS_ILO}    ${ENC2_SERVER_NON_LAG_NS_win_cred}    ${ENC2_SERVER_NON_LAG_NS}    ${Powershell_get_mac}    ${ENC2_SERVER_NON_LAG_NS_win_cred['username']}    ${ENC2_SERVER_NON_LAG_NS_win_cred['password']}    ${file1}    ${ENC2_SERVER_NON_LAG_NS_ILO['type']}    mac_length=${mac_len_same_phy_port[2]}

    Create Teaming And Tagging Windows    ${adapter_name_list[0]}    ${Powershell_switchIndependent_team_1}    ${ns_server_details}    ${ip[0]}    ${Powershell_tagging_5}


    ${Windows_server_details}    ${Linux_servers_details}    ${Esxi_servers_details}    Set Server Details    ${ILO_NON_LAG_NS}    ${NON_LAG_NS_server_details}   ${ping_type[1]}    ${ping_windows}    ${ping_linux}    ${ping_esxi}    ${gateway_ping_cmd_windows_ns}    ${gateway_ping_cmd_linux}    ${gateway_ping_cmd_esxi}    ${kill_cmd_ping_windows}    ${kill_cmd_ping_linux}    ${kill_cmd_ping_esxi}
    Set Suite Variable    ${Windows_server_details}    ${Windows_server_details}

    Execute Traffic In Thread    ${Windows_server_details}

    :FOR     ${x}   IN RANGE   0   3
    \    Wait Until Keyword Succeeds    15 min    60 sec    Verify Port statistics    ${ICM3_uri}    ${downlink_Aside_NS}    ${schannel_counters_Keys}    ${schannel_counters_Keys}    Packet_Interval=300    stats_flag=s_channel    check_flag=increase    subport_no=1

    Wait Until Keyword Succeeds    12 min    60 sec    Validate Sample Values    ${ICM3_uri}    ${downlink_Aside_NS}    ${samples_key_list}    total_samples=12    stats_flag=s_channel    subport_no=1    check_flag=increase

Kill Traffic
    [TAGS]    Ethernet    non_critical
    [Documentation]    Verify s-channel statistics and historic data for server profile created with network set

    #Delete teaming
    Delete Windows Teaming    ${ip[0]}    ${Windows_server_details[0]}    ${delete_team_cmd0}

    Kill_traffic    ${Windows_server_details}