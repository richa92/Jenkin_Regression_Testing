*** Settings ***
Documentation       OVF3509 Digital Diagnostic Information in Nitro Module
Variables       data_variables_Nitro_RIG.py
Library         json
Library         FusionLibrary
Library         RoboGalaxyLibrary
Library         Collections
Library         String
Library         SSHLibrary
Library         validate
Resource        ../../../../../Resources/api/fusion_api_resource.txt

Suite Teardown      Clean OV

*** Test Cases ***
1_Initial Setup
    [Tags]  add   POSITIVE
    [Documentation]   Initial Setup
    Set Log Level    TRACE
    Fusion Api Login Appliance    ${APPLIANCE_IP}        ${admin_credentials}

    Clean OV

    Add Ethernet Networks from variable    ${ethernet_networks}
    Add FC Networks from variable    ${fc_netowrks}

    :FOR    ${lig}    IN    @{ligs}
    \    Add LIG from variable    ${lig}

    Add Enclosure Group from variable    ${enc_group}
    Add Logical Enclosure from variable    ${LE}


    ${dmmi_supported_connector_ic_uri} =    Get IC URI    ${ports[0]['ic_name']}
    ${dmmi_unsupported_connector_ic_uri} =    Get IC URI    ${ports[1]['ic_name']}
    ${no_connector_ic_uri} =    Get IC URI    ${ports[2]['ic_name']}
    ${dmmi_unsplit_connector_ic_uri} =    Get IC URI    ${ports[3]['ic_name']}

    Set Suite Variable    ${dmmi_supported_connector_ic_uri}    ${dmmi_supported_connector_ic_uri}
    Set Suite Variable    ${dmmi_unsupported_connector_ic_uri}    ${dmmi_unsupported_connector_ic_uri}
    Set Suite Variable    ${no_connector_ic_uri}    ${no_connector_ic_uri}
    Set Suite Variable    ${dmmi_unsplit_connector_ic_uri}    ${dmmi_unsplit_connector_ic_uri}

    Wait Until Keyword Succeeds    5 min    20s      IC reached state    ${dmmi_supported_connector_ic_uri}    Configured
    Wait Until Keyword Succeeds    5 min    20s      IC reached state    ${dmmi_unsplit_connector_ic_uri}    Configured
    Wait Until Keyword Succeeds    5 min    20s      IC reached state    ${no_connector_ic_uri}    Configured

    Wait Until Keyword Succeeds    15 min    20s      Verify Port Status    ${dmmi_unsupported_connector_ic_uri}    ${ports[1]['port_name']}    verify=portStatus    status=Linked
    Wait Until Keyword Succeeds    5 min    20s      Verify Port Status    ${dmmi_unsplit_connector_ic_uri}    ${ports[3]['port_name']}    verify=portStatus    status=Linked

    Log    Verify if ports all ports are linked    console=True
    ${port_status}    Get IC Port    ${dmmi_supported_connector_ic_uri}    ${ports[0]['port_name']}
    Run Keyword And Continue On Failure    Run Keyword If  '${port_status['portStatus']}' != 'Linked'    Log    msg=${ports[0]['port_name']} Port is unlinked due to SFP issue    level=WARN


TC_1_API_TC_VALIDATION CONNECTOR INFORMATION IN SUPPORTED TRANRECEIVER
    [Documentation]   Verifies if there is digital diagnostic information for supported transceiver
    [Tags]    Supported    Connector

    ${message}    Set Variable    Successfully verified if connector info is available
    validate connector informations    ${dmmi_supported_connector_ic_uri}    ${Supported_transreceiver_SFP}    ${message}    True

TC_2_API_TC_VERIFY DIGITAL DIAGNOSTIC INFO FOR SUPPORTED TRANSRECEVIER
    [Documentation]   Verifies if there is digital diagnostic information for supported transceiver
    [Tags]    Supported    Transceiver
    ${message}    Set Variable    Successfully verified if digital diagnostic info is available
    Validate Digital Diagnostics    ${dmmi_supported_connector_ic_uri}    ${Supported_transreceiver_SFP}    ${message}    True    ${DDMI_values_SFP_SR}

TC_3_API_TC_DIGITAL DIAGNOSTIC INFORMATION RANGE VALIDATION
    [Documentation]   Verifies if there is digital diagnostic information are in correct range
    [Tags]    Range
    ${diagnostics}    GET PLUGGABLE MODULE INFORMATION    ${dmmi_supported_connector_ic_uri}
    Validate Range    ${dmmi_supported_connector_ic_uri}    ${ports[0]['port_name']}    ${DDMI_values_SFP_SR}

TC_4_API_TC_API_TC_Verify that Decibal milliwatts for Rxpower and Txpower show up precision of 4 decimal points
    [Documentation]   Verifies if no Digital Diagnostic and connector information is displayed if no transceiver is connected
    [Tags]    Decimal_Precision

    #VALIDATE PRECISION FOR RXPOWER AND TXPOWER BOTH IN dBW AND mW
    ${diagnostics}    GET PLUGGABLE MODULE INFORMATION    ${dmmi_supported_connector_ic_uri}
    Validate Decimal Range    ${dmmi_supported_connector_ic_uri}    ${ports[0]['port_name']}    ${DDMI_values_SFP_SR}

TC_5_API_TC_API_TC_Verify that no Digital Diagnostic and connector information is displayed if no transceiver is connected
    [Documentation]   Verifies if no Digital Diagnostic and connector information is displayed if no transceiver is connected
    [Tags]    No_SFP

    ${sfp}    Set Variable    False

    ${message}    Set Variable    Successfully verified if digital diagnostic info is not available
    Validate Digital Diagnostics    ${no_connector_ic_uri}    ${No_SFP}    ${message}    False

    ${message}    Set Variable    Successfully verified if connector info is not available
    validate connector informations    ${no_connector_ic_uri}    ${No_SFP}    ${message}    True    ${sfp}

TC_6_API_TC_API_TC_Verify Digital Diagnostic information is not disaplyed when connecting a transceiver which does not support DDMI values
    [Documentation]   Verifies Digital Diagnostic and connector information when unsupported transceiver is plugged in
    [Tags]    Unsupported_SFP

    ${message}    Set Variable    Successfully verified if digital diagnostic info is not available when unsupported transceiver is connected
    Validate Digital Diagnostics    ${dmmi_unsupported_connector_ic_uri}    ${unsupported_sfp}    ${message}    False

TC_7_API_TC_Verify number of lanes for split and unsplit port
    [Documentation]   DMMI statistics for a split port will only display lane 1
    [Tags]    Decimal_Precision

    #VALIDATE DIGITAL DIAGNOSTIC INFORMATION FOR Unsplit cable
    ${diagnostics}    GET PLUGGABLE MODULE INFORMATION    ${dmmi_unsplit_connector_ic_uri}
    ${flag}     ${msg}      validate_QSFP_lane_information     ${Unsplit_QSFP}    ${diagnostics['_content']}    4    ${DDMI_values_Unsplit_QSFP}
    Log    The return Flag value of the output is ${flag}    console=True
    Run Keyword If  ${flag} != True    fail    ELSE    Log    ${msg} \n Successfully verified lane count and DMMI values for Unsplit port    console=True

    Validate Range    ${dmmi_unsplit_connector_ic_uri}    ${ports[3]['port_name']}    ${DDMI_values_Unsplit_QSFP}

    ${message}    Set Variable    Successfully verified connector info for QSFP unsplit cable
    validate connector informations    ${dmmi_unsplit_connector_ic_uri}    ${Unsplit_QSFP}    ${message}    True

    #VALIDATE PRECISION FOR RXPOWER AND TXPOWER BOTH IN dBW AND mW
    Validate Decimal Range    ${dmmi_unsplit_connector_ic_uri}    ${ports[3]['port_name']}    ${DDMI_values_Unsplit_QSFP}

    #VALIDATE DIGITAL DIAGNOSTIC INFORMATION FOR Split cable
    #: FOR    ${x}    IN RANGE    0    4
    #\    ${flag}     ${msg}      validate_QSFP_lane_information     ${Split_QSFP[${x}]}    ${diagnostics['_content']}    1    ${DDMI_values_split_QSFP}
    #\    Log    The return Flag value of the output is ${flag}    console=True
    #\    Run Keyword If  ${flag} != True    fail    ELSE    Log    ${msg} \n Successfully verified lane count for split port    console=True
    #\    Validate Range    ${diagnostics['_content']}    ${ports[3]['port_name']}    ${DDMI_values_split_QSFP}
    #\    Validate Decimal Range    ${dmmi_unsplit_connector_ic_uri}    ${Split_QSFP[${x}]['port_name']}    ${DDMI_values_split_QSFP}
    #\    ${message}    Set Variable    Successfully verified connector info for QSFP unsplit cable
    #\    validate connector informations    ${ICM3_uri}    ${Split_QSFP[${x}]}    ${message}    True

TC_8_API_TC_Verify that Digital Diagnostic info show up after disabling/enabling the uplink port
    [Documentation]   Verifying DDMI statstics after disable enbale uplink port
    [Tags]    Disable_Enable_Port
    ${Resp}    Get IC Port    ${dmmi_supported_connector_ic_uri}    ${ports[0]['port_name']}
    ${enabled_portStatusReason} =    Set Variable If    '${Resp['portStatus']}' == 'Linked'    Active    Unknown
    ${enabled_portStatus} =    Set Variable If    '${Resp['portStatus']}' == 'Linked'    Linked    Unlinked

    Log    Disabling the uplink port    console=True
    Set to Dictionary   ${Resp}   enabled    False
    ${Return}    Update IC Port    ${ports[0]['ic_name']}    ${ports[0]['port_name']}    ${Resp}
    Wait Until Keyword Succeeds    5 min    20s      IC reached state    ${dmmi_supported_connector_ic_uri}    Configured
    Log    Verifying if Port is disabled    console=True
    Wait Until Keyword Succeeds     5 min   10s    Verify Port Status    ${dmmi_supported_connector_ic_uri}    ${ports[0]['port_name']}    verify=portStatusReason    status=AdminDisabled

    ${message}    Set Variable    Successfully verified if digital diagnostic info is available
    Validate Digital Diagnostics    ${dmmi_supported_connector_ic_uri}    ${Supported_transreceiver_SFP}    ${message}    True    ${DDMI_values_SFP_SR}

    ${message}    Set Variable    Successfully verified if connector info is available
    validate connector informations    ${dmmi_supported_connector_ic_uri}    ${Supported_transreceiver_SFP}    ${message}    True

    Log    Enabling the uplink port    console=True
    ${Resp}    Get IC Port    ${dmmi_supported_connector_ic_uri}    ${ports[0]['port_name']}
    Set to Dictionary   ${Resp}   enabled    True
    ${Return}    Update IC Port    ${ports[0]['ic_name']}    ${ports[0]['port_name']}    ${Resp}
    Wait Until Keyword Succeeds    5 min    20s      IC reached state    ${dmmi_supported_connector_ic_uri}    Configured
    Log    Verifying if Port is Enabled    console=True
    Wait Until Keyword Succeeds     5 min   10s    Verify Port Status    ${dmmi_supported_connector_ic_uri}    ${ports[0]['port_name']}    verify=portStatus    status=${enabled_portStatus}

    ${message}    Set Variable    Successfully verified if digital diagnostic info is available
    Validate Digital Diagnostics    ${dmmi_supported_connector_ic_uri}    ${Supported_transreceiver_SFP}    ${message}    True    ${DDMI_values_SFP_SR}

    ${message}    Set Variable    Successfully verified if connector info is available
    validate connector informations    ${dmmi_supported_connector_ic_uri}    ${Supported_transreceiver_SFP}    ${message}    True

TC_8_1_API_TC_Verify that Digital Diagnostic info show up after disabling/enabling the unsplit uplink port
    [Documentation]   Verifying DDMI statstics after disable enbale unsplit uplink port
    [Tags]    Disable_Enable_Port
    ${Resp}    Get IC Port    ${dmmi_unsplit_connector_ic_uri}    ${ports[3]['port_name']}
    ${enabled_portStatusReason} =    Set Variable If    '${Resp['portStatus']}' == 'Linked'    Active    Unknown
    ${enabled_portStatus} =    Set Variable If    '${Resp['portStatus']}' == 'Linked'    Linked    Unlinked

    Log    Disabling the uplink port    console=True
    Set to Dictionary   ${Resp}   enabled    False
    ${Return}    Update IC Port    ${ports[3]['ic_name']}    ${ports[3]['port_name']}    ${Resp}
    Wait Until Keyword Succeeds    5 min    20s      IC reached state    ${dmmi_unsplit_connector_ic_uri}    Configured
    Log    Verifying if Port is disabled    console=True
    Wait Until Keyword Succeeds     5 min   10s    Verify Port Status    ${dmmi_unsplit_connector_ic_uri}    ${ports[3]['port_name']}    verify=portStatusReason    status=AdminDisabled

    ${diagnostics}    GET PLUGGABLE MODULE INFORMATION    ${dmmi_unsplit_connector_ic_uri}

    ${message}    Set Variable    Successfully verified if digital diagnostic info is available
    Wait Until Keyword Succeeds     5 min   10s      Validate Digital Diagnostics    ${dmmi_unsplit_connector_ic_uri}    ${Unsplit_QSFP}    ${message}    True    ${DDMI_values_Unsplit_QSFP}

    ${message}    Set Variable    Successfully verified if connector info is available
    Wait Until Keyword Succeeds     5 min   10s      validate connector informations    ${dmmi_unsplit_connector_ic_uri}    ${Unsplit_QSFP}    ${message}    True

    Log    Enabling the uplink port    console=True
    ${Resp}    Get IC Port    ${dmmi_unsplit_connector_ic_uri}    ${ports[3]['port_name']}
    Set to Dictionary   ${Resp}   enabled    True
    ${Return}    Update IC Port    ${ports[3]['ic_name']}    ${ports[3]['port_name']}    ${Resp}
    Wait Until Keyword Succeeds    5 min    20s      IC reached state    ${dmmi_unsplit_connector_ic_uri}    Configured
    Log    Verifying if Port is Enabled    console=True
    Wait Until Keyword Succeeds     5 min   10s    Verify Port Status    ${dmmi_unsplit_connector_ic_uri}    ${ports[3]['port_name']}    verify=portStatus    status=${enabled_portStatus}

    ${diagnostics}    GET PLUGGABLE MODULE INFORMATION    ${dmmi_unsplit_connector_ic_uri}

    ${message}    Set Variable    Successfully verified if digital diagnostic info is available
    Wait Until Keyword Succeeds     5 min   10s      Validate Digital Diagnostics    ${dmmi_unsplit_connector_ic_uri}    ${Unsplit_QSFP}    ${message}    True    ${DDMI_values_Unsplit_QSFP}

    ${message}    Set Variable    Successfully verified if connector info is available
    Wait Until Keyword Succeeds     5 min   10s      validate connector informations    ${dmmi_unsplit_connector_ic_uri}    ${Unsplit_QSFP}    ${message}    True

    Wait Until Keyword Succeeds    5 min    20s      Validate Range    ${dmmi_unsplit_connector_ic_uri}    ${ports[3]['port_name']}    ${DDMI_values_Unsplit_QSFP}

    #VALIDATE PRECISION FOR RXPOWER AND TXPOWER BOTH IN dBW AND mW
    Wait Until Keyword Succeeds    5 min    20s      Validate Decimal Range    ${dmmi_unsplit_connector_ic_uri}    ${ports[3]['port_name']}    ${DDMI_values_Unsplit_QSFP}

TC_9_API_TC_Verify that Digital Diagnostic info show up after Power off/on ICM
    [Documentation]   Verifying DDMI statstics after Power off and Power on ICM
    [Tags]    PowerICM
    :FOR    ${x}    IN RANGE    0    1
    \    Patch Interconnect     ${ports[0]['ic_dto']}    op=replace  path=/powerState  value=Off  timeout=60  interval=10
    \    Wait Until Keyword Succeeds    5 min    20s      IC reached state    ${dmmi_supported_connector_ic_uri}    Maintenance
    \    Sleep    60sec

    \    ${message}    Set Variable    Successfully verified if no digital diagnostic is available after power off ICM
    \    Validate Digital Diagnostics    ${dmmi_supported_connector_ic_uri}    ${Supported_transreceiver_SFP}    ${message}    False    ${DDMI_values_SFP_SR}


    \    ${message}    Set Variable    Successfully verified if connector info is not available after power off ICM
    \    validate connector informations    ${dmmi_supported_connector_ic_uri}    ${Supported_transreceiver_SFP}    ${message}    False


    \    Patch Interconnect     ${ports[0]['ic_dto']}    op=replace  path=/powerState  value=On  timeout=60  interval=10
    \    Wait Until Keyword Succeeds    10 min    20s      IC reached state    ${dmmi_supported_connector_ic_uri}    Configured

    \    ${message}    Set Variable    Successfully verified if digital diagnostic info is available
    \    Wait Until Keyword Succeeds    5 min    20s      Validate Digital Diagnostics    ${dmmi_supported_connector_ic_uri}    ${Supported_transreceiver_SFP}    ${message}    True    ${DDMI_values_SFP_SR}


    \    ${message}    Set Variable    Successfully verified if connector info is available
    \    Wait Until Keyword Succeeds    5 min    20s      validate connector informations    ${dmmi_supported_connector_ic_uri}    ${Supported_transreceiver_SFP}    ${message}    True


TC_9_1_API_TC_Verify that Digital Diagnostic info for unsplit port show up after Power off/on ICM
    [Documentation]   Verifying DDMI statstics for unsplit port after Power off and Power on ICM
    [Tags]    PowerICM
    Patch Interconnect     ${ports[3]['ic_dto']}    op=replace  path=/powerState  value=Off  timeout=60  interval=10
    Wait Until Keyword Succeeds    5 min    20s      IC reached state    ${dmmi_unsplit_connector_ic_uri}    Maintenance
    Sleep    60sec

    ${message}    Set Variable    Successfully verified if no digital diagnostic is available after power off ICM
    Validate Digital Diagnostics    ${dmmi_unsplit_connector_ic_uri}    ${Unsplit_QSFP}    ${message}    False    ${DDMI_values_Unsplit_QSFP}

    ${message}    Set Variable    Successfully verified if connector info is not available after power off ICM
    validate connector informations    ${dmmi_unsplit_connector_ic_uri}    ${Unsplit_QSFP}    ${message}    False

    Patch Interconnect     ${ports[3]['ic_dto']}    op=replace  path=/powerState  value=On  timeout=60  interval=10
    Wait Until Keyword Succeeds    10 min    20s      IC reached state    ${dmmi_unsplit_connector_ic_uri}    Configured

    ${message}    Set Variable    Successfully verified if digital diagnostic info is available
    Wait Until Keyword Succeeds    5 min    20s      Validate Digital Diagnostics    ${dmmi_unsplit_connector_ic_uri}    ${Unsplit_QSFP}    ${message}    True    ${DDMI_values_Unsplit_QSFP}

    ${message}    Set Variable    Successfully verified if connector info is available
    Wait Until Keyword Succeeds    5 min    20s      validate connector informations    ${dmmi_unsplit_connector_ic_uri}    ${Unsplit_QSFP}    ${message}    True

TC_10_API_TC_Verify that Digital Diagnostic info show up after Reset ICM
    [Documentation]   Verifying DDMI statstics after Reset ICM
    [Tags]    Reset_ICM

    ${Resp}    Get IC Port    ${dmmi_supported_connector_ic_uri}    ${ports[0]['port_name']}
    ${enabled_portStatusReason} =    Set Variable If    '${Resp['portStatus']}' == 'Linked'    Active    Unknown
    ${enabled_portStatus} =    Set Variable If    '${Resp['portStatus']}' == 'Linked'    Linked    Unlinked

    Log    Reseting interconnect     console=True
    Patch Interconnect     ${ports[0]['ic_dto']}    op=replace  path=/deviceResetState  value=Reset  timeout=600  interval=10

    Wait Until Keyword Succeeds     5 min   10s    Verify Port Status    ${dmmi_supported_connector_ic_uri}    ${ports[0]['port_name']}    verify=portStatus    status=Unknown

    ${message}    Set Variable    Successfully verified if digital diagnostic is available after Reset ICM
    Wait Until Keyword Succeeds     10 min   10s      Validate Digital Diagnostics    ${dmmi_supported_connector_ic_uri}    ${Supported_transreceiver_SFP}    ${message}    True    ${DDMI_values_SFP_SR}

    ${message}    Set Variable    Successfully verified if connector info is not available after Reset ICM
    Wait Until Keyword Succeeds     10 min   10s      validate connector informations    ${dmmi_supported_connector_ic_uri}    ${Supported_transreceiver_SFP}    ${message}    False

    Log    Waiting till the ICM is back    console=True

    Wait Until Keyword Succeeds     5 min   10s    Verify Port Status    ${dmmi_supported_connector_ic_uri}    ${ports[0]['port_name']}    verify=portStatus    status=${enabled_portStatus}

    ${message}    Set Variable    Successfully verified if digital diagnostic info is available
    Wait Until Keyword Succeeds     5 min   10s      Validate Digital Diagnostics    ${dmmi_supported_connector_ic_uri}    ${Supported_transreceiver_SFP}    ${message}    True    ${DDMI_values_SFP_SR}

    ${message}    Set Variable    Successfully verified if connector info is available
    Wait Until Keyword Succeeds     5 min   10s      validate connector informations    ${dmmi_supported_connector_ic_uri}    ${Supported_transreceiver_SFP}    ${message}    True

TC_10_1_API_TC_Verify that Digital Diagnostic for unsplit port info show up after Reset ICM
    [Documentation]   Verifying DDMI statstics for unsplit port after Reset ICM
    [Tags]    Reset_ICM

    ${Resp}    Get IC Port    ${dmmi_unsplit_connector_ic_uri}    ${ports[3]['port_name']}
    ${enabled_portStatusReason} =    Set Variable If    '${Resp['portStatus']}' == 'Linked'    Active    Unknown
    ${enabled_portStatus} =    Set Variable If    '${Resp['portStatus']}' == 'Linked'    Linked    Unlinked

    Log    Reseting interconnect     console=True
    Patch Interconnect     ${ports[3]['ic_dto']}    op=replace  path=/deviceResetState  value=Reset  timeout=600  interval=10

    Wait Until Keyword Succeeds     5 min   10s    Verify Port Status    ${dmmi_unsplit_connector_ic_uri}    ${ports[3]['port_name']}    verify=portStatus    status=Unknown

    ${message}    Set Variable    Successfully verified if digital diagnostic is available after Reset ICM
    Wait Until Keyword Succeeds     10 min   10s      Validate Digital Diagnostics    ${dmmi_unsplit_connector_ic_uri}    ${Unsplit_QSFP}    ${message}    True    ${DDMI_values_Unsplit_QSFP}

    ${message}    Set Variable    Successfully verified if connector info is not available after Reset ICM
    Wait Until Keyword Succeeds     10 min   10s      validate connector informations    ${dmmi_unsplit_connector_ic_uri}    ${Unsplit_QSFP}    ${message}    False

    Log    Waiting till the ICM is back    console=True

    Wait Until Keyword Succeeds     5 min   10s    Verify Port Status    ${dmmi_unsplit_connector_ic_uri}    ${ports[3]['port_name']}    verify=portStatus    status=${enabled_portStatus}

    ${message}    Set Variable    Successfully verified if digital diagnostic info is available
    Wait Until Keyword Succeeds     5 min   10s      Validate Digital Diagnostics    ${dmmi_unsplit_connector_ic_uri}    ${Unsplit_QSFP}    ${message}    True    ${DDMI_values_Unsplit_QSFP}

    ${message}    Set Variable    Successfully verified if connector info is available
    Wait Until Keyword Succeeds     5 min   10s      validate connector informations    ${dmmi_unsplit_connector_ic_uri}    ${Unsplit_QSFP}    ${message}    True

TC_11_API_TC_Verify that Digital Diagnostic info show up after Efuse ICM
    [Documentation]   Verifying DDMI statstics after Efuse ICM
    [Tags]    Efuse_ICM
    ${bay}    Convert To Integer    ${ports[0]['bay']}
    Get EM IP    ${ENC${${ports[0]['enclosure']}}}
    Get EM Token    ${ENC${${ports[0]['enclosure']}}}
    Efuse ICM    EFuseOn    ${bay}
    Log    Verifying if module is absent    console=True
    Wait Until Keyword Succeeds    5 min    20s      IC reached state    ${dmmi_supported_connector_ic_uri}    Absent

    ${message}    Set Variable    Successfully verified if no digital diagnostic is available after removing ICM
    Validate Digital Diagnostics    ${dmmi_supported_connector_ic_uri}    ${Supported_transreceiver_SFP}    ${message}    False    ${DDMI_values_SFP_SR}

    ${message}    Set Variable    Successfully verified if connector info is not available after removing ICM
    validate connector informations    ${dmmi_supported_connector_ic_uri}    ${Supported_transreceiver_SFP}    ${message}    False

    Log    Inserting back the ICM    console=True
    Get EM IP    ${ENC${${ports[0]['enclosure']}}}
    Get EM Token    ${ENC${${ports[0]['enclosure']}}}
    Efuse ICM    EFuseOff    ${bay}
    Log    Verifying if module is Configured    console=True
    Wait Until Keyword Succeeds    15 min    20s      IC reached state    ${dmmi_supported_connector_ic_uri}    Configured

    ${message}    Set Variable    Successfully verified if digital diagnostic info is available after inserting back the icm
    Wait Until Keyword Succeeds     5 min   10s      Validate Digital Diagnostics    ${dmmi_supported_connector_ic_uri}    ${Supported_transreceiver_SFP}    ${message}    True    ${DDMI_values_SFP_SR}

    ${message}    Set Variable    Successfully verified if connector info is available
    Wait Until Keyword Succeeds     5 min   10s      validate connector informations    ${dmmi_supported_connector_ic_uri}    ${Supported_transreceiver_SFP}    ${message}    True

TC_11_1_API_TC_Verify that Digital Diagnostic info for unspli port show up after Efuse ICM
    [Documentation]   Verifying DDMI statstics for unsplit port after Efuse ICM
    [Tags]    Efuse_ICM
    ${bay}    Convert To Integer    ${ports[3]['bay']}
    Get EM IP    ${ENC${${ports[3]['enclosure']}}}
    Get EM Token    ${ENC${${ports[3]['enclosure']}}}
    Efuse ICM    EFuseOn    ${bay}
    Log    Verifying if module is absent    console=True
    Wait Until Keyword Succeeds    5 min    20s      IC reached state    ${dmmi_unsplit_connector_ic_uri}    Absent

    ${message}    Set Variable    Successfully verified if no digital diagnostic is available after removing ICM
    Validate Digital Diagnostics    ${dmmi_unsplit_connector_ic_uri}    ${Unsplit_QSFP}    ${message}    False    ${DDMI_values_Unsplit_QSFP}

    ${message}    Set Variable    Successfully verified if connector info is not available after removing ICM
    validate connector informations    ${dmmi_unsplit_connector_ic_uri}    ${Unsplit_QSFP}    ${message}    False

    Log    Inserting back the ICM    console=True
    Get EM IP    ${ENC${${ports[3]['enclosure']}}}
    Get EM Token    ${ENC${${ports[3]['enclosure']}}}
    Efuse ICM    EFuseOff    ${bay}
    Log    Verifying if module is Configured    console=True
    Wait Until Keyword Succeeds    15 min    20s      IC reached state    ${dmmi_unsplit_connector_ic_uri}    Configured

    ${message}    Set Variable    Successfully verified if digital diagnostic info is available after inserting back the icm
    Wait Until Keyword Succeeds     5 min   10s      Validate Digital Diagnostics    ${dmmi_unsplit_connector_ic_uri}    ${Unsplit_QSFP}    ${message}    True    ${DDMI_values_Unsplit_QSFP}

    ${message}    Set Variable    Successfully verified if connector info is available
    Wait Until Keyword Succeeds     5 min   10s      validate connector informations    ${dmmi_unsplit_connector_ic_uri}    ${Unsplit_QSFP}    ${message}    True

***Keywords***
GET PLUGGABLE MODULE INFORMATION
    [Documentation]    Fetches PLUGGABLE MODULE INFORMATION
    [Arguments]     ${icm_uri}
    ${diagnostic} =    Fusion Api Get Interconnect Pluggable Module Info    ${icm_uri}
    [Return]    ${diagnostic}

Get Interconnect StackingDomainRole
    [Documentation]    Fetches PLUGGABLE MODULE INFORMATION
    [Arguments]     ${ic_name}    ${expected_role}
    ${resp} =   Get Interconnect    ${ic_name}
    ${Role}    Get From Dictionary    ${resp}    stackingDomainRole
    Should Be Equal As Strings    ${Role}    ${expected_role}
    [Return]    ${Role}

Validate Digital Diagnostics
    [Documentation]    Validates Digital Diagnostics
    [Arguments]     ${uri}    ${body}    ${message}    ${fl}    ${DDMI_values}=None

    ${diagnostic}    GET PLUGGABLE MODULE INFORMATION    ${uri}

    ${flag}     ${msg}      validate_digital_diagnostic_information     ${body}    ${diagnostic['_content']}    ${DDMI_values}
    Log    \n${flag}    console=True
    Run Keyword If    ${fl} == True    Positive validation    ${flag}     ${msg}    ${message}
    ...    ELSE    Negative validation    ${flag}     ${msg}    ${message}

validate connector informations
    [Documentation]    Validates if connector info is not present as expected
    [Arguments]     ${uri}    ${body}    ${message}    ${fl}    ${sfp}=True
    Log    \nsfp is ${sfp}    console=True
    ${diagnostic}    GET PLUGGABLE MODULE INFORMATION    ${uri}

    ${flag}    ${msg}    validate_connector_information    ${body}    ${diagnostic['_content']}    ${sfp}
    Run Keyword If    ${fl} == True    Positive validation    ${flag}     ${msg}    ${message}
    ...    ELSE    Negative validation    ${flag}     ${msg}    ${message}

Positive validation
    [Documentation]    Validates if informwation is present as expected
    [Arguments]     ${flag}     ${msg1}    ${msg2}

    Run Keyword If    ${flag} != True    fail    msg = ${msg1}
    ...    ELSE    Log    \n${msg1}\n${msg2}    console=True

Negative validation
    [Documentation]    Validates if informwation is not present as expected
    [Arguments]     ${flag}     ${msg1}    ${msg2}

    Run Keyword If    ${flag} != False    fail    msg = ${msg1}
    ...    ELSE    Log    \n${msg1}\n${msg2}    console=True

Get IC Port
    [Documentation]    Returns the port info of the named port of specified interconnect uri
    [Arguments]     ${uri}    ${portName}

    ${return} =    Create List
    ${resp} =    fusion api get interconnect ports    uri=${uri}
    ${ports} =    Get From Dictionary    ${resp}    members
    :FOR    ${port}    IN    @{ports}
    \    ${return} =    Run Keyword If    '${port['portName']}' == '${portName}'    set variable    ${port}
    \    Exit for loop if    '${port['portName']}' == '${portName}'
    [Return]    ${return}

Clean OV
    [Documentation]    Final cleanup

    Remove All LEs
    Remove ALL Enclosure Groups
    Remove ALL LIGs
    Remove ALL Ethernet Networks
    Remove ALL FC Networks

Verify Port Status
    [Documentation]    Verifying the port status
    [Arguments]     ${uri}    ${portName}    ${verify}    ${status}
    ${port_status}    Get IC Port    ${uri}    ${portName}
    Should be Equal As Strings    ${port_status['${verify}']}    ${status}

Validate Range
    [Documentation]    Verifying DMMI Range Value
    [Arguments]     ${ic_uri}    ${port_name}    ${DDMI_values}
    ${diagnostics}    GET PLUGGABLE MODULE INFORMATION    ${ic_uri}
    ${flag}     ${msg}      validate_digital_diagnostic_info_range    ${diagnostics['_content']}    ${port_name}    ${DDMI_values}
    Log    The return Flag value of the output is ${flag}    console=True
    Run Keyword If  ${flag} != True    fail    msg = ${msg}
    ...    ELSE    Log    ${msg}    console=True

Validate Decimal Range
    [Documentation]    Verifying DMMI Range Value
    [Arguments]     ${ic_uri}    ${port_name}    ${DDMI_values}
    ${diagnostics}    GET PLUGGABLE MODULE INFORMATION    ${ic_uri}
    ${flag}     ${msg}      validate_precision_values    ${diagnostics['_content']}    ${port_name}    ${DDMI_values}
    Run Keyword If  ${flag} != True    fail     msg = ${msg}
    ...    ELSE    Log    ${msg}    console=True