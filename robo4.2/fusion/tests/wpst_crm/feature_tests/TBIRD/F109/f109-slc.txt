*** Settings ***
Documentation		Feature Test: SE F109 SLC Test
Variables 		./data_variables.py	

Resource         ../../../../resource/fusion_api_all_resource_files.txt
Resource        ../FVT/fvt-keywords.txt
Resource        ../FVT/Resources/fvt_resource.txt

Library				FusionLibrary
Library				../FVT/fvt_api.py

*** Variables ***
${SSH_PASS}	hpvse1
${APPLIANCE_IP}	15.199.229.217
${FUSION_IP}	${APPLIANCE_IP}

${bay1}	CN75130299, interconnect 1
${bay3}	CN75130299, interconnect 3
${bay6}	CN75130299, interconnect 6

${bay1_uri}	None
${bay3_uri}	None
${bay6_uri}	None

${LIG_URI}	None
${LI_URI}	None

*** Keywords ***
Create LIG
	[Documentation]	Create LIG 
	[Arguments]		${lig}	${timeout}=3 m	${interval}=1 m
	
	${resp} =	Add LIG from variable	${lig}
	Should Be Equal As Integers	${resp['status_code']}	202
	Wait For Task	${resp}	${timeout}	${interval}
	
	${resp}	Fvt Api Get Logical Interconnect Group By Name	${lig['name']}
	Should Be Equal As Strings	${resp['name']}	${lig['name']}
	
Edit LIG
	[Documentation]	Edit given LIG with new lig data
	[Arguments]		${lig_name}	${new_lig}	${timeout}=3 m	${interval}=1 m
	${resp}	Fvt Api Get Logical Interconnect Group By Name	${lig_name}
	${LIG_URI} =	Set Variable if	${resp} != None	${resp['uri']}	'LIG does not exist'
	
	${us} =	Copy Dictionary	${new_lig}
	${body} =	Build LIG body	${us}
	
	${resp} =	Fusion Api Edit Lig	body=${body}	uri=${LIG_URI}
	${task} =	Wait For Task	${resp}	5 min	15s
	
	
Create EG
	[Documentation]	Create EG
	[Arguments]		${eg}	${timeout}=3 m	${interval}=1 m
	${resp} =	Add Enclosure Group from variable	${eg}
	
	${resp}	Fvt Api Get Enclosure Group By Name	${eg['name']}
	
	Should Be Equal As Strings	${resp['status']}	OK
	Should Be Equal As Strings	${resp['name']}	${eg['name']}

Create LE
	[Documentation]	Create LE
	[Arguments]		${le}	${timeout}=30 m	${interval}=1 m
	${resp} =	Add Logical Enclosure from variable	${le}
		
	${resp}	Fvt Api Get Logical Enclosure By Name	${le['name']}
	
	Should Be Equal As Strings	${resp['name']}	${le['name']}
	Should Match Regexp	${resp['status']}	((?i)Warning|OK)
	

*** Test Cases ***
Login In
 	Set Log Level	TRACE
	Fusion Api Login Appliance 		${APPLIANCE_IP}		${admin_credentials}

Create Ethernet Networks
	Pass Execution	"Skipped"
	Create Ethernet Networks	${ethernet_networks}
	
SLC Tests
	Pass Execution	"Skipped"
	Get EM IP
	#Get EM Token	CN75130299
	Get EM Token	CN75130299
	${resp}	Fvt Api Get Interconnect By Name	${bay3}
	Run Keyword If	${resp} != None	Set Global Variable	${bay3_uri}	${resp['uri']}
	${resp}	Fvt Api Get Interconnect By Name	${bay6}
	Run Keyword If	${resp} != None	Set Global Variable	${bay6_uri}	${resp['uri']}
	
	
	Wait Until Keyword Succeeds	3 min	30s	IC reached state	${bay3_uri}	Monitored
	Wait Until Keyword Succeeds	3 min	30s	IC reached state	${bay6_uri}	Monitored
	
	Create LIG	${slc_ligs['LIG1']}
	Create EG	${slc_egs['EG1']}
	Create LE	${slc_les['LE1']}

	Wait Until Keyword Succeeds	20m	30s	IC reached state	${bay3_uri}	Configured
	Wait Until Keyword Succeeds	20m	30s	IC reached state	${bay6_uri}	Configured

	Efuse ICM	EFuseOn	3
	Wait Until Keyword Succeeds	20m	30s	IC reached state	${bay3_uri}	Absent
	Efuse ICM	EFuseOff	3
	Sleep	10m
	Wait Until Keyword Succeeds	20m	30s	IC reached state	${bay3_uri}	Configured
	####Pause Execution	message="Bay 3 should be in Configured"

	${resp}	Fvt Api Get Logical Enclosure By Name	${slc_les['LE1']['name']}
	Set Global Variable	${LE_URI}	${resp['uri']}
	${resp}	Fusion Api Delete Logical Enclosure	uri=${LE_URI}
	Should Be Equal As Integers	${resp['status_code']}	202
	Wait For Task	${resp}	timeout=30m	interval=60s	
	
	Wait Until Keyword Succeeds	20m	30s	IC reached state	${bay3_uri}	Monitored
	Wait Until Keyword Succeeds	20m	30s	IC reached state	${bay6_uri}	Monitored

	${resp}	Fusion Api Delete Enclosure Group	${slc_egs['EG1']['name']}
	${resp}	Fusion Api Delete LIG	${slc_ligs['LIG1']['name']}
	
	####Pause Execution	message="Go to the lab. Move Carbon from bay1 to bay3 and move Potash from bay3 to bay1 before continuing."
	#Create LIG	${slc_ligs['LIG2']}
	#Create EG	${slc_egs['EG2']}
	#Create LE	${slc_les['LE2']}
	
	#${resp}	Fvt Api Get Interconnect By Name	${bay3}
	#Run Keyword If	${resp} != None	Set Global Variable	${bay3_uri}	${resp['uri']}
	#${resp}	Fvt Api Get Interconnect By Name	${bay6}
	#Run Keyword If	${resp} != None	Set Global Variable	${bay6_uri}	${resp['uri']}
	
	#Wait Until Keyword Succeeds	20m	30s	IC reached state	${bay3_uri}	Unmanaged
	
	#Efuse ICM	EFuseOn	3
	#Wait Until Keyword Succeeds	20m	30s	IC reached state	${bay3_uri}	Absent
	#Efuse ICM	EFuseOff	3
	#Sleep	10m
	#Wait Until Keyword Succeeds	20m	30s	IC reached state	${bay3_uri}	Unmanaged
	
	#####Pause Execution	message="Go to the lab. Move Carbon from bay3 to bay1 and move Potash from bay1 to bay3 before continuing."
	
	#${resp}	Fvt Api Get Logical Enclosure By Name	${slc_les['LE1']['name']}
	#Set Global Variable	${LE_URI}	${resp['uri']}
	#${resp}	Fusion Api Delete Logical Enclosure	uri=${LE_URI}
	#Should Be Equal As Integers	${resp['status_code']}	202
	#Wait For Task	${resp}	timeout=30m	interval=60s	
	#Wait Until Keyword Succeeds	20m	30s	IC reached state	${bay3_uri}	Monitored
	
	#${resp}	Fusion Api Delete Enclosure Group	${slc_egs['EG2']['name']}
	#${resp}	Fusion Api Delete LIG	${slc_ligs['LIG2']['name']}

	#Efuse ICM	EFuseOff	3
	#Efuse ICM	EFuseOff	6
	#Sleep	10m
	
	Wait Until Keyword Succeeds	20m	30s	IC reached state	${bay3_uri}	Monitored
	Wait Until Keyword Succeeds	20m	30s	IC reached state	${bay6_uri}	Monitored

	Create LIG	${slc_ligs['LIG1']}
	Create EG	${slc_egs['EG3']}
	Create LE	${slc_les['LE3']}
	Wait Until Keyword Succeeds	20m	30s	IC reached state	${bay3_uri}	Configured
	Wait Until Keyword Succeeds	20m	30s	IC reached state	${bay6_uri}	Configured
	
	Edit LIG	${slc_ligs['LIG3']['name']}	${slc_ligs['LIG3']}

	${resp}	Fvt Api Get Logical Interconnect By Name	LE-LIG
	Run Keyword If	${resp} != None	Set Global Variable	${LI_URI}	${resp['uri']}
	Should Be Equal As Strings	${resp['consistencyStatus']}	NOT_CONSISTENT
	
	${resp} =	Fusion Api Update From Group	${LI_URI}
	Should Be Equal As Integers	${resp['status_code']}	202
	${task} =	Wait For Task	${resp}	20m	15s
	
	${resp}	Fvt Api Get Logical Interconnect By Name	LE-LIG
	Run Keyword If	${resp} != None	Set Global Variable	${LI_URI}	${resp['uri']}
	Should Be Equal As Strings	${resp['consistencyStatus']}	CONSISTENT
	
Clean Up
	#Pass Execution	"Skipped"
	### Delete Logical Enclosure ###
	${resp}	Fvt Api Get Logical Enclosure By Name   ${slc_les['LE3']['name']}
	Should Be Equal As Strings	${resp['name']}     ${slc_les['LE3']['name']}
	Set Global Variable	${LE_URI}	${resp['uri']}
	${resp}	Fusion Api Delete Logical Enclosure	uri=${LE_URI}

	Should Be Equal As Integers	${resp['status_code']}	202
	Wait For Task	${resp}	timeout=600m	interval=1m
	${resp}	Fvt Api Get Logical Enclosure By Name   ${slc_les['LE3']['name']}
	Should Be Equal As Strings	${resp}	None

	### Delete Enclosure Groups ###
	${resp}	Fusion Api Delete Enclosure Group    ${slc_egs['EG3']['name']}
	Should Be Equal As Integers	${resp['status_code']}	204
	${resp}	Fvt Api Get Enclosure Group BY Name     ${slc_egs['EG3']['name']}
	Should Be Equal As Strings	${resp}	None

	### Delete Logical Interconnect Groups ###
	${resp}	Fusion Api Delete LIG   ${slc_ligs['LIG1']['name']}
	Should Be Equal As Integers	${resp['status_code']}	202
	Wait For Task	${resp}	timeout=5m	interval=1s
	${resp}	Fvt Api Get Enclosure Group BY Name      ${slc_ligs['LIG1']['name']}
	Should Be Equal As Strings	${resp}	None

	Delete Ethernet Networks By Payload     ${ethernet_networks}