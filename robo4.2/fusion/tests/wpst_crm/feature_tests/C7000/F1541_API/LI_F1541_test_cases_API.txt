*** Settings ***
Documentation		Feature test: Firmware update F1541 of all VC Modules
...					on Enclosure G3,G2 G1
Variables			data_variables.py
# Resource			../../resources/resource.txt
Resource            ../../../../resource/fusion_api_all_resource_files.txt
Library				Collections
Library				String
Library				json
Library				OperatingSystem
Library				SSHLibrary
Library		        Selenium2Library
Library             Validation_c7k_firmware_version

*** Variables ***
${SSH_PASS}          		hpvse1
${APPLIANCE_IP}				10.10.7.198
${X-API-VERSION}			500
@{LI_FC_INTERCONNECTS}=    ${ICM_NAME5}
...                             ${ICM_NAME6}

@{LI_1010D_VC_INTERCONNECTS}=    ${ICM_NAME1}
...                              ${ICM_NAME2}

@{LI_OCHO_VC_INTERCONNECTS}=           ${ICM_NAME7}
...                               ${ICM_NAME8}


@{LI_SUPERSHAW_INTERCONNECTS}=       ${ICM_NAME3}
...                                  ${ICM_NAME4}


@{LI_ALL_VC_INTERCONNECTS}=      ${ICM_NAME1}
...                              ${ICM_NAME2}
...                              ${ICM_NAME3}
...                              ${ICM_NAME4}
...                              ${ICM_NAME5}
...                              ${ICM_NAME6}
...                              ${ICM_NAME7}
...                              ${ICM_NAME8}



*** Test Cases ***

############### Staging , Activation and  Update firmware test scenarios in LOgical Interconnects REST APIs #######################
TC01 Verify that oneview should allow activation of already staged rpm firmware version (from scexes to RPM ) with force flag using Parallel mode (downgrade G3)
	[Documentation]      "Verify that oneview should allow activation of already staged rpm firmware version (from scexes to RPM ) with force flag using Parallel mode (downgrade G3))"
	Log to Console       Testcase_ID: F1541_API_TC01: Verify that oneview should allow activation of already staged rpm firmware version (from scexes to RPM ) with force flag using Parallel mode (downgrade G3)

	Fusion Api Login Appliance      ${APPLIANCE_IP}       ${admin_credentials}


	${del_resp}=    fusion_api_delete_alert    /rest/alerts
   #####Validation of IC state of Interconnects 
    Log to Console   Validation of IC state of Interconnects 
    IC_STATE_VALIDATION_AFTER_FIRMWARE_UPDATE
    
	${li}=    Get Li Name
	${li_uri} =     Get LI URI   ${li}	



    ${resp1} =    fusion_api_li_upgrade_firmware      body=${LI_DOWNGRADE_STAGEING_ODDEVEN_SCEXE_RPM}     uri=${li_uri}

	${task} =       Wait For Task     ${resp1}     ${STAGING_TIME}    1s
	Log to Console      ${task}

	
	${valDict} =    Create Dictionary    status_code=${200}
	...                                 taskState=Completed
	
	Validate Response    ${task}    ${valDict} 
	Log to Console         \nStaging Firmware  completed
	Sleep        1 minutes 1 seconds

	# ACTIVATION of ALREADY STAGED RPM FIRMWARE VERSION #########
	${resp1} =       fusion_api_li_upgrade_firmware      body=${LI_DOWNGRADE_ACTIVATION_ODDEVEN_SCEXE_RPM}     uri=${li_uri}
	${task} =	    Wait For Task        ${resp1}       ${ACTIVATE_ODDEVEN_TIME}     1s
	Log to Console      ${task}
	
	${valDict} =    Create Dictionary    status_code=${200}
	...                                 taskState=Completed
	
	Validate Response    ${task}    ${valDict}	
	Log to Console       \nFirmware Activation completed


	#####Validation of oneview firmware version with icms
	Log to Console    Validation of oneview firmware version with icms
    FIRMWARE_VERSION_VALIDATION_WITH_ICMS_AND_ONEVIEW
    
    #####Validation of IC state of Interconnects 
    Log to Console   Validation of IC state of Interconnects 
    IC_STATE_VALIDATION_AFTER_FIRMWARE_UPDATE

   ######## Validation of ALERT messages on interconnects and LIs page #########################
   Log to Console    Validation of ALERT messages on interconnects and LIs page
   ALERTS_VALIDATION_FOR_STAGING_ACTIVATION_DOWNGARDE    ${LI_FC_INTERCONNECTS}    ${LI_OCHO_VC_INTERCONNECTS}   ${LI_SUPERSHAW_INTERCONNECTS}    ${LI_1010D_VC_INTERCONNECTS}   ${ICM_Alert1_stg_str_end}     ${ICM_Alert1_stg_star_1010D_end}    ${ICM_Alert1_stg_succ_end}   ${ICM_Alert1_act_OCHO_succ_end}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_star_1010D_end}    ${LI_UPADTE_STARTED}    ${LI_UPDATE_SUCCESS}    ${LI_NAME}   ${HICM_Alert1_stg_star_2_end}   ${LI_STAGING_STARTED}     ${li}    ${LI_STAGING_SUCCESS}    ${LI_ACTIVATION_STARTED}    ${LI_ACTIVATION_SUCCESS}   

    Fusion Api Logout Appliance



 TC02 Verify that oneview should allow activation of already staged SCEXES firmware version (from RPM to SCEXES) using Odd/Even Mode without force flag (upgrade)
	[Documentation]      "Verify that oneview should allow activation of already staged rpm firmware version (from scexes to RPM ) with force flag using Parallel mode (downgrade G3))"
	Log to Console       Testcase_ID: F1541_API_TC10: Verify that oneview should allow activation of already staged SCEXES firmware version (from RPM to SCEXES) using Odd/Even Mode without force flag (upgrade)

	Fusion Api Login Appliance      ${APPLIANCE_IP}       ${admin_credentials}
	${del_resp}=    fusion_api_delete_alert    /rest/alerts

   #####Validation of IC state of Interconnects 
    Log to Console   Validation of IC state of Interconnects 
    IC_STATE_VALIDATION_AFTER_FIRMWARE_UPDATE
    
	${li}=    Get Li Name
	${li_uri} =     Get LI URI   ${li}

	${resp1} =    fusion_api_li_upgrade_firmware      body=${LI_UPGRADE_STAGEING_ODDEVEN_RPM_SCEXE}     uri=${li_uri}


	${task} =	    Wait For Task       ${resp1}      ${STAGING_TIME}     1s
	Log to Console      ${task}
	
	${valDict} =    Create Dictionary    status_code=${200}
	...                                 taskState=Completed
	
	Validate Response    ${task}    ${valDict}	
	Log to Console         \nStaging Firmware  completed
	Sleep        1 minutes 1 seconds

	# ACTIVATION of ALREADY STAGED SCEXE FIRMWARE VERSION #########
	${resp1} =       fusion_api_li_upgrade_firmware      body=${LI_UPGRADE_ACTIVATION_ODDEVEN_RPM_SCEXE}     uri=${li_uri}
	${task} =	    Wait For Task        ${resp1}       ${ACTIVATE_ODDEVEN_TIME}		1s
	Log to Console      ${task}
	
	${valDict} =    Create Dictionary    status_code=${200}
	...                                 taskState=Completed
	
	Validate Response    ${task}    ${valDict}	
	Log to Console       \nFirmware Activation completed
	

	#####Validation of oneview firmware version with icms
	Log to Console    Validation of oneview firmware version with icms
    FIRMWARE_VERSION_VALIDATION_WITH_ICMS_AND_ONEVIEW
    
    #####Validation of IC state of Interconnects 
    Log to Console   Validation of IC state of Interconnects 
    IC_STATE_VALIDATION_AFTER_FIRMWARE_UPDATE

   ######## Validation of ALERT messages on interconnects and LIs page #########################
	# Upgrade Alert message validation for stage and Activation 
   Log to Console     Validation of ALERT messages on interconnects and LIs page
   ALERTS_VALIDATION_FOR_STAGING_ACTIVATION_UPGARDE    ${LI_FC_INTERCONNECTS}    ${LI_OCHO_VC_INTERCONNECTS}   ${LI_SUPERSHAW_INTERCONNECTS}    ${LI_1010D_VC_INTERCONNECTS}   ${HICM_Alert1_stg_str_end}     ${HICM_Alert1_stg_star_1010D_end}    ${HICM_Alert1_stg_succ_end}   ${HICM_Alert1_act_OCHO_succ_end}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star}    ${HICM_Alert1_stg_star_1010D_end}    ${LI_UPADTE_STARTED}    ${LI_UPDATE_SUCCESS}    ${LI_NAME}   ${HICM_Alert1_stg_star_2_end}   ${LI_STAGING_STARTED}     ${li}    ${LI_STAGING_SUCCESS}    ${LI_ACTIVATION_STARTED}    ${LI_ACTIVATION_SUCCESS}   


    Fusion Api Logout Appliance



TC03 Verify that oneview should allow activation of already staged rpm firmware version (from scexes to RPM ) with force flag using Serial mode (downgrade G3)
    Log To Console      "###############Staging and activation of firmware update of vc Modules when IC state are configured ############"
    [Documentation]      "RPM support FW update via LI: Verify that oneview should allow activation of already staged rpm firmware version (from scexes to RPM ) with force flag using Serial mode (downgrade G3)"
    Log to Console      "F1541_API_TC02 -->  Verify that oneview should allow activation of already staged rpm firmware version (from scexes to RPM ) with force flag using Serial mode (downgrade G3)
    Log To Console      ****Validation of  the interconnect states before  FW update triggers **********

	Fusion Api Login Appliance      ${APPLIANCE_IP}       ${admin_credentials}
	${del_resp}=    fusion_api_delete_alert    /rest/alerts
   #####Validation of IC state of Interconnects 
    Log to Console   Validation of IC state of Interconnects 
    IC_STATE_VALIDATION_AFTER_FIRMWARE_UPDATE
    
	${li}=    Get Li Name
	${li_uri} =     Get LI URI   ${li}	

	${resp1} =    fusion_api_li_upgrade_firmware      body=${LI_DOWNGRADE_STAGEING_SERIAL_SCEXE_RPM}     uri=${li_uri}


	${task} =	    Wait For Task        ${resp1}       ${STAGING_TIME}       1s
	Log to Console      ${task}
	
	${valDict} =    Create Dictionary    status_code=${200}
	...                                 taskState=Completed
	
	Validate Response    ${task}    ${valDict}	
	Log to Console         \nStaging Firmware  completed
#	Sleep        1 minutes 1 seconds

	# ACTIVATION of ALREADY STAGED RPM FIRMWARE VERSION #########
	${resp1} =       fusion_api_li_upgrade_firmware      body=${LI_DOWNGRADE_ACTIVATION_SERIAL_SCEXE_RPM}     uri=${li_uri}
	${task} =	    Wait For Task        ${resp1}       ${ACTIVATE_SERIAL_TIME}		1s
	Log to Console      ${task}
	
	${valDict} =    Create Dictionary    status_code=${200}
	...                                 taskState=Completed
	
	Validate Response    ${task}    ${valDict}	
	Log to Console       \nStaging Firmware  completed
	Sleep      1 minutes 1 seconds
	

	#####Validation of oneview firmware version with icms
	Log to Console    Validation of oneview firmware version with icms
    FIRMWARE_VERSION_VALIDATION_WITH_ICMS_AND_ONEVIEW
    
    #####Validation of IC state of Interconnects 
    Log to Console   Validation of IC state of Interconnects 
    IC_STATE_VALIDATION_AFTER_FIRMWARE_UPDATE

   ######## Validation of ALERT messages on interconnects and LIs page #########################
   # Downgrade Alert message validation for stage and Activation 
   Log to Console    Validation of ALERT messages on interconnects and LIs page
   ALERTS_VALIDATION_FOR_STAGING_ACTIVATION_DOWNGARDE    ${LI_FC_INTERCONNECTS}    ${LI_OCHO_VC_INTERCONNECTS}   ${LI_SUPERSHAW_INTERCONNECTS}    ${LI_1010D_VC_INTERCONNECTS}   ${ICM_Alert1_stg_str_end}     ${ICM_Alert1_stg_star_1010D_end}    ${ICM_Alert1_stg_succ_end}   ${ICM_Alert1_act_OCHO_succ_end}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_star_1010D_end}    ${LI_UPADTE_STARTED}    ${LI_UPDATE_SUCCESS}    ${LI_NAME}   ${HICM_Alert1_stg_star_2_end}   ${LI_STAGING_STARTED}     ${li}    ${LI_STAGING_SUCCESS}    ${LI_ACTIVATION_STARTED}    ${LI_ACTIVATION_SUCCESS}   

    Fusion Api Logout Appliance

TC04 Verify that oneview should allow activation of already staged SCEXES firmware version (from RPM to SCEXES) using Parallel Mode without force flag (upgrade)
    Log To Console   "###############Staging + activation of firmware update of  all vc  Modules when IC state are configured ############"
    [Documentation]    "RPM support FW update via LI: Verify that oneview should allow activation of already staged SCEXES firmware version (from RPM to SCEXES) using Parallel Mode without force flag (upgrade)"
    Log to Console    "F1541_API_TC11 -->  Verify that oneview should allow activation of already staged SCEXES firmware version (from RPM to SCEXES) using Parallel Mode without force flag (upgrade)"
    Log To Console    ****Validation of  the interconnect states before  FW update triggers ********** 
    

	Fusion Api Login Appliance      ${APPLIANCE_IP}       ${admin_credentials}
	${del_resp}=    fusion_api_delete_alert    /rest/alerts
   #####Validation of IC state of Interconnects 
    Log to Console   Validation of IC state of Interconnects 
    IC_STATE_VALIDATION_AFTER_FIRMWARE_UPDATE
    
	${li}=    Get Li Name
	${li_uri} =     Get LI URI   ${li}

	${resp1} =    fusion_api_li_upgrade_firmware      body=${LI_UPGRADE_STAGEING_PARALLEL_RPM_SCEXE}     uri=${li_uri}


	${task} =	    Wait For Task       ${resp1}      ${STAGING_TIME}     1s
	Log to Console      ${task}
	
	${valDict} =    Create Dictionary    status_code=${200}
	...                                 taskState=Completed
	
	Validate Response    ${task}    ${valDict}	
	Log to Console         \nStaging Firmware  completed
	Sleep        1 minutes 1 seconds

	# ACTIVATION of ALREADY STAGED SCEXE FIRMWARE VERSION #########
	${resp1} =       fusion_api_li_upgrade_firmware      body=${LI_UPGRADE_ACTIVATION_PARELLEL_RPM_SCEXE}     uri=${li_uri}
	${task} =	    Wait For Task        ${resp1}       ${ACTIVATE_PARALLEL_TIME}    1s
	Log to Console      ${task}
	
	${valDict} =    Create Dictionary    status_code=${200}
	...                                 taskState=Completed
	
	Validate Response    ${task}    ${valDict}	
	Log to Console       \nACTIVATE Firmware  completed
#	Sleep      1 minutes 1 seconds
	

	#####Validation of oneview firmware version with icms
	Log to Console    Validation of oneview firmware version with icms
    FIRMWARE_VERSION_VALIDATION_WITH_ICMS_AND_ONEVIEW
    
    #####Validation of IC state of Interconnects 
    Log to Console   Validation of IC state of Interconnects 
    IC_STATE_VALIDATION_AFTER_FIRMWARE_UPDATE

   ######## Validation of ALERT messages on interconnects and LIs page #########################
# Upgrade Alert message validation for stage and Activation 
   Log to Console     Validation of ALERT messages on interconnects and LIs page
   ALERTS_VALIDATION_FOR_STAGING_ACTIVATION_UPGARDE    ${LI_FC_INTERCONNECTS}    ${LI_OCHO_VC_INTERCONNECTS}   ${LI_SUPERSHAW_INTERCONNECTS}    ${LI_1010D_VC_INTERCONNECTS}   ${HICM_Alert1_stg_str_end}     ${HICM_Alert1_stg_star_1010D_end}    ${HICM_Alert1_stg_succ_end}   ${HICM_Alert1_act_OCHO_succ_end}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star}    ${HICM_Alert1_stg_star_1010D_end}    ${LI_UPADTE_STARTED}    ${LI_UPDATE_SUCCESS}    ${LI_NAME}   ${HICM_Alert1_stg_star_2_end}   ${LI_STAGING_STARTED}     ${li}    ${LI_STAGING_SUCCESS}    ${LI_ACTIVATION_STARTED}    ${LI_ACTIVATION_SUCCESS}   


    Fusion Api Logout Appliance

TC05 Verify that oneview should allow activation of already staged rpm firmware version (from scexes to RPM ) with force flag using Odd/Even mode (downgrade G3)
    Log To Console      "###############Staging and activation of firmware update of vc Modules when IC state are configured ############"
    [Documentation]      "RPM support FW update via LI: Verify that oneview should allow activation of already staged rpm firmware version (from scexes to RPM ) with force flag using Odd/Even mode (downgrade G3)"
    Log to Console      "F1541_API_TC03 -->  Verify that oneview should allow activation of already staged rpm firmware version (from scexes to RPM ) with force flag using Odd/Even mode (downgrade G3)
    Log To Console      ****Validation of  the interconnect states before  FW update triggers **********

	Fusion Api Login Appliance      ${APPLIANCE_IP}       ${admin_credentials}
	${del_resp}=    fusion_api_delete_alert    /rest/alerts
   #####Validation of IC state of Interconnects 
    Log to Console   Validation of IC state of Interconnects 
    IC_STATE_VALIDATION_AFTER_FIRMWARE_UPDATE
    
	${li}=    Get Li Name
	${li_uri} =     Get LI URI   ${li}	

	######## STAGING FIRMWARE   ######
	${resp1} =    fusion_api_li_upgrade_firmware      body=${LI_DOWNGRADE_STAGEING_ODDEVEN_SCEXE_RPM}     uri=${li_uri}


	${task} =	    Wait For Task     ${resp1}      ${STAGING_TIME}     1s
	Log to Console      ${task}
	
	${valDict} =    Create Dictionary    status_code=${200}
	...                                 taskState=Completed
	
	Validate Response    ${task}    ${valDict}
	Log to Console         \nStaging Firmware  completed
	Sleep        1 minutes 1 seconds

	# ACTIVATION of ALREADY STAGED RPM FIRMWARE VERSION #########
	${resp1} =       fusion_api_li_upgrade_firmware      body=${LI_DOWNGRADE_ACTIVATION_ODDEVEN_SCEXE_RPM}     uri=${li_uri}
	${task} =	    Wait For Task        ${resp1}       ${ACTIVATE_ODDEVEN_TIME}		1s
	Log to Console      ${task}
	
	${valDict} =    Create Dictionary    status_code=${200}
	...                                 taskState=Completed
	
	Validate Response    ${task}    ${valDict}	
	Log to Console       \nACTIVATE Firmware  completed
#	Sleep      1 minutes 1 seconds
	

	#####Validation of oneview firmware version with icms
	Log to Console    Validation of oneview firmware version with icms
    FIRMWARE_VERSION_VALIDATION_WITH_ICMS_AND_ONEVIEW
    
    #####Validation of IC state of Interconnects 
    Log to Console   Validation of IC state of Interconnects 
    IC_STATE_VALIDATION_AFTER_FIRMWARE_UPDATE

   ######## Validation of ALERT messages on interconnects and LIs page #########################
   # Downgrade Alert message validation for stage and Activation 
   Log to Console    Validation of ALERT messages on interconnects and LIs page
   ALERTS_VALIDATION_FOR_STAGING_ACTIVATION_DOWNGARDE    ${LI_FC_INTERCONNECTS}    ${LI_OCHO_VC_INTERCONNECTS}   ${LI_SUPERSHAW_INTERCONNECTS}    ${LI_1010D_VC_INTERCONNECTS}   ${ICM_Alert1_stg_str_end}     ${ICM_Alert1_stg_star_1010D_end}    ${ICM_Alert1_stg_succ_end}   ${ICM_Alert1_act_OCHO_succ_end}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_star_1010D_end}    ${LI_UPADTE_STARTED}    ${LI_UPDATE_SUCCESS}    ${LI_NAME}   ${HICM_Alert1_stg_star_2_end}   ${LI_STAGING_STARTED}     ${li}    ${LI_STAGING_SUCCESS}    ${LI_ACTIVATION_STARTED}    ${LI_ACTIVATION_SUCCESS}   


    Fusion Api Logout Appliance
    
TC06 Verify that oneview should allow activation of already staged SCEXES firmware version (from RPM to SCEXES) using Serial Mode without force flag (upgrade)
    Log To Console   "###############Staging + activation of firmware update of  all vc  Modules when IC state are configured ############"
    [Documentation]    "RPM support FW update via LI: Verify that oneview should allow activation of already staged SCEXES firmware version (from RPM to SCEXES) using Serial Mode without force flag (upgrade)"
    Log to Console    "F1541_API_TC12 -->  Verify that oneview should allow activation of already staged SCEXES firmware version (from RPM to SCEXES) using Serial Mode without force flag (upgrade) "
    Log To Console    ****Validation of  the interconnect states before  FW update triggers ********** 
    
	Fusion Api Login Appliance      ${APPLIANCE_IP}       ${admin_credentials}
	${del_resp}=    fusion_api_delete_alert    /rest/alerts
   #####Validation of IC state of Interconnects 
    Log to Console   Validation of IC state of Interconnects 
    IC_STATE_VALIDATION_AFTER_FIRMWARE_UPDATE
    
	${li}=    Get Li Name
	${li_uri} =     Get LI URI   ${li}

	${resp1} =    fusion_api_li_upgrade_firmware      body=${LI_UPGRADE_STAGEING_SERIAL_RPM_SCEXE}     uri=${li_uri}


	${task} =	    Wait For Task       ${resp1}      ${STAGING_TIME}     1s
	Log to Console      ${task}
	
	${valDict} =    Create Dictionary    status_code=${200}
	...                                 taskState=Completed
	
	Validate Response    ${task}    ${valDict}	
	Log to Console         \nStaging Firmware  completed
	Sleep        1 minutes 1 seconds

	# ACTIVATION of ALREADY STAGED SCEXE FIRMWARE VERSION #########
	${resp1} =       fusion_api_li_upgrade_firmware      body=${LI_UPGRADE_ACTIVATION_SERIAL_RPM_SCEXE}     uri=${li_uri}
	${task} =	    Wait For Task        ${resp1}       ${ACTIVATE_SERIAL_TIME}		1s
	Log to Console      ${task}
	
	${valDict} =    Create Dictionary    status_code=${200}
	...                                 taskState=Completed
	
	Validate Response    ${task}    ${valDict}	
	Log to Console       \nActivate Firmware  completed
#	Sleep      1 minutes 1 seconds
	

	#####Validation of oneview firmware version with icms
	Log to Console    Validation of oneview firmware version with icms
    FIRMWARE_VERSION_VALIDATION_WITH_ICMS_AND_ONEVIEW
    
    #####Validation of IC state of Interconnects 
    Log to Console   Validation of IC state of Interconnects 
    IC_STATE_VALIDATION_AFTER_FIRMWARE_UPDATE

   ######## Validation of ALERT messages on interconnects and LIs page #########################
   # Upgrade Alert message validation for stage and Activation 
   Log to Console     Validation of ALERT messages on interconnects and LIs page
   ALERTS_VALIDATION_FOR_STAGING_ACTIVATION_UPGARDE    ${LI_FC_INTERCONNECTS}    ${LI_OCHO_VC_INTERCONNECTS}   ${LI_SUPERSHAW_INTERCONNECTS}    ${LI_1010D_VC_INTERCONNECTS}   ${HICM_Alert1_stg_str_end}     ${HICM_Alert1_stg_star_1010D_end}    ${HICM_Alert1_stg_succ_end}   ${HICM_Alert1_act_OCHO_succ_end}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star}    ${HICM_Alert1_stg_star_1010D_end}    ${LI_UPADTE_STARTED}    ${LI_UPDATE_SUCCESS}    ${LI_NAME}   ${HICM_Alert1_stg_star_2_end}   ${LI_STAGING_STARTED}     ${li}    ${LI_STAGING_SUCCESS}    ${LI_ACTIVATION_STARTED}    ${LI_ACTIVATION_SUCCESS}   


    Fusion Api Logout Appliance
    
TC07 Verify that oneview should allow activation of already staged RPM firmware version (from RPM to RPM) using Parallel Mode with force flag (downgrade)
    Log To Console      "###############Staging and activation of firmware update of vc Modules when IC state are configured ############"
    [Documentation]      "RPM support FW update via LI: Verify that oneview should allow activation of already staged RPM firmware version (from RPM to RPM) using Parallel Mode with force flag (downgrade)"
    Log to Console      "F1541_API_TC13 -->  Verify that oneview should allow activation of already staged RPM firmware version (from RPM to RPM) using Parallel Mode with force flag (downgrade)
    Log To Console      ****Validation of  the interconnect states before  FW update triggers **********
    
    
	Fusion Api Login Appliance      ${APPLIANCE_IP}       ${admin_credentials}
	${del_resp}=    fusion_api_delete_alert    /rest/alerts
   #####Validation of IC state of Interconnects 
    Log to Console   Validation of IC state of Interconnects 
    IC_STATE_VALIDATION_AFTER_FIRMWARE_UPDATE
    
	${li}=    Get Li Name
	${li_uri} =     Get LI URI   ${li}	

	${resp1} =    fusion_api_li_upgrade_firmware      body=${LI_DOWNGRADE_STAGEING_PARALLEL_RPM}     uri=${li_uri}


	${task} =	    Wait For Task 	${resp1} 	 ${STAGING_TIME}		1s
	Log to Console      ${task}
	
	${valDict} =    Create Dictionary    status_code=${200}
	...                                 taskState=Completed
	
	Validate Response    ${task}    ${valDict}	
	Log to Console         \nStaging Firmware  completed
	Sleep        1 minutes 1 seconds

	# ACTIVATION of ALREADY STAGED RPM FIRMWARE VERSION #########
	${resp1} =       fusion_api_li_upgrade_firmware      body=${LI_DOWNGRADE_ACTIVATION_PARALLEL_RPM}     uri=${li_uri}
	${task} =	    Wait For Task        ${resp1}       ${ACTIVATE_PARALLEL_TIME}		1s
	Log to Console      ${task}
	
	${valDict} =    Create Dictionary    status_code=${200}
	...                                 taskState=Completed
	
	Validate Response    ${task}    ${valDict}	
	Log to Console       \nActivation Firmware  completed
	Sleep      1 minutes 1 seconds
	
	${li_uri} =     Get LI URI   ${li}	

	${resp1} =    fusion_api_li_upgrade_firmware      body=${LI_DOWNGRADE_STAGEING_PARALLEL_RPM}     uri=${li_uri}


	${task} =	    Wait For Task      ${resp1}       95 min       1s
	Log to Console      ${task}
	
	${valDict} =    Create Dictionary    status_code=${200}
	...                                 taskState=Completed
	
	Validate Response    ${task}    ${valDict}	
	Log to Console         \nStaging Firmware  completed
	Sleep        1 minutes 1 seconds

	# ACTIVATION of ALREADY STAGED RPM FIRMWARE VERSION #########
	${resp1} =       fusion_api_li_upgrade_firmware      body=${LI_DOWNGRADE_ACTIVATION_PARALLEL_RPM}     uri=${li_uri}
	${task} =	    Wait For Task        ${resp1}       95 min		1s
	Log to Console      ${task}
	
	${valDict} =    Create Dictionary    status_code=${200}
	...                                 taskState=Completed
	
	Validate Response    ${task}    ${valDict}	
	Log to Console       \nActivation Firmware  completed
	Sleep      1 minutes 1 seconds

	#####Validation of oneview firmware version with icms
	Log to Console    Validation of oneview firmware version with icms
    FIRMWARE_VERSION_VALIDATION_WITH_ICMS_AND_ONEVIEW
    
    #####Validation of IC state of Interconnects 
    Log to Console   Validation of IC state of Interconnects 
    IC_STATE_VALIDATION_AFTER_FIRMWARE_UPDATE

   ######## Validation of ALERT messages on interconnects and LIs page #########################
   # Downgrade Alert message validation for stage and Activation 
   Log to Console    Validation of ALERT messages on interconnects and LIs page
   ALERTS_VALIDATION_FOR_STAGING_ACTIVATION_DOWNGARDE    ${LI_FC_INTERCONNECTS}    ${LI_OCHO_VC_INTERCONNECTS}   ${LI_SUPERSHAW_INTERCONNECTS}    ${LI_1010D_VC_INTERCONNECTS}   ${ICM_Alert1_stg_str_end}     ${ICM_Alert1_stg_star_1010D_end}    ${ICM_Alert1_stg_succ_end}   ${ICM_Alert1_act_OCHO_succ_end}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_star_1010D_end}    ${LI_UPADTE_STARTED}    ${LI_UPDATE_SUCCESS}    ${LI_NAME}   ${HICM_Alert1_stg_star_2_end}   ${LI_STAGING_STARTED}     ${li}    ${LI_STAGING_SUCCESS}    ${LI_ACTIVATION_STARTED}    ${LI_ACTIVATION_SUCCESS}   

    Fusion Api Logout Appliance

BB_TC08 Verify that oneview should allow activation of already staged RPM firmware version (from RPM to RPM) using Odd/Even mode without force flag (upgrade)
    Log To Console   "###############Staging + activation of firmware update of  all vc  Modules when IC state are configured ############"
    [Documentation]    "RPM support FW update via LI: Verify that oneview should allow activation of already staged RPM firmware version (from RPM to RPM) using Odd/Even mode without force flag (upgrade)"
    Log to Console    "F1541_API_TC15 -->  Verify that oneview should allow activation of already staged RPM firmware version (from RPM to RPM) using Odd/Even mode without force flag (upgrade)"
    Log To Console    ****Validation of  the interconnect states before  FW update triggers **********

	Fusion Api Login Appliance      ${APPLIANCE_IP}       ${admin_credentials}
	${del_resp}=    fusion_api_delete_alert    /rest/alerts
   #####Validation of IC state of Interconnects 
    Log to Console   Validation of IC state of Interconnects 
    IC_STATE_VALIDATION_AFTER_FIRMWARE_UPDATE
    
	${li}=    Get Li Name
	${li_uri} =     Get LI URI   ${li}

	${resp1} =    fusion_api_li_upgrade_firmware      body=${LI_UPGRADE_STAGEING_ODDEVEN_RPM_RPM}     uri=${li_uri}


	${task} =	    Wait For Task       ${resp1}      ${STAGING_TIME}     1s
	Log to Console      ${task}
	
	${valDict} =    Create Dictionary    status_code=${200}
	...                                 taskState=Completed
	
	Validate Response    ${task}    ${valDict}	
	Log to Console         \nStaging Firmware  completed
	Sleep        1 minutes 1 seconds

	# ACTIVATION of ALREADY STAGED SCEXE FIRMWARE VERSION #########
	${resp1} =       fusion_api_li_upgrade_firmware      body=${LI_UPGRADE_ACTIVATION_ODDEVEN_RPM_RPM}     uri=${li_uri}
	${task} =	    Wait For Task        ${resp1}       ${ACTIVATE_ODDEVEN_TIME}		1s
	Log to Console      ${task}
	
	${valDict} =    Create Dictionary    status_code=${200}
	...                                 taskState=Completed
	
	Validate Response    ${task}    ${valDict}	
	Log to Console       \nActivate Firmware  completed
	Sleep      1 minutes 1 seconds
	

	#####Validation of oneview firmware version with icms
	Log to Console    Validation of oneview firmware version with icms
    FIRMWARE_VERSION_VALIDATION_WITH_ICMS_AND_ONEVIEW
    
    #####Validation of IC state of Interconnects 
    Log to Console   Validation of IC state of Interconnects 
    IC_STATE_VALIDATION_AFTER_FIRMWARE_UPDATE

   ######## Validation of ALERT messages on interconnects and LIs page #########################
   # Upgrade Alert message validation for stage and Activation 
   Log to Console     Validation of ALERT messages on interconnects and LIs page
   ALERTS_VALIDATION_FOR_STAGING_ACTIVATION_UPGARDE    ${LI_FC_INTERCONNECTS}    ${LI_OCHO_VC_INTERCONNECTS}   ${LI_SUPERSHAW_INTERCONNECTS}    ${LI_1010D_VC_INTERCONNECTS}   ${HICM_Alert1_stg_str_end}     ${HICM_Alert1_stg_star_1010D_end}    ${HICM_Alert1_stg_succ_end}   ${HICM_Alert1_act_OCHO_succ_end}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star}    ${HICM_Alert1_stg_star_1010D_end}    ${LI_UPADTE_STARTED}    ${LI_UPDATE_SUCCESS}    ${LI_NAME}   ${HICM_Alert1_stg_star_2_end}   ${LI_STAGING_STARTED}     ${li}    ${LI_STAGING_SUCCESS}    ${LI_ACTIVATION_STARTED}    ${LI_ACTIVATION_SUCCESS}   


    Fusion Api Logout Appliance
   
TC09 Verify that oneview should allow activation of already staged RPM firmware version (from RPM to RPM) using Serial Mode with force flag (upgrade Same version )
    Log To Console   "###############Staging + activation of firmware update of  all vc  Modules when IC state are configured ############"
    [Documentation]    "RPM support FW update via LI: Verify that oneview should allow activation of already staged RPM firmware version (from RPM to RPM) using Serial Mode with force flag (Same version )"
    Log to Console    "F1541_API_TC14 -->  Verify that oneview should allow activation of already staged RPM firmware version (from RPM to RPM) using Serial Mode with force flag (Same version )"
    Log To Console    ****Validation of  the interconnect states before  FW update triggers **********


	Fusion Api Login Appliance      ${APPLIANCE_IP}       ${admin_credentials}
	${del_resp}=    fusion_api_delete_alert    /rest/alerts
   #####Validation of IC state of Interconnects 
    Log to Console   Validation of IC state of Interconnects 
    IC_STATE_VALIDATION_AFTER_FIRMWARE_UPDATE
    
 	${li}=    Get Li Name
	${li_uri} =     Get LI URI   ${li}

	${resp1} =    fusion_api_li_upgrade_firmware      body=${LI_UPGRADE_STAGEING_SAMEVERSION_RPM_RPM}     uri=${li_uri}


	${task} =	    Wait For Task       ${resp1}      ${STAGING_TIME}     1s
	Log to Console      ${task}
	
	${valDict} =    Create Dictionary    status_code=${200}
	...                                 taskState=Completed
	
	Validate Response    ${task}    ${valDict}	
	Log to Console         \nStaging Firmware  completed
	Sleep        1 minutes 1 seconds

	# ACTIVATION of ALREADY STAGED SCEXE FIRMWARE VERSION #########
	${resp1} =       fusion_api_li_upgrade_firmware      body=${LI_UPGRADE_ACTIVATION_SAMEVERSION_RPM_RPM}     uri=${li_uri}
	${task} =	    Wait For Task        ${resp1}       ${ACTIVATE_SERIAL_TIME}		1s
	Log to Console      ${task}
	
	${valDict} =    Create Dictionary    status_code=${200}
	...                                 taskState=Completed
	
	Validate Response    ${task}    ${valDict}	
	Log to Console       \nActive Firmware  completed
	Sleep      1 minutes 1 seconds
	

	#####Validation of oneview firmware version with icms
	Log to Console    Validation of oneview firmware version with icms
    FIRMWARE_VERSION_VALIDATION_WITH_ICMS_AND_ONEVIEW
    
    #####Validation of IC state of Interconnects 
    Log to Console   Validation of IC state of Interconnects 
    IC_STATE_VALIDATION_AFTER_FIRMWARE_UPDATE

   ######## Validation of ALERT messages on interconnects and LIs page #########################
   # Upgrade Alert message validation for stage and Activation 
   Log to Console     Validation of ALERT messages on interconnects and LIs page
   ALERTS_VALIDATION_FOR_STAGING_ACTIVATION_UPGARDE    ${LI_FC_INTERCONNECTS}    ${LI_OCHO_VC_INTERCONNECTS}   ${LI_SUPERSHAW_INTERCONNECTS}    ${LI_1010D_VC_INTERCONNECTS}   ${HICM_Alert1_stg_str_end}     ${HICM_Alert1_stg_star_1010D_end}    ${HICM_Alert1_stg_succ_end}   ${HICM_Alert1_act_OCHO_succ_end}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star}    ${HICM_Alert1_stg_star_1010D_end}    ${LI_UPADTE_STARTED}    ${LI_UPDATE_SUCCESS}    ${LI_NAME}   ${HICM_Alert1_stg_star_2_end}   ${LI_STAGING_STARTED}     ${li}    ${LI_STAGING_SUCCESS}    ${LI_ACTIVATION_STARTED}    ${LI_ACTIVATION_SUCCESS}   

    Fusion Api Logout Appliance
    
TC10 Verify that oneview should allow activation of already staged SCEXES firmware version (from RPM to SCEXES ) using Parallel mode with force flag (downgrade)
    Log To Console      "###############Staging and activation of firmware update of vc Modules when IC state are configured ############"
    [Documentation]      "RPM support FW update via LI: Verify that oneview should allow activation of already staged SCEXES firmware version (from RPM to SCEXES ) using Parallel mode with force flag (downgrade)"
    Log to Console      "F1541_API_TC07 -->  Verify that oneview should allow activation of already staged SCEXES firmware version (from RPM to SCEXES ) using Parallel mode with force flag (downgrade)
    Log To Console      ****Validation of  the interconnect states before  FW update triggers ********** 
    
	Fusion Api Login Appliance      ${APPLIANCE_IP}       ${admin_credentials}
	${del_resp}=    fusion_api_delete_alert    /rest/alerts
   #####Validation of IC state of Interconnects 
    Log to Console   Validation of IC state of Interconnects 
    IC_STATE_VALIDATION_AFTER_FIRMWARE_UPDATE
    
	${li}=    Get Li Name
	${li_uri} =     Get LI URI   ${li}	

	${resp1} =    fusion_api_li_upgrade_firmware      body=${LI_DOWNGRADE_STAGEING_PARALLEL_RPM_SCEXES}     uri=${li_uri}


	${task} =	    Wait For Task        ${resp1}       ${STAGING_TIME}      1s
	Log to Console      ${task}
	
	${valDict} =    Create Dictionary    status_code=${200}
	...                                 taskState=Completed
	
	Validate Response    ${task}    ${valDict}	
	Log to Console         \nStaging Firmware  completed
	Sleep        1 minutes 1 seconds

	# ACTIVATION of ALREADY STAGED RPM FIRMWARE VERSION #########
	${resp1} =       fusion_api_li_upgrade_firmware      body=${LI_DOWNGRADE_ACTIVATION_PARALLEL_RPM_SCEXES}     uri=${li_uri}
	${task} =	    Wait For Task        ${resp1}       ${ACTIVATE_PARALLEL_TIME}		1s
	Log to Console      ${task}
	
	${valDict} =    Create Dictionary    status_code=${200}
	...                                 taskState=Completed
	
	Validate Response    ${task}    ${valDict}	
	Log to Console       \nActivate Firmware  completed
	Sleep      1 minutes 1 seconds
	

	#####Validation of oneview firmware version with icms
	Log to Console    Validation of oneview firmware version with icms
    FIRMWARE_VERSION_VALIDATION_WITH_ICMS_AND_ONEVIEW
    
    #####Validation of IC state of Interconnects 
    Log to Console   Validation of IC state of Interconnects 
    IC_STATE_VALIDATION_AFTER_FIRMWARE_UPDATE

   ######## Validation of ALERT messages on interconnects and LIs page #########################
   # Downgrade Alert message validation for stage and Activation 
   Log to Console    Validation of ALERT messages on interconnects and LIs page
   ALERTS_VALIDATION_FOR_STAGING_ACTIVATION_DOWNGARDE    ${LI_FC_INTERCONNECTS}    ${LI_OCHO_VC_INTERCONNECTS}   ${LI_SUPERSHAW_INTERCONNECTS}    ${LI_1010D_VC_INTERCONNECTS}   ${ICM_Alert1_stg_str_end}     ${ICM_Alert1_stg_star_1010D_end}    ${ICM_Alert1_stg_succ_end}   ${ICM_Alert1_act_OCHO_succ_end}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_star_1010D_end}    ${LI_UPADTE_STARTED}    ${LI_UPDATE_SUCCESS}    ${LI_NAME}   ${HICM_Alert1_stg_star_2_end}   ${LI_STAGING_STARTED}     ${li}    ${LI_STAGING_SUCCESS}    ${LI_ACTIVATION_STARTED}    ${LI_ACTIVATION_SUCCESS}   

    Fusion Api Logout Appliance
***Comment***
    
TC11 Verify that oneview should allow activation of already staged rpm firmware version (from scexes to RPM ) using Odd/Even mode without force flag (upgrade G3)
    Log To Console   "###############Staging + activation of firmware update of  all vc  Modules when IC state are configured ############"
    [Documentation]    " RPM support FW update via LI: Verify that oneview should allow activation of already staged rpm firmware version (from scexes to RPM ) using Odd/Even mode without force flag (upgrade G3)"
    Log to Console    "F1541_API_TC04 -->  Verify that oneview should allow activation of already staged rpm firmware version (from scexes to RPM ) using Odd/Even mode without force flag (upgrade G3)"
    Log To Console    ****Validation of  the interconnect states before  FW update triggers **********
    

	Fusion Api Login Appliance      ${APPLIANCE_IP}       ${admin_credentials}
#	${del_resp}=    fusion_api_delete_alert    /rest/alerts
   #####Validation of IC state of Interconnects 
    Log to Console   Validation of IC state of Interconnects 
    IC_STATE_VALIDATION_AFTER_FIRMWARE_UPDATE
    
	${li}=    Get Li Name
	${li_uri} =     Get LI URI   ${li}

	${resp1} =    fusion_api_li_upgrade_firmware      body=${LI_UPGRADE_STAGEING_ODDEVEN_SCEXES_RPM}     uri=${li_uri}


	${task} =	    Wait For Task       ${resp1}      ${STAGING_TIME}     1s
	Log to Console      ${task}
	
	${valDict} =    Create Dictionary    status_code=${200}
	...                                 taskState=Completed
	
	Validate Response    ${task}    ${valDict}	
	Log to Console         \nStaging Firmware  completed
	Sleep        1 minutes 1 seconds

	# ACTIVATION of ALREADY STAGED SCEXE FIRMWARE VERSION #########
	${resp1} =       fusion_api_li_upgrade_firmware      body=${LI_UPGRADE_ACTIVATION_ODDEVEN_SCEXES_RPM}     uri=${li_uri}
	${task} =	    Wait For Task        ${resp1}       ${ACTIVATE_ODDEVEN_TIME}		1s
	Log to Console      ${task}
	
	${valDict} =    Create Dictionary    status_code=${200}
	...                                 taskState=Completed
	
	Validate Response    ${task}    ${valDict}	
	Log to Console       \nActivate Firmware  completed
	Sleep      1 minutes 1 seconds
	

	#####Validation of oneview firmware version with icms
	Log to Console    Validation of oneview firmware version with icms
    FIRMWARE_VERSION_VALIDATION_WITH_ICMS_AND_ONEVIEW
    
    #####Validation of IC state of Interconnects 
    Log to Console   Validation of IC state of Interconnects 
    IC_STATE_VALIDATION_AFTER_FIRMWARE_UPDATE

   ######## Validation of ALERT messages on interconnects and LIs page #########################
   # Upgrade Alert message validation for stage and Activation 
   Log to Console     Validation of ALERT messages on interconnects and LIs page
   ALERTS_VALIDATION_FOR_STAGING_ACTIVATION_UPGARDE    ${LI_FC_INTERCONNECTS}    ${LI_OCHO_VC_INTERCONNECTS}   ${LI_SUPERSHAW_INTERCONNECTS}    ${LI_1010D_VC_INTERCONNECTS}   ${HICM_Alert1_stg_str_end}     ${HICM_Alert1_stg_star_1010D_end}    ${HICM_Alert1_stg_succ_end}   ${HICM_Alert1_act_OCHO_succ_end}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star}    ${HICM_Alert1_stg_star_1010D_end}    ${LI_UPADTE_STARTED}    ${LI_UPDATE_SUCCESS}    ${LI_NAME}   ${HICM_Alert1_stg_star_2_end}   ${LI_STAGING_STARTED}     ${li}    ${LI_STAGING_SUCCESS}    ${LI_ACTIVATION_STARTED}    ${LI_ACTIVATION_SUCCESS}   


    Fusion Api Logout Appliance
TC12 Verify that oneview should allow activation of already staged SCEXES firmware version (from RPM to SCEXES ) using Odd/Evenmode with force flag (downgrade)
    Log To Console      "###############Staging and activation of firmware update of vc Modules when IC state are configured ############"
    [Documentation]      "RPM support FW update via LI: Verify that oneview should allow activation of already staged SCEXES firmware version (from RPM to SCEXES ) using Odd/Evenmode with force flag (downgrade)"
    Log to Console      "F1541_API_TC08 -->  Verify that oneview should allow activation of already staged SCEXES firmware version (from RPM to SCEXES ) using Odd/Evenmode with force flag (downgrade)
    Log To Console      ****Validation of  the interconnect states before  FW update triggers **********

	Fusion Api Login Appliance      ${APPLIANCE_IP}       ${admin_credentials}
	${del_resp}=    fusion_api_delete_alert    /rest/alerts
   #####Validation of IC state of Interconnects 
    Log to Console   Validation of IC state of Interconnects 
    IC_STATE_VALIDATION_AFTER_FIRMWARE_UPDATE
    
	${li}=    Get Li Name
	${li_uri} =     Get LI URI   ${li}	

	${resp1} =    fusion_api_li_upgrade_firmware      body=${LI_DOWNGRADE_STAGEING_ODDEVEN_RPM_SCEXES}     uri=${li_uri}


	${task} =	    Wait For Task 	${resp1} 	 ${STAGING_TIME}		1s
	Log to Console      ${task}
	
	${valDict} =    Create Dictionary    status_code=${200}
	...                                 taskState=Completed
	
	Validate Response    ${task}    ${valDict}	
	Log to Console         \nStaging Firmware  completed
	Sleep        1 minutes 1 seconds

	# ACTIVATION of ALREADY STAGED RPM FIRMWARE VERSION #########
	${resp1} =       fusion_api_li_upgrade_firmware      body=${LI_DOWNGRADE_ACTIVATION_ODDEVEN_RPM_SCEXES}     uri=${li_uri}
	${task} =	    Wait For Task        ${resp1}       ${ACTIVATE_ODDEVEN_TIME}		1s
	Log to Console      ${task}
	
	${valDict} =    Create Dictionary    status_code=${200}
	...                                 taskState=Completed
	
	Validate Response    ${task}    ${valDict}	
	Log to Console       \nActivation Firmware  completed
	Sleep      1 minutes 1 seconds

	#####Validation of oneview firmware version with icms
	Log to Console    Validation of oneview firmware version with icms
    FIRMWARE_VERSION_VALIDATION_WITH_ICMS_AND_ONEVIEW
    
    #####Validation of IC state of Interconnects 
    Log to Console   Validation of IC state of Interconnects 
    IC_STATE_VALIDATION_AFTER_FIRMWARE_UPDATE

   ######## Validation of ALERT messages on interconnects and LIs page #########################
   # Downgrade Alert message validation for stage and Activation 
   Log to Console    Validation of ALERT messages on interconnects and LIs page
   ALERTS_VALIDATION_FOR_STAGING_ACTIVATION_DOWNGARDE    ${LI_FC_INTERCONNECTS}    ${LI_OCHO_VC_INTERCONNECTS}   ${LI_SUPERSHAW_INTERCONNECTS}    ${LI_1010D_VC_INTERCONNECTS}   ${ICM_Alert1_stg_str_end}     ${ICM_Alert1_stg_star_1010D_end}    ${ICM_Alert1_stg_succ_end}   ${ICM_Alert1_act_OCHO_succ_end}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_star_1010D_end}    ${LI_UPADTE_STARTED}    ${LI_UPDATE_SUCCESS}    ${LI_NAME}   ${HICM_Alert1_stg_star_2_end}   ${LI_STAGING_STARTED}     ${li}    ${LI_STAGING_SUCCESS}    ${LI_ACTIVATION_STARTED}    ${LI_ACTIVATION_SUCCESS}   


    Fusion Api Logout Appliance

TC13 Verify that oneview should allow activation of already staged rpm firmware version (from scexes to RPM ) using Parallel mode without force flag (upgrade G3)
    Log To Console   "###############Staging + activation of firmware update of  all vc  Modules when IC state are configured ############"
    [Documentation]    " RPM support FW update via LI: Verify that oneview should allow activation of already staged rpm firmware version (from scexes to RPM ) using Parallel mode without force flag (upgrade G3)"
    Log to Console    "F1541_API_TC05 -->  Verify that oneview should allow activation of already staged rpm firmware version (from scexes to RPM ) using Parallel mode without force flag (upgrade G3)"
    Log To Console    ****Validation of  the interconnect states before  FW update triggers **********    

	Fusion Api Login Appliance      ${APPLIANCE_IP}       ${admin_credentials}
#	${del_resp}=    fusion_api_delete_alert    /rest/alerts
   #####Validation of IC state of Interconnects 
    Log to Console   Validation of IC state of Interconnects 
    IC_STATE_VALIDATION_AFTER_FIRMWARE_UPDATE
    
	${li}=    Get Li Name
	${li_uri} =     Get LI URI   ${li}

	${resp1} =    fusion_api_li_upgrade_firmware      body=${LI_UPGRADE_STAGEING_PARALLEL_SCEXES_RPM}     uri=${li_uri}


	${task} =	    Wait For Task       ${resp1}      ${STAGING_TIME}     1s
	Log to Console      ${task}
	
	${valDict} =    Create Dictionary    status_code=${200}
	...                                 taskState=Completed
	
	Validate Response    ${task}    ${valDict}	
	Log to Console         \nStaging Firmware  completed
	Sleep        1 minutes 1 seconds

	# ACTIVATION of ALREADY STAGED SCEXE FIRMWARE VERSION #########
	${resp1} =       fusion_api_li_upgrade_firmware      body=${LI_UPGRADE_ACTIVATION_PARALLEL_SCEXES_RPM}     uri=${li_uri}
	${task} =	    Wait For Task        ${resp1}       ${ACTIVATE_PARALLEL_TIME}		1s
	Log to Console      ${task}
	
	${valDict} =    Create Dictionary    status_code=${200}
	...                                 taskState=Completed

	#####Validation of oneview firmware version with icms
	Log to Console    Validation of oneview firmware version with icms
    FIRMWARE_VERSION_VALIDATION_WITH_ICMS_AND_ONEVIEW
    
    #####Validation of IC state of Interconnects 
    Log to Console   Validation of IC state of Interconnects 
    IC_STATE_VALIDATION_AFTER_FIRMWARE_UPDATE

   ######## Validation of ALERT messages on interconnects and LIs page #########################
   # Upgrade Alert message validation for stage and Activation 
   Log to Console     Validation of ALERT messages on interconnects and LIs page
   ALERTS_VALIDATION_FOR_STAGING_ACTIVATION_UPGARDE    ${LI_FC_INTERCONNECTS}    ${LI_OCHO_VC_INTERCONNECTS}   ${LI_SUPERSHAW_INTERCONNECTS}    ${LI_1010D_VC_INTERCONNECTS}   ${HICM_Alert1_stg_str_end}     ${HICM_Alert1_stg_star_1010D_end}    ${HICM_Alert1_stg_succ_end}   ${HICM_Alert1_act_OCHO_succ_end}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star}    ${HICM_Alert1_stg_star_1010D_end}    ${LI_UPADTE_STARTED}    ${LI_UPDATE_SUCCESS}    ${LI_NAME}   ${HICM_Alert1_stg_star_2_end}   ${LI_STAGING_STARTED}     ${li}    ${LI_STAGING_SUCCESS}    ${LI_ACTIVATION_STARTED}    ${LI_ACTIVATION_SUCCESS}   


    Fusion Api Logout Appliance
    
TC14 Verify that oneview should allow activation of already staged SCEXES firmware version (from RPM to SCEXES ) using Serial mode with force flag (downgrade)
    Log To Console      "###############Staging and activation of firmware update of vc Modules when IC state are configured ############"
    [Documentation]      "RPM support FW update via LI: Verify that oneview should allow activation of already staged SCEXES firmware version (from RPM to SCEXES ) using Serial mode with force flag (downgrade)"
    Log to Console      "F1541_API_TC09 -->  Verify that oneview should allow activation of already staged SCEXES firmware version (from RPM to SCEXES ) using Serial mode with force flag (downgrade)
    Log To Console      ****Validation of  the interconnect states before  FW update triggers **********

	Fusion Api Login Appliance      ${APPLIANCE_IP}       ${admin_credentials}
	${del_resp}=    fusion_api_delete_alert    /rest/alerts
   #####Validation of IC state of Interconnects 
    Log to Console   Validation of IC state of Interconnects 
    IC_STATE_VALIDATION_AFTER_FIRMWARE_UPDATE
    
	${li}=    Get Li Name
	${li_uri} =     Get LI URI   ${li}	

	${resp1} =    fusion_api_li_upgrade_firmware      body=${LI_DOWNGRADE_STAGEING_SERIAL_RPM_SCEXES}     uri=${li_uri}


	${task} =	    Wait For Task 	${resp1} 	 ${STAGING_TIME}		1s
	Log to Console      ${task}
	
	${valDict} =    Create Dictionary    status_code=${200}
	...                                 taskState=Completed
	
	Validate Response    ${task}    ${valDict}	
	Log to Console         \nStaging Firmware  completed
	Sleep        1 minutes 1 seconds

	# ACTIVATION of ALREADY STAGED RPM FIRMWARE VERSION #########
	${resp1} =       fusion_api_li_upgrade_firmware      body=${LI_DOWNGRADE_ACTIVATION_SERIAL_RPM_SCEXES}     uri=${li_uri}
	${task} =	    Wait For Task        ${resp1}       ${ACTIVATE_SERIAL_TIME}		1s
	Log to Console      ${task}
	
	${valDict} =    Create Dictionary    status_code=${200}
	...                                 taskState=Completed
	
	Validate Response    ${task}    ${valDict}	
	Log to Console       \nActivation Firmware  completed
	Sleep      1 minutes 1 seconds
	

	#####Validation of oneview firmware version with icms
	Log to Console    Validation of oneview firmware version with icms
    FIRMWARE_VERSION_VALIDATION_WITH_ICMS_AND_ONEVIEW
    
    #####Validation of IC state of Interconnects 
    Log to Console   Validation of IC state of Interconnects 
    IC_STATE_VALIDATION_AFTER_FIRMWARE_UPDATE

   ######## Validation of ALERT messages on interconnects and LIs page #########################
   # Downgrade Alert message validation for stage and Activation 
   Log to Console    Validation of ALERT messages on interconnects and LIs page
   ALERTS_VALIDATION_FOR_STAGING_ACTIVATION_DOWNGARDE    ${LI_FC_INTERCONNECTS}    ${LI_OCHO_VC_INTERCONNECTS}   ${LI_SUPERSHAW_INTERCONNECTS}    ${LI_1010D_VC_INTERCONNECTS}   ${ICM_Alert1_stg_str_end}     ${ICM_Alert1_stg_star_1010D_end}    ${ICM_Alert1_stg_succ_end}   ${ICM_Alert1_act_OCHO_succ_end}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_star_1010D_end}    ${LI_UPADTE_STARTED}    ${LI_UPDATE_SUCCESS}    ${LI_NAME}   ${HICM_Alert1_stg_star_2_end}   ${LI_STAGING_STARTED}     ${li}    ${LI_STAGING_SUCCESS}    ${LI_ACTIVATION_STARTED}    ${LI_ACTIVATION_SUCCESS}   

    Fusion Api Logout Appliance

TC15 Verify that oneview should allow activation of already staged rpm firmware version (from scexes to RPM )using serial mode without force flag (upgrade G3)
    Log To Console   "###############Staging + activation of firmware update of  all vc  Modules when IC state are configured ############"
    [Documentation]    " RPM support FW update via LI: Verify that oneview should allow activation of already staged rpm firmware version (from scexes to RPM )using serial mode without force flag (upgrade G3)"
    Log to Console    "F1541_API_TC06 -->  Verify that oneview should allow activation of already staged rpm firmware version (from scexes to RPM )using serial mode without force flag (upgrade G3)"
    Log To Console    ****Validation of  the interconnect states before  FW update triggers **********
    

	Fusion Api Login Appliance      ${APPLIANCE_IP}       ${admin_credentials}
#	${del_resp}=    fusion_api_delete_alert    /rest/alerts
   #####Validation of IC state of Interconnects 
    Log to Console   Validation of IC state of Interconnects 
    IC_STATE_VALIDATION_AFTER_FIRMWARE_UPDATE
    
	${li}=    Get Li Name
	${li_uri} =     Get LI URI   ${li}

	${resp1} =    fusion_api_li_upgrade_firmware      body=${LI_UPGRADE_STAGEING_SERIAL_SCEXES_RPM}     uri=${li_uri}


	${task} =	    Wait For Task       ${resp1}      ${STAGING_TIME}     1s
	Log to Console      ${task}
	
	${valDict} =    Create Dictionary    status_code=${200}
	...                                 taskState=Completed
	
	Validate Response    ${task}    ${valDict}	
	Log to Console         \nStaging Firmware  completed
	Sleep        1 minutes 1 seconds

	# ACTIVATION of ALREADY STAGED SCEXE FIRMWARE VERSION #########
	${resp1} =       fusion_api_li_upgrade_firmware      body=${LI_UPGRADE_ACTIVATION_SERIAL_SCEXES_RPM}     uri=${li_uri}
	${task} =	    Wait For Task        ${resp1}       ${ACTIVATE_SERIAL_TIME}		1s
	Log to Console      ${task}
	
	${valDict} =    Create Dictionary    status_code=${200}
	...                                 taskState=Completed
	
	Validate Response    ${task}    ${valDict}	
	Log to Console       \nActivate Firmware  completed
	Sleep      1 minutes 1 seconds
	

	#####Validation of oneview firmware version with icms
	Log to Console    Validation of oneview firmware version with icms
    FIRMWARE_VERSION_VALIDATION_WITH_ICMS_AND_ONEVIEW
    
    #####Validation of IC state of Interconnects 
    Log to Console   Validation of IC state of Interconnects 
    IC_STATE_VALIDATION_AFTER_FIRMWARE_UPDATE

   ######## Validation of ALERT messages on interconnects and LIs page #########################
   # Upgrade Alert message validation for stage and Activation 
   Log to Console     Validation of ALERT messages on interconnects and LIs page
   ALERTS_VALIDATION_FOR_STAGING_ACTIVATION_UPGARDE    ${LI_FC_INTERCONNECTS}    ${LI_OCHO_VC_INTERCONNECTS}   ${LI_SUPERSHAW_INTERCONNECTS}    ${LI_1010D_VC_INTERCONNECTS}   ${HICM_Alert1_stg_str_end}     ${HICM_Alert1_stg_star_1010D_end}    ${HICM_Alert1_stg_succ_end}   ${HICM_Alert1_act_OCHO_succ_end}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star}    ${HICM_Alert1_stg_star_1010D_end}    ${LI_UPADTE_STARTED}    ${LI_UPDATE_SUCCESS}    ${LI_NAME}   ${HICM_Alert1_stg_star_2_end}   ${LI_STAGING_STARTED}     ${li}    ${LI_STAGING_SUCCESS}    ${LI_ACTIVATION_STARTED}    ${LI_ACTIVATION_SUCCESS}   


    Fusion Api Logout Appliance

    
TC16 Verify that oneview should allow activation of already staged scexes firmware version (from scexes to scexes )using parallel mode with force flag (downgrade)
    Log To Console      "###############Staging and activation of firmware update of vc Modules when IC state are configured ############"
    [Documentation]      "RPM support FW update via LI: Verify that oneview should allow activation of already staged scexes firmware version (from scexes to scexes )using parallel mode with force flag (downgrade)"
    Log to Console      "F1541_API_TC16 -->  Verify that oneview should allow activation of already staged scexes firmware version (from scexes to scexes )using parallel mode with force flag (downgrade)
    Log To Console      ****Validation of  the interconnect states before  FW update triggers **********
    
	Fusion Api Login Appliance      ${APPLIANCE_IP}       ${admin_credentials}
	${del_resp}=    fusion_api_delete_alert    /rest/alerts
   #####Validation of IC state of Interconnects 
    Log to Console   Validation of IC state of Interconnects 
    IC_STATE_VALIDATION_AFTER_FIRMWARE_UPDATE
    
	${li}=    Get Li Name
	${li_uri} =     Get LI URI   ${li}	

	${resp1} =    fusion_api_li_upgrade_firmware      body=${LI_DOWNGRADE_STAGEING_PARALLEL_RPM_SCEXES}     uri=${li_uri}


	${task} =	    Wait For Task 	${resp1} 	 ${STAGING_TIME}		1s
	Log to Console      ${task}
	
	${valDict} =    Create Dictionary    status_code=${200}
	...                                 taskState=Completed
	
	Validate Response    ${task}    ${valDict}	
	Log to Console         \nStaging Firmware  completed
	Sleep        1 minutes 1 seconds

	# ACTIVATION of ALREADY STAGED RPM FIRMWARE VERSION #########
	${resp1} =       fusion_api_li_upgrade_firmware      body=${LI_DOWNGRADE_ACTIVATION_PARALLEL_RPM_SCEXES}     uri=${li_uri}
	${task} =	    Wait For Task        ${resp1}       ${ACTIVATE_PARALLEL_TIME}      1s
	Log to Console      ${task}
	
	${valDict} =    Create Dictionary    status_code=${200}
	...                                 taskState=Completed
	
	Validate Response    ${task}    ${valDict}	
	Log to Console       \nActivate Firmware  completed
	Sleep      1 minutes 1 seconds
	

	${li_uri} =     Get LI URI   ${li}	

	${resp1} =    fusion_api_li_upgrade_firmware      body=${LI_DOWNGRADE_STAGEING_PARALLEL_RPM_SCEXES}     uri=${li_uri}


	${task} =	    Wait For Task       ${resp1}      165 min        1s
	Log to Console      ${task}
	
	${valDict} =    Create Dictionary    status_code=${200}
	...                                 taskState=Completed
	
	Validate Response    ${task}    ${valDict}	
	Log to Console         \nStaging Firmware  completed
	Sleep        1 minutes 1 seconds

	# ACTIVATION of ALREADY STAGED RPM FIRMWARE VERSION #########
	${resp1} =       fusion_api_li_upgrade_firmware      body=${LI_DOWNGRADE_ACTIVATION_PARALLEL_RPM_SCEXES}     uri=${li_uri}
	${task} =	    Wait For Task        ${resp1}       65 min		1s
	Log to Console      ${task}
	
	${valDict} =    Create Dictionary    status_code=${200}
	...                                 taskState=Completed
	
	Validate Response    ${task}    ${valDict}	
	Log to Console       \nActivate Firmware  completed
	Sleep      1 minutes 1 seconds
		

	#####Validation of oneview firmware version with icms
	Log to Console    Validation of oneview firmware version with icms
    FIRMWARE_VERSION_VALIDATION_WITH_ICMS_AND_ONEVIEW
    
    #####Validation of IC state of Interconnects 
    Log to Console   Validation of IC state of Interconnects 
    IC_STATE_VALIDATION_AFTER_FIRMWARE_UPDATE

   ######## Validation of ALERT messages on interconnects and LIs page #########################
   # Downgrade Alert message validation for stage and Activation 
   Log to Console    Validation of ALERT messages on interconnects and LIs page
   ALERTS_VALIDATION_FOR_STAGING_ACTIVATION_DOWNGARDE    ${LI_FC_INTERCONNECTS}    ${LI_OCHO_VC_INTERCONNECTS}   ${LI_SUPERSHAW_INTERCONNECTS}    ${LI_1010D_VC_INTERCONNECTS}   ${ICM_Alert1_stg_str_end}     ${ICM_Alert1_stg_star_1010D_end}    ${ICM_Alert1_stg_succ_end}   ${ICM_Alert1_act_OCHO_succ_end}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_star_1010D_end}    ${LI_UPADTE_STARTED}    ${LI_UPDATE_SUCCESS}    ${LI_NAME}   ${HICM_Alert1_stg_star_2_end}   ${LI_STAGING_STARTED}     ${li}    ${LI_STAGING_SUCCESS}    ${LI_ACTIVATION_STARTED}    ${LI_ACTIVATION_SUCCESS}   


    Fusion Api Logout Appliance
    
TC17 Verify that oneview should allow activation of already staged scexes firmware version (from scexes to scexes)using serial mode without force flag (upgrade)
    Log To Console   "###############Staging + activation of firmware update of  all vc  Modules when IC state are configured ############"
    [Documentation]    "RPM support FW update via LI: Verify that oneview should allow activation of already staged scexes firmware version (from scexes to scexes) using serial mode without force flag (upgrade)"
    Log to Console    "F1541_API_TC17 -->  Verify that oneview should allow activation of already staged scexes firmware version (from scexes to scexes) using serial mode without force flag (upgrade)"
    Log To Console    ****Validation of  the interconnect states before  FW update triggers **********
    

	Fusion Api Login Appliance      ${APPLIANCE_IP}       ${admin_credentials}
#	${del_resp}=    fusion_api_delete_alert    /rest/alerts
   #####Validation of IC state of Interconnects 
    Log to Console   Validation of IC state of Interconnects 
    IC_STATE_VALIDATION_AFTER_FIRMWARE_UPDATE
    
	${li}=    Get Li Name
	${li_uri} =     Get LI URI   ${li}

	${resp1} =    fusion_api_li_upgrade_firmware      body=${LI_UPGRADE_STAGEING_SERIAL_SCEXE_SCEXE}     uri=${li_uri}


	${task} =	    Wait For Task       ${resp1}      ${STAGING_TIME}     1s
	Log to Console      ${task}
	
	${valDict} =    Create Dictionary    status_code=${200}
	...                                 taskState=Completed
	
	Validate Response    ${task}    ${valDict}	
	Log to Console         \nStaging Firmware  completed
	Sleep        1 minutes 1 seconds

	# ACTIVATION of ALREADY STAGED SCEXE FIRMWARE VERSION #########
	${resp1} =       fusion_api_li_upgrade_firmware      body=${LI_UPGRADE_ACTIVATION_SERIAL_SCEXE_SCEXE}     uri=${li_uri}
	${task} =	    Wait For Task        ${resp1}       ${ACTIVATE_SERIAL_TIME}		1s
	Log to Console      ${task}
	
	${valDict} =    Create Dictionary    status_code=${200}
	...                                 taskState=Completed
	
	Validate Response    ${task}    ${valDict}	
	Log to Console       \nActivate Firmware  completed
	Sleep      1 minutes 1 seconds
	

	#####Validation of oneview firmware version with icms
	Log to Console    Validation of oneview firmware version with icms
    FIRMWARE_VERSION_VALIDATION_WITH_ICMS_AND_ONEVIEW
    
    #####Validation of IC state of Interconnects 
    Log to Console   Validation of IC state of Interconnects 
    IC_STATE_VALIDATION_AFTER_FIRMWARE_UPDATE

   ######## Validation of ALERT messages on interconnects and LIs page #########################
   # Upgrade Alert message validation for stage and Activation 
   Log to Console     Validation of ALERT messages on interconnects and LIs page
   ALERTS_VALIDATION_FOR_STAGING_ACTIVATION_UPGARDE    ${LI_FC_INTERCONNECTS}    ${LI_OCHO_VC_INTERCONNECTS}   ${LI_SUPERSHAW_INTERCONNECTS}    ${LI_1010D_VC_INTERCONNECTS}   ${HICM_Alert1_stg_str_end}     ${HICM_Alert1_stg_star_1010D_end}    ${HICM_Alert1_stg_succ_end}   ${HICM_Alert1_act_OCHO_succ_end}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star}    ${HICM_Alert1_stg_star_1010D_end}    ${LI_UPADTE_STARTED}    ${LI_UPDATE_SUCCESS}    ${LI_NAME}   ${HICM_Alert1_stg_star_2_end}   ${LI_STAGING_STARTED}     ${li}    ${LI_STAGING_SUCCESS}    ${LI_ACTIVATION_STARTED}    ${LI_ACTIVATION_SUCCESS}   


    Fusion Api Logout Appliance
    
TC18 Verify the FW Update operation (Stage + Activate) from scexes to scexes firmware version using parallel mode with force flag (same version)
    Log To Console   "###############Staging + activation of firmware update of  all vc  Modules when IC state are configured ############"
    [Documentation]    "RPM support FW update via LI: Verify the FW Update operation (Stage + Activate) from scexes to scexes firmware version using parallel mode with force flag (same version)"
    Log to Console    "F1541_API_TC27 -->  Verify the FW Update operation (Stage + Activate) from scexes to scexes firmware version using parallel mode with force flag (same version)"
    Log To Console    ****Validation of  the interconnect states before  FW update triggers **********
    

	Fusion Api Login Appliance      ${APPLIANCE_IP}       ${admin_credentials}
#	${del_resp}=    fusion_api_delete_alert    /rest/alerts
   #####Validation of IC state of Interconnects 
    Log to Console   Validation of IC state of Interconnects 
    IC_STATE_VALIDATION_AFTER_FIRMWARE_UPDATE
    
	${li}=    Get Li Name
	${li_uri} =     Get LI URI   ${li}

	${resp1} =    fusion_api_li_upgrade_firmware      body=${LI_UPGRADE_STAGE_ACTIVE_UPSAMEVERSION_SCEXE_SCEXE}     uri=${li_uri}


	${task} =	    Wait For Task       ${resp1}     ${UPDATE_PARALLEL_TIME}     1s
	Log to Console      ${task}
	
	${valDict} =    Create Dictionary    status_code=${200}
	...                                 taskState=Completed
	
	Validate Response    ${task}    ${valDict}	
	Log to Console         \nUpdate Firmware  completed
	Sleep        1 minutes 1 seconds



	#####Validation of oneview firmware version with icms
	Log to Console    Validation of oneview firmware version with icms
    FIRMWARE_VERSION_VALIDATION_WITH_ICMS_AND_ONEVIEW
    
    #####Validation of IC state of Interconnects 
    Log to Console   Validation of IC state of Interconnects 
    IC_STATE_VALIDATION_AFTER_FIRMWARE_UPDATE

   ######## Validation of ALERT messages on interconnects and LIs page #########################
   # Upgrade for stage and Activation 
   Log to Console     Validation of ALERT messages on interconnects and LIs page
   ALERTS_VALIDATION_FOR_UPDATE_UPGARDE    ${LI_FC_INTERCONNECTS}    ${LI_OCHO_VC_INTERCONNECTS}   ${LI_SUPERSHAW_INTERCONNECTS}    ${LI_1010D_VC_INTERCONNECTS}   ${HICM_Alert1_stg_str_end}     ${HICM_Alert1_stg_star_1010D_end}    ${HICM_Alert1_stg_succ_end}   ${HICM_Alert1_act_OCHO_succ_end}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star}    ${HICM_Alert1_stg_star_1010D_end}    ${LI_UPADTE_STARTED}    ${LI_UPDATE_SUCCESS}    ${LI_NAME}   ${HICM_Alert1_stg_star_2_end}   ${LI_STAGING_STARTED}     ${li}    ${LI_STAGING_SUCCESS}    ${LI_ACTIVATION_STARTED}    ${LI_ACTIVATION_SUCCESS}   

    Fusion Api Logout Appliance
    
 

TC19 Verify the FW Update operation (Stage + Activate) from scexes to RPM firmware version using serial mode with force flag (downgrade)
    Log To Console      "###############Staging and activation of firmware update of vc Modules when IC state are configured ############"
    [Documentation]      "RPM support FW update via LI: Verify the FW Update operation (Stage + Activate) from scexes to RPM firmware version using serial mode with force flag (downgrade)"
    Log to Console      "F1541_API_TC19 -->  Verify the FW Update operation (Stage + Activate) from scexes to RPM firmware version using serial mode with force flag (downgrade)
    Log To Console      ****Validation of  the interconnect states before  FW update triggers **********
 

	Fusion Api Login Appliance      ${APPLIANCE_IP}       ${admin_credentials}
	${del_resp}=    fusion_api_delete_alert    /rest/alerts
   #####Validation of IC state of Interconnects 
    Log to Console   Validation of IC state of Interconnects 
    IC_STATE_VALIDATION_AFTER_FIRMWARE_UPDATE
    
	${li}=    Get Li Name
	${li_uri} =     Get LI URI   ${li}

	${resp1} =    fusion_api_li_upgrade_firmware      body=${LI_DOWNGRADE_UPDATE_SERIAL_SCEXE_RPM}     uri=${li_uri}


	${task} =	    Wait For Task       ${resp1}     ${UPDATE_SERIAL_TIME}     1s
	Log to Console      ${task}
	
	${valDict} =    Create Dictionary    status_code=${200}
	...                                 taskState=Completed
	
	Validate Response    ${task}    ${valDict}	
	Log to Console         \nUpdate Firmware  completed
	Sleep        1 minutes 1 seconds

	#####Validation of oneview firmware version with icms
	Log to Console    Validation of oneview firmware version with icms
    FIRMWARE_VERSION_VALIDATION_WITH_ICMS_AND_ONEVIEW
    
    #####Validation of IC state of Interconnects 
    Log to Console   Validation of IC state of Interconnects 
    IC_STATE_VALIDATION_AFTER_FIRMWARE_UPDATE

   ######## Validation of ALERT messages on interconnects and LIs page #########################
   Log to Console    Validation of ALERT messages on interconnects and LIs page
   ALERTS_VALIDATION_FOR_UPDATE_DOWNGARDE    ${LI_FC_INTERCONNECTS}    ${LI_OCHO_VC_INTERCONNECTS}   ${LI_SUPERSHAW_INTERCONNECTS}    ${LI_1010D_VC_INTERCONNECTS}   ${ICM_Alert1_stg_str_end}     ${ICM_Alert1_stg_star_1010D_end}    ${ICM_Alert1_stg_succ_end}   ${ICM_Alert1_act_OCHO_succ_end}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_star_1010D_end}    ${LI_UPADTE_STARTED}    ${LI_UPDATE_SUCCESS}    ${LI_NAME}   ${HICM_Alert1_stg_star_2_end}   ${LI_STAGING_STARTED}     ${li}    ${LI_STAGING_SUCCESS}    ${LI_ACTIVATION_STARTED}    ${LI_ACTIVATION_SUCCESS}   

    Fusion Api Logout Appliance
    
TC20 Verify the FW Update operation (Stage + Activate) from RPM to scexes firmware version using serial mode without force flag (upgrade)
    Log To Console   "###############Staging + activation of firmware update of  all vc  Modules when IC state are configured ############"
    [Documentation]    "RPM support FW update via LI: Verify the FW Update operation (Stage + Activate) from RPM to scexes firmware version using serial mode without force flag (upgrade)"
    Log to Console    "F1541_API_TC25 -->  Verify the FW Update operation (Stage + Activate) from RPM to scexes firmware version using serial mode without force flag (upgrade)"
    Log To Console    ****Validation of  the interconnect states before  FW update triggers **********
    

	Fusion Api Login Appliance      ${APPLIANCE_IP}       ${admin_credentials}
#	${del_resp}=    fusion_api_delete_alert    /rest/alerts
   #####Validation of IC state of Interconnects 
    Log to Console   Validation of IC state of Interconnects 
    IC_STATE_VALIDATION_AFTER_FIRMWARE_UPDATE
    
	${li}=    Get Li Name
	${li_uri} =     Get LI URI   ${li}

	${resp1} =    fusion_api_li_upgrade_firmware      body=${LI_UPGRADE_UPDATE_SERIAL_RPM_SCEXE}     uri=${li_uri}


	${task} =	    Wait For Task       ${resp1}     ${UPDATE_SERIAL_TIME}    1s
	Log to Console      ${task}
	
	${valDict} =    Create Dictionary    status_code=${200}
	...                                 taskState=Completed
	
	Validate Response    ${task}    ${valDict}	
	Log to Console         \nUpdate Firmware  completed
	Sleep        1 minutes 1 seconds


	#####Validation of oneview firmware version with icms
	Log to Console    Validation of oneview firmware version with icms
    FIRMWARE_VERSION_VALIDATION_WITH_ICMS_AND_ONEVIEW
    
    #####Validation of IC state of Interconnects 
    Log to Console   Validation of IC state of Interconnects 
    IC_STATE_VALIDATION_AFTER_FIRMWARE_UPDATE

   ######## Validation of ALERT messages on interconnects and LIs page #########################
	# Upgrade for stage and Activation 
   Log to Console     Validation of ALERT messages on interconnects and LIs page
   ALERTS_VALIDATION_FOR_UPDATE_UPGARDE    ${LI_FC_INTERCONNECTS}    ${LI_OCHO_VC_INTERCONNECTS}   ${LI_SUPERSHAW_INTERCONNECTS}    ${LI_1010D_VC_INTERCONNECTS}   ${HICM_Alert1_stg_str_end}     ${HICM_Alert1_stg_star_1010D_end}    ${HICM_Alert1_stg_succ_end}   ${HICM_Alert1_act_OCHO_succ_end}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star}    ${HICM_Alert1_stg_star_1010D_end}    ${LI_UPADTE_STARTED}    ${LI_UPDATE_SUCCESS}    ${LI_NAME}   ${HICM_Alert1_stg_star_2_end}   ${LI_STAGING_STARTED}     ${li}    ${LI_STAGING_SUCCESS}    ${LI_ACTIVATION_STARTED}    ${LI_ACTIVATION_SUCCESS}   

    Fusion Api Logout Appliance
    
TC21 Verify the FW Update operation (Stage + Activate) from RPM to RPM firmware version using Odd/even mode with force flag (Downgrade)
    Log To Console      "###############Staging and activation of firmware update of vc Modules when IC state are configured ############"
    [Documentation]      "RPM support FW update via LI: Verify the FW Update operation (Stage + Activate) from RPM to RPM firmware version using Odd/even mode with force flag (Downgrade)"
    Log to Console      "F1541_API_TC23 -->  Verify the FW Update operation (Stage + Activate) from RPM to RPM firmware version using Odd/even mode with force flag (Downgrade)
    Log To Console      ****Validation of  the interconnect states before  FW update triggers **********


	Fusion Api Login Appliance      ${APPLIANCE_IP}       ${admin_credentials}
	${del_resp}=    fusion_api_delete_alert    /rest/alerts
   #####Validation of IC state of Interconnects 
    Log to Console   Validation of IC state of Interconnects 
    IC_STATE_VALIDATION_AFTER_FIRMWARE_UPDATE
    
	${li}=    Get Li Name
	${li_uri} =     Get LI URI   ${li}

	${resp1} =    fusion_api_li_upgrade_firmware      body=${LI_DOWNGRADE_UPDATE_ODDEVEN_SCEXE_RPM}     uri=${li_uri}


	${task} =	    Wait For Task       ${resp1}     ${UPDATE_ODDEVEN_TIME}     1s
	Log to Console      ${task}
	
	${valDict} =    Create Dictionary    status_code=${200}
	...                                 taskState=Completed
	
	Validate Response    ${task}    ${valDict}	
	Log to Console         \nUpdate Firmware  completed
	Sleep        1 minutes 1 seconds


	#####Validation of oneview firmware version with icms
	Log to Console    Validation of oneview firmware version with icms
    FIRMWARE_VERSION_VALIDATION_WITH_ICMS_AND_ONEVIEW
    
    #####Validation of IC state of Interconnects 
    Log to Console   Validation of IC state of Interconnects 
    IC_STATE_VALIDATION_AFTER_FIRMWARE_UPDATE

   ######## Validation of ALERT messages on interconnects and LIs page #########################
   Log to Console    Validation of ALERT messages on interconnects and LIs page
   # Downgrade for Update(stage and Activation)
   ALERTS_VALIDATION_FOR_UPDATE_DOWNGARDE    ${LI_FC_INTERCONNECTS}    ${LI_OCHO_VC_INTERCONNECTS}   ${LI_SUPERSHAW_INTERCONNECTS}    ${LI_1010D_VC_INTERCONNECTS}   ${ICM_Alert1_stg_str_end}     ${ICM_Alert1_stg_star_1010D_end}    ${ICM_Alert1_stg_succ_end}   ${ICM_Alert1_act_OCHO_succ_end}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_star_1010D_end}    ${LI_UPADTE_STARTED}    ${LI_UPDATE_SUCCESS}    ${LI_NAME}   ${HICM_Alert1_stg_star_2_end}   ${LI_STAGING_STARTED}     ${li}    ${LI_STAGING_SUCCESS}    ${LI_ACTIVATION_STARTED}    ${LI_ACTIVATION_SUCCESS}   

    Fusion Api Logout Appliance
    

TC22 Verify the FW Update operation (Stage + Activate) from RPM to RPM firmware version using Serial mode without force flag (Upgrade)
    Log To Console   "###############Staging + activation of firmware update of  all vc  Modules when IC state are configured ############"
    [Documentation]    "RPM support FW update via LI: Verify the FW Update operation (Stage + Activate) from RPM to RPM firmware version using Serial mode without force flag (Upgrade)"
    Log to Console    "F1541_API_TC21 -->  Verify the FW Update operation (Stage + Activate) from RPM to RPM firmware version using Serial mode without force flag (Upgrade)"
    Log To Console    ****Validation of  the interconnect states before  FW update triggers **********

	Fusion Api Login Appliance      ${APPLIANCE_IP}       ${admin_credentials}
#	${del_resp}=    fusion_api_delete_alert    /rest/alerts
   #####Validation of IC state of Interconnects 
    Log to Console   Validation of IC state of Interconnects 
    IC_STATE_VALIDATION_AFTER_FIRMWARE_UPDATE
    
	${li}=    Get Li Name
	${li_uri} =     Get LI URI   ${li}

	${resp1} =    fusion_api_li_upgrade_firmware      body=${LI_UPGRADE_UPDATE_SERIAL_RPM_RPM}     uri=${li_uri}


	${task} =	    Wait For Task       ${resp1}     ${UPDATE_SERIAL_TIME}     1s
	Log to Console      ${task}
	
	${valDict} =    Create Dictionary    status_code=${200}
	...                                 taskState=Completed
	
	Validate Response    ${task}    ${valDict}	
	Log to Console         \nUpdate Firmware  completed
	Sleep        1 minutes 1 seconds

	#####Validation of oneview firmware version with icms
	Log to Console    Validation of oneview firmware version with icms
    FIRMWARE_VERSION_VALIDATION_WITH_ICMS_AND_ONEVIEW
    
    #####Validation of IC state of Interconnects 
    Log to Console   Validation of IC state of Interconnects 
    IC_STATE_VALIDATION_AFTER_FIRMWARE_UPDATE

   ######## Validation of ALERT messages on interconnects and LIs page #########################
   # Upgrade for Update(stage and Activation)
   Log to Console     Validation of ALERT messages on interconnects and LIs page
   ALERTS_VALIDATION_FOR_UPDATE_UPGARDE    ${LI_FC_INTERCONNECTS}    ${LI_OCHO_VC_INTERCONNECTS}   ${LI_SUPERSHAW_INTERCONNECTS}    ${LI_1010D_VC_INTERCONNECTS}   ${HICM_Alert1_stg_str_end}     ${HICM_Alert1_stg_star_1010D_end}    ${HICM_Alert1_stg_succ_end}   ${HICM_Alert1_act_OCHO_succ_end}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star}    ${HICM_Alert1_stg_star_1010D_end}    ${LI_UPADTE_STARTED}    ${LI_UPDATE_SUCCESS}    ${LI_NAME}   ${HICM_Alert1_stg_star_2_end}   ${LI_STAGING_STARTED}     ${li}    ${LI_STAGING_SUCCESS}    ${LI_ACTIVATION_STARTED}    ${LI_ACTIVATION_SUCCESS}   

    Fusion Api Logout Appliance

TC23 Verify the FW Update operation (Stage + Activate) from RPM to scexes firmware version using parallel mode with force flag (downgrade)
    Log To Console      "###############Staging and activation of firmware update of vc Modules when IC state are configured ############"
    [Documentation]      "RPM support FW update via LI: Verify the FW Update operation (Stage + Activate) from RPM to scexes firmware version using parallel mode with force flag (downgrade)"
    Log to Console      "F1541_API_TC24 -->  Verify the FW Update operation (Stage + Activate) from RPM to scexes firmware version using parallel mode with force flag (downgrade)
    Log To Console      ****Validation of  the interconnect states before  FW update triggers **********
    
	Fusion Api Login Appliance      ${APPLIANCE_IP}       ${admin_credentials}
	${del_resp}=    fusion_api_delete_alert    /rest/alerts
   #####Validation of IC state of Interconnects 
    Log to Console   Validation of IC state of Interconnects 
    IC_STATE_VALIDATION_AFTER_FIRMWARE_UPDATE
    
	${li}=    Get Li Name
	${li_uri} =     Get LI URI   ${li}

	${resp1} =    fusion_api_li_upgrade_firmware      body=${LI_DOWNGRADE_UPDATE_PARALLEL_RPM_SCEXE}     uri=${li_uri}


	${task} =	    Wait For Task       ${resp1}     ${UPDATE_PARALLEL_TIME}     1s
	Log to Console      ${task}
	
	${valDict} =    Create Dictionary    status_code=${200}
	...                                 taskState=Completed
	
	Validate Response    ${task}    ${valDict}	
	Log to Console         \nUpdate Firmware  completed
	Sleep        1 minutes 1 seconds

	#####Validation of oneview firmware version with icms
	Log to Console    Validation of oneview firmware version with icms
    FIRMWARE_VERSION_VALIDATION_WITH_ICMS_AND_ONEVIEW
    
    #####Validation of IC state of Interconnects 
    Log to Console   Validation of IC state of Interconnects 
    IC_STATE_VALIDATION_AFTER_FIRMWARE_UPDATE

   ######## Validation of ALERT messages on interconnects and LIs page #########################
   Log to Console    Validation of ALERT messages on interconnects and LIs page
   # Downgrade for Update(stage and Activation)
   ALERTS_VALIDATION_FOR_UPDATE_DOWNGARDE    ${LI_FC_INTERCONNECTS}    ${LI_OCHO_VC_INTERCONNECTS}   ${LI_SUPERSHAW_INTERCONNECTS}    ${LI_1010D_VC_INTERCONNECTS}   ${ICM_Alert1_stg_str_end}     ${ICM_Alert1_stg_star_1010D_end}    ${ICM_Alert1_stg_succ_end}   ${ICM_Alert1_act_OCHO_succ_end}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_star_1010D_end}    ${LI_UPADTE_STARTED}    ${LI_UPDATE_SUCCESS}    ${LI_NAME}   ${HICM_Alert1_stg_star_2_end}   ${LI_STAGING_STARTED}     ${li}    ${LI_STAGING_SUCCESS}    ${LI_ACTIVATION_STARTED}    ${LI_ACTIVATION_SUCCESS}   

    Fusion Api Logout Appliance
    
TC24 Verify the FW Update operation (Stage + Activate) from scexes to RPM firmware version using parallel mode without force flag (upgrade)
    Log To Console   "###############Staging + activation of firmware update of  all vc  Modules when IC state are configured ############"
    [Documentation]    "RPM support FW update via LI: Verify the FW Update operation (Stage + Activate) from scexes to RPM firmware version using parallel mode without force flag (upgrade)"
    Log to Console    "F1541_API_TC18 -->  Verify the FW Update operation (Stage + Activate) from scexes to RPM firmware version using parallel mode without force flag (upgrade)"
    Log To Console    ****Validation of  the interconnect states before  FW update triggers **********

	Fusion Api Login Appliance      ${APPLIANCE_IP}       ${admin_credentials}
#	${del_resp}=    fusion_api_delete_alert    /rest/alerts
   #####Validation of IC state of Interconnects 
    Log to Console   Validation of IC state of Interconnects 
    IC_STATE_VALIDATION_AFTER_FIRMWARE_UPDATE
    
	${li}=    Get Li Name
	${li_uri} =     Get LI URI   ${li}

	${resp1} =    fusion_api_li_upgrade_firmware      body=${LI_UPGRADE_UPDATE_PARALLEL_SCEXE_RPM}     uri=${li_uri}


	${task} =	    Wait For Task       ${resp1}     ${UPDATE_PARALLEL_TIME}     1s
	Log to Console      ${task}
	
	${valDict} =    Create Dictionary    status_code=${200}
	...                                 taskState=Completed
	
	Validate Response    ${task}    ${valDict}	
	Log to Console         \nUpdate Firmware  completed
	Sleep        1 minutes 1 seconds

	#####Validation of oneview firmware version with icms
	Log to Console    Validation of oneview firmware version with icms
    FIRMWARE_VERSION_VALIDATION_WITH_ICMS_AND_ONEVIEW
    
    #####Validation of IC state of Interconnects 
    Log to Console   Validation of IC state of Interconnects 
    IC_STATE_VALIDATION_AFTER_FIRMWARE_UPDATE

   ######## Validation of ALERT messages on interconnects and LIs page #########################
   # Upgrade for Update(stage and Activation)
   Log to Console     Validation of ALERT messages on interconnects and LIs page
   ALERTS_VALIDATION_FOR_UPDATE_UPGARDE    ${LI_FC_INTERCONNECTS}    ${LI_OCHO_VC_INTERCONNECTS}   ${LI_SUPERSHAW_INTERCONNECTS}    ${LI_1010D_VC_INTERCONNECTS}   ${HICM_Alert1_stg_str_end}     ${HICM_Alert1_stg_star_1010D_end}    ${HICM_Alert1_stg_succ_end}   ${HICM_Alert1_act_OCHO_succ_end}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star}    ${HICM_Alert1_stg_star_1010D_end}    ${LI_UPADTE_STARTED}    ${LI_UPDATE_SUCCESS}    ${LI_NAME}   ${HICM_Alert1_stg_star_2_end}   ${LI_STAGING_STARTED}     ${li}    ${LI_STAGING_SUCCESS}    ${LI_ACTIVATION_STARTED}    ${LI_ACTIVATION_SUCCESS}   

    Fusion Api Logout Appliance
 
TC25 Verify the FW Update operation (Stage + Activate) from RPM to scexes firmware version using Odd/Even mode with force flag (downgrade)
    Log To Console      "###############Staging and activation of firmware update of vc Modules when IC state are configured ############"
    [Documentation]      "RPM support FW update via LI: Verify the FW Update operation (Stage + Activate) from RPM to scexes firmware version using Odd/Even mode with force flag (downgrade)"
    Log to Console      "F1541_API_TC26-->  Verify the FW Update operation (Stage + Activate) from RPM to scexes firmware version using Odd/Even mode with force flag (downgrade)
    Log To Console      ****Validation of  the interconnect states before  FW update triggers ********** 
    

    
	Fusion Api Login Appliance      ${APPLIANCE_IP}       ${admin_credentials}
	${del_resp}=    fusion_api_delete_alert    /rest/alerts
   #####Validation of IC state of Interconnects 
    Log to Console   Validation of IC state of Interconnects 
    IC_STATE_VALIDATION_AFTER_FIRMWARE_UPDATE
    
	${li}=    Get Li Name
	${li_uri} =     Get LI URI   ${li}

	${resp1} =    fusion_api_li_upgrade_firmware      body=${LI_DOWNGRADE_UPDATE_ODDEVEN_RPM_SCEXE}     uri=${li_uri}


	${task} =	    Wait For Task       ${resp1}     ${UPDATE_ODDEVEN_TIME}     1s
	Log to Console      ${task}
	
	${valDict} =    Create Dictionary    status_code=${200}
	...                                 taskState=Completed
	
	Validate Response    ${task}    ${valDict}	
	Log to Console         \nUpdate Firmware  completed
	Sleep        1 minutes 1 seconds


	#####Validation of oneview firmware version with icms
	Log to Console    Validation of oneview firmware version with icms
    FIRMWARE_VERSION_VALIDATION_WITH_ICMS_AND_ONEVIEW
    
    #####Validation of IC state of Interconnects 
    Log to Console   Validation of IC state of Interconnects 
    IC_STATE_VALIDATION_AFTER_FIRMWARE_UPDATE

   ######## Validation of ALERT messages on interconnects and LIs page #########################
   Log to Console    Validation of ALERT messages on interconnects and LIs page
   # Downgrade for Update(stage and Activation)
   ALERTS_VALIDATION_FOR_UPDATE_DOWNGARDE    ${LI_FC_INTERCONNECTS}    ${LI_OCHO_VC_INTERCONNECTS}   ${LI_SUPERSHAW_INTERCONNECTS}    ${LI_1010D_VC_INTERCONNECTS}   ${ICM_Alert1_stg_str_end}     ${ICM_Alert1_stg_star_1010D_end}    ${ICM_Alert1_stg_succ_end}   ${ICM_Alert1_act_OCHO_succ_end}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_star_1010D_end}    ${LI_UPADTE_STARTED}    ${LI_UPDATE_SUCCESS}    ${LI_NAME}   ${HICM_Alert1_stg_star_2_end}   ${LI_STAGING_STARTED}     ${li}    ${LI_STAGING_SUCCESS}    ${LI_ACTIVATION_STARTED}    ${LI_ACTIVATION_SUCCESS}   

    Fusion Api Logout Appliance

TC26 Verify the FW Update operation (Stage + Activate) from scexes to RPM firmware version using Odd/Even mode without force flag (upgrade)
    Log To Console   "###############Staging + activation of firmware update of  all vc  Modules when IC state are configured ############"
    [Documentation]    "RPM support FW update via LI: Verify the FW Update operation (Stage + Activate) from scexes to RPM firmware version using Odd/Even mode without force flag (upgrade)"
    Log to Console    "F1541_API_TC20 -->  Verify the FW Update operation (Stage + Activate) from scexes to RPM firmware version using Odd/Even mode without force flag (upgrade)"
    Log To Console    ****Validation of  the interconnect states before  FW update triggers **********


	Fusion Api Login Appliance      ${APPLIANCE_IP}       ${admin_credentials}
#	${del_resp}=    fusion_api_delete_alert    /rest/alerts
   #####Validation of IC state of Interconnects 
    Log to Console   Validation of IC state of Interconnects 
    IC_STATE_VALIDATION_AFTER_FIRMWARE_UPDATE
    
	${li}=    Get Li Name
	${li_uri} =     Get LI URI   ${li}

	${resp1} =    fusion_api_li_upgrade_firmware      body=${LI_UPGRADE_UPDATE_ODDEVEN_SCEXE_RPM}     uri=${li_uri}


	${task} =	    Wait For Task       ${resp1}     ${UPDATE_ODDEVEN_TIME}     1s
	Log to Console      ${task}
	
	${valDict} =    Create Dictionary    status_code=${200}
	...                                 taskState=Completed
	
	Validate Response    ${task}    ${valDict}	
	Log to Console         \nUpdate Firmware  completed
	Sleep        1 minutes 1 seconds

	#####Validation of oneview firmware version with icms
	Log to Console    Validation of oneview firmware version with icms
    FIRMWARE_VERSION_VALIDATION_WITH_ICMS_AND_ONEVIEW
    
    #####Validation of IC state of Interconnects 
    Log to Console   Validation of IC state of Interconnects 
    IC_STATE_VALIDATION_AFTER_FIRMWARE_UPDATE

   ######## Validation of ALERT messages on interconnects and LIs page #########################
   # Upgrade for Update(stage and Activation)
   Log to Console     Validation of ALERT messages on interconnects and LIs page
   ALERTS_VALIDATION_FOR_UPDATE_UPGARDE    ${LI_FC_INTERCONNECTS}    ${LI_OCHO_VC_INTERCONNECTS}   ${LI_SUPERSHAW_INTERCONNECTS}    ${LI_1010D_VC_INTERCONNECTS}   ${HICM_Alert1_stg_str_end}     ${HICM_Alert1_stg_star_1010D_end}    ${HICM_Alert1_stg_succ_end}   ${HICM_Alert1_act_OCHO_succ_end}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star}    ${HICM_Alert1_stg_star_1010D_end}    ${LI_UPADTE_STARTED}    ${LI_UPDATE_SUCCESS}    ${LI_NAME}   ${HICM_Alert1_stg_star_2_end}   ${LI_STAGING_STARTED}     ${li}    ${LI_STAGING_SUCCESS}    ${LI_ACTIVATION_STARTED}    ${LI_ACTIVATION_SUCCESS}   

    Fusion Api Logout Appliance   

TC27 Verify the FW Update operation (Stage + Activate) from RPM to RPM firmware version using parallel mode without force flag (Upgrade)
    Log To Console   "###############Staging + activation of firmware update of  all vc  Modules when IC state are configured ############"
    [Documentation]    "RPM support FW update via LI: Verify the FW Update operation (Stage + Activate) from RPM to RPM firmware version using parallel mode without force flag (Upgrade)"
    Log to Console    "F1541_API_TC22 -->  Verify the FW Update operation (Stage + Activate) from RPM to RPM firmware version using parallel mode without force flag (Upgrade)"
    Log To Console    ****Validation of  the interconnect states before  FW update triggers **********    

	Fusion Api Login Appliance      ${APPLIANCE_IP}       ${admin_credentials}
#	${del_resp}=    fusion_api_delete_alert    /rest/alerts
   #####Validation of IC state of Interconnects 
    Log to Console   Validation of IC state of Interconnects 
    IC_STATE_VALIDATION_AFTER_FIRMWARE_UPDATE
    
	${li}=    Get Li Name
	${li_uri} =     Get LI URI   ${li}

	${resp1} =    fusion_api_li_upgrade_firmware      body=${LI_UPGRADE_UPDATE_PARALLEL_SCEXE_RPM}     uri=${li_uri}


	${task} =	    Wait For Task       ${resp1}     ${UPDATE_PARALLEL_TIME}     1s
	Log to Console      ${task}
	
	${valDict} =    Create Dictionary    status_code=${200}
	...                                 taskState=Completed
	
	Validate Response    ${task}    ${valDict}	
	Log to Console         \nUpdate Firmware  completed
	Sleep        1 minutes 1 seconds


	${resp1} =    fusion_api_li_upgrade_firmware      body=${LI_UPGRADE_UPDATE_PARALLEL_SCEXE_RPM}     uri=${li_uri}


	${task} =	    Wait For Task       ${resp1}     85 min     1s
	Log to Console      ${task}
	
	${valDict} =    Create Dictionary    status_code=${200}
	...                                 taskState=Completed
	
	Validate Response    ${task}    ${valDict}	
	Log to Console         \nUpdate Firmware  completed
	Sleep        1 minutes 1 seconds

	#####Validation of oneview firmware version with icms
	Log to Console    Validation of oneview firmware version with icms
    FIRMWARE_VERSION_VALIDATION_WITH_ICMS_AND_ONEVIEW
    
    #####Validation of IC state of Interconnects 
    Log to Console   Validation of IC state of Interconnects 
    IC_STATE_VALIDATION_AFTER_FIRMWARE_UPDATE

   ######## Validation of ALERT messages on interconnects and LIs page #########################
   # Upgrade for Update(stage and Activation)
   Log to Console     Validation of ALERT messages on interconnects and LIs page
   ALERTS_VALIDATION_FOR_UPDATE_UPGARDE    ${LI_FC_INTERCONNECTS}    ${LI_OCHO_VC_INTERCONNECTS}   ${LI_SUPERSHAW_INTERCONNECTS}    ${LI_1010D_VC_INTERCONNECTS}   ${HICM_Alert1_stg_str_end}     ${HICM_Alert1_stg_star_1010D_end}    ${HICM_Alert1_stg_succ_end}   ${HICM_Alert1_act_OCHO_succ_end}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star}    ${HICM_Alert1_stg_star_1010D_end}    ${LI_UPADTE_STARTED}    ${LI_UPDATE_SUCCESS}    ${LI_NAME}   ${HICM_Alert1_stg_star_2_end}   ${LI_STAGING_STARTED}     ${li}    ${LI_STAGING_SUCCESS}    ${LI_ACTIVATION_STARTED}    ${LI_ACTIVATION_SUCCESS}   

    Fusion Api Logout Appliance  

TC28 Verify the FW update by Performing staging of RPM type, then perform staging of Scexe type Then do activation and ensure that Scexe type gets activated
    Log To Console      "###############Staging and activation of firmware update of vc Modules when IC state are configured ############"
    [Documentation]      "RPM support FW update via LI: Verify the FW update by Performing staging of RPM type, then perform staging of Scexe type Then do activation and ensure that Scexe type gets activated"
    Log to Console      "F1541_API_TC28 -->  Verify the FW update by Performing staging of RPM type, then perform staging of Scexe type Then do activation and ensure that Scexe type gets activated
    Log To Console      ****Validation of  the interconnect states before  FW update triggers **********


	Fusion Api Login Appliance      ${APPLIANCE_IP}       ${admin_credentials}
	${del_resp}=    fusion_api_delete_alert    /rest/alerts
   #####Validation of IC state of Interconnects 
    Log to Console   Validation of IC state of Interconnects 
    IC_STATE_VALIDATION_AFTER_FIRMWARE_UPDATE
    
	${li}=    Get Li Name
	${li_uri} =     Get LI URI   ${li}	

	${resp1} =    fusion_api_li_upgrade_firmware      body=${LI_DOWNGRADE_STAGEING_PARALLEL_RPM}     uri=${li_uri}


	${task} =	    Wait For Task 	${resp1} 	${STAGING_TIME}		1s
	Log to Console      ${task}
	
	${valDict} =    Create Dictionary    status_code=${200}
	...                                 taskState=Completed
	
	Validate Response    ${task}    ${valDict}	
	Log to Console         \nStaging Firmware  completed
	Sleep        1 minutes 1 seconds

	#### STAGING WITH SCEXE firmware version ########
	${resp1} =    fusion_api_li_upgrade_firmware      body=${LI_DOWNGRADE_STAGEING_PARALLEL_RPM_SCEXES}     uri=${li_uri}

	${task} =	    Wait For Task         ${resp1}      ${STAGING_TIME}      1s
	Log to Console      ${task}
	
	${valDict} =    Create Dictionary    status_code=${200}
	...                                 taskState=Completed
	
	Validate Response    ${task}    ${valDict}	
	Log to Console         \nStaging Firmware  completed
	Sleep        1 minutes 1 seconds


	# ACTIVATION of ALREADY STAGED RPM FIRMWARE VERSION #########
	${resp1} =       fusion_api_li_upgrade_firmware      body=${LI_DOWNGRADE_ACTIVATION_PARALLEL_RPM_SCEXES}     uri=${li_uri}
	${task} =	    Wait For Task        ${resp1}       ${ACTIVATE_PARALLEL_TIME}    1s
	Log to Console      ${task}
	
	${valDict} =    Create Dictionary    status_code=${200}
	...                                 taskState=Completed
	
	Validate Response    ${task}    ${valDict}	
	Log to Console       \nACTIVATE Firmware  completed
	Sleep      1 minutes 1 seconds
	

	#####Validation of oneview firmware version with icms
	Log to Console    Validation of oneview firmware version with icms
    FIRMWARE_VERSION_VALIDATION_WITH_ICMS_AND_ONEVIEW
    
    #####Validation of IC state of Interconnects 
    Log to Console   Validation of IC state of Interconnects 
    IC_STATE_VALIDATION_AFTER_FIRMWARE_UPDATE

   ######## Validation of ALERT messages on interconnects and LIs page #########################
   Log to Console    Validation of ALERT messages on interconnects and LIs page
   ALERTS_VALIDATION_FOR_STAGING_ACTIVATION_DOWNGARDE    ${LI_FC_INTERCONNECTS}    ${LI_OCHO_VC_INTERCONNECTS}   ${LI_SUPERSHAW_INTERCONNECTS}    ${LI_1010D_VC_INTERCONNECTS}   ${ICM_Alert1_stg_str_end}     ${ICM_Alert1_stg_star_1010D_end}    ${ICM_Alert1_stg_succ_end}   ${ICM_Alert1_act_OCHO_succ_end}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_star_1010D_end}    ${LI_UPADTE_STARTED}    ${LI_UPDATE_SUCCESS}    ${LI_NAME}   ${HICM_Alert1_stg_star_2_end}   ${LI_STAGING_STARTED}     ${li}    ${LI_STAGING_SUCCESS}    ${LI_ACTIVATION_STARTED}    ${LI_ACTIVATION_SUCCESS}   

    Fusion Api Logout Appliance
    

TC29 Verify FW by Performing staging of Scexe type, then perform staging of RPM type. then do activation and ensure that RPM type gets activated
    Log To Console      "###############Staging and activation of firmware update of vc Modules when IC state are configured ############"
    [Documentation]      "RPM support FW update via LI: Verify FW by Performing staging of Scexe type, then perform staging of RPM type. then do activation and ensure that RPM type gets activated"
    Log to Console      "F1541_API_TC29 -->  Verify FW by Performing staging of Scexe type, then perform staging of RPM type. then do activation and ensure that RPM type gets activated
    Log To Console      ****Validation of  the interconnect states before  FW update triggers **********


	Fusion Api Login Appliance      ${APPLIANCE_IP}       ${admin_credentials}
	${del_resp}=    fusion_api_delete_alert    /rest/alerts
   #####Validation of IC state of Interconnects 
    Log to Console   Validation of IC state of Interconnects 
    IC_STATE_VALIDATION_AFTER_FIRMWARE_UPDATE
    
	${li}=    Get Li Name
	${li_uri} =     Get LI URI   ${li}	

	${resp1} =    fusion_api_li_upgrade_firmware      body=${LI_DOWNGRADE_STAGEING_PARALLEL_RPM_SCEXES}     uri=${li_uri}


	${task} =	    Wait For Task 	${resp1} 	${STAGING_TIME}		1s
	Log to Console      ${task}
	
	${valDict} =    Create Dictionary    status_code=${200}
	...                                 taskState=Completed
	
	Validate Response    ${task}    ${valDict}	
	Log to Console         \nStaging Firmware  completed
	Sleep        1 minutes 1 seconds

	#### STAGING WITH SCEXE firmware version ########  
	${resp1} =    fusion_api_li_upgrade_firmware      body=${LI_DOWNGRADE_STAGEING_PARALLEL_RPM}     uri=${li_uri}

	${task} =	    Wait For Task 	${resp1} 	${STAGING_TIME}		1s
	Log to Console      ${task}
	
	${valDict} =    Create Dictionary    status_code=${200}
	...                                 taskState=Completed
	
	Validate Response    ${task}    ${valDict}	
	Log to Console         \nStaging Firmware  completed
	Sleep        1 minutes 1 seconds


	# ACTIVATION of ALREADY STAGED RPM FIRMWARE VERSION #########
	${resp1} =       fusion_api_li_upgrade_firmware      body=${LI_DOWNGRADE_ACTIVATION_PARALLEL_RPM}     uri=${li_uri}
	${task} =	    Wait For Task        ${resp1}       ${ACTIVATE_PARALLEL_TIME}		1s
	Log to Console      ${task}
	
	${valDict} =    Create Dictionary    status_code=${200}
	...                                 taskState=Completed
	
	Validate Response    ${task}    ${valDict}	
	Log to Console       \nActivate Firmware  completed
	Sleep      1 minutes 1 seconds
	

	#####Validation of oneview firmware version with icms
	Log to Console    Validation of oneview firmware version with icms
    FIRMWARE_VERSION_VALIDATION_WITH_ICMS_AND_ONEVIEW
    
    #####Validation of IC state of Interconnects 
    Log to Console   Validation of IC state of Interconnects 
    IC_STATE_VALIDATION_AFTER_FIRMWARE_UPDATE

   ######## Validation of ALERT messages on interconnects and LIs page #########################
   Log to Console    Validation of ALERT messages on interconnects and LIs page
   ALERTS_VALIDATION_FOR_STAGING_ACTIVATION_DOWNGARDE    ${LI_FC_INTERCONNECTS}    ${LI_OCHO_VC_INTERCONNECTS}   ${LI_SUPERSHAW_INTERCONNECTS}    ${LI_1010D_VC_INTERCONNECTS}   ${ICM_Alert1_stg_str_end}     ${ICM_Alert1_stg_star_1010D_end}    ${ICM_Alert1_stg_succ_end}   ${ICM_Alert1_act_OCHO_succ_end}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_star_1010D_end}    ${LI_UPADTE_STARTED}    ${LI_UPDATE_SUCCESS}    ${LI_NAME}   ${HICM_Alert1_stg_star_2_end}   ${LI_STAGING_STARTED}     ${li}    ${LI_STAGING_SUCCESS}    ${LI_ACTIVATION_STARTED}    ${LI_ACTIVATION_SUCCESS}   
	# Upgrade for stage and Activation 
   Log to Console     Validation of ALERT messages on interconnects and LIs page
   ALERTS_VALIDATION_FOR_STAGING_ACTIVATION_UPGARDE    ${LI_FC_INTERCONNECTS}    ${LI_OCHO_VC_INTERCONNECTS}   ${LI_SUPERSHAW_INTERCONNECTS}    ${LI_1010D_VC_INTERCONNECTS}   ${HICM_Alert1_stg_str_end}     ${HICM_Alert1_stg_star_1010D_end}    ${HICM_Alert1_stg_succ_end}   ${HICM_Alert1_act_OCHO_succ_end}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star}    ${HICM_Alert1_stg_star_1010D_end}    ${LI_UPADTE_STARTED}    ${LI_UPDATE_SUCCESS}    ${LI_NAME}   ${HICM_Alert1_stg_star_2_end}   ${LI_STAGING_STARTED}     ${li}    ${LI_STAGING_SUCCESS}    ${LI_ACTIVATION_STARTED}    ${LI_ACTIVATION_SUCCESS}   

    Fusion Api Logout Appliance

    
TC30 Verify the LI FW Update operation (Stage + Activate) from scexes to SCXERPM firmware version using parallel mode with force flag (downgrade)
    Log To Console      "###############Staging and activation of firmware update of vc Modules when IC state are configured ############"
    [Documentation]      "RPM support FW update via LI: Verify the FW Update operation (Stage + Activate) from RPM to scexes firmware version using Odd/Even mode with force flag (downgrade)"
    Log to Console      "F1541_API_TC50-->  Verify the FW Update operation (Stage + Activate) from RPM to scexes firmware version using Odd/Even mode with force flag (downgrade)
    Log To Console      ****Validation of  the interconnect states before  FW update triggers **********
    
	Fusion Api Login Appliance      ${APPLIANCE_IP}       ${admin_credentials}
	${del_resp}=    fusion_api_delete_alert    /rest/alerts
   #####Validation of IC state of Interconnects 
    Log to Console   Validation of IC state of Interconnects 
    IC_STATE_VALIDATION_AFTER_FIRMWARE_UPDATE
    
	${li}=    Get Li Name
	${li_uri} =     Get LI URI   ${li}

	${resp1} =    fusion_api_li_upgrade_firmware      body=${LI_DOWNGRADE_UPDATE_PARALLEL_SCEXE_SCEXERPM}     uri=${li_uri}


	${task} =	    Wait For Task       ${resp1}     ${UPDATE_PARALLEL_TIME}     1s
	Log to Console      ${task}
	
	${valDict} =    Create Dictionary    status_code=${200}
	...                                 taskState=Completed
	
	Validate Response    ${task}    ${valDict}	
	Log to Console         \nUpdate Firmware  completed
	Sleep        1 minutes 1 seconds

	#####Validation of oneview firmware version with icms
	Log to Console    Validation of oneview firmware version with icms
    FIRMWARE_VERSION_VALIDATION_WITH_ICMS_AND_ONEVIEW
    
    #####Validation of IC state of Interconnects 
    Log to Console   Validation of IC state of Interconnects 
    IC_STATE_VALIDATION_AFTER_FIRMWARE_UPDATE

   ######## Validation of ALERT messages on interconnects and LIs page #########################
   Log to Console    Validation of ALERT messages on interconnects and LIs page
   # Downgrade for Update(stage and Activation)
   ALERTS_VALIDATION_FOR_UPDATE_DOWNGARDE    ${LI_FC_INTERCONNECTS}    ${LI_OCHO_VC_INTERCONNECTS}   ${LI_SUPERSHAW_INTERCONNECTS}    ${LI_1010D_VC_INTERCONNECTS}   ${ICM_Alert1_stg_str_end}     ${ICM_Alert1_stg_star_1010D_end}    ${ICM_Alert1_stg_succ_end}   ${ICM_Alert1_act_OCHO_succ_end}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_star_1010D_end}    ${LI_UPADTE_STARTED}    ${LI_UPDATE_SUCCESS}    ${LI_NAME}   ${HICM_Alert1_stg_star_2_end}   ${LI_STAGING_STARTED}     ${li}    ${LI_STAGING_SUCCESS}    ${LI_ACTIVATION_STARTED}    ${LI_ACTIVATION_SUCCESS}   

    Fusion Api Logout Appliance

TC31 Verify the LI FW Update operation (Stage + Activate) from RPM to SCXERPM firmware version using serial mode without force flag (upgrade)
    Log To Console      "###############Staging and activation of firmware update of vc Modules when IC state are configured ############"
    [Documentation]      "RPM support FW update via LI: Verify the LI FW Update operation (Stage + Activate) from RPM to SCXERPM firmware version using serial mode without force flag (upgrade)"
    Log to Console      "F1541_API_TC51--> Verify the LI FW Update operation (Stage + Activate) from RPM to SCXERPM firmware version using serial mode without force flag (upgrade)
    Log To Console      ****Validation of  the interconnect states before  FW update triggers **********


	Fusion Api Login Appliance      ${APPLIANCE_IP}       ${admin_credentials}
#	${del_resp}=    fusion_api_delete_alert    /rest/alerts
   #####Validation of IC state of Interconnects 
    Log to Console   Validation of IC state of Interconnects 
    IC_STATE_VALIDATION_AFTER_FIRMWARE_UPDATE
    
	${li}=    Get Li Name
	${li_uri} =     Get LI URI   ${li}

	${resp1} =    fusion_api_li_upgrade_firmware      body=${LI_UPGRADE_UPDATE_SERIAL_RPM_SCEXERPM}     uri=${li_uri}


	${task} =	    Wait For Task       ${resp1}     ${UPDATE_SERIAL_TIME}     1s
	Log to Console      ${task}
	
	${valDict} =    Create Dictionary    status_code=${200}
	...                                 taskState=Completed
	
	Validate Response    ${task}    ${valDict}	
	Log to Console         \nUpdate Firmware  completed
	Sleep        1 minutes 1 seconds

	

	#####Validation of oneview firmware version with icms
	Log to Console    Validation of oneview firmware version with icms
    FIRMWARE_VERSION_VALIDATION_WITH_ICMS_AND_ONEVIEW
    
    #####Validation of IC state of Interconnects 
    Log to Console   Validation of IC state of Interconnects 
    IC_STATE_VALIDATION_AFTER_FIRMWARE_UPDATE

   ######## Validation of ALERT messages on interconnects and LIs page #########################
   # Upgrade for Update(stage and Activation)
   Log to Console     Validation of ALERT messages on interconnects and LIs page
   ALERTS_VALIDATION_FOR_UPDATE_UPGARDE    ${LI_FC_INTERCONNECTS}    ${LI_OCHO_VC_INTERCONNECTS}   ${LI_SUPERSHAW_INTERCONNECTS}    ${LI_1010D_VC_INTERCONNECTS}   ${HICM_Alert1_stg_str_end}     ${HICM_Alert1_stg_star_1010D_end}    ${HICM_Alert1_stg_succ_end}   ${HICM_Alert1_act_OCHO_succ_end}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star}    ${HICM_Alert1_stg_star_1010D_end}    ${LI_UPADTE_STARTED}    ${LI_UPDATE_SUCCESS}    ${LI_NAME}   ${HICM_Alert1_stg_star_2_end}   ${LI_STAGING_STARTED}     ${li}    ${LI_STAGING_SUCCESS}    ${LI_ACTIVATION_STARTED}    ${LI_ACTIVATION_SUCCESS}   

    Fusion Api Logout Appliance
    
TC32 Verify the LI FW Update operation (Stage + Activate) from RPM to SCXERPM firmware version using Odd/Even mode without force flag (same version)
    Log To Console      "###############Staging and activation of firmware update of vc Modules when IC state are configured ############"
    [Documentation]      "RPM support FW update via LI: Verify the LI FW Update operation (Stage + Activate) from RPM to SCXERPM firmware version using Odd/Even mode without force flag (same version)"
    Log to Console      "F1541_API_TC52--> Verify the LI FW Update operation (Stage + Activate) from RPM to SCXERPM firmware version using Odd/Even mode without force flag (same version)
    Log To Console      ****Validation of  the interconnect states before  FW update triggers **********
    


	Fusion Api Login Appliance      ${APPLIANCE_IP}       ${admin_credentials}
#	${del_resp}=    fusion_api_delete_alert    /rest/alerts
   #####Validation of IC state of Interconnects 
    Log to Console   Validation of IC state of Interconnects 
    IC_STATE_VALIDATION_AFTER_FIRMWARE_UPDATE
    
	${li}=    Get Li Name
	${li_uri} =     Get LI URI   ${li}

	${resp1} =    fusion_api_li_upgrade_firmware      body=${LI_UPGRADE_UPDATE_ODDEVEN_SAMEVERSION_RPM_SCEXERPM}     uri=${li_uri}


	${task} =	    Wait For Task       ${resp1}     ${UPDATE_ODDEVEN_TIME}     1s
	Log to Console      ${task}
	
	${valDict} =    Create Dictionary    status_code=${200}
	...                                 taskState=Completed
	
	Validate Response    ${task}    ${valDict}	
	Log to Console         \nUpdate Firmware  completed
	Sleep        1 minutes 1 seconds


	#####Validation of oneview firmware version with icms
	Log to Console    Validation of oneview firmware version with icms
    FIRMWARE_VERSION_VALIDATION_WITH_ICMS_AND_ONEVIEW
    
    #####Validation of IC state of Interconnects 
    Log to Console   Validation of IC state of Interconnects 
    IC_STATE_VALIDATION_AFTER_FIRMWARE_UPDATE

   ######## Validation of ALERT messages on interconnects and LIs page #########################
   # Upgrade for Update(stage and Activation)
   Log to Console     Validation of ALERT messages on interconnects and LIs page
   ALERTS_VALIDATION_FOR_UPDATE_UPGARDE    ${LI_FC_INTERCONNECTS}    ${LI_OCHO_VC_INTERCONNECTS}   ${LI_SUPERSHAW_INTERCONNECTS}    ${LI_1010D_VC_INTERCONNECTS}   ${HICM_Alert1_stg_str_end}     ${HICM_Alert1_stg_star_1010D_end}    ${HICM_Alert1_stg_succ_end}   ${HICM_Alert1_act_OCHO_succ_end}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star}    ${HICM_Alert1_stg_star_1010D_end}    ${LI_UPADTE_STARTED}    ${LI_UPDATE_SUCCESS}    ${LI_NAME}   ${HICM_Alert1_stg_star_2_end}   ${LI_STAGING_STARTED}     ${li}    ${LI_STAGING_SUCCESS}    ${LI_ACTIVATION_STARTED}    ${LI_ACTIVATION_SUCCESS}   

    Fusion Api Logout Appliance
 
 *** Keywords ***

FIRMWARE_VERSION_VALIDATION_WITH_ICMS_AND_ONEVIEW
#    [Arguments]    ${LI_ALL_VC_INTERCONNECTS}
	######## Validation of  firmware versions #######################
	${resp} =   fusion api get interconnect
    ${ics} =     Get From Dictionary     ${resp}    members
    ${l} =      Get Length  ${ics}
    ${icm_list} =    Create List
    :FOR  ${x}  IN RANGE    0     ${l}
    \    ${ic} =     Get From List   ${ics}    ${x}
     \    ${ic_name} =     Get from IC    ${ic}    name
    \    ${ic_bay_number} =    Split String   ${ic_name}   ","
	\    ${ic_bay_number} =     Get From List    ${ic_bay_number}    0
	\    ${ic_bay_number} =     Get From List    ${ic_bay_number}    25
	\    ${firmwareVersion} =     Get From IC    ${ic}   firmwareVersion
	\    ${firmwareVersion_upgrade} =      verify_c7k_ic_version    ${ic_bay_number}    ${IP}
	\    ${version}=    Should Contain    ${firmwareVersion}    ${firmwareVersion_upgrade}
    \    Should Be Equal As Strings    ${firmwareVersion}     ${firmwareVersion_upgrade}
	\    Log to Console    Validated the firmvare version 
	\    Log to Console    ${ic_name}
	\    ${icstate} =     Get From IC    ${ic}   state
	\    Should Be Equal As Strings    ${icstate}    Configured
	\    Log to Console    Validated the ICstate for 
	\    Log to Console    ${ic_name}
		

IC_STATE_VALIDATION_AFTER_FIRMWARE_UPDATE
#    [Arguments]     ${LI_ALL_VC_INTERCONNECTS}

	${resp} =   fusion api get interconnect
#    Log To Console          ${resp}
    ${ics} =     Get From Dictionary     ${resp}    members
    ${l} =      Get Length    ${ics}
    ${icm_list} =    Create List
    :FOR  ${x}  IN RANGE    0     ${l}
    \    ${ic} =     Get From List   ${ics}    ${x}
     \    ${ic_name} =     Get from IC    ${ic}    name

	\    ${ic} =     Get IC        ${ic_name}
	\    ${icstate} =     Get From IC    ${ic}   state
	\    Should Be Equal As Strings    ${icstate}     Configured
	\    Log to Console    Validated the Interconnect state of ${ic_name}
	\    Log to Console    and its state is ${icstate}



ALERTS_VALIDATION_FOR_STAGING_ACTIVATION_UPGARDE
    [Arguments]        ${LI_FC_INTERCONNECTS}    ${LI_OCHO_VC_INTERCONNECTS}   ${LI_SUPERSHAW_INTERCONNECTS}    ${LI_1010D_VC_INTERCONNECTS}   ${HICM_Alert1_stg_str_end}     ${HICM_Alert1_stg_star_1010D_end}    ${HICM_Alert1_stg_succ_end}   ${HICM_Alert1_act_OCHO_succ_end}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star}    ${HICM_Alert1_stg_star_1010D_end}    ${LI_UPADTE_STARTED}    ${LI_UPDATE_SUCCESS}    ${LI_NAME}   ${HICM_Alert1_stg_star_2_end}   ${LI_STAGING_STARTED}     ${LI_NAME}    ${LI_STAGING_SUCCESS}    ${LI_ACTIVATION_STARTED}    ${LI_ACTIVATION_SUCCESS}

    ${alerts} =    fusion_api_get_alerts    /rest/alerts
	${LI_NAME}=    Get Li Name
    : FOR    ${BICM_NAME}    IN    @{LI_FC_INTERCONNECTS}

    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${HICM_Alert1_stg_str_end}
    \    Log to Console    ${Al_stg_str}

    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${HICM_Alert1_stg_succ_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${HICM_Alert1_act_star_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${HICM_Alert1_act_succ_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen



#    : FOR    ${BICM_NAME}    IN    @{LI_OCHO_VC_INTERCONNECTS}
#    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${HICM_Alert1_act_OCHO_succ_end}
#    \    Log to Console    ${Al_stg_str}

#    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


#    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${HICM_Alert1_act_OCHO_succ_end}
#    \    Log to Console    ${Al_stg_suc}
#    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


#    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${HICM_Alert1_act_OCHO_succ_end}
#    \    Log to Console    ${Al_act_str}
#    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

#    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${HICM_Alert1_act_OCHO_succ_end}
#    \    Log to Console    ${Al_act_succ}
#    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen



    : FOR    ${BICM_NAME}    IN    @{LI_1010D_VC_INTERCONNECTS}

    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${HICM_Alert1_stg_star_1010D_end}
    \    Log to Console    ${Al_stg_str}

    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${HICM_Alert1_stg_star_1010D_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${HICM_Alert1_stg_star_1010D_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${HICM_Alert1_stg_star_1010D_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen


    : FOR    ${BICM_NAME}    IN    @{LI_SUPERSHAW_INTERCONNECTS}

    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${HICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_stg_str}

    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${HICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${HICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${HICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen

    ###### Validates the firmware alert messages on Logical Interconnects ##########
	
	${STAGING_STARTED}      Catenate      ${LI_STAGING_STARTED}     ${LI_NAME}
	Log to Console     ${STAGING_STARTED}
	Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${STAGING_STARTED}    Expected Error Message Not seen	

	${STAGING_SUCCESS}      Catenate      ${LI_STAGING_SUCCESS}     ${LI_NAME}
	Log to Console     ${STAGING_SUCCESS}
	Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${STAGING_SUCCESS}    Expected Error Message Not seen

	${ACTIVATION_STARTED}      Catenate      ${LI_ACTIVATION_STARTED}     ${LI_NAME}
	Log to Console     ${ACTIVATION_STARTED}
	Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${ACTIVATION_STARTED}    Expected Error Message Not seen
	
	${ACTIVATION_SUCCESS}      Catenate      ${LI_ACTIVATION_SUCCESS}     ${LI_NAME}
	Log to Console     ${ACTIVATION_SUCCESS}
	Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${ACTIVATION_SUCCESS}    Expected Error Message Not seen

ALERTS_VALIDATION_FOR_UPDATE_UPGARDE
    [Arguments]        ${LI_FC_INTERCONNECTS}    ${LI_OCHO_VC_INTERCONNECTS}   ${LI_SUPERSHAW_INTERCONNECTS}    ${LI_1010D_VC_INTERCONNECTS}   ${HICM_Alert1_stg_str_end}     ${HICM_Alert1_stg_star_1010D_end}    ${HICM_Alert1_stg_succ_end}   ${HICM_Alert1_act_OCHO_succ_end}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star}    ${HICM_Alert1_stg_star_1010D_end}    ${LI_UPADTE_STARTED}    ${LI_UPDATE_SUCCESS}    ${LI_NAME}   ${HICM_Alert1_stg_star_2_end}   ${LI_STAGING_STARTED}     ${LI_NAME}    ${LI_STAGING_SUCCESS}    ${LI_ACTIVATION_STARTED}    ${LI_ACTIVATION_SUCCESS}

    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    ${LI_NAME}=    Get Li Name
    : FOR    ${BICM_NAME}    IN    @{LI_FC_INTERCONNECTS}

    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${HICM_Alert1_stg_str_end}
    \    Log to Console    ${Al_stg_str}

    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${HICM_Alert1_stg_succ_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${HICM_Alert1_act_star_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${HICM_Alert1_act_succ_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen



#    : FOR    ${BICM_NAME}    IN    @{LI_OCHO_VC_INTERCONNECTS}
#    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${HICM_Alert1_act_OCHO_succ_end}
#    \    Log to Console    ${Al_stg_str}

#    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


#    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${HICM_Alert1_act_OCHO_succ_end}
#    \    Log to Console    ${Al_stg_suc}
#    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


#    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${HICM_Alert1_act_OCHO_succ_end}
#    \    Log to Console    ${Al_act_str}
#    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

#    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${HICM_Alert1_act_OCHO_succ_end}
#    \    Log to Console    ${Al_act_succ}
#    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen



    : FOR    ${BICM_NAME}    IN    @{LI_1010D_VC_INTERCONNECTS}

    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${HICM_Alert1_stg_star_1010D_end}
    \    Log to Console    ${Al_stg_str}

    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${HICM_Alert1_stg_star_1010D_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${HICM_Alert1_stg_star_1010D_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${HICM_Alert1_stg_star_1010D_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen


    : FOR    ${BICM_NAME}    IN    @{LI_SUPERSHAW_INTERCONNECTS}

    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${HICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_stg_str}

    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${HICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${HICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${HICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen

    ###### Validates the firmware alert messages on Logical Interconnects ##########

	${alerts} =    fusion_api_get_alerts    /rest/alerts
    ${UPDATE_STARTED}      Catenate      ${LI_UPADTE_STARTED}     ${LI_NAME}
    Log to Console     ${UPDATE_STARTED}
    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${UPDATE_STARTED}  Expected Error Message Not seen
	
    ${UPDATE_SUCCESS}      Catenate      ${LI_UPDATE_SUCCESS}     ${LI_NAME}
    Log to Console     ${UPDATE_SUCCESS}
    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${UPDATE_SUCCESS}    Expected Error Message Not seen
	
	
	
ALERTS_VALIDATION_FOR_STAGING_ACTIVATION_DOWNGARDE
    [Arguments]        ${LI_FC_INTERCONNECTS}    ${LI_OCHO_VC_INTERCONNECTS}   ${LI_SUPERSHAW_INTERCONNECTS}    ${LI_1010D_VC_INTERCONNECTS}   ${ICM_Alert1_stg_str_end}     ${ICM_Alert1_stg_star_1010D_end}    ${ICM_Alert1_stg_succ_end}   ${ICM_Alert1_act_OCHO_succ_end}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_star_1010D_end}    ${LI_UPADTE_STARTED}    ${LI_UPDATE_SUCCESS}    ${LI_NAME}   ${ICM_Alert1_stg_star_2_end}   ${LI_STAGING_STARTED}     ${LI_NAME}    ${LI_STAGING_SUCCESS}    ${LI_ACTIVATION_STARTED}    ${LI_ACTIVATION_SUCCESS}

    ${alerts} =    fusion_api_get_alerts    /rest/alerts
	${LI_NAME}=    Get Li Name
    : FOR    ${BICM_NAME}    IN    @{LI_FC_INTERCONNECTS}

    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_str_end}
    \    Log to Console    ${Al_stg_str}

    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_succ_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${ICM_Alert1_act_star_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${ICM_Alert1_act_succ_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen



    : FOR    ${BICM_NAME}    IN    @{LI_OCHO_VC_INTERCONNECTS}
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_act_OCHO_succ_end}
    \    Log to Console    ${Al_stg_str}

    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_act_OCHO_succ_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${ICM_Alert1_act_OCHO_succ_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${ICM_Alert1_act_OCHO_succ_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen



    : FOR    ${BICM_NAME}    IN    @{LI_1010D_VC_INTERCONNECTS}

    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_star_1010D_end}
    \    Log to Console    ${Al_stg_str}

    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star_1010D_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${ICM_Alert1_stg_star_1010D_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${ICM_Alert1_stg_star_1010D_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen


    : FOR    ${BICM_NAME}    IN    @{LI_SUPERSHAW_INTERCONNECTS}

    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_stg_str}

    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${ICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${ICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen

    ###### Validates the firmware alert messages on Logical Interconnects ##########
	
	${STAGING_STARTED}      Catenate      ${LI_STAGING_STARTED}     ${LI_NAME}
	Log to Console     ${STAGING_STARTED}
	Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${STAGING_STARTED}    Expected Error Message Not seen	

	${STAGING_SUCCESS}      Catenate      ${LI_STAGING_SUCCESS}     ${LI_NAME}
	Log to Console     ${STAGING_SUCCESS}
	Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${STAGING_SUCCESS}    Expected Error Message Not seen

	${ACTIVATION_STARTED}      Catenate      ${LI_ACTIVATION_STARTED}     ${LI_NAME}
	Log to Console     ${ACTIVATION_STARTED}
	Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${ACTIVATION_STARTED}    Expected Error Message Not seen
	
	${ACTIVATION_SUCCESS}      Catenate      ${LI_ACTIVATION_SUCCESS}     ${LI_NAME}
	Log to Console     ${ACTIVATION_SUCCESS}
	Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${ACTIVATION_SUCCESS}    Expected Error Message Not seen
	

ALERTS_VALIDATION_FOR_UPDATE_DOWNGARDE
    [Arguments]        ${LI_FC_INTERCONNECTS}    ${LI_OCHO_VC_INTERCONNECTS}   ${LI_SUPERSHAW_INTERCONNECTS}    ${LI_1010D_VC_INTERCONNECTS}   ${ICM_Alert1_stg_str_end}     ${ICM_Alert1_stg_star_1010D_end}    ${ICM_Alert1_stg_succ_end}   ${ICM_Alert1_act_OCHO_succ_end}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_star_1010D_end}    ${LI_UPADTE_STARTED}    ${LI_UPDATE_SUCCESS}    ${LI_NAME}   ${ICM_Alert1_stg_star_2_end}   ${LI_STAGING_STARTED}     ${LI_NAME}    ${LI_STAGING_SUCCESS}    ${LI_ACTIVATION_STARTED}    ${LI_ACTIVATION_SUCCESS}

    ${alerts} =    fusion_api_get_alerts    /rest/alerts
	${LI_NAME}=    Get Li Name
    : FOR    ${BICM_NAME}    IN    @{LI_FC_INTERCONNECTS}

    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_str_end}
    \    Log to Console    ${Al_stg_str}

    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_succ_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${ICM_Alert1_act_star_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${ICM_Alert1_act_succ_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen



    : FOR    ${BICM_NAME}    IN    @{LI_OCHO_VC_INTERCONNECTS}
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_act_OCHO_succ_end}
    \    Log to Console    ${Al_stg_str}

    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_act_OCHO_succ_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${ICM_Alert1_act_OCHO_succ_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${ICM_Alert1_act_OCHO_succ_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen



    : FOR    ${BICM_NAME}    IN    @{LI_1010D_VC_INTERCONNECTS}

    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_star_1010D_end}
    \    Log to Console    ${Al_stg_str}

    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star_1010D_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${ICM_Alert1_stg_star_1010D_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${ICM_Alert1_stg_star_1010D_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen


    : FOR    ${BICM_NAME}    IN    @{LI_SUPERSHAW_INTERCONNECTS}

    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_stg_str}

    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${ICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${ICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen

    ###### Validates the firmware alert messages on Logical Interconnects ##########

	${alerts} =    fusion_api_get_alerts    /rest/alerts
    ${UPDATE_STARTED}      Catenate      ${LI_UPADTE_STARTED}     ${LI_NAME}
    Log to Console     ${UPDATE_STARTED}
    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${UPDATE_STARTED}  Expected Error Message Not seen
	
    ${UPDATE_SUCCESS}      Catenate      ${LI_UPDATE_SUCCESS}     ${LI_NAME}
    Log to Console     ${UPDATE_SUCCESS}
    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${UPDATE_SUCCESS}    Expected Error Message Not seen
	
	


Fusion Api Get Activity Alerts
    [Documentation]    Fetch recent Fusion Activity Alerts
    ...    (Assumes a Fusion REST Api connection is open and logged in).
    ...    Returns a list of Alerts.
    [Arguments]    ${Starting_AlertID}=1        ${Resource_Filter}=.*
    ${Alert_List}    Create List
    # Get the entire list of Alerts
    ${Response}    Fusion Api Get Alerts    /rest/alerts?sort=created:ascending
    ${Count}    Get From Dictionary    ${Response}    count
    Return From Keyword If    '${Count}'=='0'    msg=No alert events found

    ${Members}    Get From Dictionary    ${Response}    members
    :FOR    ${Index}    IN RANGE    0    ${Count}
    \    ${Alert}    Get From List    ${Members}    ${Index}

    \    # Select only the most recent events - skip any before that
    \    ${uri}    Get From Dictionary    ${Alert}    uri
    \    ${id}     Fetch From Right    ${uri}    /
    \    Run Keyword If    ${Starting_AlertID}>=${id}    Continue For Loop

    \    # Remember the last Alert ID encountered
    \    Set Suite Variable    ${Last_AlertID}    ${id}

    \    # Filter out any unrelated alerts
    \    ${resourceID}    Get From Dictionary    ${Alert}    resourceUri
    \    ${alertState}    Get From Dictionary    ${Alert}    alertState
    \    ${Found}    Run Keyword And Return Status
    \    ...    Should Match Regexp    ${resourceID}    ${Resource_Filter}

    \    Run Keyword If    '${Found}'=='False'    Continue For Loop

    \    # Include this alert into the 'List of Activity Events'
    \    Append to List    ${Alert_List}    ${Alert}
    Should Not Be Empty    ${Alert_List}    No Activity Events Found
    Log to Console            ${Alert_List}
    [Return]    ${Alert_List}

Fusion Api Get Activity Alerts_new
    [Arguments]    ${Starting_AlertID}=1        ${Resource_Filter}=.*
    ${Alert_List}    Create List
    # Get the entire list of Alerts
    ${Response}    Fusion Api Get Alerts    /rest/alerts

    [Return]    ${Response}


Validate Activity
    [Arguments]    ${Alert_List}            ${Expected_Alerts}
    :FOR    ${Alert}    IN    @{Alert_List}
    \    ${uri}            Get From Dictionary      ${Alert}        uri
    \    ${alertState}     Get From Dictionary      ${Alert}        alertState
    \    ${alertTypeID}    Get From Dictionary      ${Alert}        alertTypeID
    \    ${description1}    Get From Dictionary     ${Alert}        description
    \    Log to Console       ${description1}
#    \    ${description2}    Get From Dictionary        ${Alert}        taskStatus
#   \    Run Keyword and Continue on Failure       Should Contain       '${Alert}'      ${description1}     Expected Error Message Not seen
    \    Run Keyword If     '${description1}' == '${Expected_Alerts}'       Exit For Loop
    \    ${description}    Get From Dictionary      ${Alert}        description
    \    ${uri}    Get From Dictionary      ${Alert}        uri

    \    Run Keyword     Should Not Contain Match    '${description}'       '${Expected_Alerts}'        Continue For Loop
    \    Log to console and logfile             Activity exists    '${description1}'
         [Return]    ${uri}
#        Log to Console            ${uri}

Open SSH to OA
    [Documentation]    Connect to Virtual Connect Interconnect via SSH
    #[Documentation]    Example:\n| Login to Fusion Via SSH | 10.0.12.106 | Administrator | hpvse123 |
    [Arguments]    ${IP}=${OA_CREDENTIAL_DATA['oaIpAddress']}   ${USERNAME}=${OA_CREDENTIAL_DATA['oaUsername']}    ${PASSWORD}=${OA_CREDENTIAL_DATA['oaPassword']}
    ...             ${PROMPT}=>    ${TIMEOUT}=${120}
    Log Many    ${IP}    ${USERNAME}    ${PASSWORD}    ${PROMPT}    ${TIMEOUT}
    Set Default Configuration    prompt=${PROMPT}    timeout=${TIMEOUT}
    ${Id}=    Open Connection      ${IP}
    ${Output}=    Login    ${USERNAME}    ${PASSWORD}
    ${stdout}    ${stderr}    ${rc}=    Execute Command    show interconnect info 4    return_stderr=True    return_rc=True
    ${OAVersion}=    Get Lines Containing String    ${stdout}   Firmware Ver.
     ${OAVersion}=      Fetch From Right      ${OAVersion}   :
    Log to console and logfile    \n Open SSH Connection to Onboard Administrator ${IP} ....
    Log to console and logfile    OA Firmware Ver: ${OAVersion}
    Set Suite Metadata     OA Firmware Version    ${OAVersion}
    [Return]    ${Id}  ${OAVersion}

ConnectOA_get_Firmversion
    Open Connection      ${IP}
    ${output} = Login    Administrator    Admin
    ${stdout}    ${stderr}    ${rc}=    Execute Command    show interconnect info 4    return_stderr=True    return_rc=True
    Log to Console            ${stdout}
    ${OAVersion}=    Get Lines Containing String    ${stdout}   Firmware Version:
    Log to Console                ${OAVersion}
    [Return]    ${OAVersion}

Get ICS URI_ACTIVEURI

	[Arguments]    ${ic}
	${resp} =    Fusion Api Get Interconnect    param=?filter="'name'=='${ic}'"
	${uri} =    Get From Dictionary    ${resp['members'][0]}    uri
	[Return]    ${uri}


Get IC URI_ACTIVE
	[Arguments]    ${ic}
	${resp} =    Fusion Api Get Interconnect    param=?filter="'name'=='${ic}'"
	${uri} =    Get From Dictionary    ${resp['members'][0]}    uri
	[Return]    ${uri}


Close SSH Connection
    [Documentation]    Exits the current SSH session
    Close Connection

Build LI SPP body

    [Arguments]     ${li_spp}
    ${liedit} =     Copy Dictionary      ${li_spp}
    ${command} =                       Get Variable Value  ${li_spp['command']}
    ${ethernetActivationDelay} =              Get Variable Value  ${li_spp['ethernetActivationDelay']}
    ${ethernetActivationType} =              Get Variable Value  ${li_spp['ethernetActivationType']}
    ${fcActivationDelay} =              Get Variable Value  ${li_spp['fcActivationDelay']}
    ${fcActivationType} =              Get Variable Value  ${li_spp['fcActivationType']}
    ${force} =              Get Variable Value  ${li_spp['force']}
    ${sppUri} =           Get Variable Value  ${li_spp['sppUri']}





#   ${body} =   Fusion Api Create LI spp Body   command=${command}
#   ...                                         ethernetActivationDelay=${ethernetActivationDelay}
#   ...                                         ethernetActivationType=${ethernetActivationType}
#   ...                                         fcActivationDelay=${fcActivationDelay}
#   ...                                         fcActivationType=${fcActivationType}
#   ...                                         force=${force}
#   ...                                         sppUri=${sppUri}
#   ...

    ${body} =   Fusion Api Create LI spp Body   sppUri=${sppUri}
    ...                                         command=${command}
    ...                                         force=${force}
    ...                                         ethernetActivationType=${ethernetActivationType}
    ...                                         ethernetActivationDelay=${ethernetActivationDelay}
    ...                                         fcActivationType=${fcActivationType}
    ...                                         fcActivationDelay=${fcActivationDelay}
    ...
    [Return]    ${body}

Build SelectiveInterconnects SPP body

    [Arguments]     ${li_spp}    ${selectiveinterconnecturis}
    ${liedit} =     Copy Dictionary      ${li_spp}
    ${command} =                       Get Variable Value  ${li_spp['command']}
    ${ethernetActivationDelay} =              Get Variable Value  ${li_spp['ethernetActivationDelay']}
    ${ethernetActivationType} =              Get Variable Value  ${li_spp['ethernetActivationType']}
    ${fcActivationDelay} =              Get Variable Value  ${li_spp['fcActivationDelay']}
    ${fcActivationType} =              Get Variable Value  ${li_spp['fcActivationType']}
    ${force} =              Get Variable Value  ${li_spp['force']}
    ${sppUri} =           Get Variable Value  ${li_spp['sppUri']}
    ${selectiveinterconnecturisvalue}=   Get From List    ${selectiveinterconnecturis}    0
    ${interconnects}=     Get Variable Value  ${selectiveinterconnecturisvalue['interconnects']}



    ${body} =     Create Dictionary

    Set To Dictionary     ${body}    sppUri    ${sppUri}
    Log To Console    in ${body}

    Set To Dictionary     ${body}    command    ${command}
    Set To Dictionary     ${body}    interconnects    ${interconnects}
    Set To Dictionary     ${body}    force    ${force}

    Set To Dictionary     ${body}    ethernetActivationType    ${ethernetActivationType}
 
    Set To Dictionary     ${body}    ethernetActivationDelay    ${ethernetActivationDelay}

    Set To Dictionary     ${body}    fcActivationType    ${fcActivationType}

    Set To Dictionary     ${body}    fcActivationDelay    ${fcActivationDelay}
    Log To Console    Body is ${body}
    [Return]    ${body}



00 Appliance LogIn
    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}
    ${users} =  Get Variable Value  ${users}
    Run Keyword If  ${users} is not ${null}    Add Users from variable              ${users}
    ${ethernet_networks} =  Get Variable Value    ${ethernet_networks1}
    Run Keyword If  ${ethernet_networks1} is not ${null}    Add Ethernet Networks from variable ${ethernet_networks1}

00 Create LIG, create enclosure group and import enclosure
    [Tags]  14
    ${body} =   Build LIG body      ${ligs['lig1']}
    ${resp} =   Fusion Api Create LIG   ${body}
    ${task} =   Wait For Task   ${resp}     60s 2s
    Add Enclosure Group from variable       ${enc_group}
    Add Enclosures from variable   ${encs}

00 Create server profile and ping blade
    [Tags]  15
    Power off ALL servers
    ${profiles} =     Copy List     ${server_profiles}
    Add Server Profiles from variable   ${profiles}
    Power on server      SGH411DFYA, bay 6
    Log to console and logfile      Waiting 10 minutes for server to boot...
    Sleep   10min
    Wait For Appliance To Become Pingable   10.10.2.31



#Get IC
#   [Arguments]     ${ICM_NAME}
#    ${resp} =   fusion api get interconnect
#    Log to Console           ${resp}
#    ${ics} =     Get From Dictionary     ${resp}    members
#   ${l} =  Get Length  ${ics}
#   :FOR    ${x}    IN RANGE    0   ${l}
#    \   ${ic} =     Get From List   ${ics}    ${x}
#   \   Exit For Loop If    '${ic['name']}' == '${ICM_NAME}'
#   [Return]    ${ic}
#   Log to Console        ${ic}

Get LE
    [Arguments]     ${LE_NAME}
    ${resp} =   fusion api get Logical Enclosure
    Log to Console        ${resp}
    ${les} =     Get From Dictionary     ${resp}    members
    ${l} =  Get Length  ${les}
    :FOR    ${x}    IN RANGE    0   ${l}
    \   ${le} =     Get From List   ${les}    ${x}
    \   Exit For Loop If    '${le['name']}' == '${LE_name}'
    [Return]    ${le}
    Log to Console        ${le}

Get from LE
    [Arguments]     ${le}   ${element}
    ${return} =     Get From Dictionary     ${le}   ${element}
    [Return]    ${return}



Edit LIG
    [Arguments]    ${lig}    ${li}    ${LLDPIP}    ${ltlv}    ${rtlv}
    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}
    ${body} =   Build LIG body      ${lig}
    Log to console and logfile    ${body}
    ${lig} =        Get LIG Member      ${LIG1}
    ${lig_uri} =    Get LIG Uri         ${LIG1}
    ${resp} =   Fusion Api Edit LIG body=${body}        uri=${lig_uri}
    ${task} =   Wait For Task   ${resp}     120s
    ${valDict} =    Create Dictionary   status_code=${200}
    ...                                 taskState=Completed
    Validate Response     ${task}    ${valDict}
    Perform an Update From Group    ${li}   120 min     1 min
    ValidateLI LLDP Ip Address  ${li}   ${LLDPIP}
    ValidateLI TaggedLLDP and RICH TLV  ${li}   ${ltlv} ${rtlv}



Get IC
    [Arguments]     ${ICM_NAME}
    ${resp} =   fusion api get interconnect
#    Log to Console        ${resp}
    ${ics} =     Get From Dictionary     ${resp}    members
    ${l} =     Get Length    ${ics}
    :FOR    ${x}    IN RANGE    0   ${l}
    \   ${ic} =     Get From List   ${ics}    ${x}
    \   Exit For Loop If    '${ic['name']}' == '${ICM_NAME}'
    [Return]    ${ic}
#    Log to Console        ${ic}

Validate Interconnects
    [Arguments]     ${ICM_NAME}     ${ltlv}     ${rtlv}     ${LLDPIP}
    Log to console and logfile    Validating Interconnects for LLDP and taggedTLV and RichTLV flags
    ${ic} =     Get IC      ${ICM_NAME}
    ${enableRichTLV} =          Get From IC    ${ic}   enableRichTLV
    ${enableTaggedLldp} =       Get From IC    ${ic}   enableTaggedLldp
    ${lldpip} =             Get from IC     ${ic}       lldpIpv4Address
    Should be Equal as Strings    ${enableRichTLV}      ${rtlv}
    Should be Equal as Strings    ${enableTaggedLldp}       ${ltlv}
    Should be Equal as Strings    ${lldpip}     ${LLDPIP}

Perform an Update From Group
    [Arguments]     ${li}=${LE}-${LIG1} ${timeout}=5 min    ${interval}=15s
    ${li_uri} =     Get LI URI   ${li}
    ${resp} =       Fusion Api Update from group    ${li_uri}
    ${task} =       Wait For Task   ${resp}     ${timeout}      ${interval}
    ${valDict} =    Create Dictionary   status_code=${200}
    ...                                 taskState=Completed
    Validate Response     ${task}    ${valDict}

Edit LI
    [Arguments]     ${li}   ${li_set1}  ${LLDPIP}   ${ltlv}     ${rtlv}
    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}
    ${body} =   Build LI body   ${li_set1}
    ${li_uri} =     Get LI URI   ${li}
    ${resp} =   Fusion Api Get Li   ${li_uri}
    Log to Console      ${resp}
    ${es} =     Get From Dictionary     ${resp} ethernetSettings
    ${uri} =    Get From Dictionary     ${es}       uri
    ${id} =     Get From Dictionary     ${es}       id
    Log to Console        ${id}
    Set to Dictionary   ${body} id  ${id}
    Log to Console      ${body}
    ${resp1} =  Fusion Api Update LI Ethernet Settings  body=${body}        uri=${li_uri}
    Log to Console      ${resp1}
    ${task} =   Wait For Task   ${resp1}    120s
    ${valDict} =    Create Dictionary   status_code=${200}
    ...                                 taskState=Completed
    Validate Response     ${task}    ${valDict}
    ValidateLI LLDP Ip Address  ${li}   ${LLDPIP}
    ValidateLI TaggedLLDP and RICH TLV  ${li}   ${ltlv} ${rtlv}

Build LI body
    [Arguments]     ${liedit}
    ${liedit} =     Copy Dictionary ${liedit}
    ${type} =                       Get Variable Value  ${liedit['type']}
    ${enableRichTLV} =           Get Variable Value  ${liedit['enableRichTLV']}
    ${enableTaggedLldp} =              Get Variable Value  ${liedit['enableTaggedLldp']}


    ${body} =   Fusion Api Create LI Settings Payload   type=${type}
    ...                                         enableRichTLV=${enableRichTLV}
    ...                                         enableTaggedLldp=${enableTaggedLldp}
    ...
    [Return]    ${body}

SSH to host and ping x
    [Documentation]    SSH's to a given host, then pings an IP from that host
    [Arguments]        ${HOST}    ${HOST2}
    Open Connection And Log In      ${HOST}
    ${Output}=    Execute Command    ping -c 4 ${HOST2}    return_stdout=True    return_rc=False
    Log to console and logfile    ${Output}
    Should Contain    ${Output}    ttl=
    Close All Connections

Add LIG from variable
    [Documentation] Adds an LIG to an appliance from a variable which contains a list of dicts with the entire payload
    [Arguments]     ${ligx}
    Log to Console        Adding LIG ${ligx}
    ${ligx} =   Copy Dictionary ${ligs['${ligx}']}

    ${name} =                       Get Variable Value  ${ligx['name']}
    ${enclosureIndexes} =           Get Variable Value  ${ligx['enclosureIndexes']}
    ${enclosureType} =              Get Variable Value  ${ligx['enclosureType']}
    ${ethernetSettings} =           Get Variable Value  ${ligx['ethernetSettings']}
    ${fcoeSettings} =               Get Variable Value  ${ligx['fcoeSettings']}
    ${internalNetworkUris} =        Get Variable Value  ${ligx['internalNetworkUris']}
    ${interconnectBaySet} =         Get Variable Value  ${ligx['interconnectBaySet']}
    ${interconnectMapTemplate} =    Get Variable Value  ${ligx['interconnectMapTemplate']}
    ${qosConfiguration} =           Get Variable Value  ${ligx['qosConfiguration']}
    ${redundancyType} =             Get Variable Value  ${ligx['redundancyType']}
    ${stackingMode} =               Get Variable Value  ${ligx['stackingMode']}
    ${telemetryConfiguration} =     Get Variable Value  ${ligx['telemetryConfiguration']}
    ${snmpConfiguration} =          Get Variable Value  ${ligx['snmpConfiguration']}
    ${uplinkSets} =                 Get Variable Value  ${ligx['uplinkSets']}
    #${uplinkSets} =    Copy List   ${ligx['uplinkSets']}
    ${l} =  Get Length  ${uplinkSets}


    :FOR    ${x}    IN RANGE    0   ${l}
    \   ${networkType} =    Get From Dictionary     ${uplinkSets[${x}]} networkType
    \   ${networks} =       Get From Dictionary     ${uplinkSets[${x}]} networkUris
    \   ${nativeNetworkUri} =   Get Variable Value     ${uplinkSets[${x}]['nativeNetworkUri']}
    \   Run Keyword If  '${networkType}' == 'FibreChannel'  Continue For Loop
    #\  ${networkUris} =    Get FCoE Uris   ${networks}
    #\   ${ethernetUris} =   Get Ethernet URIs   ${networks}
    #\   ${networkUris} =    combine lists   ${networkUris}  ${ethernetUris}
    \   ${networkUris} =    Get Ethernet URIs   ${networks}
    \   Set to dictionary   ${uplinkSets[${x}]} networkUris     ${networkUris}
    \   ${nativeNetworkUri} =   Run Keyword If   '${nativeNetworkUri}' != 'None'    Get Ethernet Uri    ${nativeNetworkUri}
    \   Set to dictionary   ${uplinkSets[${x}]} nativeNetworkUri     ${nativeNetworkUri}


    Log to Console      ${uplinkSets}
    ${body} =   Fusion Api Create LIG Payload   name=${name}
    ...                                         enclosureType=${enclosureType}
    ...                                         ethernetSettings=${ethernetSettings}
    ...                                         interconnectMapTemplate=${interconnectMapTemplate}
    ...                                         stackingMode=${stackingMode}
    ...                                         telemetryConfiguration=${telemetryConfiguration}
    ...                                         snmpConfiguration=${snmpConfiguration}
    ...                                         uplinkSets=${uplinkSets}

    ${resp} =   Fusion Api Create LIG   ${body}
    ${task} =   Wait For Task   ${resp}     60s    2s
    ${liguri} =     Get From Dictionary ${task['associatedResource']}   resourceUri
    [Return]    ${resp}

OA CLI EFUSE
    [Documentation]    issues an EFUSE Action to the given Device\Bay.
    ...   {DEVICE} = <BLADE|IOM|NETTRAY|SWM|FAN|OA|EM>
    ...   {BAY} = desired bay for given device
    ...   {ACTION} = <ON|OFF>
    [Arguments]        ${OA_HOST}    ${OA_USER}     ${OA_PASS}    ${DEVICE}    ${BAY}    ${ACTION}
    Open Connection     ${OA_HOST}     prompt=OA-    timeout=20s
    Login               ${OA_USER}     ${OA_PASS}
    Write    ++diag--
    Read Until    diag>
    Write    efuse ${DEVICE} ${BAY} ${ACTION}
    Write    q
    Close All Connections

#FTS
    #Set Log Level  DEBUG
    #Get VM IP   ${VM}
    #First Time Setup                   password=hpvse123

Test Specific Setup
    Set Log Level   TRACE
    Run Keyword and Ignore Error    Write To ciDebug Log
    Log to console and logfile  [TEST-SPECIFIC SETUP]
    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}
    ${users} =  Get Variable Value  ${users}
    Run Keyword If  ${users} is not ${null}    Add Users from variable              ${users}
    ${ethernet_networks} =  Get Variable Value    ${ethernet_networks}
    Run Keyword If  ${ethernet_networks} is not ${null}    Add Ethernet Networks from variable  ${ethernet_networks}
    #${ethernet_ranges} =   Get Variable Value  ${ethernet_ranges}
    #Run Keyword If ${ethernet_ranges} is not ${null}       Run Keyword for List    ${ethernet_ranges}  Create Ethernet Range
    #${fc_networks} =   Get Variable Value  ${fc_networks}
    #Run Keyword If ${fc_networks} is not ${null}    Add FC Networks from variable      ${fc_networks}
    #${fcoe_networks} = Get Variable Value  ${fcoe_networks}
    #Run Keyword If ${fcoe_networks} is not ${null}    Add FCoE Networks from variable      ${fcoe_networks}
    #${licenses} =  Get Variable Value  ${licenses}
    #Run Keyword If ${licenses} is not ${null}      Add Licenses from variable      ${licenses}
    #Login all users     ${users}

Run FTS and test-specific setup
    Set Log Level   TRACE
    #FTS
    Test Specific Setup

###New Keywords #####

Get Li Names
    ${resp} =    Fusion Api Get Li
    Log To Console      ${resp}
    ${lis} =     Get From Dictionary     ${resp}    members
    ${l} =      Get Length  ${lis}
    ${li_list} =    Create List
    :FOR  ${x}  IN RANGE    0     ${l}
    \    ${li} =     Get From List   ${lis}    ${x}
    \    ${li_name} =     Get from IC    ${li}    name
    \    Append To List   ${li_list}   ${li_name}
    Log to Console	  \n\nLI Names : ${li_list}\n
    [return]    ${li_list}

Get Li Name
    ${resp} =   Fusion Api Get Li
    Log To Console     ${resp}
    ${Li_name} =    Get From Dictionary  ${resp['members'][0]}  name
    Log to Console   \n\nLI Name: ${Li_name}\n
    Log To Console      ${Li_name}
    [return]    ${Li_name}
         
Validate LI Consistency State
	  [Arguments]		${LI}
	  ${LI_URI} =	 Get LI	       ${LI}
      ${li_consistency_state} =	   Get From LI    ${LI_URI}   consistencyStatus
	  Log to Console   \nLogicalInterconnect ${LI} consistency state is: ${li_consistency_state}
	  run keyword if   '${li_consistency_state}'=='CONSISTENT'    Log To console    \nlogical interconnect consistency state: Consistent   ELSE    Fatal error    \n\nlogical interconnect is Not Consistent

Validate ICM Version
    ${resp} =   fusion api get interconnect
    Log           ${resp}
    ${ics} =     Get From Dictionary     ${resp}    members
    ${l} =      Get Length  ${ics}
    ${icm_list} =    Create List
    :FOR  ${x}  IN RANGE    0     ${l}
    \    ${ic} =     Get From List   ${ics}    ${x}
    \    ${ic_name} =     Get from IC    ${ic}    name
    \    ${ic_type} =     Get from IC    ${ic}    productName
    \    run keyword if   '${ic_type}'=='${POTASH_IC_TYPE}'    Validate HFPotash    ${ic_name}
    \    run keyword if   '${ic_type}'=='${CL20_IC_TYPE}'    Validate Chloride FwVersion    ${ic_name}
  
Validate ICM FwVersion in LI
    
    [Arguments]    ${LI}
    ${li_uri}=    Get LI URI    ${LI}  
    Log to Console    \nli_uri:${li_uri}\n
    ${resp} =     fusion_api_get_li_firmware     uri=${li_uri}
    #Log to Console   \n ${resp}\n
    #${ics} =     Get From Dictionary     ${resp}    members
    ${x}=    Get Variable Value  ${resp['interconnects']}
    ${l} =      Get Length  ${x}
    ${icm_list} =    Create List    
    :FOR  ${y}  IN RANGE    0     ${l}
    \    ${ic} =     Get From List   ${x}    ${y}
    \    ${ic_name} =     Get from IC    ${ic}    interconnectName
    \    ${ic_type} =     Get from IC    ${ic}    deviceType
    \    run keyword if   '${ic_type}'=='${POTASH_IC_TYPE}'    Validate HFPotash    ${ic_name}
    \    run keyword if   '${ic_type}'=='${CL20_IC_TYPE}'    Validate Chloride FwVersion    ${ic_name}

Get LI
    [Arguments]                   ${LI_NAME}
    ${resp} =   Fusion Api Get Li
    Log           ${resp}
    ${lis} =     Get From Dictionary     ${resp}    members
    ${l} =      Get Length  ${lis}
    :FOR  ${x}  IN RANGE    0     ${l}
    \    ${li} =     Get From List   ${lis}    ${x}
    \    Exit For Loop If     '${li['name']}' == '${LI_NAME}'
    [Return]    ${li}
    Log         ${li}


Get from LI
    [Arguments]     ${li}   ${element}
    ${return} =     Get From Dictionary     ${li}   ${element}
    [Return]    ${return}    	   
 