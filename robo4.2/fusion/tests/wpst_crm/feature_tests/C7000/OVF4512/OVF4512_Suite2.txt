***Settings***
Documentation     Feature Test: OVF4512
Library            json
Library            FusionLibrary
Library            RoboGalaxyLibrary
Library                SSHLibrary
Library            Collections
Variables          Datavariables.py
Resource        ../../../../../Resources/api/fusion_api_resource.txt
Resource           OVF4512_Keywords.txt
Library            Dialogs


***Test cases***
Login to Appliance
    [Documentation]    Login to Appliance
    Set Log Level    TRACE
    ${resp}    Fusion Api Login Appliance    ${APPLIANCE_IP}    ${admin_credentials}
    Run Keyword If  '${resp[0]['status_code']}' != '200'  Fail  ELSE  Log    Successfully logged into the appliance    console=true

Remove Server Profiles
    [Documentation]    Remove Server profile
    Remove ALL Server Profiles

Create Multiple Server profiles with different uplinksets
    [Documentation]    Create Multiple Server profiles with different uplinksets
    Set Log Level    TRACE
    Log    \nPowering off the servers     console=True
    Power off all servers    PressAndHold
    Log     \nremoving server profiles    console=True
    Remove ALL Server Profiles    force=${True}
    Log    \nCreating server profile    console=True
    ${resp}    Add Server Profiles from variable   ${server_profiles}
    ${l}    Get Length    ${resp}
    :FOR    ${x}    IN RANGE    0    ${l}
    \    Run Keyword If  '${resp[${x}]['status_code']}' == '202'    Wait For Task2    ${resp[${x}]}    20m    1m    ELSE    Fail    Log    failed    console=True
    \    Power on server    ${server_profiles[${x}]['serverHardwareUri']}
    Sleep    10min

1_1 Validate hill interconnect firmware version is 5 00
    [Documentation]    checking firmware for hill
    :FOR    ${IC}    IN    @{IC_Hill}
    \   ${resp} =    Fusion Api Get Interconnect    param=?filter="'name' = '${IC}'"
    \   ${firmwareVersion} =  Get From Dictionary  ${resp['members'][0]}    firmwareVersion
    \   Log    ${firmwareVersion}    console=True
    \   Run keyword If    ${firmwareVersion} != ${firmwareVersion_500[0]}   Fail    Log    "Firmware version mismatch in Hill"    console=true
    \   ...    ELSE     Log    \nFirmware Version is validated as ${firmwareVersion_500[0]} for ${IC}     console=True

1_2 Validate Utah interconnect firmware version is 3 09
    [Documentation]    checking firmware for utah
    :FOR    ${IC}    IN    @{IC_Utah}
    \   ${resp} =    Fusion Api Get Interconnect    param=?filter="'name' = '${IC}'"
    \   ${firmwareVersion} =  Get From Dictionary  ${resp['members'][0]}    firmwareVersion
    \   Log     ${firmwareVersion}    console=true
    \   Run keyword If    ${firmwareVersion} != ${firmwareVersion_500[1]}   Fail    Log    "Firmware version mismatch in Utah"    console=true
    \   ...    ELSE     Log    \nFirmware Version is validated as ${firmwareVersion_500[1]} for ${IC}

1_3 Getting master uplink port
    [Documentation]    Getting master uplink port
    Set Log Level    TRACE
    ${trunk_master_list}    Getting the Master Uplink Port    ${US_details}
    Log    \nTrunkmasterlist${trunk_master_list}    console=True
    Set Suite Variable    ${trunk_master_list}    ${trunk_master_list}

1_4 Verify IC state and Port status then verify for uplinkset with trunking enabled, the master uplink port corresponding to a downlink port is displayed through REST Call for Hill
    [Documentation]   Verifying  Mapped uplink port is trunkmaster value and trunkmaster is true
    Set Log Level    TRACE
    ${length}    Get Length     ${IC_Hill}
    :FOR    ${x}    IN RANGE    0    ${length}
    \    Log    \nValidating Trunk value and Downlinkport value  in firmwareVersion 5.00     console=True
    \    Validate Downlink to Uplinkport Mapping and Trunk Master    ${IC_Hill[${x}]}    ${downlink_ports_hill[${x}]}    enabled    ${trunk_master_list[${x}]}

1_5 Verify that uplinkport attributes  corresponding to a downlink port is displayed through REST Call for Utah
    [Documentation]    checking downlink to uplinkport mapping as not None and trunk master value as false for Utah
    Set Log Level    TRACE
    Log    \nVerifying attributes before creating SP    console=True
    ${len}   Get Length     ${IC_Utah}
    :FOR    ${x}    IN RANGE    0    ${len}
    \    Log    \nValidating Trunk value and Downlinkport value  in firmwareVersion 5.00     console=True
    \    Validate Downlink to Uplinkport Mapping and Trunk Master    ${IC_Utah[${x}]}    ${downlink_ports_utah[${x}]}    disabled    None

####  Downgrade the module from 5.00 to 4.10 and check whether the downlink to uplink port mapping is available through REST call for hill module.####
2_1 Downgrading the firmware through LI page to 4 10 by the Administrator
    [Documentation]    Downgrading the firmware through LI page to 4 10 by the Administrator
    Log    \nDowngrading firmware through LI page    console=true
    ${li_uri} =    Get LI URI   ${LI}
    Set to dictionary     ${liupdate_body}     sppUri    ${fw_uri_410}
    ${response}=    Fusion Api Li Upgrade Firmware    ${liupdate_body}    ${li_uri}
    Log    \n The response is:${response}    console=true
    Run Keyword If  ${response['status_code']} !=202    fail    Log    LI Firmware update Failed!!    console=true
    ${task} =     Wait For Task        ${response}   90min    2min
    Run Keyword If  '${task['taskState']}' !='Completed' or ${task['status_code']} !=200   fail    Log    LI Firmware update Failed!!    console=true
    ...         ELSE    Log    LI FW downgrade completed successfully by the Administrator user from 5.00 to 4.10!!     console=true

2_2 Validate hill interconnect firmware version after downgrade is 4 10
    [Documentation]    Validate hill interconnect firmware version after downgrade is 4.10
    :FOR    ${IC}    IN    @{IC_Hill}
    \   ${resp} =    Fusion Api Get Interconnect    param=?filter="'name' = '${IC}'"
    \   ${firmwareVersion} =  Get From Dictionary  ${resp['members'][0]}    firmwareVersion
    \   Log    ${firmwareVersion}    console=true
    \   Run keyword If    ${firmwareVersion} != ${firmwareVersion_410[0]}   Fail    Log    "Firmware version mismatch in Hill"    console=true
    \   ...    ELSE     Log    Firmware Version is validated as ${firmwareVersion_410[0]} for ${IC}    console=true

2_3 Validate Utah interconnect firmware version after downgrade is 3 09
    [Documentation]    Validate Utah interconnect firmware version after downgrade is 3.09
    :FOR    ${IC}    IN    @{IC_Utah}
    \   ${resp} =    Fusion Api Get Interconnect    param=?filter="'name' = '${IC}'"
    \   ${firmwareVersion} =  Get From Dictionary  ${resp['members'][0]}    firmwareVersion
    \   Log    ${firmwareVersion}    console=true
    \   Run keyword If    ${firmwareVersion} != ${firmwareVersion_410[1]}   Fail    Log    "Firmware version mismatch in Utah"    console=true
    \   ...    ELSE     Log    Firmware Version is validated as ${firmwareVersion_410[1]} for ${IC}    console=true

2_4 Getting master uplink port
    [Documentation]    Getting master uplink port
    Set Log Level    TRACE
    ${trunk_master_list}    Getting the Master Uplink Port    ${US_details}
    Log    \nTrunkmasterlist${trunk_master_list}    console=True
    Set Suite Variable    ${trunk_master_list}    ${trunk_master_list}

2_5 Verify IC state and Port status then verify for uplinkset with trunking enabled, the master uplink port corresponding to a downlink port is displayed through REST Call for Hill
    [Documentation]   Verifying  Mapped uplink port is trunkmaster value and trunkmaster is true
    Set Log Level    TRACE
    ${length}    Get Length     ${IC_Hill}
    :FOR    ${x}    IN RANGE    0    ${length}
    \    Log    \nValidating Trunk value and Downlinkport value  in firmwareVersion 4.10     console=True
    \    Validate Downlink to Uplinkport Mapping and Trunk Master    ${IC_Hill[${x}]}    ${downlink_ports_hill[${x}]}    enabled    ${trunk_master_list[${x}]}

2_6 Verify that for uplinkset with trunking disabled the master uplink port corresponding to a downlink port is displayed through REST Call for Utah
    [Documentation]    checking downlink to uplinkport mapping as not None and trunk master value as false for Utah
    Set Log Level    TRACE
    Log    \nVerifying attributes before creating SP    console=True
    ${len}   Get Length     ${IC_Utah}
    :FOR    ${x}    IN RANGE    0    ${len}
    \    Log    \nValidating Trunk value and Downlinkport value  in firmwareVersion 4.10     console=True
    \    Validate Downlink to Uplinkport Mapping and Trunk Master    ${IC_Utah[${x}]}    ${downlink_ports_utah[${x}]}    disabled    None



##downgrade from 4 10 to 4 00##

3_1 Downgrading the firmware through LI page 4 10 to 4 00 by the Administrator
    [Documentation]    checking firmware to 4.00
    Log     Downgrading firmware through LI page    console=true
    ${li_uri} =    Get LI URI   ${LI}
    Set to dictionary     ${liupdate_body}     sppUri    ${fw_uri_400}
    ${response}=    Fusion Api Li Upgrade Firmware    ${liupdate_body}    ${li_uri}
    Log    The response is:${response}    console=true
    Run Keyword If  ${response['status_code']} !=202    fail    Log    LI Firmware update Failed!!    console=true
    ${task} =     Wait For Task        ${response}   90min    2min
    Run Keyword If  '${task['taskState']}' !='Completed'  or  ${task['status_code']} !=200   fail    Log    LI Firmware update Failed!!    console=true
    ...         ELSE    Log    LI FW downgrade completed successfully by the Administrator user from 4.10 to 3.08 !!    console=true

3_2 Validate hill interconnect firmware version after downgrade is 4 00
    [Documentation]    Validate hill interconnect firmware version after downgrade is 3 08
    :FOR    ${IC}    IN    @{IC_Hill}
    \   ${resp} =    Fusion Api Get Interconnect    param=?filter="'name' = '${IC}'"
    \   ${firmwareVersion} =  Get From Dictionary  ${resp['members'][0]}    firmwareVersion
    \   Log    ${firmwareVersion}    console=true
    \   Run keyword If    ${firmwareVersion} != ${firmwareVersion400[0]}   Fail    Log    "Firmware version mismatch in Hill"    console=true
    \   ...    ELSE     Log    Firmware Version is validated as ${firmwareVersion_400[0]} for ${IC}    console=true

3_3 Validate Utah interconnect firmware version after downgrade is 3 08
    [Documentation]    checking firmware after downgrading in 3 08
    :FOR    ${IC}    IN    @{IC_Utah}
    \   ${resp} =    Fusion Api Get Interconnect    param=?filter="'name' = '${IC}'"
    \   ${firmwareVersion} =  Get From Dictionary  ${resp['members'][0]}    firmwareVersion
    \   Log    ${firmwareVersion}    console=true
    \   Run keyword If    ${firmwareVersion} != ${firmwareVersion_400[1]}   Fail    Log    "Firmware version mismatch in Utah"    console=true
    \   ...    ELSE     Log    Firmware Version is validated as ${firmwareVersion_400[1]} for ${IC}    console=true

3_4 Getting master uplink port
    [Documentation]    Getting master uplink port
    Set Log Level    TRACE
    ${trunk_master_list}    Getting the Master Uplink Port    ${US_details}
    Log    \nTrunkmasterlist${trunk_master_list}    console=True
    Set Suite Variable    ${trunk_master_list}    ${trunk_master_list}

3_5 Verify IC state and Port status then verify for uplinkset with trunking enabled, the master uplink port corresponding to a downlink port is displayed through REST Call for Hill
    [Documentation]   Verifying  Mapped uplink port is trunkmaster value and trunkmaster is true
    Set Log Level    TRACE
    ${length}    Get Length     ${IC_Hill}
    :FOR    ${x}    IN RANGE    0    ${length}
    \    Log    \nValidating Trunk value and Downlinkport value  in firmwareVersion 4.00    console=True
    \    Validate Downlink to Uplinkport Mapping and Trunk Master    ${IC_Hill[${x}]}    ${downlink_ports_hill[${x}]}    enabled    ${trunk_master_list[${x}]}

3_6 Verify that for uplinkset with trunking enabled the master uplink port corresponding to a downlink port is displayed through REST Call for Utah
    [Documentation]    checking downlink to uplinkport mapping as not None and trunk master value as false for Utah
    Set Log Level    TRACE
    Log    \nVerifying attributes before creating SP    console=True
    ${len}   Get Length     ${IC_Utah}
    :FOR    ${x}    IN RANGE    0    ${len}
    \    Log    \nVAlidating Trunk value and Downlinkport value in firmwareVersion 4.00     console=True
    \    Validate Downlink to Uplinkport Mapping and Trunk Master    ${IC_Utah[${x}]}    ${downlink_ports_utah[${x}]}    disabled    None

##downgrade from 4 00 to 3 08###
4_1 Downgrading the firmware through LI page 4 00 to 3 08 by the Administrator
    [Documentation]    downgrade firmware to 3.08
    Log    Downgrading firmware through LI page    console=true
    ${li_uri} =    Get LI URI   ${LI}
    Set to dictionary     ${liupdate_body}     sppUri    ${fw_uri_308}
    ${response}=    Fusion Api Li Upgrade Firmware    ${liupdate_body}    ${li_uri}
    Log    The response is:${response}    console=true
    Run Keyword If  ${response['status_code']} !=202    fail    Log    LI Firmware update Failed!!    console=true
    ${task} =     Wait For Task        ${response}   60min    2min
    Run Keyword If  '${task['taskState']}' !='Completed'  or  ${task['status_code']} !=200   fail    Log    LI Firmware update Failed!!    console=true
    ...         ELSE    Log    LI FW downgrade completed successfully by the Administrator user from 3.08 to 3.05 !!    console=true

4_2 Validate hill interconnect firmware version after downgrade is 3 08
    [Documentation]    checking firmware version after downgrade
    :FOR    ${IC}    IN    @{IC_Hill}
    \   ${resp} =    Fusion Api Get Interconnect    param=?filter="'name' = '${IC}'"
    \   ${firmwareVersion} =  Get From Dictionary  ${resp['members'][0]}    firmwareVersion
    \   Log    ${firmwareVersion}    console=true
    \   Run keyword If    ${firmwareVersion} != ${firmwareVersion_308}   Fail    Log    "Firmware version mismatch in Hill"    console=true
    \   ...    ELSE     Log    Firmware Version is validated as ${firmwareVersion_308} for ${IC}    console=true

4_3 Validate Utah interconnect firmware version after downgrade is 3 08
    [Documentation]    checking firmware version for utah
    :FOR    ${IC}    IN    @{IC_Utah}
    \   ${resp} =    Fusion Api Get Interconnect    param=?filter="'name' = '${IC}'"
    \   ${firmwareVersion} =  Get From Dictionary  ${resp['members'][0]}    firmwareVersion
    \   Log    ${firmwareVersion}    console=true
    \   Run keyword If    ${firmwareVersion} != ${firmwareVersion_308}   Fail    Log    "Firmware version mismatch in Utah"    console=true
    \   ...    ELSE     Log    Firmware Version is validated as ${firmwareVersion_308} for ${IC}    console=true

4_4 Verify that for uplinkset with trunking disabled the master uplink port corresponding to a downlink port is displayed through REST Call for Hill
    [Documentation]   checking downlink to uplinkport mapping as not None and trunk master value as false for Hill
    Set Log Level    TRACE
    ${length}    Get Length     ${IC_Hill}
    :FOR    ${x}    IN RANGE    0    ${length}
    \    Log    \nValidating Trunk value and Downlinkport value in firmwareVersion 3.08 Hill    console=True
    \    Validate Downlink to Uplinkport Mapping and Trunk Master    ${IC_Hill[${x}]}    ${downlink_ports_hill[${x}]}    disabled    None

4_5 Verify that for uplinkset with trunking disabled the master uplink port corresponding to a downlink port is displayed through REST Call for utah
    [Documentation]    checking downlink to uplinkport mapping as not None and trunk master value as false for Utah
    Set Log Level    TRACE
    Log    \nVerifying attributes before creating SP    console=True
    ${len}   Get Length     ${IC_Utah}
    :FOR    ${x}    IN RANGE    0    ${len}
    \    Log    \nVAlidating Trunk value and Downlinkport value firmwareVersion 3.08 utah    console=True
    \    Validate Downlink to Uplinkport Mapping and Trunk Master    ${IC_Utah[${x}]}    ${downlink_ports_utah[${x}]}    disabled    None

5_1 downgrade the firmware through LI page 3 08 to 3 05 by the Administrator
    [Documentation]    downgrade firmware in LI page
    Log    upgrading firmware through LI page    console=true
    ${li_uri} =    Get LI URI   ${LI}
    Set to dictionary     ${liupdate_body}     sppUri    ${fw_uri_305}
    ${response}=    Fusion Api Li Upgrade Firmware    ${liupdate_body}    ${li_uri}
    Log    The response is:${response}    console=true
    Run Keyword If  ${response['status_code']} !=202    fail    Log    LI Firmware update Failed!!    console=true
    ${task} =     Wait For Task        ${response}   60min    2min
    Run Keyword If  '${task['taskState']}' !='Completed' or ${task['status_code']} !=200   fail    Log    LI Firmware update Failed!!    console=true
    ...         ELSE    Log    LI FW Upgrade completed successfully by the Administrator user from 3.05 to 3.08 !!    console=true

5_2 Validate hill interconnect firmware version after upgrade is 3 05 for Hill
    [Documentation]    Validate hill interconnect firmware version after upgrade is 3.05 for Hill
    :FOR    ${IC}    IN    @{IC_Hill}
    \   ${resp} =    Fusion Api Get Interconnect    param=?filter="'name' = '${IC}'"
    \   ${firmwareVersion} =  Get From Dictionary  ${resp['members'][0]}    firmwareVersion
    \   Log    ${firmwareVersion}    console=true
    \   Run keyword If    ${firmwareVersion} != ${firmwareVersion_305}   Fail    Log    "Firmware version mismatch in Hill"    console=true
    \   ...    ELSE     Log    Firmware Version is validated as ${firmwareVersion_305} for ${IC}    console=true

5_3 Validate Utah interconnect firmware version after upgrade to 3 05 for Utah
    [Documentation]    Validate hill interconnect firmware version after upgrade is 3.05 for Utah
    :FOR    ${IC}    IN    @{IC_Hill}
    \   ${resp} =    Fusion Api Get Interconnect    param=?filter="'name' = '${IC}'"
    \   ${firmwareVersion} =  Get From Dictionary  ${resp['members'][0]}    firmwareVersion
    \   Log    ${firmwareVersion}    console=true
    \   Run keyword If    ${firmwareVersion} != ${firmwareVersion_305}   Fail    Log    "Firmware version mismatch in Utah"    console=true
    \   ...    ELSE     Log    Firmware Version is validated as ${firmwareVersion_305} for ${IC}    console=true


5_4 Verify that for uplinkset with trunking disabled the master uplink port corresponding to a downlink port is displayed through REST Call for Hill
    [Documentation]   checking downlink to uplinkport mapping as not None and trunk master value as false for Hill
    Set Log Level    TRACE
    ${length}    Get Length     ${IC_Hill}
    :FOR    ${x}    IN RANGE    0    ${length}
    \    Log    \nValidating Trunk value and Downlinkport value in firmware version 3.05 Hill     console=True
    \    Validate Downlink to Uplinkport Mapping and Trunk Master    ${IC_Hill[${x}]}    ${downlink_ports_hill[${x}]}    disabled    None

5_5 Verify that for uplinkset with trunking enabled the master uplink port corresponding to a downlink port is displayed through REST Call
    [Documentation]    checking downlink to uplinkport mapping as not None and trunk master value as false for Utah
    Set Log Level    TRACE

    ${len}   Get Length     ${IC_Utah}
    :FOR    ${x}    IN RANGE    0    ${len}
    \    Log    \nVAlidating Trunk value and Downlinkport value in firmware version 3.05 utah    console=True
    \    Validate Downlink to Uplinkport Mapping and Trunk Master    ${IC_Utah[${x}]}    ${downlink_ports_utah[${x}]}    disabled    None

####  Upgrade the module from 3.05 to 3.08 and check whether the downlink to uplink port mapping is available through REST call for hill module.####

6_1 upgrading the firmware through LI page 3 05 to 3 08 by the Administrator
    [Documentation]    upgrade firmware in LI page
    Log    upgrading firmware through LI page    console=true
    ${li_uri} =    Get LI URI   ${LI}
    Set to dictionary     ${liupdate_body}     sppUri    ${fw_uri_308}
    ${response}=    Fusion Api Li Upgrade Firmware    ${liupdate_body}    ${li_uri}
    Log    The response is:${response}    console=true
    Run Keyword If  ${response['status_code']} !=202    fail    Log    LI Firmware update Failed!!    console=true
    ${task} =     Wait For Task        ${response}   60min    2min
    Run Keyword If  '${task['taskState']}' !='Completed' or ${task['status_code']} !=200   fail    Log    LI Firmware update Failed!!    console=true
    ...         ELSE    Log    LI FW Upgrade completed successfully by the Administrator user from 3.05 to 3.08 !!    console=true

6_2 Validate hill interconnect firmware version after upgrade is 3 08 for Hill
    [Documentation]    Validate hill interconnect firmware version after upgrade is 3.08 for Hill
    :FOR    ${IC}    IN    @{IC_Hill}
    \   ${resp} =    Fusion Api Get Interconnect    param=?filter="'name' = '${IC}'"
    \   ${firmwareVersion} =  Get From Dictionary  ${resp['members'][0]}    firmwareVersion
    \   Log    ${firmwareVersion}    console=true
    \   Run keyword If    ${firmwareVersion} != ${firmwareVersion_308}   Fail    Log    "Firmware version mismatch in Hill"    console=true
    \   ...    ELSE     Log    Firmware Version is validated as ${firmwareVersion_308} for ${IC}    console=true

6_3 Validate Utah interconnect firmware version after upgrade to 3 08 for Utah
    [Documentation]    Validate hill interconnect firmware version after upgrade is 3.08 for Utah
    :FOR    ${IC}    IN    @{IC_Hill}
    \   ${resp} =    Fusion Api Get Interconnect    param=?filter="'name' = '${IC}'"
    \   ${firmwareVersion} =  Get From Dictionary  ${resp['members'][0]}    firmwareVersion
    \   Log    ${firmwareVersion}    console=true
    \   Run keyword If    ${firmwareVersion} != ${firmwareVersion_308}   Fail    Log    "Firmware version mismatch in Utah"    console=true
    \   ...    ELSE     Log    Firmware Version is validated as ${firmwareVersion_308} for ${IC}    console=true


6_4 Verify that for uplinkset with trunking disabled the master uplink port corresponding to a downlink port is displayed through REST Call for Hill
    [Documentation]   checking downlink to uplinkport mapping as not None and trunk master value as false for Hill
    Set Log Level    TRACE
    ${length}    Get Length     ${IC_Hill}
    :FOR    ${x}    IN RANGE    0    ${length}
    \    Log    \nValidating Trunk value and Downlinkport value in firmware version hill 3.08     console=True
    \    Validate Downlink to Uplinkport Mapping and Trunk Master    ${IC_Hill[${x}]}    ${downlink_ports_hill[${x}]}    disabled    None

6_5 Verify that for uplinkset with trunking enabled the master uplink port corresponding to a downlink port is displayed through REST Call
    [Documentation]    checking downlink to uplinkport mapping as not None and trunk master value as false for Utah
    Set Log Level    TRACE

    ${len}   Get Length     ${IC_Utah}
    :FOR    ${x}    IN RANGE    0    ${len}
    \    Log    \nVAlidating Trunk value and Downlinkport value in firmware version utah 3.08    console=True
    \    Validate Downlink to Uplinkport Mapping and Trunk Master    ${IC_Utah[${x}]}    ${downlink_ports_utah[${x}]}    disabled    None



## upgrade from 3 08  to 4 00##
7_1 upgrading the firmware through LI page 3 05 to 3 08 by the Administrator
    [Documentation]    upgrade firmware in LI page
    Log    upgrading firmware through LI page    console=true
    ${li_uri} =    Get LI URI   ${LI}
    Set to dictionary     ${liupdate_body}     sppUri    ${fw_uri_400}
    ${response}=    Fusion Api Li Upgrade Firmware    ${liupdate_body}    ${li_uri}
    Log    The response is:${response}    console=true
    Run Keyword If  ${response['status_code']} !=202    fail    Log    LI Firmware update Failed!!    console=true
    ${task} =     Wait For Task        ${response}   60min    2min
    Run Keyword If  '${task['taskState']}' !='Completed' or ${task['status_code']} !=200   fail    Log    LI Firmware update Failed!!    console=true
    ...         ELSE    Log    LI FW Upgrade completed successfully by the Administrator user from 3.05 to 3.08 !!    console=true

7_2 Validate hill interconnect firmware version after upgrade is 3 08 for Hill
    [Documentation]    Validate hill interconnect firmware version after upgrade is 4.00 for Hill
    :FOR    ${IC}    IN    @{IC_Hill}
    \   ${resp} =    Fusion Api Get Interconnect    param=?filter="'name' = '${IC}'"
    \   ${firmwareVersion} =  Get From Dictionary  ${resp['members'][0]}    firmwareVersion
    \   Log    ${firmwareVersion}    console=true
    \   Run keyword If    ${firmwareVersion} != ${firmwareVersion_400[0]}   Fail    Log    "Firmware version mismatch in Hill"    console=true
    \   ...    ELSE     Log    Firmware Version is validated as ${firmwareVersion_400[0]} for ${IC}    console=true

7_3 Validate Utah interconnect firmware version after upgrade to 4 00 for Utah
    [Documentation]    Validate hill interconnect firmware version after upgrade is 3.08 for Utah
    :FOR    ${IC}    IN    @{IC_Utah}
    \   ${resp} =    Fusion Api Get Interconnect    param=?filter="'name' = '${IC}'"
    \   ${firmwareVersion} =  Get From Dictionary  ${resp['members'][0]}    firmwareVersion
    \   Log    ${firmwareVersion}    console=true
    \   Run keyword If    ${firmwareVersion} != ${firmwareVersion_400[1]}   Fail    Log    "Firmware version mismatch in Utah"    console=true
    \   ...    ELSE     Log    Firmware Version is validated as ${firmwareVersion_400[1]} for ${IC}    console=true


7_4 Getting master uplink port
    [Documentation]    Getting master uplink port
    Set Log Level    TRACE
    ${trunk_master_list}    Getting the Master Uplink Port    ${US_details}
    Log    \nTrunkmasterlist${trunk_master_list}    console=True
    Set Suite Variable    ${trunk_master_list}    ${trunk_master_list}

7_5 Verify IC state and Port status then verify for uplinkset with trunking enabled, the master uplink port corresponding to a downlink port is displayed through REST Call for Hill
    [Documentation]   Verifying  Mapped uplink port is trunkmaster value and trunkmaster is true
    Set Log Level    TRACE
    ${length}    Get Length     ${IC_Hill}
    :FOR    ${x}    IN RANGE    0    ${length}
    \    Log    \nValidating Trunk value and Downlinkport value in firmwareVersion 4.00    console=True
    \    Validate Downlink to Uplinkport Mapping and Trunk Master    ${IC_Hill[${x}]}    ${downlink_ports_hill[${x}]}    enabled    ${trunk_master_list[${x}]}

7_6 Verify that for uplinkset with trunking enabled the master uplink port corresponding to a downlink port is displayed through REST Call
    [Documentation]    checking downlink to uplinkport mapping as not None and trunk master value as false for Utah
    Set Log Level    TRACE

    ${len}   Get Length     ${IC_Utah}
    :FOR    ${x}    IN RANGE    0    ${len}
    \    Log    \nVAlidating Trunk value and Downlinkport value in firmware 4.00    console=True
    \    Validate Downlink to Uplinkport Mapping and Trunk Master    ${IC_Utah[${x}]}    ${downlink_ports_utah[${x}]}    disabled    None

8_1 upgrade the firmware through LI page to 4 10 by the Administrator
    [Documentation]   upgrade firmware to 4.10
    Log    upgrading firmware through LI page    console=true
    ${li_uri} =    Get LI URI   ${LI}
    Set to dictionary     ${liupdate_body}     sppUri    ${fw_uri_410}
    ${response}=    Fusion Api Li Upgrade Firmware    ${liupdate_body}    ${li_uri}
    Log    The response is:${response}    console=true
    Run Keyword If  ${response['status_code']} !=202    fail    Log    LI Firmware update Failed!!    console=true
    ${task} =     Wait For Task        ${response}   90min    2min
    Run Keyword If  '${task['taskState']}' !='Completed'  or  ${task['status_code']} !=200   fail    Log    LI Firmware update Failed!!    console=true
    ...         ELSE    Log     LI FW upgrade completed successfully by the Administrator user from 3.08 to 4.10!!    console=true

8_2 Validate hill interconnect firmware version after upgrade  4 10
    [Documentation]    checking firmware version after upgrade for Hill
    :FOR    ${IC}    IN    @{IC_Hill}
    \   ${resp} =    Fusion Api Get Interconnect    param=?filter="'name' = '${IC}'"
    \   ${firmwareVersion} =  Get From Dictionary  ${resp['members'][0]}    firmwareVersion
    \   Log    ${firmwareVersion}    console=true
    \   Run keyword If    ${firmwareVersion} != ${firmwareVersion_410[0]}   Fail    Log    "Firmware version mismatch in Hill"     console=true
    \   ...    ELSE     Log    Firmware Version is validated as ${firmwareVersion_410[0]} for ${IC}    console=true

8_3 Validate Utah interconnect firmware version after upgrade 3 09
    [Documentation]    checking firmware for Utah
    :FOR    ${IC}    IN    @{IC_Utah}
    \   ${resp} =    Fusion Api Get Interconnect    param=?filter="'name' = '${IC}'"
    \   ${firmwareVersion} =  Get From Dictionary  ${resp['members'][0]}    firmwareVersion
    \   Log    ${firmwareVersion}    console=true
    \   Run keyword If    ${firmwareVersion} != ${firmwareVersion_410[1]}   Fail    Log    "Firmware version mismatch in Utah"    console=true
    \   ...    ELSE     Log    Firmware Version is validated as ${firmwareVersion_410[1]} for ${IC}    console=true

8_4 Getting master uplink port
    [Documentation]    Getting master uplink port
    Set Log Level    TRACE
    ${trunk_master_list}    Getting the Master Uplink Port    ${US_details}
    Log    \nTrunkmasterlist${trunk_master_list}    console=True
    Set Suite Variable    ${trunk_master_list}    ${trunk_master_list}

8_5 Verify IC state and Port status then verify for uplinkset with trunking enabled, the master uplink port corresponding to a downlink port is displayed through REST Call for Hill
    [Documentation]   Verifying  Mapped uplink port is trunkmaster value and trunkmaster is true
    Set Log Level    TRACE
    ${length}    Get Length     ${IC_Hill}
    :FOR    ${x}    IN RANGE    0    ${length}
    \    Log    \nValidating Trunk value and Downlinkport value in firmware version 4.10     console=True
    \    Validate Downlink to Uplinkport Mapping and Trunk Master    ${IC_Hill[${x}]}    ${downlink_ports_hill[${x}]}    enabled    ${trunk_master_list[${x}]}

8_6 Verify that for uplinkset with trunking disabled the master uplink port corresponding to a downlink port is displayed through REST Call for Utah
    [Documentation]    checking downlink to uplinkport mapping as not None and trunk master value as false for Utah
    Set Log Level    TRACE
    Log    \nVerifying attributes in firmware version 4.10    console=True
    ${len}   Get Length     ${IC_Utah}
    :FOR    ${x}    IN RANGE    0    ${len}
    \    Log    \nVAlidating Trunk value and Downlinkport value     console=True
    \    Validate Downlink to Uplinkport Mapping and Trunk Master    ${IC_Utah[${x}]}    ${downlink_ports_utah[${x}]}    disabled    None

###upgrade from 4 10 to 5 00###

9_1 Update the firmware through LI page 4 10 to 5 00 by the Administrator
    [Documentation]    checking  Hill firmware after upgrade
    Log    \nDowngrading firmware through LI page    console=true
    ${li_uri} =    Get LI URI   ${LI}
    Set to dictionary     ${liupdate_body}     sppUri    ${fw_uri_500}
    ${response}=    Fusion Api Li Upgrade Firmware    ${liupdate_body}    ${li_uri}
    Log    \n The response is:${response}    console=true
    Run Keyword If  ${response['status_code']} !=202    fail    Log    LI Firmware update Failed!!    console=true
    ${task} =     Wait For Task        ${response}   90min    2min
    Run Keyword If  '${task['taskState']}' !='Completed'  or  ${task['status_code']} !=200   fail    Log    LI Firmware update Failed!!    console=true
    ...         ELSE    Log    LI FW Upgrade completed successfully by the Administrator user from 4.10 to 5.00 !!    console=true


9_2 Validate hill interconnect firmware version after upgrade is 5 00
    [Documentation]    checking utah firmware after upgrade
    :FOR    ${IC}    IN    @{IC_Hill}
    \   ${resp} =    Fusion Api Get Interconnect    param=?filter="'name' = '${IC}'"
    \   ${firmwareVersion} =  Get From Dictionary  ${resp['members'][0]}    firmwareVersion
    \   Log    ${firmwareVersion}    console=True
    \   Run keyword If    ${firmwareVersion} != ${firmwareVersion_500[0]}   Fail    Log    "Firmware version mismatch in Hill"    console=true
    \   ...    ELSE     Log    \nFirmware Version is validated as ${firmwareVersion_500[0]} for ${IC}     console=True

9_3 Validate Utah interconnect firmware version after upgrade is 3 09
    [Documentation]    checking utah firmware version
    :FOR    ${IC}    IN    @{IC_Utah}
    \   ${resp} =    Fusion Api Get Interconnect    param=?filter="'name' = '${IC}'"
    \   ${firmwareVersion} =  Get From Dictionary  ${resp['members'][0]}    firmwareVersion
    \   Log     ${firmwareVersion}    console=true
    \   Run keyword If    ${firmwareVersion} != ${firmwareVersion_500[1]}   Fail    Log    "Firmware version mismatch in Utah"    console=true
    \   ...    ELSE     Log    \nFirmware Version is validated as ${firmwareVersion_500[1]} for ${IC}


9_4 Getting master uplink port
    [Documentation]    Getting master uplink port
    Set Log Level    TRACE
    ${trunk_master_list}    Getting the Master Uplink Port    ${US_details}
    Log    \nTrunkmasterlist${trunk_master_list}    console=True
    Set Suite Variable    ${trunk_master_list}    ${trunk_master_list}

9_5 Verify IC state and Port status then verify for uplinkset with trunking enabled, the master uplink port corresponding to a downlink port is displayed through REST Call for Hill
    [Documentation]   Verifying  Mapped uplink port is trunkmaster value and trunkmaster is true
    Set Log Level    TRACE
    ${length}    Get Length     ${IC_Hill}
    :FOR    ${x}    IN RANGE    0    ${length}
    \    Log    \nValidating Trunk value and Downlinkport value     console=True
    \    Validate Downlink to Uplinkport Mapping and Trunk Master    ${IC_Hill[${x}]}    ${downlink_ports_hill[${x}]}    enabled    ${trunk_master_list[${x}]}

9_6 Verify that for uplinkset with trunking enabled the master uplink port corresponding to a downlink port is displayed through REST Call for Utah
    [Documentation]    checking downlink to uplinkport mapping as not None and trunk master value as false for Utah
    Set Log Level    TRACE
    Log    \nVerifying attributes before creating SP    console=True
    ${len}   Get Length     ${IC_Utah}
    :FOR    ${x}    IN RANGE    0    ${len}
    \    Log    \nVAlidating Trunk value and Downlinkport value     console=True
    \    Validate Downlink to Uplinkport Mapping and Trunk Master    ${IC_Utah[${x}]}    ${downlink_ports_utah[${x}]}    disabled    None





