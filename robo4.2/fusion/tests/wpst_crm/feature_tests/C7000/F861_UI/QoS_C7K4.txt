*** Settings ***
Documentation       Feature Test: QoS_4_c7K
Resource            OVAConfig.txt
#Force Tags         Buildup
Suite Setup         Load Test Data and Open Browser
Suite Teardown     Logout And Close All Browsers
Library            Dialogs
Library         Collections
Library    String
Library         BuiltIn

*** Test Cases ***

01. Log into fusion as Administrator
    [Documentation]    Log in to Appliance
    Log To Console    *********Log into Appliance as Administrator****************
    ${user} =    Get Data By Property    ${TestData.users}    name    Administrator
    fusion_ui_login_to_appliance    ${user[0].name}
    Log to Console    Successfully logged in as Administrator

02. Prerequisite
    Fusion UI Remove All Enclosures
    Fusion UI Remove All Enclosure Groups
    Fusion UI Remove All Logical Interconnect Groups
    Log to Console  ALL STEPS COMPLETED SUCCESSFULLY

03. CREATING LIG
    ${Status1}=    fusion_ui_create_logical_interconnect_group      @{TestData.ligC71}
    Log to Console  ${Status1}
    Run Keyword If  '${Status1}' == 'True'  Log to Console  LIG CREATED SUCCESSFULLY    ELSE    fail

04. Edit LIG
    @{Status1}=    fusion_ui_validate_qos_configuration      @{TestData.ligc4}
    Log to Console  ${Status1[0]}
    Log to Console  ${Status1[1]}
    Log to Console  ${Status1[2]}
    Log to Console  ${Status1[3]}

    @{enabled1} =   Split String    ${TestData.ligc4[0].enabledValue}    ,
    Log to console and logfile    ${enabled1}
    ${ret_status}=    Run Keyword And Return Status    Lists Should Be Equal   ${Status1[0]}   ${enabled1}
    Run Keyword If  '${ret_status}' == 'False'  Log to Console  List is not equal for enabled verification condition satisfied  ELSE    fail

    @{enabled2} =   Split String    ${TestData.ligc4[0].defaultEnabled}    ,
    Log to console and logfile    ${enabled2}
    ${ret_status}=    Run Keyword And Return Status    Lists Should Be Equal   ${Status1[0]}   ${enabled2}
    Log to console and logfile    ${ret_status}

    @{share1} =   Split String    ${TestData.ligc4[0].setShare}    ,
    Log to console and logfile    ${share1}
    ${ret_status}=    Run Keyword And Return Status    Lists Should Be Equal   ${Status1[1]}   ${share1}
    Run Keyword If  '${ret_status}' == 'False'  Log to Console  List is not equal for shareValue verification condition satisfied   ELSE    fail

    @{share2} =   Split String    ${TestData.ligc4[0].defaultShare}    ,
    Log to console and logfile    ${share2}
    ${ret_status}=    Run Keyword And Return Status    Lists Should Be Equal   ${Status1[1]}   ${share2}
    Log to console and logfile    ${ret_status}

    @{maxshare1} =   Split String    ${TestData.ligc4[0].setMaxshare}    ,
    Log to console and logfile    ${maxshare1}
    ${ret_status}=    Run Keyword And Return Status    Lists Should Be Equal   ${Status1[2]}   ${maxshare1}
    Run Keyword If  '${ret_status}' == 'False'  Log to Console  List is not equal for maxshare value verification condition satisfied   ELSE    fail

    @{maxshare2} =   Split String    ${TestData.ligc4[0].defaultMaxshare}    ,
    Log to console and logfile    ${maxshare2}
    ${ret_status}=    Run Keyword And Return Status    Lists Should Be Equal   ${Status1[2]}   ${maxshare2}
    Log to console and logfile    ${ret_status}

    @{mapping1} =   Split String    ${TestData.ligc4[0].defaultMapping}    ,
    Log to console and logfile    ${mapping1}
    ${ret_status}=    Run Keyword And Return Status    Lists Should Be Equal   ${Status1[3]}   ${mapping1}
    Run Keyword If  '${ret_status}' == 'True'   Log to Console  List is not equal for DSCP and Dot1p values are in NO MAPPING state mapping value verification condition satisfied  ELSE    fail
    Log to console and logfile    ${ret_status}

05. CREATING ENCLOSURE GROUP
    Run Keyword If  '${Status1}' == 'None'  Log to Console  EG PAGE SUCCESSFULLY    ELSE    fail
    ${Status1}=    fusion_ui_create_enclosure_group      @{Testdata.encgroups}
    Log to Console  ${Status1}
    Run Keyword If  '${Status1}' == 'True'  Log to Console  EG PAGE SUCCESSFULLY    ELSE    fail

06. IMPORT ENCLOSURE
    ${Status1}=    fusion_ui_add_enclosure       @{TestData.enclosures_C7K}
    Log to Console  ${Status1}
    Run Keyword If  '${Status1}' == 'True'  Log to Console  ENCLOSURE ADDED SUCCESSFULLY    ELSE    fail

07. EDIT LI
    @{Status1}=    fusion_ui_validate_qos_configuration_in_li       @{TestData.lic4}
    Log to Console  ${Status1[0]}
    Log to Console  ${Status1[1]}
    Log to Console  ${Status1[2]}
    Log to Console  ${Status1[3]}

    @{enabled1} =   Split String    ${TestData.lic4[0].enabledValue}    ,
    Log to console and logfile    ${enabled1}
    ${ret_status}=    Run Keyword And Return Status    Lists Should Be Equal   ${Status1[0]}   ${enabled1}
    Run Keyword If  '${ret_status}' == 'False'  Log to Console  List is not equal for enabled verification condition satisfied  ELSE    fail

    @{enabled2} =   Split String    ${TestData.lic4[0].defaultEnabled}    ,
    Log to console and logfile    ${enabled2}
    ${ret_status}=    Run Keyword And Return Status    Lists Should Be Equal   ${Status1[0]}   ${enabled2}
    Log to console and logfile    ${ret_status}

    @{share1} =   Split String    ${TestData.lic4[0].setShare}    ,
    Log to console and logfile    ${share1}
    ${ret_status}=    Run Keyword And Return Status    Lists Should Be Equal   ${Status1[1]}   ${share1}
    Run Keyword If  '${ret_status}' == 'False'  Log to Console  List is not equal for shareValue verification condition satisfied   ELSE    fail

    @{share2} =   Split String    ${TestData.lic4[0].defaultShare}    ,
    Log to console and logfile    ${share2}
    ${ret_status}=    Run Keyword And Return Status    Lists Should Be Equal   ${Status1[1]}   ${share2}
    Log to console and logfile    ${ret_status}

    @{maxshare1} =   Split String    ${TestData.lic4[0].setMaxshare}    ,
    Log to console and logfile    ${maxshare1}
    ${ret_status}=    Run Keyword And Return Status    Lists Should Be Equal   ${Status1[2]}   ${maxshare1}
    Run Keyword If  '${ret_status}' == 'False'  Log to Console  List is not equal for maxshare value verification condition satisfied   ELSE    fail

    @{maxshare2} =   Split String    ${TestData.lic4[0].defaultMaxshare}    ,
    Log to console and logfile    ${maxshare2}
    ${ret_status}=    Run Keyword And Return Status    Lists Should Be Equal   ${Status1[2]}   ${maxshare2}
    Log to console and logfile    ${ret_status}

    @{mapping1} =   Split String    ${TestData.lic4[0].defaultMapping}    ,
    Log to console and logfile    ${mapping1}
    ${ret_status}=    Run Keyword And Return Status    Lists Should Be Equal   ${Status1[3]}   ${mapping1}
    Run Keyword If  '${ret_status}' == 'True'   Log to Console  List is not equal for DSCP and Dot1p values are in NO MAPPING state mapping value verification condition satisfied  ELSE    fail
    Log to console and logfile    ${ret_status}

08. Edit LIG
    @{Status1}=    fusion_ui_validate_qos_configuration      @{TestData.ligC4}
    Log to Console  ${Status1[0]}
    Log to Console  ${Status1[1]}
    Log to Console  ${Status1[2]}
    Log to Console  ${Status1[3]}

    @{enabled1} =   Split String    ${TestData.ligC4[0].defaultEnabled}    ,
    Log to console and logfile    ${enabled1}
    ${ret_status}=    Run Keyword And Return Status    Lists Should Be Equal   ${Status1[0]}   ${enabled1}
    Log to console and logfile    ${ret_status}

    @{enabled2} =   Split String    ${TestData.ligC4[0].enabledValue}    ,
    Log to console and logfile    ${enabled2}
    ${ret_status}=    Run Keyword And Return Status    Lists Should Be Equal   ${Status1[0]}   ${enabled2}
    Run Keyword If  '${ret_status}' == 'False'  Log to Console  List is not equal for enabled verification condition satisfied  ELSE    fail

    @{share1} =   Split String    ${TestData.ligC4[0].setShare}    ,
    Log to console and logfile    ${share1}
    ${ret_status}=    Run Keyword And Return Status    Lists Should Be Equal   ${Status1[1]}   ${share1}
    Run Keyword If  '${ret_status}' == 'False'  Log to Console  List is not equal for shareValue verification condition satisfied   ELSE    fail

    @{share2} =   Split String    ${TestData.ligC4[0].defaultShare}    ,
    Log to console and logfile    ${share2}
    ${ret_status}=    Run Keyword And Return Status    Lists Should Be Equal   ${Status1[1]}   ${share2}
    Log to console and logfile    ${ret_status}

    @{maxshare1} =   Split String    ${TestData.ligC4[0].setMaxshare}    ,
    Log to console and logfile    ${maxshare1}
    ${ret_status}=    Run Keyword And Return Status    Lists Should Be Equal   ${Status1[2]}   ${maxshare1}
    Run Keyword If  '${ret_status}' == 'False'  Log to Console  List is not equal for maxshare value verification condition satisfied   ELSE    fail

    @{maxshare2} =   Split String    ${TestData.ligC4[0].defaultMaxshare}    ,
    Log to console and logfile    ${maxshare2}
    ${ret_status}=    Run Keyword And Return Status    Lists Should Be Equal   ${Status1[2]}   ${maxshare2}
    Log to console and logfile    ${ret_status}

    @{mapping1} =   Split String    ${TestData.ligC4[0].defaultMapping}    ,
    Log to console and logfile    ${mapping1}
    ${ret_status}=    Run Keyword And Return Status    Lists Should Be Equal   ${Status1[3]}   ${mapping1}
    Run Keyword If  '${ret_status}' == 'True'   Log to Console  List is not equal for DSCP and Dot1p values are in NO MAPPING state mapping value verification condition satisfied  ELSE    fail
    Log to console and logfile    ${ret_status}

09. EDIT LI
    @{Status1}=    fusion_ui_validate_qos_configuration_in_li       @{TestData.liC4}
    Log to Console  ${Status1[0]}
    Log to Console  ${Status1[1]}
    Log to Console  ${Status1[2]}
    Log to Console  ${Status1[3]}

    @{enabled1} =   Split String    ${TestData.liC4[0].defaultEnabled}    ,
    Log to console and logfile    ${enabled1}
    ${ret_status}=    Run Keyword And Return Status    Lists Should Be Equal   ${Status1[0]}   ${enabled1}
    Log to console and logfile    ${ret_status}

    @{enabled2} =   Split String    ${TestData.liC4[0].enabledValue}    ,
    Log to console and logfile    ${enabled2}
    ${ret_status}=    Run Keyword And Return Status    Lists Should Be Equal   ${Status1[0]}   ${enabled2}
    Run Keyword If  '${ret_status}' == 'False'  Log to Console  List is not equal for enabled verification condition satisfied  ELSE    fail

    @{share1} =   Split String    ${TestData.liC4[0].setShare}    ,
    Log to console and logfile    ${share1}
    ${ret_status}=    Run Keyword And Return Status    Lists Should Be Equal   ${Status1[1]}   ${share1}
    Run Keyword If  '${ret_status}' == 'False'  Log to Console  List is not equal for shareValue verification condition satisfied   ELSE    fail

    @{share2} =   Split String    ${TestData.liC4[0].defaultShare}    ,
    Log to console and logfile    ${share2}
    ${ret_status}=    Run Keyword And Return Status    Lists Should Be Equal   ${Status1[1]}   ${share2}
    Log to console and logfile    ${ret_status}

    @{maxshare1} =   Split String    ${TestData.liC4[0].setMaxshare}    ,
    Log to console and logfile    ${maxshare1}
    ${ret_status}=    Run Keyword And Return Status    Lists Should Be Equal   ${Status1[2]}   ${maxshare1}
    Run Keyword If  '${ret_status}' == 'False'  Log to Console  List is not equal for maxshare value verification condition satisfied   ELSE    fail

    @{maxshare2} =   Split String    ${TestData.liC4[0].defaultMaxshare}    ,
    Log to console and logfile    ${maxshare2}
    ${ret_status}=    Run Keyword And Return Status    Lists Should Be Equal   ${Status1[2]}   ${maxshare2}
    Log to console and logfile    ${ret_status}

    @{mapping1} =   Split String    ${TestData.liC4[0].defaultMapping}    ,
    Log to console and logfile    ${mapping1}
    ${ret_status}=    Run Keyword And Return Status    Lists Should Be Equal   ${Status1[3]}   ${mapping1}
    Run Keyword If  '${ret_status}' == 'True'   Log to Console  List is not equal for DSCP and Dot1p values are in NO MAPPING state mapping value verification condition satisfied  ELSE    fail
    Log to console and logfile    ${ret_status}

10. CLEANUP
    Fusion UI Remove All Enclosures
    Fusion UI Remove All Enclosure Groups
    Fusion UI Remove All Logical Interconnect Groups
    Log to Console  ALL STEPS COMPLETED SUCCESSFULLY

