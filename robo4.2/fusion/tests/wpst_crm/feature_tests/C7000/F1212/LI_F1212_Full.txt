*** Settings ***
Documentation       Feature test: Firmware update F1212 feature of Hill Module
...                 on Enclosure G3,G2 G1
Variables           data_variables.py

Resource            ../../../../resource/fusion_api_all_resource_files.txt
Library             Collections
Library             RoboGalaxyLibrary
Library             FusionLibrary
Library             String
Library             json
Library             OperatingSystem
Library             SSHLibrary
Library             Selenium2Library
Library             Validation_c7k_firmware_version

*** Variables ***
${SSH_PASS}                 hpvse1
${DataFile}                 ./OVAData.xml
${APPLIANCE_IP}             10.10.0.215
${X-API-VERSION}            300
${li}                         SGH420HHYA-LIG_B1
${ExpectedErrorMsg1}=       Activate operation is not allowed at this state. One or more interconnects may not have been baselined to this firmware or all interconnects are already activated/activating to this baseline
${IP}                      192.168.144.132
${ICM_NAME1}                         SGH420HHYA, interconnect 3
${ICM_NAME2}                         SGH420HHYA, interconnect 4
${ICM_NAME3}                         SGH420HHYA, interconnect 6
${ICM_NAME4}                         SGH420HHYA, interconnect 7
${ICM_NAME5}                         SGH420HHYA, interconnect 1
${ICM_NAME6}                         SGH420HHYA, interconnect 2
${BAY1}                              1
${IP}                           192.168.144.132


${E-value}                       No update required. Selected firmware is already installed in the logical interconnect
${LE_N_Alert1}                  No update required. Selected firmware is already installed for the Onboard Administrator.
${LE_N_Alert2}                  No update required. Selected firmware is already installed in the logical interconnect


${ICM_Alert1_stg_star}           Staging started for the interconnect
${ICM_Alert1_stg_str_end}        \  with firmware version 3.00 v7.2.1_33 from baseline
${HICM_Alert1_stg_str_end}        \  with firmware version 3.05 v7.2.1_45 from baseline


${ICM_Alert1_stg_succ}           Staging success for the interconnect
${ICM_Alert1_stg_succ_end}       \  with firmware version 3.00 v7.2.1_33 from baseline
${HICM_Alert1_stg_succ_end}       \  with firmware version 3.05 v7.2.1_45 from baseline

${ICM_Alert1_act_star}          Activation started for the interconnect
${ICM_Alert1_act_star_end}      \  with firmware version 3.00 v7.2.1_33 from baseline
${HICM_Alert1_act_star_end}      \  with firmware version 3.05 v7.2.1_45 from baseline

${ICM_Alert1_act_succ}          Activation success for the interconnect
${ICM_Alert1_act_succ_end}      \  with firmware version 3.00 v7.2.1_33 from baseline
${ICM_Alert1_act_succ_end}      \  with firmware version 3.05 v7.2.1_45 from baseline

#1 4.40 2014-10-12T08:56:22Z    4.40 2014-10-12T08:56:22Z
${ICM_Alert1_stg_star_1_end}    \  with firmware version 4.40 2014-10-12T08:27:55Z from baseline
${HICM_Alert1_stg_star_1_end}    \  with firmware version 4.50 2016-04-14T07:06:49Z from baseline

${ICM_Alert1_stg_star_2_end}    \  with firmware version 4.40 2014-10-12T08:27:55Z from baseline
${HICM_Alert1_stg_star_2_end}    \  with firmware version 4.50 2016-04-14T07:06:49Z from baseline


#${ICM_Alert1_stg_star}           Staging started for the interconnect
${HICM_Alert1_stg_str_end}        \  with firmware version 3.05 v7.2.1_45 from baseline

#${ICM_Alert1_stg_succ}           Staging success for the interconnect
${HICM_Alert1_stg_succ_end}       \  with firmware version 3.05 v7.2.1_45 from baseline

#${ICM_Alert1_act_star}          Activation started for the interconnect
${HICM_Alert1_act_star_end}      \  with firmware version 3.05 v7.2.1_45 from baseline

#${ICM_Alert1_act_succ}          Activation success for the interconnect
${HICM_Alert1_act_succ_end}      \  with firmware version 3.05 v7.2.1_45 from baseline

#1 4.40 2014-10-12T08:56:22Z(4.50 2016-04-14T07:06:49Z)    4.40 2014-10-12T08:56:22Z  (4.50 2016-04-14T07:06:49Z)
${HICM_Alert1_stg_star_1_end}    \  with firmware version 4.50 2016-04-14T07:06:49Z from baseline

#${HICM_Alert1_stg_star_3_end}    \  with firmware version 3.05 v7.2.1_45 from baseline
${HICM_Alert1_stg_star_3_end}    \  with firmware version 4.50 2016-04-14T07:06:49Z from baseline


@{LI_u_vc_names}=    ${ICM_NAME3}

@{LI_vc_names}=    ${ICM_NAME5}
...             ${ICM_NAME6}

@{LI_names}=    ${ICM_NAME1}
...             ${ICM_NAME2}
...             ${ICM_NAME4}

@{LI_namesall}=    ${ICM_NAME1}
...             ${ICM_NAME2}
...             ${ICM_NAME3}
...             ${ICM_NAME4}
...             ${ICM_NAME5}
...             ${ICM_NAME6}



*** Test Cases ***


###############  F1212_TC_API_02 Verify that oneview 3.0 should allow Staging of firmware of hill and VC modules without force flag (upgrade) #######################

TC01 Verify that oneview 3.0 should allow Staging of firmware of hill and VC modules without force flag (upgrade)
    [Documentation]       "3.1.2 : Verify that oneview 3.0 should allow Staging of firmware of hill and VC modules without force flag (upgrade)"
    Log to Console  Testcase_ID: TP section 1.3.1.2 API Test Cases F1212_TC_API_02: Verify that oneview 3.0 should allow Staging of firmware of hill and VC modules without force flag (upgrade)
    [Tags]   Performance  firmware-condition-li_upgrade
    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}

    ${del_resp}=    fusion_api_delete_alert    /rest/alerts
    Log    ${del_resp}
#   ${body} =   Build LI SPP body   ${Demo_li_spp_upgrade1_test_stg_higher}

    ${li_uri} =     Get LI URI   ${li}

    ${resp1} =    fusion_api_li_upgrade_firmware     body=${Demo_li_spp_upgrade1_test_stg_higher}       uri=${li_uri}
    Log     ${resp1}
    ${task} =       Wait For Task   ${resp1}    65 min      15s
    Log     ${task}
    Log to Console      ${task}

    ${valDict} =    Create Dictionary   status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}
    Log to Console  \nStage Firmware Upgrade complete
    Sleep   1 minutes 1 seconds

    Log to Console  Validate interconnect firmware version after firmwareupgrade is complete


    : FOR    ${BICM_NAME}    IN    @{LI_namesall}

    \    ${ic} =     Get IC             ${BICM_NAME}
    \    Log    ${BICM_NAME}
    \    ${ic_bay_number} =    Split String   ${BICM_NAME}   ","

    \    Log    ${ic_bay_number}

    \    ${ic_bay_number} =     Get From List    ${ic_bay_number}    0
    \    Log    ${ic_bay_number}


    \    ${ic_bay_number} =     Get From List    ${ic_bay_number}    25
    \    Log    ${ic_bay_number}
    \    ${firmwareVersion} =     Get From IC    ${ic}   firmwareVersion
    \    ${firmwareVersion_upgrade} =      verify_c7k_ic_version    ${ic_bay_number}    ${IP}
    \    ${version}=    Should Contain    ${firmwareVersion}    ${firmwareVersion_upgrade}
    \    Should Be Equal As Strings    ${firmwareVersion}       ${firmwareVersion_upgrade}
    \    Log    Validated the firmvare version
    \    Log    ${BICM_NAME}
    \    ${icstate} =     Get From IC    ${ic}   state
    \    Should Be Equal As Strings    ${icstate}       Configured
    \    Log to Console    Validated the ICstate for
    \    Log    ${BICM_NAME}
    Log to Console    Validated the Firmware version by compare with ICM and From API
    Log to Console  \nFirmware version verification  complete
#   Fusion Api Logout Appliance


    ######## Verify The ALERTS  #########################
#   Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}
    ${alerts} =    fusion_api_get_alerts    /rest/alerts

#    Run Keyword and Continue on Failure       Should Contain       '${Alert_List}'     ${RR_BB}    Expected Error Message Not seen
    : FOR    ${BICM_NAME}    IN    @{LI_names}
    # ${finalstring}    Catenate    Hello    World
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${HICM_Alert1_stg_str_end}
    \    Log to Console    ${Al_stg_str}
    \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${HICM_Alert1_stg_succ_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen

    : FOR    ${BICM_NAME}    IN    @{LI_vc_names}
    # ${finalstring}    Catenate    Hello    World
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${HICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_stg_str}
    \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${HICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen

    : FOR    ${BICM_NAME}    IN    @{LI_u_vc_names}
    # ${finalstring}    Catenate    Hello    World
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${HICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_stg_str}
    \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${HICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    Fusion Api Logout Appliance

    ###############  Activate already staged firmware : F1212_TC_API_11 Verify the activation of firmware of hill and VC modules using Parallel mode which has firmware already staged.( for G3 enclosure) #######################
TC02 Verify the activation of firmware of hill and VC modules using Parallel mode which has firmware already staged
    [Documentation] "3.1.2 : Verify the activation of firmware of hill and VC modules using Parallel mode which has firmware already staged.( for G3 enclosure)"
    Log to Console  Testcase_ID: TP section 1.3.1.2 API Test Cases F1212_TC_API_11: Verify the activation of firmware of hill and VC modules using Parallel mode which has firmware already staged.( for G3 enclosure)
    [Tags]   Performance  firmware-condition-li_upgrade
    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}

#   ${del_resp}=    fusion_api_delete_alert    /rest/alerts
#   Log    ${del_resp}

#   ${body} =   Build LI SPP body   ${Demo_li_spp_upgrade5_test_higher}

    ${li_uri} =     Get LI URI   ${li}
    ${resp1} =  Fusion Api Li Upgrade Firmware  body=${Demo_li_spp_upgrade5_test_higher}        uri=${li_uri}
#   ${resp1} =    fusion_api_li_upgrade_firmware        uri=${li_uri}
    Log     ${resp1}
    ${task} =       Wait For Task   ${resp1}    60 min      18s
    Log to Console      "Hi am in validate"
    Log     ${task}
    Log to Console      ${task}

    ${valDict} =    Create Dictionary   status_code=${200}
    ...                                 taskState=Completed
    Validate Response   ${task} ${valDict}
    Log to Console  \nStage Firmware Upgrade complete
    Sleep   1 minutes 1 seconds


    Log to Console  Validate interconnect firmware version after firmwareupgrade is complete

    : FOR    ${BICM_NAME}    IN    @{LI_namesall}

    \    ${ic} =     Get IC             ${BICM_NAME}
    \    Log    ${BICM_NAME}
    \    ${ic_bay_number} =    Split String   ${BICM_NAME}   ","

    \    Log    ${ic_bay_number}

    \    ${ic_bay_number} =     Get From List    ${ic_bay_number}    0
    \    Log    ${ic_bay_number}


    \    ${ic_bay_number} =     Get From List    ${ic_bay_number}    25
    \    Log    ${ic_bay_number}
    \    ${firmwareVersion} =     Get From IC    ${ic}   firmwareVersion
    \    ${firmwareVersion_upgrade} =      verify_c7k_ic_version    ${ic_bay_number}    ${IP}
    \    ${version}=    Should Contain    ${firmwareVersion}    ${firmwareVersion_upgrade}
    \    Should Be Equal As Strings    ${firmwareVersion}       ${firmwareVersion_upgrade}
    \    Log    Validated the firmvare version
    \    Log    ${BICM_NAME}
    \    ${icstate} =     Get From IC    ${ic}   state
    \    Should Be Equal As Strings    ${icstate}       Configured
    \    Log to Console    Validated the ICstate for
    \    Log    ${BICM_NAME}
    Log to Console    Validated the Firmware version by compare with ICM and From API
    Log to Console  \nFirmware version verification  complete
#   Fusion Api Logout Appliance


#   Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}

    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    Log to Console    ${alerts}
    Log     ${alerts}
#    Run Keyword and Continue on Failure       Should Contain       '${Alert_List}'     ${RR_BB}    Expected Error Message Not seen
    : FOR    ${BICM_NAME}    IN    @{LI_names}
    # ${finalstring}    Catenate    Hello    World
#   \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_str_end}
#   \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
#   \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


#   \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_succ_end}
#   \    Log to Console    ${Al_stg_suc}
#   \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${HICM_Alert1_act_star_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${HICM_Alert1_act_succ_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen


    : FOR    ${BICM_NAME}    IN    @{LI_vc_names}
    # ${finalstring}    Catenate    Hello    World
#   \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_star_1_end}
#   \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
#   \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


#   \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star_1_end}
#   \    Log to Console    ${Al_stg_suc}
#   \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${HICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${HICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen

    : FOR    ${BICM_NAME}    IN    @{LI_u_vc_names}
    # ${finalstring}    Catenate    Hello    World
#   \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_star_2_end}
#   \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
#   \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


#   \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star_2_end}
#   \    Log to Console    ${Al_stg_suc}
#   \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${HICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${HICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen

    Fusion Api Logout Appliance


    ###### Downgrade of firmware on HILL Interconnects (STAGE) Verify downgrading the firmware : Verify the staging of firmware of hill and VC modules which is lesser than currently installed version######
TC03 Verify that oneview 3.0 should allow Staging of firmware of hill and VC modules with force flag (Downgrade)
    [Documentation] "3.1.2 F1212_TC_API_01 and F1212_TC_API_04:Verify that oneview 3.0 should allow Staging of firmware of hill and VC modules with force flag (Downgrade)"
    Log to Console  Testcase_ID: TP section 1.3.1.2 API Test Cases F1212_TC_API_01 and F1212_TC_API_04: Verify that oneview 3.0 should allow Staging of firmware of hill and VC modules with force flag (Downgrade)
    [Tags]   Performance  firmware-condition-li_upgrade
    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}

#   ${del_resp}=    fusion_api_delete_alert    /rest/alerts
#   Log    ${del_resp}

#   ${body} =   Build LI SPP body   ${Demo_li_spp_upgrade1_test_stg_lower}

    ${li_uri} =     Get LI URI   ${li}

    ${resp1} =    fusion_api_li_upgrade_firmware    body=${Demo_li_spp_upgrade1_test_stg_lower}     uri=${li_uri}
    Log     ${resp1}
    ${task} =       Wait For Task   ${resp1}    60 min      2s

    Log     ${task}
    Log to Console      ${task}

    ${valDict} =    Create Dictionary   status_code=${200}
    ...                                 taskState=Completed
    Validate Response   ${task} ${valDict}
    Log to Console  \nStage Firmware Upgrade complete
    Sleep   1 minutes 1 seconds


    Log to Console  Validate interconnect firmware version after firmwareupgrade is complete

    : FOR    ${BICM_NAME}    IN    @{LI_namesall}

    \    ${ic} =     Get IC             ${BICM_NAME}
    \    Log    ${BICM_NAME}
    \    ${ic_bay_number} =    Split String   ${BICM_NAME}   ","

    \    Log    ${ic_bay_number}

    \    ${ic_bay_number} =     Get From List    ${ic_bay_number}    0
    \    Log    ${ic_bay_number}


    \    ${ic_bay_number} =     Get From List    ${ic_bay_number}    25
    \    Log    ${ic_bay_number}
    \    ${firmwareVersion} =     Get From IC    ${ic}   firmwareVersion
    \    ${firmwareVersion_upgrade} =      verify_c7k_ic_version    ${ic_bay_number}    ${IP}
    \    ${version}=    Should Contain    ${firmwareVersion}    ${firmwareVersion_upgrade}
    \    Should Be Equal As Strings    ${firmwareVersion}       ${firmwareVersion_upgrade}
    \    Log    Validated the firmvare version
    \    Log    ${BICM_NAME}
    \    ${icstate} =     Get From IC    ${ic}   state
    \    Should Be Equal As Strings    ${icstate}       Configured
    \    Log to Console    Validated the ICstate for
    \    Log    ${BICM_NAME}
    Log to Console    Validated the Firmware version by compare with ICM and From API
    Log to Console  \nFirmware version verification  complete
#   Fusion Api Logout Appliance

#TC02 verifyalerts
#   Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}

    ${alerts} =    fusion_api_get_alerts    /rest/alerts

    Log     ${alerts}
#    Run Keyword and Continue on Failure       Should Contain       '${Alert_List}'     ${RR_BB}    Expected Error Message Not seen
    : FOR    ${BICM_NAME}    IN    @{LI_names}
    # ${finalstring}    Catenate    Hello    World
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_str_end}
    \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_succ_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


#   \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${ICM_Alert1_act_star_end}
#   \    Log to Console    ${Al_act_str}
#   \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

#   \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${ICM_Alert1_act_succ_end}
#   \    Log to Console    ${Al_act_succ}
#   \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen


    : FOR    ${BICM_NAME}    IN    @{LI_vc_names}
    # ${finalstring}    Catenate    Hello    World
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


#   \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${ICM_Alert1_stg_star_1_end}
#   \    Log to Console    ${Al_act_str}
#   \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

#   \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${ICM_Alert1_stg_star_1_end}
#   \    Log to Console    ${Al_act_succ}
#   \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen

    : FOR    ${BICM_NAME}    IN    @{LI_u_vc_names}
    # ${finalstring}    Catenate    Hello    World
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


#   \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${ICM_Alert1_stg_star_2_end}
#   \    Log to Console    ${Al_act_str}
#   \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

#   \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${ICM_Alert1_stg_star_2_end}
#   \    Log to Console    ${Al_act_succ}
#   \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen

    Fusion Api Logout Appliance
TC04 Verify the staging of firmware of hill and VC modules which is lesser than currently installed version
    [Documentation] "3.1.2 F1212_TC_API_04:Verify the staging of firmware of hill and VC modules which is lesser than currently installed version"
    Log to Console  Testcase_ID: TP section 1.3.1.2 API Test Cases F1212_TC_API_04:Verify the staging of firmware of hill and VC modules which is lesser than currently installed version

    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}

#   ${del_resp}=    fusion_api_delete_alert    /rest/alerts
#   Log    ${del_resp}

#   ${body} =   Build LI SPP body   ${Demo_li_spp_upgrade1_test_stg_lower}

    ${li_uri} =     Get LI URI   ${li}

    ${resp1} =    fusion_api_li_upgrade_firmware    body=${Demo_li_spp_upgrade1_test_stg_lower}     uri=${li_uri}
    Log     ${resp1}
    ${task} =       Wait For Task   ${resp1}    60 min      2s

    Log     ${task}
    Log to Console      ${task}

    ${valDict} =    Create Dictionary   status_code=${200}
    ...                                 taskState=Completed
    Validate Response   ${task} ${valDict}
    Log to Console  \nStage Firmware Upgrade complete
    Sleep   1 minutes 1 seconds


    Log to Console  Validate interconnect firmware version after firmwareupgrade is complete

    : FOR    ${BICM_NAME}    IN    @{LI_namesall}

    \    ${ic} =     Get IC             ${BICM_NAME}
    \    Log    ${BICM_NAME}
    \    ${ic_bay_number} =    Split String   ${BICM_NAME}   ","

    \    Log    ${ic_bay_number}

    \    ${ic_bay_number} =     Get From List    ${ic_bay_number}    0
    \    Log    ${ic_bay_number}


    \    ${ic_bay_number} =     Get From List    ${ic_bay_number}    25
    \    Log    ${ic_bay_number}
    \    ${firmwareVersion} =     Get From IC    ${ic}   firmwareVersion
    \    ${firmwareVersion_upgrade} =      verify_c7k_ic_version    ${ic_bay_number}    ${IP}
    \    ${version}=    Should Contain    ${firmwareVersion}    ${firmwareVersion_upgrade}
    \    Should Be Equal As Strings    ${firmwareVersion}       ${firmwareVersion_upgrade}
    \    Log    Validated the firmvare version
    \    Log    ${BICM_NAME}
    \    ${icstate} =     Get From IC    ${ic}   state
    \    Should Be Equal As Strings    ${icstate}       Configured
    \    Log to Console    Validated the ICstate for
    \    Log    ${BICM_NAME}
    Log to Console    Validated the Firmware version by compare with ICM and From API
    Log to Console  \nFirmware version verification  complete
#   Fusion Api Logout Appliance

#TC02 verifyalerts
#   Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}

    ${alerts} =    fusion_api_get_alerts    /rest/alerts

    Log     ${alerts}
#    Run Keyword and Continue on Failure       Should Contain       '${Alert_List}'     ${RR_BB}    Expected Error Message Not seen
    : FOR    ${BICM_NAME}    IN    @{LI_names}
    # ${finalstring}    Catenate    Hello    World
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_str_end}
    \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_succ_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


#   \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${ICM_Alert1_act_star_end}
#   \    Log to Console    ${Al_act_str}
#   \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

#   \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${ICM_Alert1_act_succ_end}
#   \    Log to Console    ${Al_act_succ}
#   \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen


    : FOR    ${BICM_NAME}    IN    @{LI_vc_names}
    # ${finalstring}    Catenate    Hello    World
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


#   \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${ICM_Alert1_stg_star_1_end}
#   \    Log to Console    ${Al_act_str}
#   \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

#   \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${ICM_Alert1_stg_star_1_end}
#   \    Log to Console    ${Al_act_succ}
#   \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen

    : FOR    ${BICM_NAME}    IN    @{LI_u_vc_names}
    # ${finalstring}    Catenate    Hello    World
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


#   \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${ICM_Alert1_stg_star_2_end}
#   \    Log to Console    ${Al_act_str}
#   \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

#   \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${ICM_Alert1_stg_star_2_end}
#   \    Log to Console    ${Al_act_succ}
#   \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen

    Fusion Api Logout Appliance



    #### ACTIVATION for DOwngrade #######
TC05 Verify the activation of firmware of hill and vc modules using Odd Even mode Downgrade for G3 enclosure

    [Documentation] "3.1.2 F1212_TC_API_10:Verify the activation of firmware of hill and vc modules using Odd Even mode (Downgrade for G3 enclosure)"
    Log to Console  Testcase_ID: TP section 1.3.1.2 API Test Cases F1212_TC_API_10: Verify the activation of firmware of hill and vc modules using Odd/Even mode (Downgrade for G3 enclosure)
    [Tags]   Performance  firmware-condition-li_upgrade
    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}

    ${del_resp}=    fusion_api_delete_alert    /rest/alerts
    Log    ${del_resp}

#   ${body} =   Build LI SPP body   ${Demo_li_spp_upgrade5_test_act_lower}

    ${li_uri} =     Get LI URI   ${li}
#   ${resp1} =    Fusion Api Li Upgrade Firmware    body=${body}        uri=${li_uri}
    ${resp1} =    fusion_api_li_upgrade_firmware    body=${Demo_li_spp_upgrade5_test_act_lower}     uri=${li_uri}
    Log     ${resp1}
    ${task} =       Wait For Task   ${resp1}    60 min      18s
    Log to Console      "Hi am in validate"
    Log     ${task}
    Log to Console      ${task}

    ${valDict} =    Create Dictionary   status_code=${200}
    ...                                 taskState=Completed
    Validate Response   ${task} ${valDict}
    Log to Console  \nStage Firmware Upgrade complete
    Sleep   1 minutes 1 seconds


    Log to Console  Validate interconnect firmware version after firmwareupgrade is complete

    : FOR    ${BICM_NAME}    IN    @{LI_namesall}

    \    ${ic} =     Get IC             ${BICM_NAME}
    \    Log    ${BICM_NAME}
    \    ${ic_bay_number} =    Split String   ${BICM_NAME}   ","

    \    Log    ${ic_bay_number}

    \    ${ic_bay_number} =     Get From List    ${ic_bay_number}    0
    \    Log    ${ic_bay_number}


    \    ${ic_bay_number} =     Get From List    ${ic_bay_number}    25
    \    Log    ${ic_bay_number}
    \    ${firmwareVersion} =     Get From IC    ${ic}   firmwareVersion
    \    ${firmwareVersion_upgrade} =      verify_c7k_ic_version    ${ic_bay_number}    ${IP}
    \    ${version}=    Should Contain    ${firmwareVersion}    ${firmwareVersion_upgrade}
    \    Should Be Equal As Strings    ${firmwareVersion}       ${firmwareVersion_upgrade}
    \    Log    Validated the firmvare version
    \    Log    ${BICM_NAME}
    \    ${icstate} =     Get From IC    ${ic}   state
    \    Should Be Equal As Strings    ${icstate}       Configured
    \    Log to Console    Validated the ICstate for
    \    Log    ${BICM_NAME}
    Log to Console    Validated the Firmware version by compare with ICM and From API
    Log to Console  \nFirmware version verification  complete
#   Fusion Api Logout Appliance


#   Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}

    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    Log to Console    ${alerts}
    Log     ${alerts}
#    Run Keyword and Continue on Failure       Should Contain       '${Alert_List}'     ${RR_BB}    Expected Error Message Not seen
    : FOR    ${BICM_NAME}    IN    @{LI_names}
    # ${finalstring}    Catenate    Hello    World
#   \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_str_end}
#   \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
#   \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


#   \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_succ_end}
#   \    Log to Console    ${Al_stg_suc}
#   \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${ICM_Alert1_act_star_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${ICM_Alert1_act_succ_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen


    : FOR    ${BICM_NAME}    IN    @{LI_vc_names}
    # ${finalstring}    Catenate    Hello    World
#   \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_star_1_end}
#   \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
#   \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


#   \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star_1_end}
#   \    Log to Console    ${Al_stg_suc}
#   \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${ICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${ICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen

    : FOR    ${BICM_NAME}    IN    @{LI_u_vc_names}
    # ${finalstring}    Catenate    Hello    World
#   \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_star_2_end}
#   \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
#   \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


#   \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star_2_end}
#   \    Log to Console    ${Al_stg_suc}
#   \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${ICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${ICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen

    Fusion Api Logout Appliance

    ################### installed same version with force flag (Staging)  ###############################
TC06 Verify the staging of firmware of hill and VC modules which is same as currently installed version with force flag
    [Documentation] "3.1.2 F1212_TC_API_03 and F1212_TC_API_05 :Verify the staging of firmware of hill and VC modules which is same as currently installed version with force flag"
    Log to Console  Testcase_ID: TP section 1.3.1.2 API Test Cases F1212_TC_API_03: Verify the staging of firmware of hill and VC modules which is same as currently installed version with force flag
    [Tags]   Performance  firmware-condition-li_upgrade
    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}

#   ${del_resp}=    fusion_api_delete_alert    /rest/alerts
#   Log    ${del_resp}

#   ${body} =   Build LI SPP body   ${Demo_li_spp_UPGRADEgrade1_test_stg_lower}

    ${li_uri} =     Get LI URI   ${li}
#   ${resp1} =  Fusion Api Li Upgrade Firmware     body=${body}     uri=${li_uri}
    ${resp1} =    fusion_api_li_upgrade_firmware    body=${Demo_li_spp_UPGRADEgrade1_test_stg_lower}        uri=${li_uri}
    Log     ${resp1}
    ${task} =       Wait For Task   ${resp1}    60 min      18s

    Log     ${task}
    Log to Console      ${task}

    ${valDict} =    Create Dictionary   status_code=${200}
    ...                                 taskState=Completed
    Validate Response   ${task} ${valDict}
    Log to Console  \nStage Firmware Upgrade complete
    Sleep   1 minutes 1 seconds


    Log to Console  Validate interconnect firmware version after firmwareupgrade is complete

    : FOR    ${BICM_NAME}    IN    @{LI_namesall}

    \    ${ic} =     Get IC             ${BICM_NAME}
    \    Log    ${BICM_NAME}
    \    ${ic_bay_number} =    Split String   ${BICM_NAME}   ","

    \    Log    ${ic_bay_number}

    \    ${ic_bay_number} =     Get From List    ${ic_bay_number}    0
    \    Log    ${ic_bay_number}


    \    ${ic_bay_number} =     Get From List    ${ic_bay_number}    25
    \    Log    ${ic_bay_number}
    \    ${firmwareVersion} =     Get From IC    ${ic}   firmwareVersion
    \    ${firmwareVersion_upgrade} =      verify_c7k_ic_version    ${ic_bay_number}    ${IP}
    \    ${version}=    Should Contain    ${firmwareVersion}    ${firmwareVersion_upgrade}
    \    Should Be Equal As Strings    ${firmwareVersion}       ${firmwareVersion_upgrade}
    \    Log    Validated the firmvare version
    \    Log    ${BICM_NAME}
    \    ${icstate} =     Get From IC    ${ic}   state
    \    Should Be Equal As Strings    ${icstate}       Configured
    \    Log to Console    Validated the ICstate for
    \    Log    ${BICM_NAME}
    Log to Console    Validated the Firmware version by compare with ICM and From API
    Log to Console  \nFirmware version verification  complete
#   Fusion Api Logout Appliance

#TC02 verifyalerts
#   Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}

    ${alerts} =    fusion_api_get_alerts    /rest/alerts

    Log     ${alerts}
#    Run Keyword and Continue on Failure       Should Contain       '${Alert_List}'     ${RR_BB}    Expected Error Message Not seen
    : FOR    ${BICM_NAME}    IN    @{LI_names}
    # ${finalstring}    Catenate    Hello    World
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${HICM_Alert1_stg_str_end}
    \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${HICM_Alert1_stg_succ_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


#   \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${ICM_Alert1_act_star_end}
#   \    Log to Console    ${Al_act_str}
#   \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

#   \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${ICM_Alert1_act_succ_end}
#   \    Log to Console    ${Al_act_succ}
#   \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen


    : FOR    ${BICM_NAME}    IN    @{LI_vc_names}
    # ${finalstring}    Catenate    Hello    World
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${HICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${HICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


#   \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${ICM_Alert1_stg_star_1_end}
#   \    Log to Console    ${Al_act_str}
#   \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

#   \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${ICM_Alert1_stg_star_1_end}
#   \    Log to Console    ${Al_act_succ}
#   \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen

    : FOR    ${BICM_NAME}    IN    @{LI_u_vc_names}
    # ${finalstring}    Catenate    Hello    World
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${HICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${HICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


#   \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${ICM_Alert1_stg_star_2_end}
#   \    Log to Console    ${Al_act_str}
#   \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

#   \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${ICM_Alert1_stg_star_2_end}
#   \    Log to Console    ${Al_act_succ}
#   \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen

    Fusion Api Logout Appliance


    ################### installed same version with force flag (Activation)  ###############################
TC07 Verify the activation of firmware of hill module which has firmware already staged using serial mode (for G3 enclosure)
    [Documentation] "3.1.2 F1212_TC_API_15 and F1212_TC_API_05:Verify the activation of firmware of hill module which has firmware already staged using serial mode (for G3 enclosure)"
    Log to Console  Testcase_ID: TP section 1.3.1.2 API Test Cases F1212_TC_API_15 and F1212_TC_API_05: Verify the activation of firmware of hill module which has firmware already staged using serial mode (for G3 enclosure)
    [Tags]   Performance  firmware-condition-li_upgrade
    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}

#   ${del_resp}=    fusion_api_delete_alert    /rest/alerts
#   Log    ${del_resp}

#   ${body} =   Build LI SPP body   ${Demo_li_spp_LIUPGRADEgrade5_test_act_lower}

    ${li_uri} =     Get LI URI   ${li}
    ${resp1} =    fusion_api_li_upgrade_firmware      body=${Demo_li_spp_LIUPGRADEgrade5_test_act_lower}        uri=${li_uri}
    Log     ${resp1}
    ${task} =       Wait For Task   ${resp1}    60 min      18s
    Log to Console      "Hi am in validate"
    Log     ${task}
    Log to Console      ${task}

    ${valDict} =    Create Dictionary   status_code=${200}
    ...                                 taskState=Completed
    Validate Response   ${task} ${valDict}
    Log to Console  \nStage Firmware Upgrade complete
    Sleep   1 minutes 1 seconds


    Log to Console  Validate interconnect firmware version after firmwareupgrade is complete

    : FOR    ${BICM_NAME}    IN    @{LI_namesall}

    \    ${ic} =     Get IC             ${BICM_NAME}
    \    Log    ${BICM_NAME}
    \    ${ic_bay_number} =    Split String   ${BICM_NAME}   ","

    \    Log    ${ic_bay_number}

    \    ${ic_bay_number} =     Get From List    ${ic_bay_number}    0
    \    Log    ${ic_bay_number}


    \    ${ic_bay_number} =     Get From List    ${ic_bay_number}    25
    \    Log    ${ic_bay_number}
    \    ${firmwareVersion} =     Get From IC    ${ic}   firmwareVersion
    \    ${firmwareVersion_upgrade} =      verify_c7k_ic_version    ${ic_bay_number}    ${IP}
    \    ${version}=    Should Contain    ${firmwareVersion}    ${firmwareVersion_upgrade}
    \    Should Be Equal As Strings    ${firmwareVersion}       ${firmwareVersion_upgrade}
    \    Log    Validated the firmvare version
    \    Log    ${BICM_NAME}
    \    ${icstate} =     Get From IC    ${ic}   state
    \    Should Be Equal As Strings    ${icstate}       Configured
    \    Log to Console    Validated the ICstate for
    \    Log    ${BICM_NAME}
    Log to Console    Validated the Firmware version by compare with ICM and From API
    Log to Console  \nFirmware version verification  complete
#   Fusion Api Logout Appliance


#   Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}

    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    Log to Console    ${alerts}
    Log     ${alerts}
#    Run Keyword and Continue on Failure       Should Contain       '${Alert_List}'     ${RR_BB}    Expected Error Message Not seen
    : FOR    ${BICM_NAME}    IN    @{LI_names}
    # ${finalstring}    Catenate    Hello    World
#   \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_str_end}
#   \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
#   \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


#   \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_succ_end}
#   \    Log to Console    ${Al_stg_suc}
#   \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${HICM_Alert1_act_star_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${HICM_Alert1_act_succ_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen


    : FOR    ${BICM_NAME}    IN    @{LI_vc_names}
    # ${finalstring}    Catenate    Hello    World
#   \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_star_1_end}
#   \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
#   \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


#   \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star_1_end}
#   \    Log to Console    ${Al_stg_suc}
#   \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${HICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${HICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen

    : FOR    ${BICM_NAME}    IN    @{LI_u_vc_names}
    # ${finalstring}    Catenate    Hello    World
#   \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_star_2_end}
#   \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
#   \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


#   \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star_2_end}
#   \    Log to Console    ${Al_stg_suc}
#   \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${HICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${HICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen

    Fusion Api Logout Appliance


TC08 Verify the staging firmware should success with FIPS mode enabled on all Hill modules
    [Documentation] "3.1.2 F1212_TC_API_05: Verify the staging firmware should success with FIPS mode enabled on all Hill modules"
    Log to Console  Testcase_ID: TP section 1.3.1.2 API Test Cases F1212_TC_API_05:Verify the staging firmware should success with FIPS mode enabled on all Hill modules

    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}

#   ${del_resp}=    fusion_api_delete_alert    /rest/alerts
#   Log    ${del_resp}

#   ${body} =   Build LI SPP body   ${Demo_li_spp_LIUPGRADEgrade5_test_act_lower}

    ${li_uri} =     Get LI URI   ${li}
    ${resp1} =    fusion_api_li_upgrade_firmware      body=${Demo_li_spp_LIUPGRADEgrade5_test_act_lower}        uri=${li_uri}
    Log     ${resp1}
    ${task} =       Wait For Task   ${resp1}    60 min      18s
    Log to Console      "Hi am in validate"
    Log     ${task}
    Log to Console      ${task}

    ${valDict} =    Create Dictionary   status_code=${200}
    ...                                 taskState=Completed
    Validate Response   ${task} ${valDict}
    Log to Console  \nStage Firmware Upgrade complete
    Sleep   1 minutes 1 seconds


    Log to Console  Validate interconnect firmware version after firmwareupgrade is complete

    : FOR    ${BICM_NAME}    IN    @{LI_namesall}

    \    ${ic} =     Get IC             ${BICM_NAME}
    \    Log    ${BICM_NAME}
    \    ${ic_bay_number} =    Split String   ${BICM_NAME}   ","

    \    Log    ${ic_bay_number}

    \    ${ic_bay_number} =     Get From List    ${ic_bay_number}    0
    \    Log    ${ic_bay_number}


    \    ${ic_bay_number} =     Get From List    ${ic_bay_number}    25
    \    Log    ${ic_bay_number}
    \    ${firmwareVersion} =     Get From IC    ${ic}   firmwareVersion
    \    ${firmwareVersion_upgrade} =      verify_c7k_ic_version    ${ic_bay_number}    ${IP}
    \    ${version}=    Should Contain    ${firmwareVersion}    ${firmwareVersion_upgrade}
    \    Should Be Equal As Strings    ${firmwareVersion}       ${firmwareVersion_upgrade}
    \    Log    Validated the firmvare version
    \    Log    ${BICM_NAME}
    \    ${icstate} =     Get From IC    ${ic}   state
    \    Should Be Equal As Strings    ${icstate}       Configured
    \    Log to Console    Validated the ICstate for
    \    Log    ${BICM_NAME}
    Log to Console    Validated the Firmware version by compare with ICM and From API
    Log to Console  \nFirmware version verification  complete
#   Fusion Api Logout Appliance


#   Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}

    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    Log to Console    ${alerts}
    Log     ${alerts}
#    Run Keyword and Continue on Failure       Should Contain       '${Alert_List}'     ${RR_BB}    Expected Error Message Not seen
    : FOR    ${BICM_NAME}    IN    @{LI_names}
    # ${finalstring}    Catenate    Hello    World
#   \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_str_end}
#   \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
#   \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


#   \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_succ_end}
#   \    Log to Console    ${Al_stg_suc}
#   \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${HICM_Alert1_act_star_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${HICM_Alert1_act_succ_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen


    : FOR    ${BICM_NAME}    IN    @{LI_vc_names}
    # ${finalstring}    Catenate    Hello    World
#   \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_star_1_end}
#   \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
#   \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


#   \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star_1_end}
#   \    Log to Console    ${Al_stg_suc}
#   \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${HICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${HICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen

    : FOR    ${BICM_NAME}    IN    @{LI_u_vc_names}
    # ${finalstring}    Catenate    Hello    World
#   \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_star_2_end}
#   \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
#   \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


#   \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star_2_end}
#   \    Log to Console    ${Al_stg_suc}
#   \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${HICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${HICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen

    Fusion Api Logout Appliance



    ############ FIRMWARE UPDATE (STAGING + ACTIVATION ) #######################
TC09 Verify the FW Update operation (Stage + Activate) of hill and VC modules using parallel mode without force flag (upgrade)
    [Documentation] "3.1.2 F1212_TC_API_20:Verify the FW Update operation (Stage + Activate) of hill and VC modules using parallel mode without force flag (upgrade)"
    Log to Console  Testcase_ID: TP section 1.3.1.2 API Test Cases F1212_TC_API_20: Verify the FW Update operation (Stage + Activate) of hill and VC modules using parallel mode without force flag (upgrade)
    [Tags]   Performance  firmware-condition-li_upgrade
    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}

    ${del_resp}=    fusion_api_delete_alert    /rest/alerts
    Log    ${del_resp}

#   ${body} =   Build LI SPP body   ${Demo_New_li_spp_upgrade_li_tst_h}

    ${li_uri} =     Get LI URI   ${li}
    ${resp1} =  Fusion Api Li Upgrade Firmware  body=${Demo_New_li_spp_upgrade_li_tst_h}        uri=${li_uri}
    Log     ${resp1}
    ${task} =     Wait For Task    ${resp1}    65 min    5s

    Log     ${task}
    Log to Console      ${task}

    ${valDict} =    Create Dictionary   status_code=${200}
    ...                                 taskState=Completed
    Validate Response   ${task} ${valDict}
    Log to Console  \nStage Firmware Upgrade complete
    Sleep   1 minutes 1 seconds


    Log to Console  Validate interconnect firmware version after firmwareupgrade is complete

    : FOR    ${BICM_NAME}    IN    @{LI_namesall}

    \    ${ic} =     Get IC             ${BICM_NAME}
    \    Log    ${BICM_NAME}
    \    ${ic_bay_number} =    Split String   ${BICM_NAME}   ","

    \    Log    ${ic_bay_number}

    \    ${ic_bay_number} =     Get From List    ${ic_bay_number}    0
    \    Log    ${ic_bay_number}


    \    ${ic_bay_number} =     Get From List    ${ic_bay_number}    25
    \    Log    ${ic_bay_number}
    \    ${firmwareVersion} =     Get From IC    ${ic}   firmwareVersion
    \    ${firmwareVersion_upgrade} =      verify_c7k_ic_version    ${ic_bay_number}    ${IP}
    \    ${version}=    Should Contain    ${firmwareVersion}    ${firmwareVersion_upgrade}
    \    Should Be Equal As Strings    ${firmwareVersion}       ${firmwareVersion_upgrade}
    \    Log    Validated the firmvare version
    \    Log    ${BICM_NAME}
    \    ${icstate} =     Get From IC    ${ic}   state
    \    Should Be Equal As Strings    ${icstate}       Configured
    \    Log to Console    Validated the ICstate for
    \    Log    ${BICM_NAME}
    Log to Console    Validated the Firmware version by compare with ICM and From API
    Log to Console  \nFirmware version verification  complete
#   Fusion Api Logout Appliance


#   Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}

    ${alerts} =    fusion_api_get_alerts    /rest/alerts

    Log     ${alerts}
#    Run Keyword and Continue on Failure       Should Contain       '${Alert_List}'     ${RR_BB}    Expected Error Message Not seen
    : FOR    ${BICM_NAME}    IN    @{LI_names}
    # ${finalstring}    Catenate    Hello    World
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${HICM_Alert1_stg_str_end}
    \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${HICM_Alert1_stg_succ_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${HICM_Alert1_act_star_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${HICM_Alert1_act_succ_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen


    : FOR    ${BICM_NAME}    IN    @{LI_vc_names}
    # ${finalstring}    Catenate    Hello    World
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${HICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${HICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${HICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${HICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen

    : FOR    ${BICM_NAME}    IN    @{LI_u_vc_names}
    # ${finalstring}    Catenate    Hello    World
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${HICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${HICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${HICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${HICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen

    Fusion Api Logout Appliance

   ############# UPDATE FIRMWARE (STAGING + ACTIVATION ) using PARALLEL MODE ########################
TC10 Verify the FW Update operation (Stage + Activate) of hill and VC modules using parallel mode with force flag downgrade
    [Documentation] "3.1.2 F1212_TC_API_19 and F1212_TC_API_27(G1) and F1212_TC_API_29(G2) and F1212_TC_API_61:Verify the FW Update operation (Stage + Activate) of hill and VC modules using parallel mode with force flag(G3 enclosure)(downgrade)."
    Log to Console  Testcase_ID: TP section 1.3.1.2 API Test Cases F1212_TC_API_19 and F1212_TC_API_26(G1) and F1212_TC_API_29(G2) and F1212_TC_API_61: Verify the FW Update operation (Stage + Activate) of hill and VC modules using parallel mode with force flag(G3 enclosure)(downgrade)
    [Tags]   Performance  firmware-condition-li_upgrade
    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}

    ${del_resp}=    fusion_api_delete_alert    /rest/alerts
    Log    ${del_resp}

#   ${body} =   Build LI SPP body   ${demo_New_li_spp_downgrade_li_tst_lower_l}
#   Log     ${body}
    ${li_uri} =     Get LI URI   ${li}
    ${resp1} =    fusion_api_li_upgrade_firmware     body=${demo_New_li_spp_downgrade_li_tst_lower_l}       uri=${li_uri}
    Log     ${resp1}
    ${task} =       Wait For Task   ${resp1}    60 min      18s

    Log     ${task}
    Log to Console      ${task}

    ${valDict} =    Create Dictionary   status_code=${200}
    ...                                 taskState=Completed
    Validate Response   ${task} ${valDict}
    Log to Console  \nStage Firmware Upgrade complete
    Sleep   1 minutes 1 seconds


    Log to Console  Validate interconnect firmware version after firmwareupgrade is complete

    : FOR    ${BICM_NAME}    IN    @{LI_namesall}

    \    ${ic} =     Get IC             ${BICM_NAME}
    \    Log    ${BICM_NAME}
    \    ${ic_bay_number} =    Split String   ${BICM_NAME}   ","

    \    Log    ${ic_bay_number}

    \    ${ic_bay_number} =     Get From List    ${ic_bay_number}    0
    \    Log    ${ic_bay_number}


    \    ${ic_bay_number} =     Get From List    ${ic_bay_number}    25
    \    Log    ${ic_bay_number}
    \    ${firmwareVersion} =     Get From IC    ${ic}   firmwareVersion
    \    ${firmwareVersion_upgrade} =      verify_c7k_ic_version    ${ic_bay_number}    ${IP}
    \    ${version}=    Should Contain    ${firmwareVersion}    ${firmwareVersion_upgrade}
    \    Should Be Equal As Strings    ${firmwareVersion}       ${firmwareVersion_upgrade}
    \    Log    Validated the firmvare version
    \    Log    ${BICM_NAME}
    \    ${icstate} =     Get From IC    ${ic}   state
    \    Should Be Equal As Strings    ${icstate}       Configured
    \    Log to Console    Validated the ICstate for
    \    Log    ${BICM_NAME}
    Log to Console    Validated the Firmware version by compare with ICM and From API
    Log to Console  \nFirmware version verification  complete



#   Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}

    ${alerts} =    fusion_api_get_alerts    /rest/alerts

    Log     ${alerts}
#    Run Keyword and Continue on Failure       Should Contain       '${Alert_List}'     ${RR_BB}    Expected Error Message Not seen
    : FOR    ${BICM_NAME}    IN    @{LI_names}
    # ${finalstring}    Catenate    Hello    World
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_str_end}
    \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_succ_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${ICM_Alert1_act_star_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${ICM_Alert1_act_succ_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen


    : FOR    ${BICM_NAME}    IN    @{LI_vc_names}
    # ${finalstring}    Catenate    Hello    World
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${ICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${ICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen

    : FOR    ${BICM_NAME}    IN    @{LI_u_vc_names}
    # ${finalstring}    Catenate    Hello    World
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${ICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${ICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen

    Fusion Api Logout Appliance

TC11 Verify that Hill firmware update should success with G1 (only Auto and 8GB downlink supported) C7000 enclosures via LI using Parallel mode
    [Documentation] "3.1.2 F1212_TC_API_27(G1) F1212_TC_API_29(G2):Verify that Hill firmware update should success with G1 (only Auto and 8GB downlink supported) C7000 enclosures via LI using Parallel mode"
    Log to Console  Testcase_ID: TP section 1.3.1.2 API Test Cases  F1212_TC_API_27(G1 F1212_TC_API_29(G2):Verify that Hill firmware update should success with G1 (only Auto and 8GB downlink supported) C7000 enclosures via LI using Parallel mode
    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}

    ${del_resp}=    fusion_api_delete_alert    /rest/alerts
    Log    ${del_resp}

#   ${body} =   Build LI SPP body   ${demo_New_li_spp_downgrade_li_tst_lower_l}
#   Log     ${body}
    ${li_uri} =     Get LI URI   ${li}
    ${resp1} =    fusion_api_li_upgrade_firmware     body=${demo_New_li_spp_downgrade_li_tst_lower_l}       uri=${li_uri}
    Log     ${resp1}
    ${task} =       Wait For Task   ${resp1}    60 min      18s

    Log     ${task}
    Log to Console      ${task}

    ${valDict} =    Create Dictionary   status_code=${200}
    ...                                 taskState=Completed
    Validate Response   ${task} ${valDict}
    Log to Console  \nStage Firmware Upgrade complete
    Sleep   1 minutes 1 seconds


    Log to Console  Validate interconnect firmware version after firmwareupgrade is complete

    : FOR    ${BICM_NAME}    IN    @{LI_namesall}

    \    ${ic} =     Get IC             ${BICM_NAME}
    \    Log    ${BICM_NAME}
    \    ${ic_bay_number} =    Split String   ${BICM_NAME}   ","

    \    Log    ${ic_bay_number}

    \    ${ic_bay_number} =     Get From List    ${ic_bay_number}    0
    \    Log    ${ic_bay_number}


    \    ${ic_bay_number} =     Get From List    ${ic_bay_number}    25
    \    Log    ${ic_bay_number}
    \    ${firmwareVersion} =     Get From IC    ${ic}   firmwareVersion
    \    ${firmwareVersion_upgrade} =      verify_c7k_ic_version    ${ic_bay_number}    ${IP}
    \    ${version}=    Should Contain    ${firmwareVersion}    ${firmwareVersion_upgrade}
    \    Should Be Equal As Strings    ${firmwareVersion}       ${firmwareVersion_upgrade}
    \    Log    Validated the firmvare version
    \    Log    ${BICM_NAME}
    \    ${icstate} =     Get From IC    ${ic}   state
    \    Should Be Equal As Strings    ${icstate}       Configured
    \    Log to Console    Validated the ICstate for
    \    Log    ${BICM_NAME}
    Log to Console    Validated the Firmware version by compare with ICM and From API
    Log to Console  \nFirmware version verification  complete



#   Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}

    ${alerts} =    fusion_api_get_alerts    /rest/alerts

    Log     ${alerts}
#    Run Keyword and Continue on Failure       Should Contain       '${Alert_List}'     ${RR_BB}    Expected Error Message Not seen
    : FOR    ${BICM_NAME}    IN    @{LI_names}
    # ${finalstring}    Catenate    Hello    World
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_str_end}
    \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_succ_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${ICM_Alert1_act_star_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${ICM_Alert1_act_succ_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen


    : FOR    ${BICM_NAME}    IN    @{LI_vc_names}
    # ${finalstring}    Catenate    Hello    World
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${ICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${ICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen

    : FOR    ${BICM_NAME}    IN    @{LI_u_vc_names}
    # ${finalstring}    Catenate    Hello    World
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${ICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${ICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen

    Fusion Api Logout Appliance

TC12
    [Documentation] "3.1.2 F1212_TC_API_29(G2):Verify that Hill firmware update success with G2 (8 and 16 GB downlink) C7000 enclosures via LI using parallel mode"
    Log to Console  Testcase_ID: TP section 1.3.1.2 API Test Cases F1212_TC_API_29(G2):Verify that Hill firmware update success with G2 (8 and 16 GB downlink) C7000 enclosures via LI using parallel mode


    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}

    ${del_resp}=    fusion_api_delete_alert    /rest/alerts
    Log    ${del_resp}

#   ${body} =   Build LI SPP body   ${demo_New_li_spp_downgrade_li_tst_lower_l}
#   Log     ${body}
    ${li_uri} =     Get LI URI   ${li}
    ${resp1} =    fusion_api_li_upgrade_firmware     body=${demo_New_li_spp_downgrade_li_tst_lower_l}       uri=${li_uri}
    Log     ${resp1}
    ${task} =       Wait For Task   ${resp1}    60 min      18s

    Log     ${task}
    Log to Console      ${task}

    ${valDict} =    Create Dictionary   status_code=${200}
    ...                                 taskState=Completed
    Validate Response   ${task} ${valDict}
    Log to Console  \nStage Firmware Upgrade complete
    Sleep   1 minutes 1 seconds


    Log to Console  Validate interconnect firmware version after firmwareupgrade is complete

    : FOR    ${BICM_NAME}    IN    @{LI_namesall}

    \    ${ic} =     Get IC             ${BICM_NAME}
    \    Log    ${BICM_NAME}
    \    ${ic_bay_number} =    Split String   ${BICM_NAME}   ","

    \    Log    ${ic_bay_number}

    \    ${ic_bay_number} =     Get From List    ${ic_bay_number}    0
    \    Log    ${ic_bay_number}


    \    ${ic_bay_number} =     Get From List    ${ic_bay_number}    25
    \    Log    ${ic_bay_number}
    \    ${firmwareVersion} =     Get From IC    ${ic}   firmwareVersion
    \    ${firmwareVersion_upgrade} =      verify_c7k_ic_version    ${ic_bay_number}    ${IP}
    \    ${version}=    Should Contain    ${firmwareVersion}    ${firmwareVersion_upgrade}
    \    Should Be Equal As Strings    ${firmwareVersion}       ${firmwareVersion_upgrade}
    \    Log    Validated the firmvare version
    \    Log    ${BICM_NAME}
    \    ${icstate} =     Get From IC    ${ic}   state
    \    Should Be Equal As Strings    ${icstate}       Configured
    \    Log to Console    Validated the ICstate for
    \    Log    ${BICM_NAME}
    Log to Console    Validated the Firmware version by compare with ICM and From API
    Log to Console  \nFirmware version verification  complete



#   Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}

    ${alerts} =    fusion_api_get_alerts    /rest/alerts

    Log     ${alerts}
#    Run Keyword and Continue on Failure       Should Contain       '${Alert_List}'     ${RR_BB}    Expected Error Message Not seen
    : FOR    ${BICM_NAME}    IN    @{LI_names}
    # ${finalstring}    Catenate    Hello    World
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_str_end}
    \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_succ_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${ICM_Alert1_act_star_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${ICM_Alert1_act_succ_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen


    : FOR    ${BICM_NAME}    IN    @{LI_vc_names}
    # ${finalstring}    Catenate    Hello    World
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${ICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${ICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen

    : FOR    ${BICM_NAME}    IN    @{LI_u_vc_names}
    # ${finalstring}    Catenate    Hello    World
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${ICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${ICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen

    Fusion Api Logout Appliance

TC13 Verify the alert message behavior when try to set firmware baseline to the lower version and check the force installation flag(option) in downgrade firmware update operation on LI page
    [Documentation] "3.1.2  F1212_TC_API_61:Verify the alert message behavior when try to set firmware baseline to the lower version and check the force installation flag(option) in downgrade firmware update operation on LI page"
    Log to Console  Testcase_ID: TP section 1.3.1.2 API Test Cases F1212_TC_API_61:Verify the alert message behavior when try to set firmware baseline to the lower version and check the force installation flag(option) in downgrade firmware update operation on LI page

    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}

    ${del_resp}=    fusion_api_delete_alert    /rest/alerts
    Log    ${del_resp}

#   ${body} =   Build LI SPP body   ${demo_New_li_spp_downgrade_li_tst_lower_l}
#   Log     ${body}
    ${li_uri} =     Get LI URI   ${li}
    ${resp1} =    fusion_api_li_upgrade_firmware     body=${demo_New_li_spp_downgrade_li_tst_lower_l}       uri=${li_uri}
    Log     ${resp1}
    ${task} =       Wait For Task   ${resp1}    60 min      18s

    Log     ${task}
    Log to Console      ${task}

    ${valDict} =    Create Dictionary   status_code=${200}
    ...                                 taskState=Completed
    Validate Response   ${task} ${valDict}
    Log to Console  \nStage Firmware Upgrade complete
    Sleep   1 minutes 1 seconds


    Log to Console  Validate interconnect firmware version after firmwareupgrade is complete

    : FOR    ${BICM_NAME}    IN    @{LI_namesall}

    \    ${ic} =     Get IC             ${BICM_NAME}
    \    Log    ${BICM_NAME}
    \    ${ic_bay_number} =    Split String   ${BICM_NAME}   ","

    \    Log    ${ic_bay_number}

    \    ${ic_bay_number} =     Get From List    ${ic_bay_number}    0
    \    Log    ${ic_bay_number}


    \    ${ic_bay_number} =     Get From List    ${ic_bay_number}    25
    \    Log    ${ic_bay_number}
    \    ${firmwareVersion} =     Get From IC    ${ic}   firmwareVersion
    \    ${firmwareVersion_upgrade} =      verify_c7k_ic_version    ${ic_bay_number}    ${IP}
    \    ${version}=    Should Contain    ${firmwareVersion}    ${firmwareVersion_upgrade}
    \    Should Be Equal As Strings    ${firmwareVersion}       ${firmwareVersion_upgrade}
    \    Log    Validated the firmvare version
    \    Log    ${BICM_NAME}
    \    ${icstate} =     Get From IC    ${ic}   state
    \    Should Be Equal As Strings    ${icstate}       Configured
    \    Log to Console    Validated the ICstate for
    \    Log    ${BICM_NAME}
    Log to Console    Validated the Firmware version by compare with ICM and From API
    Log to Console  \nFirmware version verification  complete



#   Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}

    ${alerts} =    fusion_api_get_alerts    /rest/alerts

    Log     ${alerts}
#    Run Keyword and Continue on Failure       Should Contain       '${Alert_List}'     ${RR_BB}    Expected Error Message Not seen
    : FOR    ${BICM_NAME}    IN    @{LI_names}
    # ${finalstring}    Catenate    Hello    World
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_str_end}
    \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_succ_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${ICM_Alert1_act_star_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${ICM_Alert1_act_succ_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen


    : FOR    ${BICM_NAME}    IN    @{LI_vc_names}
    # ${finalstring}    Catenate    Hello    World
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${ICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${ICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen

    : FOR    ${BICM_NAME}    IN    @{LI_u_vc_names}
    # ${finalstring}    Catenate    Hello    World
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${ICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${ICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen

    Fusion Api Logout Appliance


     ############# UPDATE FIRMWARE (STAGING + ACTIVATION ) using SERIAL MODE without force flag(Upgarde)  ########################
TC14 Verify the FW Update operation (Stage + Activate) of hill and VC modules using serial mode without force flag(Upgarde)
    [Documentation] "3.1.2 F1212_TC_API_22 and F1212_TC_API_28(G2):: Verify the FW Update operation (Stage + Activate) of hill and VC modules using serial mode without force flag(Upgarde)"
    Log to Console  Testcase_ID: TP section 1.3.1.2 API Test Cases F1212_TC_API_22 and F1212_TC_API_28(G2):  Verify the FW Update operation (Stage + Activate) of hill and VC modules using serial mode without force flag(Upgarde)
    [Tags]   Performance  firmware-condition-li_upgrade
    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}

    ${del_resp}=    fusion_api_delete_alert    /rest/alerts
    Log    ${del_resp}

#   ${body} =   Build LI SPP body   ${Demo_New_li_spp_upgrade_serial_li_tst_higher}

    ${li_uri} =     Get LI URI   ${li}
    ${resp1} =    fusion_api_li_upgrade_firmware    body=${Demo_New_li_spp_upgrade_serial_li_tst_higher}        uri=${li_uri}
    Log     ${resp1}
    ${task} =     Wait For Task    ${resp1}    65 min    5s
    Log to Console      "Hi am in validate"
    Log     ${task}
    Log to Console      ${task}

    ${valDict} =    Create Dictionary   status_code=${200}
    ...                                 taskState=Completed
    Validate Response   ${task} ${valDict}
    Log to Console  \nStage Firmware Upgrade complete
    Sleep   1 minutes 1 seconds


    Log to Console  Validate interconnect firmware version after firmwareupgrade is complete

    : FOR    ${BICM_NAME}    IN    @{LI_namesall}

    \    ${ic} =     Get IC             ${BICM_NAME}
    \    Log    ${BICM_NAME}
    \    ${ic_bay_number} =    Split String   ${BICM_NAME}   ","

    \    Log    ${ic_bay_number}

    \    ${ic_bay_number} =     Get From List    ${ic_bay_number}    0
    \    Log    ${ic_bay_number}


    \    ${ic_bay_number} =     Get From List    ${ic_bay_number}    25
    \    Log    ${ic_bay_number}
    \    ${firmwareVersion} =     Get From IC    ${ic}   firmwareVersion
    \    ${firmwareVersion_upgrade} =      verify_c7k_ic_version    ${ic_bay_number}    ${IP}
    \    ${version}=    Should Contain    ${firmwareVersion}    ${firmwareVersion_upgrade}
    \    Should Be Equal As Strings    ${firmwareVersion}       ${firmwareVersion_upgrade}
    \    Log    Validated the firmvare version
    \    Log    ${BICM_NAME}
    \    ${icstate} =     Get From IC    ${ic}   state
    \    Should Be Equal As Strings    ${icstate}       Configured
    \    Log to Console    Validated the ICstate for
    \    Log    ${BICM_NAME}
    Log to Console    Validated the Firmware version by compare with ICM and From API
    Log to Console  \nFirmware version verification  complete
#   Fusion Api Logout Appliance

#TC02 verifyalerts
#   Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}

    ${alerts} =    fusion_api_get_alerts    /rest/alerts

    Log     ${alerts}
#    Run Keyword and Continue on Failure       Should Contain       '${Alert_List}'     ${RR_BB}    Expected Error Message Not seen
    : FOR    ${BICM_NAME}    IN    @{LI_names}
    # ${finalstring}    Catenate    Hello    World
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${HICM_Alert1_stg_str_end}
    \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${HICM_Alert1_stg_succ_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${HICM_Alert1_act_star_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${HICM_Alert1_act_succ_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen


    : FOR    ${BICM_NAME}    IN    @{LI_vc_names}
    # ${finalstring}    Catenate    Hello    World
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${HICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${HICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${HICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${HICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen

    : FOR    ${BICM_NAME}    IN    @{LI_u_vc_names}
    # ${finalstring}    Catenate    Hello    World
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${HICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${HICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${HICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${HICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen

    Fusion Api Logout Appliance

TC15 Verify that Hill firmware update should success with G2 (only Auto and 8GB downlink supported) C7000 enclosures via LI using Serial mode
    [Documentation] "3.1.2 F1212_TC_API_28(G2):Verify that Hill firmware update should success with G2 (only Auto and 8GB downlink supported) C7000 enclosures via LI using Serial mode"
    Log to Console  Testcase_ID: TP section 1.3.1.2 API Test Cases F1212_TC_API_28(G2):Verify that Hill firmware update should success with G2 (only Auto and 8GB downlink supported) C7000 enclosures via LI using Serial mode

    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}

    ${del_resp}=    fusion_api_delete_alert    /rest/alerts
    Log    ${del_resp}

#   ${body} =   Build LI SPP body   ${Demo_New_li_spp_upgrade_serial_li_tst_higher}

    ${li_uri} =     Get LI URI   ${li}
    ${resp1} =    fusion_api_li_upgrade_firmware    body=${Demo_New_li_spp_upgrade_serial_li_tst_higher}        uri=${li_uri}
    Log     ${resp1}
    ${task} =     Wait For Task    ${resp1}    65 min    5s
    Log to Console      "Hi am in validate"
    Log     ${task}
    Log to Console      ${task}

    ${valDict} =    Create Dictionary   status_code=${200}
    ...                                 taskState=Completed
    Validate Response   ${task} ${valDict}
    Log to Console  \nStage Firmware Upgrade complete
    Sleep   1 minutes 1 seconds


    Log to Console  Validate interconnect firmware version after firmwareupgrade is complete

    : FOR    ${BICM_NAME}    IN    @{LI_namesall}

    \    ${ic} =     Get IC             ${BICM_NAME}
    \    Log    ${BICM_NAME}
    \    ${ic_bay_number} =    Split String   ${BICM_NAME}   ","

    \    Log    ${ic_bay_number}

    \    ${ic_bay_number} =     Get From List    ${ic_bay_number}    0
    \    Log    ${ic_bay_number}


    \    ${ic_bay_number} =     Get From List    ${ic_bay_number}    25
    \    Log    ${ic_bay_number}
    \    ${firmwareVersion} =     Get From IC    ${ic}   firmwareVersion
    \    ${firmwareVersion_upgrade} =      verify_c7k_ic_version    ${ic_bay_number}    ${IP}
    \    ${version}=    Should Contain    ${firmwareVersion}    ${firmwareVersion_upgrade}
    \    Should Be Equal As Strings    ${firmwareVersion}       ${firmwareVersion_upgrade}
    \    Log    Validated the firmvare version
    \    Log    ${BICM_NAME}
    \    ${icstate} =     Get From IC    ${ic}   state
    \    Should Be Equal As Strings    ${icstate}       Configured
    \    Log to Console    Validated the ICstate for
    \    Log    ${BICM_NAME}
    Log to Console    Validated the Firmware version by compare with ICM and From API
    Log to Console  \nFirmware version verification  complete
#   Fusion Api Logout Appliance

#TC02 verifyalerts
#   Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}

    ${alerts} =    fusion_api_get_alerts    /rest/alerts

    Log     ${alerts}
#    Run Keyword and Continue on Failure       Should Contain       '${Alert_List}'     ${RR_BB}    Expected Error Message Not seen
    : FOR    ${BICM_NAME}    IN    @{LI_names}
    # ${finalstring}    Catenate    Hello    World
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${HICM_Alert1_stg_str_end}
    \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${HICM_Alert1_stg_succ_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${HICM_Alert1_act_star_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${HICM_Alert1_act_succ_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen


    : FOR    ${BICM_NAME}    IN    @{LI_vc_names}
    # ${finalstring}    Catenate    Hello    World
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${HICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${HICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${HICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${HICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen

    : FOR    ${BICM_NAME}    IN    @{LI_u_vc_names}
    # ${finalstring}    Catenate    Hello    World
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${HICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${HICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${HICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${HICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen

    Fusion Api Logout Appliance



    ###################### UPDATE FIRMWARE (STAGING + ACTIVATION) SEARIAL MODE WITH FORCE FLAG #################
TC16 Verify the FW Update operation (Stage + Activate) of hill and VC modules using serial mode with force flag (G3 enc)(Downgrade)
    [Documentation] "3.1.2 F1212_TC_API_21: Verify the FW Update operation (Stage + Activate) of hill and VC modules using serial mode with force flag (G3 enc)(Downgrade)"
    Log to Console  Testcase_ID: TP section 1.3.1.2 API Test Cases F1212_TC_API_21 :Verify the FW Update operation (Stage + Activate) of hill and VC modules using serial mode with force flag (G3 enc)(Downgrade)
    [Tags]   Performance  firmware-condition-li_upgrade
    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}

    ${del_resp}=    fusion_api_delete_alert    /rest/alerts
    Log    ${del_resp}

#   ${body} =   Build LI SPP body   ${demo_New_li_spp_downgrade_li_tst_lower_l}

    ${li_uri} =     Get LI URI   ${li}
    ${resp1} =    fusion_api_li_upgrade_firmware     body=${demo_New_li_spp_downgrade_li_tst_lower_l}       uri=${li_uri}
    Log     ${resp1}
    ${task} =       Wait For Task   ${resp1}    90 min      18s

    Log     ${task}
    Log to Console      ${task}

    ${valDict} =    Create Dictionary   status_code=${200}
    ...                                 taskState=Completed
    Validate Response   ${task} ${valDict}
    Log to Console  \nStage Firmware Upgrade complete
    Sleep   1 minutes 1 seconds


    Log to Console  Validate interconnect firmware version after firmwareupgrade is complete

    : FOR    ${BICM_NAME}    IN    @{LI_namesall}

    \    ${ic} =     Get IC             ${BICM_NAME}
    \    Log    ${BICM_NAME}
    \    ${ic_bay_number} =    Split String   ${BICM_NAME}   ","

    \    Log    ${ic_bay_number}

    \    ${ic_bay_number} =     Get From List    ${ic_bay_number}    0
    \    Log    ${ic_bay_number}


    \    ${ic_bay_number} =     Get From List    ${ic_bay_number}    25
    \    Log    ${ic_bay_number}
    \    ${firmwareVersion} =     Get From IC    ${ic}   firmwareVersion
    \    ${firmwareVersion_upgrade} =      verify_c7k_ic_version    ${ic_bay_number}    ${IP}
    \    ${version}=    Should Contain    ${firmwareVersion}    ${firmwareVersion_upgrade}
    \    Should Be Equal As Strings    ${firmwareVersion}       ${firmwareVersion_upgrade}
    \    Log    Validated the firmvare version
    \    Log    ${BICM_NAME}
    \    ${icstate} =     Get From IC    ${ic}   state
    \    Should Be Equal As Strings    ${icstate}       Configured
    \    Log to Console    Validated the ICstate for
    \    Log    ${BICM_NAME}
    Log to Console    Validated the Firmware version by compare with ICM and From API
    Log to Console  \nFirmware version verification  complete
#   Fusion Api Logout Appliance

#TC02 verifyalerts
#   Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}

    ${alerts} =    fusion_api_get_alerts    /rest/alerts

    Log     ${alerts}
#    Run Keyword and Continue on Failure       Should Contain       '${Alert_List}'     ${RR_BB}    Expected Error Message Not seen
    : FOR    ${BICM_NAME}    IN    @{LI_names}
    # ${finalstring}    Catenate    Hello    World
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_str_end}
    \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_succ_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${ICM_Alert1_act_star_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${ICM_Alert1_act_succ_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen


    : FOR    ${BICM_NAME}    IN    @{LI_vc_names}
    # ${finalstring}    Catenate    Hello    World
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${ICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${ICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen

    : FOR    ${BICM_NAME}    IN    @{LI_u_vc_names}
    # ${finalstring}    Catenate    Hello    World
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${ICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${ICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen

    Fusion Api Logout Appliance

TC17 Verify the activation of firmware of hill and VC modules using Parallel mode and selective activation( for G3 enclosure)
    [Documentation] "3.1.2 :Objective: Verify the activation of firmware of hill and VC modules using Parallel mode and selective activation( for G3 enclosure)"
    Log to Console  Testcase_ID: TP section 1.3.1.2 API Test Cases F1212_TC_API_12: Verify the activation of firmware of hill and VC modules using Parallel mode and selective activation( for G3 enclosure)

    [Tags]   Performance  firmware-condition-li_upgrade
    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}

    ${del_resp}=    fusion_api_delete_alert    /rest/alerts
    Log    ${del_resp}
#   ${body} =   Build LI SPP body   ${Demo_li_spp_upgrade1_test_stg_higher}

    ${li_uri} =     Get LI URI   ${li}
    ${resp1} =    fusion_api_li_upgrade_firmware      body=${Demo_li_spp_upgrade1_test_stg_higher}      uri=${li_uri}
    Log     ${resp1}
    ${task} =       Wait For Task   ${resp1}    65 min      15s
    Log     ${task}
    Log to Console      ${task}

    ${valDict} =    Create Dictionary   status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}
    Log to Console  \nStage Firmware Upgrade complete
    Sleep   1 minutes 1 seconds

    Log to Console  Validate interconnect firmware version after firmwareupgrade is complete


    : FOR    ${BICM_NAME}    IN    @{LI_namesall}

    \    ${ic} =     Get IC             ${BICM_NAME}
    \    Log    ${BICM_NAME}
    \    ${ic_bay_number} =    Split String   ${BICM_NAME}   ","

    \    Log    ${ic_bay_number}

    \    ${ic_bay_number} =     Get From List    ${ic_bay_number}    0
    \    Log    ${ic_bay_number}


    \    ${ic_bay_number} =     Get From List    ${ic_bay_number}    25
    \    Log    ${ic_bay_number}
    \    ${firmwareVersion} =     Get From IC    ${ic}   firmwareVersion
    \    ${firmwareVersion_upgrade} =      verify_c7k_ic_version    ${ic_bay_number}    ${IP}
    \    ${version}=    Should Contain    ${firmwareVersion}    ${firmwareVersion_upgrade}
    \    Should Be Equal As Strings    ${firmwareVersion}       ${firmwareVersion_upgrade}
    \    Log    Validated the firmvare version
    \    Log    ${BICM_NAME}
    \    ${icstate} =     Get From IC    ${ic}   state
    \    Should Be Equal As Strings    ${icstate}       Configured
    \    Log to Console    Validated the ICstate for
    \    Log    ${BICM_NAME}
    Log to Console    Validated the Firmware version by compare with ICM and From API
    Log to Console  \nFirmware version verification  complete
#   Fusion Api Logout Appliance


    ######## Verify The ALERTS  #########################
#   Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}
    ${alerts} =    fusion_api_get_alerts    /rest/alerts

#    Run Keyword and Continue on Failure       Should Contain       '${Alert_List}'     ${RR_BB}    Expected Error Message Not seen
    : FOR    ${BICM_NAME}    IN    @{LI_names}
    # ${finalstring}    Catenate    Hello    World
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${HICM_Alert1_stg_str_end}
    \    Log to Console    ${Al_stg_str}
    \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${HICM_Alert1_stg_succ_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen

    : FOR    ${BICM_NAME}    IN    @{LI_vc_names}
    # ${finalstring}    Catenate    Hello    World
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${HICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_stg_str}
    \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${HICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen

    : FOR    ${BICM_NAME}    IN    @{LI_u_vc_names}
    # ${finalstring}    Catenate    Hello    World
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${HICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_stg_str}
    \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${HICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


#    Fusion Api Logout Appliance

    ###############  Activate already staged firmware  #######################
    ${interconnectsurilist} =   Create List

    : FOR    ${BICM_NAME}    IN    @{LI_namesall}
    \    ${inter_uri} =     Get ICS URI_ACTIVEURI  ${BICM_NAME}
    \    ${interconnecturib} =    Fetch From Right    ${inter_uri}    /rest/interconnects/
    \    ${dictinterconnecturib} =      Create Dictionary    interconnectUri=${interconnecturib}
    \    Log to Console    ${dictinterconnecturib}
    \    Append To List    ${interconnectsurilist}    ${dictinterconnecturib}
    Log to Console    List Value ${interconnectsurilist}

    ${body} =    Build SelectiveInterconnects SPP body    ${Demo_li_spp_upgrade5_test_higher}    ${interconnectsurilist}

    ${li_uri} =     Get LI URI   ${li}
    ${resp1} =  Fusion Api Li Upgrade Firmware  body=${body}        uri=${li_uri}
    Log     ${resp1}
    ${task} =       Wait For Task   ${resp1}    69 min      18s

    Log     ${task}
    Log to Console      ${task}

    ${valDict} =    Create Dictionary   status_code=${200}
    ...                                 taskState=Completed
    Validate Response   ${task} ${valDict}
    Log to Console  \nStage Firmware Upgrade complete
    Sleep   1 minutes 1 seconds


    : FOR    ${BICM_NAME}    IN    @{LI_namesall}

    \    ${ic} =     Get IC             ${BICM_NAME}
    \    Log    ${BICM_NAME}
    \    ${ic_bay_number} =    Split String   ${BICM_NAME}   ","

    \    Log    ${ic_bay_number}

    \    ${ic_bay_number} =     Get From List    ${ic_bay_number}    0
    \    Log    ${ic_bay_number}


    \    ${ic_bay_number} =     Get From List    ${ic_bay_number}    25
    \    Log    ${ic_bay_number}
    \    ${firmwareVersion} =     Get From IC    ${ic}   firmwareVersion
    \    ${firmwareVersion_upgrade} =      verify_c7k_ic_version    ${ic_bay_number}    ${IP}
    \    ${version}=    Should Contain    ${firmwareVersion}    ${firmwareVersion_upgrade}
    \    Should Be Equal As Strings    ${firmwareVersion}       ${firmwareVersion_upgrade}
    \    Log    Validated the firmvare version
    \    Log    ${BICM_NAME}
    \    ${icstate} =     Get From IC    ${ic}   state
    \    Should Be Equal As Strings    ${icstate}       Configured
    \    Log to Console    Validated the ICstate for
    \    Log    ${BICM_NAME}
    Log to Console    Validated the Firmware version by compare with ICM and From API
    Log to Console  \nFirmware version verification  complete
#   Fusion Api Logout Appliance

#TC02 Verify alerts
#   Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}
#    ${Alert_List}=     Fusion Api Get Activity Alerts    ${Starting_AlertID}       ${Resource_Filter2}
#    Log    ${Alert_List}
#    Log to Console    ${Alert_List}
    ${alerts} =    fusion_api_get_alerts    /rest/alerts

#    Run Keyword and Continue on Failure       Should Contain       '${Alert_List}'     ${RR_BB}    Expected Error Message Not seen
    : FOR    ${BICM_NAME}    IN    @{LI_names}
    # ${finalstring}    Catenate    Hello    World
#   \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_str_end}
#   \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
#   \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


#   \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_succ_end}
#   \    Log to Console    ${Al_stg_suc}
#   \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${HICM_Alert1_act_star_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${HICM_Alert1_act_succ_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen


    : FOR    ${BICM_NAME}    IN    @{LI_vc_names}
    # ${finalstring}    Catenate    Hello    World
#   \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_star_1_end}
#   \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
#   \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


#   \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star_1_end}
#   \    Log to Console    ${Al_stg_suc}
#   \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${HICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${HICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen

    : FOR    ${BICM_NAME}    IN    @{LI_u_vc_names}
    # ${finalstring}    Catenate    Hello    World
#   \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_star_2_end}
#   \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
#   \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


#   \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star_2_end}
#   \    Log to Console    ${Al_stg_suc}
#   \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${HICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${HICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen

    Fusion Api Logout Appliance


TC18 Verify the activation of firmware of hill and VC modules using Serial mode and selective activation (for G3 enclosure)
    [Documentation] "3.1.2 :Objective: Verify the activation of firmware of hill and VC modules using Serial mode and selective activation (for G3 enclosure)"
    Log to Console  Testcase_ID: TP section 1.3.1.2 API Test Cases F1212_TC_API_13: Verify the activation of firmware of hill and VC modules using Serial mode and selective activation (for G3 enclosure)

    [Tags]   Performance  firmware-condition-li_upgrade
    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}

#   ${del_resp}=    fusion_api_delete_alert    /rest/alerts
#   Log    ${del_resp}
#   ${body} =   Build LI SPP body   ${Demo_li_spp_upgrade1_test_stg_serial_higher}
#   Log     ${body}
    ${li_uri} =     Get LI URI   ${li}
    ${resp1} =    fusion_api_li_upgrade_firmware      body=${Demo_li_spp_upgrade1_test_stg_serial_higher}       uri=${li_uri}
    Log     ${resp1}
    ${task} =       Wait For Task   ${resp1}    95 min      2s
    Log     ${task}
    Log to Console      ${task}

    ${valDict} =    Create Dictionary   status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}
    Log to Console  \nStage Firmware Upgrade complete
    Sleep   1 minutes 1 seconds

    Log to Console  Validate interconnect firmware version after firmwareupgrade is complete


    : FOR    ${BICM_NAME}    IN    @{LI_namesall}

    \    ${ic} =     Get IC             ${BICM_NAME}
    \    Log    ${BICM_NAME}
    \    ${ic_bay_number} =    Split String   ${BICM_NAME}   ","

    \    Log    ${ic_bay_number}

    \    ${ic_bay_number} =     Get From List    ${ic_bay_number}    0
    \    Log    ${ic_bay_number}


    \    ${ic_bay_number} =     Get From List    ${ic_bay_number}    25
    \    Log    ${ic_bay_number}
    \    ${firmwareVersion} =     Get From IC    ${ic}   firmwareVersion
    \    ${firmwareVersion_upgrade} =      verify_c7k_ic_version    ${ic_bay_number}    ${IP}
    \    ${version}=    Should Contain    ${firmwareVersion}    ${firmwareVersion_upgrade}
    \    Should Be Equal As Strings    ${firmwareVersion}       ${firmwareVersion_upgrade}
    \    Log    Validated the firmvare version
    \    Log    ${BICM_NAME}
    \    ${icstate} =     Get From IC    ${ic}   state
    \    Should Be Equal As Strings    ${icstate}       Configured
    \    Log to Console    Validated the ICstate for
    \    Log    ${BICM_NAME}
    Log to Console    Validated the Firmware version by compare with ICM and From API
    Log to Console  \nFirmware version verification  complete
#   Fusion Api Logout Appliance


    ######## Verify The ALERTS  #########################
#   Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}
    ${alerts} =    fusion_api_get_alerts    /rest/alerts

#    Run Keyword and Continue on Failure       Should Contain       '${Alert_List}'     ${RR_BB}    Expected Error Message Not seen
    : FOR    ${BICM_NAME}    IN    @{LI_names}
    # ${finalstring}    Catenate    Hello    World
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${HICM_Alert1_stg_str_end}
    \    Log to Console    ${Al_stg_str}
    \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${HICM_Alert1_stg_succ_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen

    : FOR    ${BICM_NAME}    IN    @{LI_vc_names}
    # ${finalstring}    Catenate    Hello    World
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${HICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_stg_str}
    \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${HICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen

    : FOR    ${BICM_NAME}    IN    @{LI_u_vc_names}
    # ${finalstring}    Catenate    Hello    World
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${HICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_stg_str}
    \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${HICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


#    Fusion Api Logout Appliance

    ###############  Activate already staged firmware  #######################
    ${interconnectsurilist} =   Create List

    : FOR    ${BICM_NAME}    IN    @{LI_namesall}
    \    ${inter_uri} =     Get ICS URI_ACTIVEURI  ${BICM_NAME}
    \    ${interconnecturib} =    Fetch From Right    ${inter_uri}    /rest/interconnects/
    \    ${dictinterconnecturib} =      Create Dictionary    interconnectUri=${interconnecturib}
    \    Log to Console    ${dictinterconnecturib}
    \    Append To List    ${interconnectsurilist}    ${dictinterconnecturib}
    Log to Console    List Value ${interconnectsurilist}

    ${body} =    Build SelectiveInterconnects SPP body    ${Demo_li_spp_upgrade5_test_serial_higher}    ${interconnectsurilist}

    ${li_uri} =     Get LI URI   ${li}
    ${resp1} =  Fusion Api Li Upgrade Firmware  body=${body}        uri=${li_uri}
    Log     ${resp1}
    ${task} =       Wait For Task   ${resp1}    60 min      18s
    Log to Console      "Hi am in validate"
    Log     ${task}
    Log to Console      ${task}

    ${valDict} =    Create Dictionary   status_code=${200}
    ...                                 taskState=Completed
    Validate Response   ${task} ${valDict}
    Log to Console  \nStage Firmware Upgrade complete
    Sleep   1 minutes 1 seconds


    : FOR    ${BICM_NAME}    IN    @{LI_namesall}

    \    ${ic} =     Get IC             ${BICM_NAME}
    \    Log    ${BICM_NAME}
    \    ${ic_bay_number} =    Split String   ${BICM_NAME}   ","

    \    Log    ${ic_bay_number}

    \    ${ic_bay_number} =     Get From List    ${ic_bay_number}    0
    \    Log    ${ic_bay_number}


    \    ${ic_bay_number} =     Get From List    ${ic_bay_number}    25
    \    Log    ${ic_bay_number}
    \    ${firmwareVersion} =     Get From IC    ${ic}   firmwareVersion
    \    ${firmwareVersion_upgrade} =      verify_c7k_ic_version    ${ic_bay_number}    ${IP}
    \    ${version}=    Should Contain    ${firmwareVersion}    ${firmwareVersion_upgrade}
    \    Should Be Equal As Strings    ${firmwareVersion}       ${firmwareVersion_upgrade}
    \    Log    Validated the firmvare version
    \    Log    ${BICM_NAME}
    \    ${icstate} =     Get From IC    ${ic}   state
    \    Should Be Equal As Strings    ${icstate}       Configured
    \    Log to Console    Validated the ICstate for
    \    Log    ${BICM_NAME}
    Log to Console    Validated the Firmware version by compare with ICM and From API
    Log to Console  \nFirmware version verification  complete
#   Fusion Api Logout Appliance

# Verify alerts

    ${alerts} =    fusion_api_get_alerts    /rest/alerts

#    Run Keyword and Continue on Failure       Should Contain       '${Alert_List}'     ${RR_BB}    Expected Error Message Not seen
    : FOR    ${BICM_NAME}    IN    @{LI_names}
    # ${finalstring}    Catenate    Hello    World
#   \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_str_end}
#   \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
#   \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


#   \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_succ_end}
#   \    Log to Console    ${Al_stg_suc}
#   \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${HICM_Alert1_act_star_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${HICM_Alert1_act_succ_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen


    : FOR    ${BICM_NAME}    IN    @{LI_vc_names}
    # ${finalstring}    Catenate    Hello    World
#   \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_star_1_end}
#   \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
#   \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


#   \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star_1_end}
#   \    Log to Console    ${Al_stg_suc}
#   \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${HICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${HICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen

    : FOR    ${BICM_NAME}    IN    @{LI_u_vc_names}
    # ${finalstring}    Catenate    Hello    World
#   \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_star_2_end}
#   \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
#   \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


#   \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star_2_end}
#   \    Log to Console    ${Al_stg_suc}
#   \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${HICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${HICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen

    Fusion Api Logout Appliance

TC19 Verify the activation of firmware of hill and VC modules using Odd and even mode and selective activation
    [Documentation] "3.1.2 :Objective: Verify the activation of firmware of hill and VC modules using Odd and even mode and selective activation"
    Log to Console  Testcase_ID: TP section 1.3.1.2 API Test Cases F1212_TC_API_14: Verify the activation of firmware of hill and VC modules using Odd and even mode and selective activation
    [Tags]   Performance  firmware-condition-li_upgrade

    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}

#   ${del_resp}=    fusion_api_delete_alert    /rest/alerts
#   Log    ${del_resp}
#   ${body} =   Build LI SPP body   ${Demo_li_spp_dwngrd1_test_stg_oddeven_higher}
#   Log     ${body}
    ${li_uri} =     Get LI URI   ${li}
    ${resp1} =    fusion_api_li_upgrade_firmware      body=${Demo_li_spp_dwngrd1_test_stg_oddeven_higher}       uri=${li_uri}
    Log     ${resp1}
    ${task} =       Wait For Task   ${resp1}    95 min      2s
    Log     ${task}
    Log to Console      ${task}

    ${valDict} =    Create Dictionary   status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}
    Log to Console  \nStage Firmware Upgrade complete
    Sleep   1 minutes 1 seconds

    Log to Console  Validate interconnect firmware version after firmwareupgrade is complete


    : FOR    ${BICM_NAME}    IN    @{LI_namesall}

    \    ${ic} =     Get IC             ${BICM_NAME}
    \    Log    ${BICM_NAME}
    \    ${ic_bay_number} =    Split String   ${BICM_NAME}   ","

    \    Log    ${ic_bay_number}

    \    ${ic_bay_number} =     Get From List    ${ic_bay_number}    0
    \    Log    ${ic_bay_number}


    \    ${ic_bay_number} =     Get From List    ${ic_bay_number}    25
    \    Log    ${ic_bay_number}
    \    ${firmwareVersion} =     Get From IC    ${ic}   firmwareVersion
    \    ${firmwareVersion_upgrade} =      verify_c7k_ic_version    ${ic_bay_number}    ${IP}
    \    ${version}=    Should Contain    ${firmwareVersion}    ${firmwareVersion_upgrade}
    \    Should Be Equal As Strings    ${firmwareVersion}       ${firmwareVersion_upgrade}
    \    Log    Validated the firmvare version
    \    Log    ${BICM_NAME}
    \    ${icstate} =     Get From IC    ${ic}   state
    \    Should Be Equal As Strings    ${icstate}       Configured
    \    Log to Console    Validated the ICstate for
    \    Log    ${BICM_NAME}
    Log to Console    Validated the Firmware version by compare with ICM and From API
    Log to Console  \nFirmware version verification  complete
#   Fusion Api Logout Appliance


    ######## Verify The ALERTS  #########################
#   Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}
    ${alerts} =    fusion_api_get_alerts    /rest/alerts

#    Run Keyword and Continue on Failure       Should Contain       '${Alert_List}'     ${RR_BB}    Expected Error Message Not seen
    : FOR    ${BICM_NAME}    IN    @{LI_names}
    # ${finalstring}    Catenate    Hello    World
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_str_end}
    \    Log to Console    ${Al_stg_str}
    \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_succ_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen

    : FOR    ${BICM_NAME}    IN    @{LI_vc_names}
    # ${finalstring}    Catenate    Hello    World
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_stg_str}
    \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen

    : FOR    ${BICM_NAME}    IN    @{LI_u_vc_names}
    # ${finalstring}    Catenate    Hello    World
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_stg_str}
    \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


#    Fusion Api Logout Appliance

    ###############  Activate already staged firmware  #######################
    ${interconnectsurilist} =   Create List

    : FOR    ${BICM_NAME}    IN    @{LI_namesall}
    \    ${inter_uri} =     Get ICS URI_ACTIVEURI  ${BICM_NAME}
    \    ${interconnecturib} =    Fetch From Right    ${inter_uri}    /rest/interconnects/
    \    ${dictinterconnecturib} =      Create Dictionary    interconnectUri=${interconnecturib}
    \    Log to Console    ${dictinterconnecturib}
    \    Append To List    ${interconnectsurilist}    ${dictinterconnecturib}
    Log to Console    List Value ${interconnectsurilist}

    ${body} =    Build SelectiveInterconnects SPP body    ${Demo_li_spp_downgrade_test_oddeven_active_higher}    ${interconnectsurilist}

    ${li_uri} =     Get LI URI   ${li}
    ${resp1} =    Fusion Api Li Upgrade Firmware      body=${body}      uri=${li_uri}
    Log     ${resp1}
    ${task} =       Wait For Task   ${resp1}    60 min      18s
    Log to Console      "Hi am in validate"
    Log     ${task}
    Log to Console      ${task}

    ${valDict} =    Create Dictionary   status_code=${200}
    ...                                 taskState=Completed
    Validate Response   ${task} ${valDict}
    Log to Console  \nStage Firmware Upgrade complete
    Sleep   1 minutes 1 seconds


    : FOR    ${BICM_NAME}    IN    @{LI_namesall}

    \    ${ic} =     Get IC             ${BICM_NAME}
    \    Log    ${BICM_NAME}
    \    ${ic_bay_number} =    Split String   ${BICM_NAME}   ","

    \    Log    ${ic_bay_number}

    \    ${ic_bay_number} =     Get From List    ${ic_bay_number}    0
    \    Log    ${ic_bay_number}


    \    ${ic_bay_number} =     Get From List    ${ic_bay_number}    25
    \    Log    ${ic_bay_number}
    \    ${firmwareVersion} =     Get From IC    ${ic}   firmwareVersion
    \    ${firmwareVersion_upgrade} =      verify_c7k_ic_version    ${ic_bay_number}    ${IP}
    \    ${version}=    Should Contain    ${firmwareVersion}    ${firmwareVersion_upgrade}
    \    Should Be Equal As Strings    ${firmwareVersion}       ${firmwareVersion_upgrade}
    \    Log    Validated the firmvare version
    \    Log    ${BICM_NAME}
    \    ${icstate} =     Get From IC    ${ic}   state
    \    Should Be Equal As Strings    ${icstate}       Configured
    \    Log to Console    Validated the ICstate for
    \    Log    ${BICM_NAME}
    Log to Console    Validated the Firmware version by compare with ICM and From API
    Log to Console  \nFirmware version verification  complete


# Verify alerts

    ${alerts} =    fusion_api_get_alerts    /rest/alerts

#    Run Keyword and Continue on Failure       Should Contain       '${Alert_List}'     ${RR_BB}    Expected Error Message Not seen
    : FOR    ${BICM_NAME}    IN    @{LI_names}
    # ${finalstring}    Catenate    Hello    World
#   \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_str_end}
#   \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
#   \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


#   \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_succ_end}
#   \    Log to Console    ${Al_stg_suc}
#   \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${ICM_Alert1_act_star_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${ICM_Alert1_act_succ_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen


    : FOR    ${BICM_NAME}    IN    @{LI_vc_names}
    # ${finalstring}    Catenate    Hello    World
#   \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_star_1_end}
#   \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
#   \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


#   \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star_1_end}
#   \    Log to Console    ${Al_stg_suc}
#   \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${ICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${ICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen

    : FOR    ${BICM_NAME}    IN    @{LI_u_vc_names}
    # ${finalstring}    Catenate    Hello    World
#   \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_star_2_end}
#   \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
#   \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


#   \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star_2_end}
#   \    Log to Console    ${Al_stg_suc}
#   \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${ICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${ICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen

    Fusion Api Logout Appliance

    ###################### UPDATE FIRMWARE (STAGING + ACTIVATION) SEARIAL  #################
TC20 Verify the activation of firmware of hill module which has firmware already staged using serial mode (for G3 enclosure)
    [Documentation] "3.1.2 F1212_TC_API_14:: Verify the activation of firmware of hill module which has firmware already staged using serial mode (for G3 enclosure)"
    Log to Console  Testcase_ID: TP section 1.3.1.2 API Test Cases F1212_TC_API_14 and F1212_TC_API_26(G1): Verify the activation of firmware of hill module which has firmware already staged using serial mode (for G3 enclosure)
    [Tags]   Performance  firmware-condition-li_upgrade
    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}

    ${del_resp}=    fusion_api_delete_alert    /rest/alerts
    Log    ${del_resp}

#   ${body} =   Build LI SPP body   ${demo_New_li_spp_downgrade_li_serial_lower_l}

    ${li_uri} =     Get LI URI   ${li}
    ${resp1} =    fusion_api_li_upgrade_firmware     body=${demo_New_li_spp_downgrade_li_serial_lower_l}        uri=${li_uri}
    Log     ${resp1}
    ${task} =       Wait For Task   ${resp1}    90 min      18s

    Log     ${task}
    Log to Console      ${task}

    ${valDict} =    Create Dictionary   status_code=${200}
    ...                                 taskState=Completed
    Validate Response   ${task} ${valDict}
    Log to Console  \nStage Firmware Upgrade complete
    Sleep   1 minutes 1 seconds


    Log to Console  Validate interconnect firmware version after firmwareupgrade is complete

    : FOR    ${BICM_NAME}    IN    @{LI_namesall}

    \    ${ic} =     Get IC             ${BICM_NAME}
    \    Log    ${BICM_NAME}
    \    ${ic_bay_number} =    Split String   ${BICM_NAME}   ","

    \    Log    ${ic_bay_number}

    \    ${ic_bay_number} =     Get From List    ${ic_bay_number}    0
    \    Log    ${ic_bay_number}


    \    ${ic_bay_number} =     Get From List    ${ic_bay_number}    25
    \    Log    ${ic_bay_number}
    \    ${firmwareVersion} =     Get From IC    ${ic}   firmwareVersion
    \    ${firmwareVersion_upgrade} =      verify_c7k_ic_version    ${ic_bay_number}    ${IP}
    \    ${version}=    Should Contain    ${firmwareVersion}    ${firmwareVersion_upgrade}
    \    Should Be Equal As Strings    ${firmwareVersion}       ${firmwareVersion_upgrade}
    \    Log    Validated the firmvare version
    \    Log    ${BICM_NAME}
    \    ${icstate} =     Get From IC    ${ic}   state
    \    Should Be Equal As Strings    ${icstate}       Configured
    \    Log to Console    Validated the ICstate for
    \    Log    ${BICM_NAME}
    Log to Console    Validated the Firmware version by compare with ICM and From API
    Log to Console  \nFirmware version verification  complete
#   Fusion Api Logout Appliance

#TC02 verifyalerts
#   Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}

    ${alerts} =    fusion_api_get_alerts    /rest/alerts

    Log     ${alerts}
#    Run Keyword and Continue on Failure       Should Contain       '${Alert_List}'     ${RR_BB}    Expected Error Message Not seen
    : FOR    ${BICM_NAME}    IN    @{LI_names}
    # ${finalstring}    Catenate    Hello    World
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_str_end}
    \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_succ_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${ICM_Alert1_act_star_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${ICM_Alert1_act_succ_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen


    : FOR    ${BICM_NAME}    IN    @{LI_vc_names}
    # ${finalstring}    Catenate    Hello    World
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${ICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${ICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen

    : FOR    ${BICM_NAME}    IN    @{LI_u_vc_names}
    # ${finalstring}    Catenate    Hello    World
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${ICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${ICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen

    Fusion Api Logout Appliance

TC21 Verify that Hill firmware update should success with G1 (only Auto and 8GB downlink supported) C7000 enclosures via LI using Serial mode
    [Documentation] "3.1.2 F1212_TC_API_26(G1): Verify that Hill firmware update should success with G1 (only Auto and 8GB downlink supported) C7000 enclosures via LI using Serial mode"
    Log to Console  Testcase_ID: TP section 1.3.1.2 API Test Cases F1212_TC_API_26(G1):Verify that Hill firmware update should success with G1 (only Auto and 8GB downlink supported) C7000 enclosures via LI using Serial mode

    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}

    ${del_resp}=    fusion_api_delete_alert    /rest/alerts
    Log    ${del_resp}

#   ${body} =   Build LI SPP body   ${demo_New_li_spp_downgrade_li_serial_lower_l}

    ${li_uri} =     Get LI URI   ${li}
    ${resp1} =    fusion_api_li_upgrade_firmware     body=${demo_New_li_spp_downgrade_li_serial_lower_l}        uri=${li_uri}
    Log     ${resp1}
    ${task} =       Wait For Task   ${resp1}    90 min      18s

    Log     ${task}
    Log to Console      ${task}

    ${valDict} =    Create Dictionary   status_code=${200}
    ...                                 taskState=Completed
    Validate Response   ${task} ${valDict}
    Log to Console  \nStage Firmware Upgrade complete
    Sleep   1 minutes 1 seconds


    Log to Console  Validate interconnect firmware version after firmwareupgrade is complete

    : FOR    ${BICM_NAME}    IN    @{LI_namesall}

    \    ${ic} =     Get IC             ${BICM_NAME}
    \    Log    ${BICM_NAME}
    \    ${ic_bay_number} =    Split String   ${BICM_NAME}   ","

    \    Log    ${ic_bay_number}

    \    ${ic_bay_number} =     Get From List    ${ic_bay_number}    0
    \    Log    ${ic_bay_number}


    \    ${ic_bay_number} =     Get From List    ${ic_bay_number}    25
    \    Log    ${ic_bay_number}
    \    ${firmwareVersion} =     Get From IC    ${ic}   firmwareVersion
    \    ${firmwareVersion_upgrade} =      verify_c7k_ic_version    ${ic_bay_number}    ${IP}
    \    ${version}=    Should Contain    ${firmwareVersion}    ${firmwareVersion_upgrade}
    \    Should Be Equal As Strings    ${firmwareVersion}       ${firmwareVersion_upgrade}
    \    Log    Validated the firmvare version
    \    Log    ${BICM_NAME}
    \    ${icstate} =     Get From IC    ${ic}   state
    \    Should Be Equal As Strings    ${icstate}       Configured
    \    Log to Console    Validated the ICstate for
    \    Log    ${BICM_NAME}
    Log to Console    Validated the Firmware version by compare with ICM and From API
    Log to Console  \nFirmware version verification  complete
#   Fusion Api Logout Appliance

#TC02 verifyalerts
#   Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}

    ${alerts} =    fusion_api_get_alerts    /rest/alerts

    Log     ${alerts}
#    Run Keyword and Continue on Failure       Should Contain       '${Alert_List}'     ${RR_BB}    Expected Error Message Not seen
    : FOR    ${BICM_NAME}    IN    @{LI_names}
    # ${finalstring}    Catenate    Hello    World
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_str_end}
    \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_succ_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${ICM_Alert1_act_star_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${ICM_Alert1_act_succ_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen


    : FOR    ${BICM_NAME}    IN    @{LI_vc_names}
    # ${finalstring}    Catenate    Hello    World
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${ICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${ICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen

    : FOR    ${BICM_NAME}    IN    @{LI_u_vc_names}
    # ${finalstring}    Catenate    Hello    World
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${ICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${ICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen

    Fusion Api Logout Appliance


    ###################### UPDATE FIRMWARE (STAGING + ACTIVATION) OddEven Mode F1212_TC_API_24  #################
TC22 Verify the FW Update operation (Stage + Activate) of hill and VC modules using Odd and Even mode without force flag (upgrade)
    [Documentation] "3.1.2 F1212_TC_API_24 and F1212_TC_API_30(G2):: Verify the FW Update operation (Stage + Activate) of hill and VC modules using Odd and Even mode without force flag (upgrade)"
    Log to Console  Testcase_ID: TP section 1.3.1.2 API Test Cases F1212_TC_API_24 and F1212_TC_API_30(G2): Verify the FW Update operation (Stage + Activate) of hill and VC modules using Odd and Even mode without force flag (upgrade)
    [Tags]   Performance  firmware-condition-li_upgrade
    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}

#   ${del_resp}=    fusion_api_delete_alert    /rest/alerts
#   Log    ${del_resp}

#   ${body} =   Build LI SPP body   ${Demo_New_li_spp_upgrade_Oddevenb_li_no_flag_higher}

    ${li_uri} =     Get LI URI   ${li}
    ${resp1} =    fusion_api_li_upgrade_firmware      body=${Demo_New_li_spp_upgrade_Oddevenb_li_no_flag_higher}        uri=${li_uri}
    Log     ${resp1}
    ${task} =       Wait For Task   ${resp1}    90 min      18s

    Log     ${task}
    Log to Console      ${task}

    ${valDict} =    Create Dictionary   status_code=${200}
    ...                                 taskState=Completed
    Validate Response   ${task} ${valDict}
    Log to Console  \nStage Firmware Upgrade complete
    Sleep   1 minutes 1 seconds


    Log to Console  Validate interconnect firmware version after firmwareupgrade is complete

    : FOR    ${BICM_NAME}    IN    @{LI_namesall}

    \    ${ic} =     Get IC             ${BICM_NAME}
    \    Log    ${BICM_NAME}
    \    ${ic_bay_number} =    Split String   ${BICM_NAME}   ","

    \    Log    ${ic_bay_number}

    \    ${ic_bay_number} =     Get From List    ${ic_bay_number}    0
    \    Log    ${ic_bay_number}


    \    ${ic_bay_number} =     Get From List    ${ic_bay_number}    25
    \    Log    ${ic_bay_number}
    \    ${firmwareVersion} =     Get From IC    ${ic}   firmwareVersion
    \    ${firmwareVersion_upgrade} =      verify_c7k_ic_version    ${ic_bay_number}    ${IP}
    \    ${version}=    Should Contain    ${firmwareVersion}    ${firmwareVersion_upgrade}
    \    Should Be Equal As Strings    ${firmwareVersion}       ${firmwareVersion_upgrade}
    \    Log    Validated the firmvare version
    \    Log    ${BICM_NAME}
    \    ${icstate} =     Get From IC    ${ic}   state
    \    Should Be Equal As Strings    ${icstate}       Configured
    \    Log to Console    Validated the ICstate for
    \    Log    ${BICM_NAME}
    Log to Console    Validated the Firmware version by compare with ICM and From API
    Log to Console  \nFirmware version verification  complete
#   Fusion Api Logout Appliance

#TC02 verifyalerts
#   Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}

    ${alerts} =    fusion_api_get_alerts    /rest/alerts

    Log     ${alerts}
#    Run Keyword and Continue on Failure       Should Contain       '${Alert_List}'     ${RR_BB}    Expected Error Message Not seen
    : FOR    ${BICM_NAME}    IN    @{LI_names}
    # ${finalstring}    Catenate    Hello    World
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${HICM_Alert1_stg_str_end}
    \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${HICM_Alert1_stg_succ_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${HICM_Alert1_act_star_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${HICM_Alert1_act_succ_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen


    : FOR    ${BICM_NAME}    IN    @{LI_vc_names}
    # ${finalstring}    Catenate    Hello    World
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${HICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${HICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${HICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${HICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen

    : FOR    ${BICM_NAME}    IN    @{LI_u_vc_names}
    # ${finalstring}    Catenate    Hello    World
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${HICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${HICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${HICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${HICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen

    Fusion Api Logout Appliance

TC23 Verify that Hill firmware update should success with G2 (only Auto and 8GB downlink supported) C7000 enclosures via LI using Odd and even mode
    [Documentation] "3.1.2 F1212_TC_API_30(G2):Verify that Hill firmware update should success with G2 (only Auto and 8GB downlink supported) C7000 enclosures via LI using Odd and even mode"
    Log to Console  Testcase_ID: TP section 1.3.1.2 API Test Cases F1212_TC_API_30(G2):Verify that Hill firmware update should success with G2 (only Auto and 8GB downlink supported) C7000 enclosures via LI using Odd and even mode

    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}

#   ${del_resp}=    fusion_api_delete_alert    /rest/alerts
#   Log    ${del_resp}

#   ${body} =   Build LI SPP body   ${Demo_New_li_spp_upgrade_Oddevenb_li_no_flag_higher}

    ${li_uri} =     Get LI URI   ${li}
    ${resp1} =    fusion_api_li_upgrade_firmware      body=${Demo_New_li_spp_upgrade_Oddevenb_li_no_flag_higher}        uri=${li_uri}
    Log     ${resp1}
    ${task} =       Wait For Task   ${resp1}    90 min      18s

    Log     ${task}
    Log to Console      ${task}

    ${valDict} =    Create Dictionary   status_code=${200}
    ...                                 taskState=Completed
    Validate Response   ${task} ${valDict}
    Log to Console  \nStage Firmware Upgrade complete
    Sleep   1 minutes 1 seconds


    Log to Console  Validate interconnect firmware version after firmwareupgrade is complete

    : FOR    ${BICM_NAME}    IN    @{LI_namesall}

    \    ${ic} =     Get IC             ${BICM_NAME}
    \    Log    ${BICM_NAME}
    \    ${ic_bay_number} =    Split String   ${BICM_NAME}   ","

    \    Log    ${ic_bay_number}

    \    ${ic_bay_number} =     Get From List    ${ic_bay_number}    0
    \    Log    ${ic_bay_number}


    \    ${ic_bay_number} =     Get From List    ${ic_bay_number}    25
    \    Log    ${ic_bay_number}
    \    ${firmwareVersion} =     Get From IC    ${ic}   firmwareVersion
    \    ${firmwareVersion_upgrade} =      verify_c7k_ic_version    ${ic_bay_number}    ${IP}
    \    ${version}=    Should Contain    ${firmwareVersion}    ${firmwareVersion_upgrade}
    \    Should Be Equal As Strings    ${firmwareVersion}       ${firmwareVersion_upgrade}
    \    Log    Validated the firmvare version
    \    Log    ${BICM_NAME}
    \    ${icstate} =     Get From IC    ${ic}   state
    \    Should Be Equal As Strings    ${icstate}       Configured
    \    Log to Console    Validated the ICstate for
    \    Log    ${BICM_NAME}
    Log to Console    Validated the Firmware version by compare with ICM and From API
    Log to Console  \nFirmware version verification  complete
#   Fusion Api Logout Appliance

#TC02 verifyalerts
#   Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}

    ${alerts} =    fusion_api_get_alerts    /rest/alerts

    Log     ${alerts}
#    Run Keyword and Continue on Failure       Should Contain       '${Alert_List}'     ${RR_BB}    Expected Error Message Not seen
    : FOR    ${BICM_NAME}    IN    @{LI_names}
    # ${finalstring}    Catenate    Hello    World
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${HICM_Alert1_stg_str_end}
    \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${HICM_Alert1_stg_succ_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${HICM_Alert1_act_star_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${HICM_Alert1_act_succ_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen


    : FOR    ${BICM_NAME}    IN    @{LI_vc_names}
    # ${finalstring}    Catenate    Hello    World
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${HICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${HICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${HICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${HICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen

    : FOR    ${BICM_NAME}    IN    @{LI_u_vc_names}
    # ${finalstring}    Catenate    Hello    World
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${HICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${HICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${HICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${HICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen

    Fusion Api Logout Appliance


    ###################### UPDATE FIRMWARE (STAGING + ACTIVATION) OddEven Mode F1212_TC_API_23  #################
TC24 Verify the FW Update operation (Stage + Activate) of hill and VC modules using Odd and Even mode with force flag (Downgrade G3 enclosure)
    [Documentation] "3.1.2 F1212_TC_API_23: Verify the FW Update operation (Stage + Activate) of hill and VC modules using Odd and Even mode with force flag (Downgrade G3 enclosure)"
    Log to Console  Testcase_ID: TP section 1.3.1.2 API Test Cases F1212_TC_API_23 and F1212_TC_API_25(G1): Verify the FW Update operation (Stage + Activate) of hill and VC modules using Odd and Even mode with force flag (Downgrade G3 enclosure)
    [Tags]   Performance  firmware-condition-li_upgrade
    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}

#   ${del_resp}=    fusion_api_delete_alert    /rest/alerts
#   Log    ${del_resp}

#   ${body} =   Build LI SPP body   ${Demo_New_li_spp_upgrade_Oddevenb_li_tst_higher}

    ${li_uri} =     Get LI URI   ${li}
    ${resp1} =    fusion_api_li_upgrade_firmware      body=${Demo_New_li_spp_upgrade_Oddevenb_li_tst_higher}        uri=${li_uri}
    Log     ${resp1}
    ${task} =       Wait For Task   ${resp1}    90 min      18s

    Log     ${task}
    Log to Console      ${task}

    ${valDict} =    Create Dictionary   status_code=${200}
    ...                                 taskState=Completed
    Validate Response   ${task} ${valDict}
    Log to Console  \nStage Firmware Upgrade complete
    Sleep   1 minutes 1 seconds


    Log to Console  Validate interconnect firmware version after firmwareupgrade is complete

    : FOR    ${BICM_NAME}    IN    @{LI_namesall}

    \    ${ic} =     Get IC             ${BICM_NAME}
    \    Log    ${BICM_NAME}
    \    ${ic_bay_number} =    Split String   ${BICM_NAME}   ","

    \    Log    ${ic_bay_number}

    \    ${ic_bay_number} =     Get From List    ${ic_bay_number}    0
    \    Log    ${ic_bay_number}


    \    ${ic_bay_number} =     Get From List    ${ic_bay_number}    25
    \    Log    ${ic_bay_number}
    \    ${firmwareVersion} =     Get From IC    ${ic}   firmwareVersion
    \    ${firmwareVersion_upgrade} =      verify_c7k_ic_version    ${ic_bay_number}    ${IP}
    \    ${version}=    Should Contain    ${firmwareVersion}    ${firmwareVersion_upgrade}
    \    Should Be Equal As Strings    ${firmwareVersion}       ${firmwareVersion_upgrade}
    \    Log    Validated the firmvare version
    \    Log    ${BICM_NAME}
    \    ${icstate} =     Get From IC    ${ic}   state
    \    Should Be Equal As Strings    ${icstate}       Configured
    \    Log to Console    Validated the ICstate for
    \    Log    ${BICM_NAME}
    Log to Console    Validated the Firmware version by compare with ICM and From API
    Log to Console  \nFirmware version verification  complete
#   Fusion Api Logout Appliance

#TC02 verifyalerts
#   Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}

    ${alerts} =    fusion_api_get_alerts    /rest/alerts

    Log     ${alerts}
#    Run Keyword and Continue on Failure       Should Contain       '${Alert_List}'     ${RR_BB}    Expected Error Message Not seen
    : FOR    ${BICM_NAME}    IN    @{LI_names}
    # ${finalstring}    Catenate    Hello    World
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${HICM_Alert1_stg_str_end}
    \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${HICM_Alert1_stg_succ_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${HICM_Alert1_act_star_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${HICM_Alert1_act_succ_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen


    : FOR    ${BICM_NAME}    IN    @{LI_vc_names}
    # ${finalstring}    Catenate    Hello    World
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${HICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${HICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${HICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${HICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen

    : FOR    ${BICM_NAME}    IN    @{LI_u_vc_names}
    # ${finalstring}    Catenate    Hello    World
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${HICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${HICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${HICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${HICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen

    Fusion Api Logout Appliance

TC25 Verify that Hill firmware update should success with G1 (only Auto and 8GB downlink supported) C7000 enclosures via LI using Odd and Even mode
    [Documentation] "3.1.2 F1212_TC_API_25(G1): Verify that Hill firmware update should success with G1 (only Auto and 8GB downlink supported) C7000 enclosures via LI using Odd and Even mode"
    Log to Console  Testcase_ID: TP section 1.3.1.2 API Test Cases F1212_TC_API_25(G1):Verify that Hill firmware update should success with G1 (only Auto and 8GB downlink supported) C7000 enclosures via LI using Odd and Even mode

    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}

#   ${del_resp}=    fusion_api_delete_alert    /rest/alerts
#   Log    ${del_resp}

#   ${body} =   Build LI SPP body   ${Demo_New_li_spp_upgrade_Oddevenb_li_tst_higher}

    ${li_uri} =     Get LI URI   ${li}
    ${resp1} =    fusion_api_li_upgrade_firmware      body=${Demo_New_li_spp_upgrade_Oddevenb_li_tst_higher}        uri=${li_uri}
    Log     ${resp1}
    ${task} =       Wait For Task   ${resp1}    90 min      18s

    Log     ${task}
    Log to Console      ${task}

    ${valDict} =    Create Dictionary   status_code=${200}
    ...                                 taskState=Completed
    Validate Response   ${task} ${valDict}
    Log to Console  \nStage Firmware Upgrade complete
    Sleep   1 minutes 1 seconds


    Log to Console  Validate interconnect firmware version after firmwareupgrade is complete

    : FOR    ${BICM_NAME}    IN    @{LI_namesall}

    \    ${ic} =     Get IC             ${BICM_NAME}
    \    Log    ${BICM_NAME}
    \    ${ic_bay_number} =    Split String   ${BICM_NAME}   ","

    \    Log    ${ic_bay_number}

    \    ${ic_bay_number} =     Get From List    ${ic_bay_number}    0
    \    Log    ${ic_bay_number}


    \    ${ic_bay_number} =     Get From List    ${ic_bay_number}    25
    \    Log    ${ic_bay_number}
    \    ${firmwareVersion} =     Get From IC    ${ic}   firmwareVersion
    \    ${firmwareVersion_upgrade} =      verify_c7k_ic_version    ${ic_bay_number}    ${IP}
    \    ${version}=    Should Contain    ${firmwareVersion}    ${firmwareVersion_upgrade}
    \    Should Be Equal As Strings    ${firmwareVersion}       ${firmwareVersion_upgrade}
    \    Log    Validated the firmvare version
    \    Log    ${BICM_NAME}
    \    ${icstate} =     Get From IC    ${ic}   state
    \    Should Be Equal As Strings    ${icstate}       Configured
    \    Log to Console    Validated the ICstate for
    \    Log    ${BICM_NAME}
    Log to Console    Validated the Firmware version by compare with ICM and From API
    Log to Console  \nFirmware version verification  complete
#   Fusion Api Logout Appliance

#TC02 verifyalerts
#   Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}

    ${alerts} =    fusion_api_get_alerts    /rest/alerts

    Log     ${alerts}
#    Run Keyword and Continue on Failure       Should Contain       '${Alert_List}'     ${RR_BB}    Expected Error Message Not seen
    : FOR    ${BICM_NAME}    IN    @{LI_names}
    # ${finalstring}    Catenate    Hello    World
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${HICM_Alert1_stg_str_end}
    \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${HICM_Alert1_stg_succ_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${HICM_Alert1_act_star_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${HICM_Alert1_act_succ_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen


    : FOR    ${BICM_NAME}    IN    @{LI_vc_names}
    # ${finalstring}    Catenate    Hello    World
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${HICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${HICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${HICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${HICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen

    : FOR    ${BICM_NAME}    IN    @{LI_u_vc_names}
    # ${finalstring}    Catenate    Hello    World
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${HICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${HICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${HICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${HICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen

    Fusion Api Logout Appliance


    ###################### Verify the behavior of  alert message when try to set firmware baseline which is same as currently installed version and  check the force installation option in  firmware update operation on LI page F1212_TC_API_68  #################
TC26 Verify the behavior of alert message when try to set firmware baseline which is same as currently installed version and check the force installation option in firmware update operation on LI page
    [Documentation] "3.1.2 F1212_TC_API_68: Verify the behavior of  alert message when try to set firmware baseline which is same as currently installed version and  check the force installation option in  firmware update operation on LI page"
    Log to Console      Testcase_ID:TP section 1.3.1.2 API TestCases F1212_TC_API_68 :Verify the behavior of alert message when try to set firmware baseline which is same as currently installed version andcheck the forceinstallation optioninfirmware update operation on LIpage
    [Tags]   Performance  firmware-condition-li_upgrade
    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}

#   ${del_resp}=    fusion_api_delete_alert    /rest/alerts
#   Log    ${del_resp}

#   ${body} =   Build LI SPP body   ${Demo_New_li_spp_upgrade_Oddevenb_li_same_ver_higher}

    ${li_uri} =     Get LI URI   ${li}
    ${resp1} =    fusion_api_li_upgrade_firmware    body=${Demo_New_li_spp_upgrade_Oddevenb_li_same_ver_higher}     uri=${li_uri}
    Log     ${resp1}
    ${task} =       Wait For Task   ${resp1}    80 min      18s

    Log     ${task}
    Log to Console      ${task}

    ${valDict} =    Create Dictionary   status_code=${200}
    ...                                 taskState=Completed
    Validate Response   ${task} ${valDict}
    Log to Console     \nStage Firmware Upgrade complete
    Sleep   1 minutes 1 seconds


    Log to Console     Validate interconnect firmware version after firmwareupgrade is complete

    : FOR    ${BICM_NAME}    IN    @{LI_namesall}

    \    ${ic} =     Get IC             ${BICM_NAME}
    \    Log    ${BICM_NAME}
    \    ${ic_bay_number} =    Split String   ${BICM_NAME}   ","

    \    Log    ${ic_bay_number}

    \    ${ic_bay_number} =     Get From List    ${ic_bay_number}    0
    \    Log    ${ic_bay_number}


    \    ${ic_bay_number} =     Get From List    ${ic_bay_number}    25
    \    Log    ${ic_bay_number}
    \    ${firmwareVersion} =     Get From IC    ${ic}   firmwareVersion
    \    ${firmwareVersion_upgrade} =      verify_c7k_ic_version    ${ic_bay_number}    ${IP}
    \    ${version}=    Should Contain    ${firmwareVersion}    ${firmwareVersion_upgrade}
    \    Should Be Equal As Strings    ${firmwareVersion}       ${firmwareVersion_upgrade}
    \    Log    Validated the firmvare version
    \    Log    ${BICM_NAME}
    \    ${icstate} =     Get From IC    ${ic}   state
    \    Should Be Equal As Strings    ${icstate}       Configured
    \    Log to Console    Validated the ICstate for
    \    Log    ${BICM_NAME}
    Log to Console    Validated the Firmware version by compare with ICM and From API
    Log to Console  \nFirmware version verification  complete
#   Fusion Api Logout Appliance

#TC02 verifyalerts
#   Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}

    ${alerts} =    fusion_api_get_alerts    /rest/alerts

    Log     ${alerts}
#    Run Keyword and Continue on Failure       Should Contain       '${Alert_List}'     ${RR_BB}    Expected Error Message Not seen
    : FOR    ${BICM_NAME}    IN    @{LI_names}
    # ${finalstring}    Catenate    Hello    World
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${HICM_Alert1_stg_str_end}
    \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${HICM_Alert1_stg_succ_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${HICM_Alert1_act_star_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${HICM_Alert1_act_succ_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen


    : FOR    ${BICM_NAME}    IN    @{LI_vc_names}
    # ${finalstring}    Catenate    Hello    World
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${HICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${HICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${HICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${HICM_Alert1_stg_star_1_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen

    : FOR    ${BICM_NAME}    IN    @{LI_u_vc_names}
    # ${finalstring}    Catenate    Hello    World
    \    ${Al_stg_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_star}    ${HICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_stg_str}
#   \    ${alerts} =    fusion_api_get_alerts    /rest/alerts
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_str}   Expected Error Message Not seen


    \    ${Al_stg_suc}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_stg_succ}    ${HICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_stg_suc}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_stg_suc}   Expected Error Message Not seen


    \    ${Al_act_str}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_star}    ${HICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_act_str}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_str}   Expected Error Message Not seen

    \    ${Al_act_succ}    Catenate    SEPARATOR= ${BICM_NAME}    ${ICM_Alert1_act_succ}    ${HICM_Alert1_stg_star_2_end}
    \    Log to Console    ${Al_act_succ}
    \    Run Keyword and Continue on Failure       Should Contain       '${alerts}'     ${Al_act_succ}  Expected Error Message Not seen

    Fusion Api Logout Appliance


#ConnectOA_get_Firmversion

#    Open Connection      ${IP}
#    ${output} =    Login    Administrator    Admin
#    ${stdout}    ${stderr}    ${rc}=    Execute Command    show interconnect info 4    return_stderr=True    return_rc=True
#    Log            ${stdout}
#    ${OAfirmwareversionVersion}=    Get Lines Containing String    ${stdout}   Firmware Version:
#    Log                ${OAVersion}
#    Should be Equal as Strings    ${OAfirmwareversionVersion}      ${rtlv}
#    [Return]    ${OAVersion}



*** Keywords ***

Fusion Api Get Activity Alerts
    [Documentation]    Fetch recent Fusion Activity Alerts
    ...    (Assumes a Fusion REST Api connection is open and logged in).
    ...    Returns a list of Alerts.
    [Arguments]    ${Starting_AlertID}=1        ${Resource_Filter}=.*
    ${Alert_List}    Create List
    # Get the entire list of Alerts
    ${Response}    Fusion Api Get Alerts    /rest/alerts?sort=created:ascending
    ${Count}    Get From Dictionary    ${Response}    count
    Return From Keyword If    '${Count}'=='0'    msg=No alert events found

    ${Members}    Get From Dictionary    ${Response}    members
    :FOR    ${Index}    IN RANGE    0    ${Count}
    \    ${Alert}    Get From List    ${Members}    ${Index}

    \    # Select only the most recent events - skip any before that
    \    ${uri}    Get From Dictionary    ${Alert}    uri
    \    ${id}     Fetch From Right    ${uri}    /
    \    Run Keyword If    ${Starting_AlertID}>=${id}    Continue For Loop

    \    # Remember the last Alert ID encountered
    \    Set Suite Variable    ${Last_AlertID}    ${id}

    \    # Filter out any unrelated alerts
    \    ${resourceID}    Get From Dictionary    ${Alert}    resourceUri
    \    ${alertState}    Get From Dictionary    ${Alert}    alertState
    \    ${Found}    Run Keyword And Return Status
    \    ...    Should Match Regexp    ${resourceID}    ${Resource_Filter}

    \    Run Keyword If    '${Found}'=='False'    Continue For Loop

    \    # Include this alert into the 'List of Activity Events'
    \    Append to List    ${Alert_List}    ${Alert}
    Should Not Be Empty    ${Alert_List}    No Activity Events Found
    Log         ${Alert_List}
    [Return]    ${Alert_List}

Fusion Api Get Activity Alerts_new
    [Arguments]    ${Starting_AlertID}=1        ${Resource_Filter}=.*
    ${Alert_List}    Create List
    # Get the entire list of Alerts
    ${Response}    Fusion Api Get Alerts    /rest/alerts

    [Return]    ${Response}


Validate Activity
    [Arguments]    ${Alert_List}            ${Expected_Alerts}
    :FOR    ${Alert}    IN    @{Alert_List}
    \    ${uri}            Get From Dictionary      ${Alert}        uri
    \    ${alertState}     Get From Dictionary      ${Alert}        alertState
    \    ${alertTypeID}    Get From Dictionary      ${Alert}        alertTypeID
    \    ${description1}    Get From Dictionary     ${Alert}        description
    \    Log    ${description1}
#    \    ${description2}    Get From Dictionary        ${Alert}        taskStatus
#   \    Run Keyword and Continue on Failure       Should Contain       '${Alert}'      ${description1}     Expected Error Message Not seen
    \    Run Keyword If     '${description1}' == '${Expected_Alerts}'       Exit For Loop
    \    ${description}    Get From Dictionary      ${Alert}        description
    \    ${uri}    Get From Dictionary      ${Alert}        uri

    \    Run Keyword     Should Not Contain Match    '${description}'       '${Expected_Alerts}'        Continue For Loop
    \    Log to console and logfile             Activity exists    '${description1}'
         [Return]    ${uri}
#        Log         ${uri}

Open SSH to OA
    [Documentation]    Connect to Virtual Connect Interconnect via SSH
    #[Documentation]    Example:\n| Login to Fusion Via SSH | 10.0.12.106 | Administrator | hpvse123 |
    [Arguments]    ${IP}=${OA_CREDENTIAL_DATA['oaIpAddress']}   ${USERNAME}=${OA_CREDENTIAL_DATA['oaUsername']}    ${PASSWORD}=${OA_CREDENTIAL_DATA['oaPassword']}
    ...             ${PROMPT}=>    ${TIMEOUT}=${120}
    Log Many    ${IP}    ${USERNAME}    ${PASSWORD}    ${PROMPT}    ${TIMEOUT}
    Set Default Configuration    prompt=${PROMPT}    timeout=${TIMEOUT}
    ${Id}=    Open Connection      ${IP}
    ${Output}=    Login    ${USERNAME}    ${PASSWORD}
    ${stdout}    ${stderr}    ${rc}=    Execute Command    show interconnect info 4    return_stderr=True    return_rc=True
    ${OAVersion}=    Get Lines Containing String    ${stdout}   Firmware Ver.
     ${OAVersion}=      Fetch From Right      ${OAVersion}   :
    Log to console and logfile    \n Open SSH Connection to Onboard Administrator ${IP} ....
    Log to console and logfile    OA Firmware Ver: ${OAVersion}
    Set Suite Metadata     OA Firmware Version    ${OAVersion}
    [Return]    ${Id}  ${OAVersion}

ConnectOA_get_Firmversion
    Open Connection      ${IP}
    ${output} = Login    Administrator    Admin
    ${stdout}    ${stderr}    ${rc}=    Execute Command    show interconnect info 4    return_stderr=True    return_rc=True
    Log         ${stdout}
    ${OAVersion}=    Get Lines Containing String    ${stdout}   Firmware Version:
    Log             ${OAVersion}
    [Return]    ${OAVersion}


Close SSH Connection
    [Documentation]    Exits the current SSH session
    Close Connection

Build LI SPP body

    [Arguments]     ${li_spp}
    ${liedit} =     Copy Dictionary ${li_spp}
    ${command} =                       Get Variable Value  ${li_spp['command']}
    ${ethernetActivationDelay} =              Get Variable Value  ${li_spp['ethernetActivationDelay']}
    ${ethernetActivationType} =              Get Variable Value  ${li_spp['ethernetActivationType']}
    ${fcActivationDelay} =              Get Variable Value  ${li_spp['fcActivationDelay']}
    ${fcActivationType} =              Get Variable Value  ${li_spp['fcActivationType']}
    ${force} =              Get Variable Value  ${li_spp['force']}
    ${sppUri} =           Get Variable Value  ${li_spp['sppUri']}





#   ${body} =   Fusion Api Create LI spp Body   command=${command}
#   ...                                         ethernetActivationDelay=${ethernetActivationDelay}
#   ...                                         ethernetActivationType=${ethernetActivationType}
#   ...                                         fcActivationDelay=${fcActivationDelay}
#   ...                                         fcActivationType=${fcActivationType}
#   ...                                         force=${force}
#   ...                                         sppUri=${sppUri}
#   ...

    ${body} =   Fusion Api Create LI spp Body   sppUri=${sppUri}
    ...                                         command=${command}
    ...                                         force=${force}
    ...                                         ethernetActivationType=${ethernetActivationType}
    ...                                         ethernetActivationDelay=${ethernetActivationDelay}
    ...                                         fcActivationType=${fcActivationType}
    ...                                         fcActivationDelay=${fcActivationDelay}
    ...
    [Return]    ${body}

Build SelectiveInterconnects SPP body

    [Arguments]     ${li_spp}    ${selectiveinterconnecturis}
    ${liedit} =     Copy Dictionary ${li_spp}
    ${command} =                       Get Variable Value  ${li_spp['command']}
    ${ethernetActivationDelay} =              Get Variable Value  ${li_spp['ethernetActivationDelay']}
    ${ethernetActivationType} =              Get Variable Value  ${li_spp['ethernetActivationType']}
    ${fcActivationDelay} =              Get Variable Value  ${li_spp['fcActivationDelay']}
    ${fcActivationType} =              Get Variable Value  ${li_spp['fcActivationType']}
    ${force} =              Get Variable Value  ${li_spp['force']}
    ${sppUri} =           Get Variable Value  ${li_spp['sppUri']}
    ${selectiveinterconnecturisvalue}=   Get From List    ${selectiveinterconnecturis}    0
    ${interconnects}=     Get Variable Value  ${selectiveinterconnecturisvalue['interconnects']}





#   ${body} =   Fusion Api Create LI spp Body   command=${command}
#   ...                                         ethernetActivationDelay=${ethernetActivationDelay}
#   ...                                         ethernetActivationType=${ethernetActivationType}
#   ...                                         fcActivationDelay=${fcActivationDelay}
#   ...                                         fcActivationType=${fcActivationType}
#   ...                                         force=${force}
#   ...                                         sppUri=${sppUri}
#   ...
    @{body} =     Create Dictionary

    Append to List    @{body}    ${sppUri}
    Append to List    @{body}    ${command}
    Append to List    @{body}    ${interconnects}
    Append to List    @{body}    ${force}
    Append to List    @{body}    ${ethernetActivationType}
    Append to List    @{body}    ${ethernetActivationDelay}
    Append to List    @{body}    ${fcActivationType}
    Append to List    @{body}    ${fcActivationDelay}

#   ${body} =   fusion_api_create_li_spp_body_active    sppUri=${sppUri}
#   ...                                         command=${command}
#   ...                                         interconnects=${interconnects}
#   ...                                         force=${force}
#   ...                                         ethernetActivationType=${ethernetActivationType}
#   ...                                         ethernetActivationDelay=${ethernetActivationDelay}
#   ...                                         fcActivationType=${fcActivationType}
#   ...                                         fcActivationDelay=${fcActivationDelay}
#   ...
    [Return]    @{body}



00 Appliance LogIn
    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}
    ${users} =  Get Variable Value  ${users}
    Run Keyword If  ${users} is not ${null}    Add Users from variable              ${users}
    ${ethernet_networks} =  Get Variable Value    ${ethernet_networks1}
    Run Keyword If  ${ethernet_networks1} is not ${null}    Add Ethernet Networks from variable ${ethernet_networks1}

00 Create LIG, create enclosure group and import enclosure
    [Tags]  14
    ${body} =   Build LIG body      ${ligs['lig1']}
    ${resp} =   Fusion Api Create LIG   ${body}
    ${task} =   Wait For Task   ${resp}     60s 2s
    Add Enclosure Group from variable       ${enc_group}
    Add Enclosures from variable   ${encs}

00 Create server profile and ping blade
    [Tags]  15
    Power off ALL servers
    ${profiles} =     Copy List     ${server_profiles}
    Add Server Profiles from variable   ${profiles}
    Power on server      SGH411DFYA, bay 6
    Log to console and logfile      Waiting 10 minutes for server to boot...
    Sleep   10min
    Wait For Appliance To Become Pingable   10.10.2.31






#Get IC
#   [Arguments]     ${ICM_NAME}
#    ${resp} =   fusion api get interconnect
#    Log        ${resp}
#    ${ics} =     Get From Dictionary     ${resp}    members
#   ${l} =  Get Length  ${ics}
#   :FOR    ${x}    IN RANGE    0   ${l}
#    \   ${ic} =     Get From List   ${ics}    ${x}
#   \   Exit For Loop If    '${ic['name']}' == '${ICM_NAME}'
#   [Return]    ${ic}
#   Log     ${ic}

Get LE
    [Arguments]     ${LE_NAME}
    ${resp} =   fusion api get Logical Enclosure
    Log     ${resp}
    ${les} =     Get From Dictionary     ${resp}    members
    ${l} =  Get Length  ${les}
    :FOR    ${x}    IN RANGE    0   ${l}
    \   ${le} =     Get From List   ${les}    ${x}
    \   Exit For Loop If    '${le['name']}' == '${LE_name}'
    [Return]    ${le}
    Log     ${le}

Get from LE
    [Arguments]     ${le}   ${element}
    ${return} =     Get From Dictionary     ${le}   ${element}
    [Return]    ${return}



Edit LIG
    [Arguments]     ${lig}  ${li}   ${LLDPIP}   ${ltlv} ${rtlv}
    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}
    ${body} =   Build LIG body      ${lig}
    Log to console and logfile    ${body}
    ${lig} =        Get LIG Member      ${LIG1}
    ${lig_uri} =    Get LIG Uri         ${LIG1}
    ${resp} =   Fusion Api Edit LIG body=${body}        uri=${lig_uri}
    ${task} =   Wait For Task   ${resp}     120s
    ${valDict} =    Create Dictionary   status_code=${200}
    ...                                 taskState=Completed
    Validate Response   ${task} ${valDict}
    Perform an Update From Group    ${li}   120 min     1 min
    ValidateLI LLDP Ip Address  ${li}   ${LLDPIP}
    ValidateLI TaggedLLDP and RICH TLV  ${li}   ${ltlv} ${rtlv}



Get IC
    [Arguments]     ${ICM_NAME}
    ${resp} =   fusion api get interconnect
    Log     ${resp}
    ${ics} =     Get From Dictionary     ${resp}    members
    ${l} =  Get Length  ${ics}
    :FOR    ${x}    IN RANGE    0   ${l}
    \   ${ic} =     Get From List   ${ics}    ${x}
    \   Exit For Loop If    '${ic['name']}' == '${ICM_NAME}'
    [Return]    ${ic}
    Log     ${ic}

Validate Interconnects
    [Arguments]     ${ICM_NAME}     ${ltlv}     ${rtlv}     ${LLDPIP}
    Log to console and logfile    Validating Interconnects for LLDP and taggedTLV and RichTLV flags
    ${ic} =     Get IC      ${ICM_NAME}
    ${enableRichTLV} =          Get From IC    ${ic}   enableRichTLV
    ${enableTaggedLldp} =       Get From IC    ${ic}   enableTaggedLldp
    ${lldpip} =             Get from IC     ${ic}       lldpIpv4Address
    Should be Equal as Strings    ${enableRichTLV}      ${rtlv}
    Should be Equal as Strings    ${enableTaggedLldp}       ${ltlv}
    Should be Equal as Strings    ${lldpip}     ${LLDPIP}

Perform an Update From Group
    [Arguments]     ${li}=${LE}-${LIG1} ${timeout}=5 min    ${interval}=15s
    ${li_uri} =     Get LI URI   ${li}
    ${resp} =       Fusion Api Update from group    ${li_uri}
    ${task} =       Wait For Task   ${resp}     ${timeout}      ${interval}
    ${valDict} =    Create Dictionary   status_code=${200}
    ...                                 taskState=Completed
    Validate Response   ${task} ${valDict}

Edit LI
    [Arguments]     ${li}   ${li_set1}  ${LLDPIP}   ${ltlv}     ${rtlv}
    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}
    ${body} =   Build LI body   ${li_set1}
    ${li_uri} =     Get LI URI   ${li}
    ${resp} =   Fusion Api Get Li   ${li_uri}
    Log   ${resp}
    ${es} =     Get From Dictionary     ${resp} ethernetSettings
    ${uri} =    Get From Dictionary     ${es}       uri
    ${id} =     Get From Dictionary     ${es}       id
    Log     ${id}
    Set to Dictionary   ${body} id  ${id}
    Log   ${body}
    ${resp1} =  Fusion Api Update LI Ethernet Settings  body=${body}        uri=${li_uri}
    Log   ${resp1}
    ${task} =   Wait For Task   ${resp1}    120s
    ${valDict} =    Create Dictionary   status_code=${200}
    ...                                 taskState=Completed
    Validate Response   ${task} ${valDict}
    ValidateLI LLDP Ip Address  ${li}   ${LLDPIP}
    ValidateLI TaggedLLDP and RICH TLV  ${li}   ${ltlv} ${rtlv}

Build LI body
    [Arguments]     ${liedit}
    ${liedit} =     Copy Dictionary ${liedit}
    ${type} =                       Get Variable Value  ${liedit['type']}
    ${enableRichTLV} =           Get Variable Value  ${liedit['enableRichTLV']}
    ${enableTaggedLldp} =              Get Variable Value  ${liedit['enableTaggedLldp']}


    ${body} =   Fusion Api Create LI Settings Payload   type=${type}
    ...                                         enableRichTLV=${enableRichTLV}
    ...                                         enableTaggedLldp=${enableTaggedLldp}
    ...
    [Return]    ${body}

SSH to host and ping x
    [Documentation]    SSH's to a given host, then pings an IP from that host
    [Arguments]        ${HOST}    ${HOST2}
    Open Connection And Log In      ${HOST}
    ${Output}=    Execute Command    ping -c 4 ${HOST2}    return_stdout=True    return_rc=False
    Log to console and logfile    ${Output}
    Should Contain    ${Output}    ttl=
    Close All Connections

Add LIG from variable
    [Documentation] Adds an LIG to an appliance from a variable which contains a list of dicts with the entire payload
    [Arguments]     ${ligx}
    Log     Adding LIG ${ligx}
    ${ligx} =   Copy Dictionary ${ligs['${ligx}']}

    ${name} =                       Get Variable Value  ${ligx['name']}
    ${enclosureIndexes} =           Get Variable Value  ${ligx['enclosureIndexes']}
    ${enclosureType} =              Get Variable Value  ${ligx['enclosureType']}
    ${ethernetSettings} =           Get Variable Value  ${ligx['ethernetSettings']}
    ${fcoeSettings} =               Get Variable Value  ${ligx['fcoeSettings']}
    ${internalNetworkUris} =        Get Variable Value  ${ligx['internalNetworkUris']}
    ${interconnectBaySet} =         Get Variable Value  ${ligx['interconnectBaySet']}
    ${interconnectMapTemplate} =    Get Variable Value  ${ligx['interconnectMapTemplate']}
    ${qosConfiguration} =           Get Variable Value  ${ligx['qosConfiguration']}
    ${redundancyType} =             Get Variable Value  ${ligx['redundancyType']}
    ${stackingMode} =               Get Variable Value  ${ligx['stackingMode']}
    ${telemetryConfiguration} =     Get Variable Value  ${ligx['telemetryConfiguration']}
    ${snmpConfiguration} =          Get Variable Value  ${ligx['snmpConfiguration']}
    ${uplinkSets} =                 Get Variable Value  ${ligx['uplinkSets']}
    #${uplinkSets} =    Copy List   ${ligx['uplinkSets']}
    ${l} =  Get Length  ${uplinkSets}


    :FOR    ${x}    IN RANGE    0   ${l}
    \   ${networkType} =    Get From Dictionary     ${uplinkSets[${x}]} networkType
    \   ${networks} =       Get From Dictionary     ${uplinkSets[${x}]} networkUris
    \   ${nativeNetworkUri} =   Get Variable Value     ${uplinkSets[${x}]['nativeNetworkUri']}
    \   Run Keyword If  '${networkType}' == 'FibreChannel'  Continue For Loop
    #\  ${networkUris} =    Get FCoE Uris   ${networks}
    #\   ${ethernetUris} =   Get Ethernet URIs   ${networks}
    #\   ${networkUris} =    combine lists   ${networkUris}  ${ethernetUris}
    \   ${networkUris} =    Get Ethernet URIs   ${networks}
    \   Set to dictionary   ${uplinkSets[${x}]} networkUris     ${networkUris}
    \   ${nativeNetworkUri} =   Run Keyword If   '${nativeNetworkUri}' != 'None'    Get Ethernet Uri    ${nativeNetworkUri}
    \   Set to dictionary   ${uplinkSets[${x}]} nativeNetworkUri     ${nativeNetworkUri}


    Log   ${uplinkSets}
    ${body} =   Fusion Api Create LIG Payload   name=${name}
    ...                                         enclosureType=${enclosureType}
    ...                                         ethernetSettings=${ethernetSettings}
    ...                                         interconnectMapTemplate=${interconnectMapTemplate}
    ...                                         stackingMode=${stackingMode}
    ...                                         telemetryConfiguration=${telemetryConfiguration}
    ...                                         snmpConfiguration=${snmpConfiguration}
    ...                                         uplinkSets=${uplinkSets}

    ${resp} =   Fusion Api Create LIG   ${body}
    ${task} =   Wait For Task   ${resp}     60s    2s
    ${liguri} =     Get From Dictionary ${task['associatedResource']}   resourceUri
    [Return]    ${resp}

OA CLI EFUSE
    [Documentation]    issues an EFUSE Action to the given Device\Bay.
    ...   {DEVICE} = <BLADE|IOM|NETTRAY|SWM|FAN|OA|EM>
    ...   {BAY} = desired bay for given device
    ...   {ACTION} = <ON|OFF>
    [Arguments]        ${OA_HOST}    ${OA_USER}     ${OA_PASS}    ${DEVICE}    ${BAY}    ${ACTION}
    Open Connection     ${OA_HOST}     prompt=OA-    timeout=20s
    Login               ${OA_USER}     ${OA_PASS}
    Write    ++diag--
    Read Until    diag>
    Write    efuse ${DEVICE} ${BAY} ${ACTION}
    Write    q
    Close All Connections

#FTS
    #Set Log Level  DEBUG
    #Get VM IP   ${VM}
    #First Time Setup                   password=hpvse123

Test Specific Setup
    Set Log Level   TRACE
    Run Keyword and Ignore Error    Write To ciDebug Log
    Log to console and logfile  [TEST-SPECIFIC SETUP]
    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}
    ${users} =  Get Variable Value  ${users}
    Run Keyword If  ${users} is not ${null}    Add Users from variable              ${users}
    ${ethernet_networks} =  Get Variable Value    ${ethernet_networks}
    Run Keyword If  ${ethernet_networks} is not ${null}    Add Ethernet Networks from variable  ${ethernet_networks}
    #${ethernet_ranges} =   Get Variable Value  ${ethernet_ranges}
    #Run Keyword If ${ethernet_ranges} is not ${null}       Run Keyword for List    ${ethernet_ranges}  Create Ethernet Range
    #${fc_networks} =   Get Variable Value  ${fc_networks}
    #Run Keyword If ${fc_networks} is not ${null}    Add FC Networks from variable      ${fc_networks}
    #${fcoe_networks} = Get Variable Value  ${fcoe_networks}
    #Run Keyword If ${fcoe_networks} is not ${null}    Add FCoE Networks from variable      ${fcoe_networks}
    #${licenses} =  Get Variable Value  ${licenses}
    #Run Keyword If ${licenses} is not ${null}      Add Licenses from variable      ${licenses}
    #Login all users     ${users}

Run FTS and test-specific setup
    Set Log Level   TRACE
    #FTS
    Test Specific Setup
