*** Settings ***
Documentation		Feature Test: Mac Table

Variables 		    data_variables.py

Suite Setup   		Run FTS and test-specific setup
Suite Teardown		Suite Teardown

Resource            ../../../../resource/fusion_api_all_resource_files.txt

Library				Collections
Library             json
Library				OperatingSystem

*** Variables ***
${SSH_PASS}                     hpvse1
${VM}

*** Test Cases ***
POSITIVE - GET mactable with no filter as POSITIVE_USERS
    [Tags]  1    POSITIVE
	Run Keyword and Ignore Error    Write To ciDebug Log
	Fusion Api Login Appliance 		${APPLIANCE_IP}		${admin_credentials}
	${li_uri} = 	    Get LI URI   ${ENC1}-${LIG1}
	:FOR	${user}   IN    @{POSITIVE_USERS}
	\    ${resp} =   Run Keyword as User     ${user}     Fusion Api Get LI Forwarding Information Base    ${li_uri}
	\	 ${valDict} = 	Create Dictionary    status_code=${200}
	\    Validate response    ${resp}    ${valDict}

NEGATIVE - Try to GET mactable with no filter as NEGATIVE_USERS
    [Tags]  2    NEGATIVE
	Run Keyword and Ignore Error    Write To ciDebug Log
	Fusion Api Login Appliance 		${APPLIANCE_IP}		${admin_credentials}
	${li_uri} = 	    Get LI URI   ${ENC1}-${LIG1}
	:FOR	${user}   IN    @{NEGATIVE_USERS}
	\    ${resp} =   Run Keyword as User     ${user}     Fusion Api Get LI Forwarding Information Base    ${li_uri}
	\	 ${valDict} = 	Create Dictionary    status_code=${401}
	\    Validate response    ${resp}    ${valDict}

POSITIVE - GET mactable with a filter
    [Tags]  3    POSITIVE
	Run Keyword and Ignore Error    Write To ciDebug Log
	Fusion Api Login Appliance 		${APPLIANCE_IP}		${admin_credentials}
	${li_uri} = 	    Get LI URI   ${ENC1}-${LIG1}
	${resp} =   Fusion Api Get LI Forwarding Information Base    ${li_uri}    param=?filter=externalVlan='101'
	${valDict} = 	Create Dictionary    status_code=${200}
	Validate response    ${resp}    ${valDict}

NEGATIVE - Try to Generate mactable file as NEGATIVE_USERS
    [Tags]  4    NEGATIVE
	Run Keyword and Ignore Error    Write To ciDebug Log
	Fusion Api Login Appliance 		${APPLIANCE_IP}		${admin_credentials}
	${li_uri} = 	    Get LI URI   ${ENC1}-${LIG1}
	:FOR	${user}   IN    @{NEGATIVE_USERS}
	\    ${resp} =   Run Keyword as User     ${user}     Fusion Api Generate LI Forwarding Information Base Dump File   ${li_uri}
	\	 ${valDict} = 	Create Dictionary    status_code=${401}
	\    Validate response    ${resp}    ${valDict}

POSITIVE - Generate mactable file as POSITIVE_USERS
    [Tags]  5    POSITIVE
	Run Keyword and Ignore Error    Write To ciDebug Log
	Fusion Api Login Appliance 		${APPLIANCE_IP}		${admin_credentials}
	${li_uri} = 	    Get LI URI   ${ENC1}-${LIG1}

	:FOR	${user}   IN    @{POSITIVE_USERS}
	\    ${resp} =   Run Keyword as User     ${user}     Fusion Api Generate LI Forwarding Information Base Dump File   ${li_uri}
	\	 ${valDict} = 	Create Dictionary    status_code=${200}
	\    Validate response    ${resp}    ${valDict}

NEGATIVE - Try to Download mactable file as NEGATIVE_USERS
    [Tags]  6    NEGATIVE
	Run Keyword and Ignore Error    Write To ciDebug Log
	Fusion Api Login Appliance 		${APPLIANCE_IP}		${admin_credentials}
	${li_uri} = 	    Get LI URI   ${ENC1}-${LIG1}
	:FOR	${user}   IN    @{NEGATIVE_USERS}
	\    ${resp} =   Run Keyword as User     ${user}     Fusion Api Generate LI Forwarding Information Base Dump File   ${li_uri}
	\	 ${valDict} = 	Create Dictionary    status_code=${401}
	\    Validate response    ${resp}    ${valDict}

POSITIVE - Download mactable file
    [Tags]  7    POSITIVE
	Run Keyword and Ignore Error    Write To ciDebug Log
	Fusion Api Login Appliance 		${APPLIANCE_IP}		${admin_credentials}
	# remove any existing local file
	Remove file    mactable.gz
	${li_uri} = 	Get LI URI   ${ENC1}-${LIG1}
	# First, generate a new file to get a fresh URI
    ${resp} =       Fusion Api Generate LI Forwarding Information Base Dump File   ${li_uri}
	${valDict} = 	Create Dictionary    status_code=${200}
	Validate response    ${resp}    ${valDict}
	${fileuri} =    Get From Dictionary    ${resp}    uri
	# set suite variable for use in the next test case (8)
	Set Suite Variable    ${fileuri}    ${fileuri}
    # Download the file
	${resp} =   Fusion Api Get LI Forwarding Information Base Dump File   ${fileuri}   mactable.gz
	${valDict} = 	Create Dictionary    status_code=${200}
	Validate response    ${resp}    ${valDict}
	# Check that the OS file is written
    OperatingSystem.File should exist    mactable.gz

NEGATIVE - Try to Download mactable file that has already been downloaded
    [Tags]  8    NEGATIVE
	Run Keyword and Ignore Error    Write To ciDebug Log
	Fusion Api Login Appliance 		${APPLIANCE_IP}		${admin_credentials}
	${resp} =   Fusion Api Get LI Forwarding Information Base Dump File   ${fileuri}   mactable.gz
	${valDict} = 	Create Dictionary    status_code=${404}
	Validate response    ${resp}    ${valDict}

POSITIVE - Generate mactable file with Interconnect powered off
    [Tags]  9    POSITIVE
	Run Keyword and Ignore Error    Write To ciDebug Log
	Fusion Api Login Appliance 		${APPLIANCE_IP}		${admin_credentials}
    ${uri} =     Get IC URI    ${ENC1}, interconnect 1
    Wait Until Keyword Succeeds		240s	5s	   IC reached state    ${uri}    Configured
    OA CLI POWEROFF    ${OA_HOST}    ${OA_USER}    ${OA_PASS}   INTERCONNECT    1
    Wait Until Keyword Succeeds		20min	10s	   IC reached state    ${uri}    Maintenance
	${li_uri} = 	Get LI URI   ${ENC1}-${LIG1}
	# First, generate a new file to get a fresh URI
    ${resp} =       Fusion Api Generate LI Forwarding Information Base Dump File   ${li_uri}
	${valDict} = 	Create Dictionary    status_code=${200}
	...                                  status=((?im)Excluded)
	Validate Response Regex     ${resp}    ${valDict}
	${fileuri} =    Get From Dictionary    ${resp}    uri
    # Download the file
	${resp} =   Fusion Api Get LI Forwarding Information Base Dump File   ${fileuri}   mactable.gz
	${valDict} = 	Create Dictionary    status_code=${200}
	Validate response    ${resp}    ${valDict}
	# Check that the OS file is written
    OperatingSystem.File should exist    mactable.gz
    OA CLI POWERON    ${OA_HOST}    ${OA_USER}    ${OA_PASS}   INTERCONNECT    1
    Wait Until Keyword Succeeds		20min	30s	   IC reached state    ${uri}    Configured

POSITIVE - Generate mactable file with Interconnect removed (efuse)
    [Tags]  10    POSITIVE
	Run Keyword and Ignore Error    Write To ciDebug Log
	Fusion Api Login Appliance 		${APPLIANCE_IP}		${admin_credentials}
    ${uri} =     Get IC URI    ${ENC1}, interconnect 1
    Wait Until Keyword Succeeds		120s	5s	   IC reached state    ${uri}    Configured
    OA CLI EFUSE    ${OA_HOST}    ${OA_USER}    ${OA_PASS}   SWM    1    off
    Wait Until Keyword Succeeds		12min	10s	   IC reached state    ${uri}    Absent
	${li_uri} = 	Get LI URI   ${ENC1}-${LIG1}
	# First, generate a new file to get a fresh URI
    ${resp} =       Fusion Api Generate LI Forwarding Information Base Dump File   ${li_uri}
	${valDict} = 	Create Dictionary    status_code=${200}
	...                                  status=((?i)Excluded)
	Validate Response Regex    ${resp}    ${valDict}
	${fileuri} =    Get From Dictionary    ${resp}    uri
    # Download the file
	${resp} =   Fusion Api Get LI Forwarding Information Base Dump File   ${fileuri}   mactable.gz
	${valDict} = 	Create Dictionary    status_code=${200}
	Validate response    ${resp}    ${valDict}
	# Check that the OS file is written
    OperatingSystem.File should exist    mactable.gz
    OA CLI EFUSE    ${OA_HOST}    ${OA_USER}    ${OA_PASS}   SWM    1    on
    Wait Until Keyword Succeeds		12min   	30s	   IC reached state    ${uri}    Configured

NEGATIVE - Generate mactable file with FC only MODULE
    [Tags]  11    NEGATIVE
	Run Keyword and Ignore Error    Write To ciDebug Log
	Fusion Api Login Appliance 		${APPLIANCE_IP}		${admin_credentials}
    Remove All Enclosures
	${negencs} =	Get Variable Value	${negencs}
	Run Keyword If	${negencs} is not ${null}					Add Enclosures from variable	${negencs}
	${li_uri} = 	Get LI URI   ${ENC1}-${LIG2}
    ${resp} =       Fusion Api Generate LI Forwarding Information Base Dump File   ${li_uri}
	${valDict} = 	Create Dictionary    status_code=${200}
	...                                  status=((?i)yielded no results)
	Validate Response Regex     ${resp}    ${valDict}

NEGATIVE - Attempt to GET MAC Address with non-existent LI UUID
    [Tags]  12    NEGATIVE
	Run Keyword and Ignore Error    Write To ciDebug Log
	Fusion Api Login Appliance 		${APPLIANCE_IP}		${admin_credentials}
    ${resp} =       Fusion Api Get LI Forwarding Information Base   /rest/logical-interconnects/c637e7d0-cc20-46ef-90d8-9a57c42322a9
	${valDict} = 	Create Dictionary    status_code=${404}
    ...                                  errorCode=CRM_LOGICAL_INTERCONNECT_NOT_FOUND_ERROR
	...                                  message=The logical interconnect cannot be retrieved.
	Validate Response Regex    ${resp}    ${valDict}

NEGATIVE - Attempt to GET MAC Address with malformed LI UUID
    [Tags]  13    NEGATIVE
	Run Keyword and Ignore Error    Write To ciDebug Log
	Fusion Api Login Appliance 		${APPLIANCE_IP}		${admin_credentials}
    ${resp} =       Fusion Api Get LI Forwarding Information Base    /rest/logical-interconnects/c637e7d0-cc20-46ef-90d8-9a57c42322a9xxx
	${valDict} = 	Create Dictionary    status_code=${404}
    ...                                  errorCode=CRM_LOGICAL_INTERCONNECT_NOT_FOUND_ERROR
	...                                  message=The logical interconnect cannot be retrieved.
	Validate Response Regex    ${resp}    ${valDict}

NEGATIVE - Attempt to Generate MAC Address file with non-existent LI UUID
    [Tags]  14    NEGATIVE
	Run Keyword and Ignore Error    Write To ciDebug Log
	Fusion Api Login Appliance 		${APPLIANCE_IP}		${admin_credentials}
    ${resp} =       Fusion Api Generate LI Forwarding Information Base Dump File   /rest/logical-interconnects/c637e7d0-cc20-46ef-90d8-9a57c42322a9
	${valDict} = 	Create Dictionary    status_code=${404}
    ...                                  errorCode=CRM_LOGICAL_INTERCONNECT_NOT_FOUND_ERROR
	...                                  message=The logical interconnect cannot be retrieved.
	Validate Response     ${resp}    ${valDict}

NEGATIVE - Attempt to Generate MAC Address file with malformed LI UUID
    [Tags]  15    NEGATIVE
	Run Keyword and Ignore Error    Write To ciDebug Log
	Fusion Api Login Appliance 		${APPLIANCE_IP}		${admin_credentials}
    ${resp} =       Fusion Api Generate LI Forwarding Information Base Dump File   /rest/logical-interconnects/c637e7d0-cc20-46ef-90d8-9a57c42322a9xxx
	${valDict} = 	Create Dictionary    status_code=${404}
    ...                                  errorCode=CRM_LOGICAL_INTERCONNECT_NOT_FOUND_ERROR
	...                                  message=The logical interconnect cannot be retrieved.
	Validate Response     ${resp}    ${valDict}

NEGATIVE - Attempt to Generate MAC Address file with malformed LI UUID
    [Tags]  16    NEGATIVE
	Run Keyword and Ignore Error    Write To ciDebug Log
	Fusion Api Login Appliance 		${APPLIANCE_IP}		${admin_credentials}
	${resp} =   Fusion Api Get LI Forwarding Information Base Dump File   ${fileuri}   mactable.gz
	${valDict} = 	Create Dictionary    status_code=${404}
	Validate response    ${resp}    ${valDict}

*** Keywords ***
SSH to host and ping x
    [Documentation]    SSH's to a given host, then pings an IP from that host
    [Arguments]	       ${HOST}    ${HOST2}
    Open Connection And Log In      ${HOST}
    ${Output}=    Execute Command    ping -c 4 ${HOST2}    return_stdout=True    return_rc=False
    Log to console and logfile    ${Output}
    Should Contain    ${Output}    ttl=
    Close All Connections

FTS
	Set Log Level	DEBUG
    Get VM IP   ${VM}
	First Time Setup					password=hpvse123

Test Specific Setup
	Set Log Level	TRACE
	${TEST_NAME} =      Set Variable    TEST-SPECIFIC SETUP
	Run Keyword and Ignore Error    Write To ciDebug Log
	Log to console and logfile	[TEST-SPECIFIC SETUP]
	Fusion Api Login Appliance 		${APPLIANCE_IP}		${admin_credentials}
	${users} =	Get Variable Value	${users}
	Run Keyword If	${users} is not ${null}    Add Users from variable				${users}
	${ethernet_networks} =	Get Variable Value    ${ethernet_networks}
	Run Keyword If	${ethernet_networks} is not ${null}    Add Ethernet Networks from variable	${ethernet_networks}
	${ethernet_ranges} =	Get Variable Value	${ethernet_ranges}
	Run Keyword If	${ethernet_ranges} is not ${null}		Run Keyword for List	${ethernet_ranges}	Create Ethernet Range
	${fc_networks} =	Get Variable Value	${fc_networks}
	Run Keyword If	${fc_networks} is not ${null}    Add FC Networks from variable		${fc_networks}
	${fcoe_networks} =	Get Variable Value	${fcoe_networks}
	Run Keyword If	${fcoe_networks} is not ${null}    Add FCoE Networks from variable		${fcoe_networks}
	${ligs} =	Get Variable Value	${ligs}
	Run Keyword If	${ligs} is not ${null}	Run Keyword for List	${ligs}    Add LIG from variable
	${enc_groups} =	Get Variable Value	${enc_groups}
	Run Keyword If	${enc_groups} is not ${null}	Run Keyword for List	${enc_groups}	Add Enclosure Group from variable
	${licenses} =	Get Variable Value	${licenses}
	Run Keyword If	${licenses} is not ${null}		Add Licenses from variable		${licenses}
	${encs} =	Get Variable Value	${encs}
	Run Keyword If	${encs} is not ${null}					Add Enclosures from variable	${encs}
	Power Off All Servers
	${server_profiles} =	Get Variable Value	${server_profiles}
	Run Keyword If	${server_profiles} is not ${null}		Add Server Profiles from variable	${server_profiles}

    Login all users     ${users}

Run FTS and test-specific setup
	Set Log Level	TRACE
    FTS
    Test Specific Setup
