*** Settings ***
Documentation		Activity page validation
Variables		data_variables.py
Library			json
Library			FusionLibrary
Library			RoboGalaxyLibrary
Library         Collections
Library         SSHLibrary
Resource        resource.txt
Library         String
Library         re

*** Variables ***
${APPLIANCE_IP}    15.199.238.11

*** Test Cases ***

1. Login and Create Scope

    [Tags]  add   POSITIVE
    Set Log Level    TRACE
    Fusion Api Login Appliance    ${APPLIANCE_IP}        ${admin_credentials}
    ${resp} =   Remove All Scopes
    ${resp} =   Remove ALL FC Networks
    ${resp} =   Remove ALL FCoE Networks
    ${resp} =   Remove ALL LIGs
    Log to console    \n-Creating Scopes
	${scope} =  Get Variable Value  ${scope_2}
	${resp} =   Fusion Api Create Scope     ${scope}
	Run Keyword If  '${resp['status_code']}' != '201'   Fail ${resp}    ELSE  log to console  \n-Scopes Got created successfully!
	${task1} =   Get Variable value     ${resp['headers']['x-task-uri']}
	${str1} =	Convert To Lowercase	${task1}
	${task} =   Fusion Api Get Task     uri=${str1}
    ${msg} =    Get Variable value  ${task['taskStatus']}
    Should Match Regexp	${msg}	((?i)Created|Updated|Assigned)
    Log to console  \n The activity message for the task is - ${msg}

2. Create and Assign FC Network Resource to Scope

    Log to console    \n-Creating FC Networks
    ${uriList} =   Create List
    :FOR   ${fcnet}   IN   @{fcnets}
    \   ${resp}        Fusion Api Create Fc Network   body=${fcnet}
    \   ${fc_name} =	Get From Dictionary   ${fcnet}   name
    \   ${uri} =	Get FC URI    ${fc_name}
    \   Continue For Loop If   '${uri}' == '${null}'
    \   Append To List   ${uriList}   ${uri}
	@{scope_name} =   Create List   ScopeTest
    ${Scope_Uris} = 	Create List
    :FOR    ${x}    IN      @{scope_name}
    \   ${ScopeUri} =    Get Scope URI     ${x}
    \   ${ScopeUri1} =  Catenate    SEPARATOR=/     ${ScopeUri}     resource-assignments
	\   Append to List      ${Scope_Uris}  ${ScopeUri1}
	${body} =   Get Variable value  ${scope_resources}
	${assign_res} =	Copy Dictionary		${body}
	Log to console  \n ASSIGNING FC NETWORK RESOURCES TO SCOPE
	${len} =    Get Length  ${Scope_Uris}
	:FOR    ${x}    IN RANGE   0   ${len}
	\   ${tempList} =   Create List     ${uriList[${x}]}
	\   Set to Dictionary   ${assign_res}    addedResourceUris=${tempList}
	\   ${resp} =    fusion_api_patch_scope     body=${assign_res}     uri=${Scope_Uris[${x}]}
	\   Run Keyword If  '${resp['status_code']}' != '202'  Fail    ELSE  log to console  \nFC Network got added to scope successfully
    ${task1} =   Get Variable value     ${resp['headers']['x-task-uri']}
	${str1} =	Convert To Lowercase	${task1}
	${task} =   Fusion Api Get Task     uri=${str1}
	${msg} =    Get Variable value  ${task['taskStatus']}
	Should Match Regexp	${msg}	((?i)Created|Add|Assigned)
    Log to console  \n The activity message for the task is - ${msg}

2.1 Assigning FC again to the same scope

    Log to console    \n-Creating FC Networks
    ${uriList} =   Create List
    :FOR   ${fcnet}   IN   @{fcnets}
    \   ${resp}        Fusion Api Create Fc Network   body=${fcnet}
    \   ${fc_name} =	Get From Dictionary   ${fcnet}   name
    \   ${uri} =	Get FC URI    ${fc_name}
    \   Continue For Loop If   '${uri}' == '${null}'
    \   Append To List   ${uriList}   ${uri}

    @{scope_name} =   Create List   ScopeTest
    ${Scope_Uris} = 	Create List
    :FOR    ${x}    IN      @{scope_name}
    \   ${ScopeUri} =    Get Scope URI     ${x}
    \   ${ScopeUri1} =  Catenate    SEPARATOR=/     ${ScopeUri}     resource-assignments
	\   Append to List      ${Scope_Uris}  ${ScopeUri1}
	${body} =   Get Variable value  ${scope_resources}
	${assign_res} =	Copy Dictionary		${body}

	Log to console  \n ASSIGNING FC NETWORK RESOURCES TO THE SCOPE FOR SECOND TIME
	${len} =    Get Length  ${Scope_Uris}
	:FOR    ${x}    IN RANGE   0   ${len}
	\   ${tempList} =   Create List     ${uriList[${x}]}
	\   Set to Dictionary   ${assign_res}    addedResourceUris=${tempList}
	\   ${resp} =    fusion_api_patch_scope     body=${assign_res}     uri=${Scope_Uris[${x}]}
	\   Run Keyword If  '${resp['status_code']}' != '202'  Fail    ELSE  log to console  \nFC Network got added to scope successfully
    ${task1} =   Get Variable value     ${resp['headers']['x-task-uri']}
	${str1} =	Convert To Lowercase	${task1}
	${task} =   Fusion Api Get Task     uri=${str1}
	${msg} =    Get Variable value  ${task['taskStatus']}
	Should Match Regexp	${msg}	((?i)Created|Add|Assigned)
    Log to console  \n The activity message for the task is - ${msg}


2.2 REMOVING FC NETWORK RESOURCE FROM SCOPE


	log to console  \n Removing FC1 from ScopeTest
    ${fcNetUri} =    Get FC URI     FC1
    ${ScopeUri} =    Get Scope URI     ScopeTest
    ${ScopeUri1} =  Catenate    SEPARATOR=/     ${ScopeUri}     resource-assignments
    ${body1} =   Get Variable value  ${scope_resources}
    ${body} =   Copy Dictionary     ${body1}
    ${tempList} =   Create List     ${fcNetUri}
    Set to Dictionary   ${body}    removedResourceUris=${tempList}
    ${resp} =    fusion_api_patch_scope     body=${body}     uri=${ScopeUri1}
    Run Keyword If  '${resp['status_code']}' != '202'  Fail    ELSE  log to console  \n-FC1 got removed from scope successfully
    ${task1} =   Get Variable value     ${resp['headers']['x-task-uri']}
	${str1} =	Convert To Lowercase	${task1}
	${task} =   Fusion Api Get Task     uri=${str1}
	${msg} =    Get Variable value  ${task['taskStatus']}
	Should Match Regexp	${msg}	((?i)Created|Add|Assigned|Remove)
    Log to console  \n The activity message for the task is - ${msg}


3.Assigning and Removing LIG FCOE TO SCOPE

	${ligs} = 	Copy List	${ligs}
	:FOR	${lig}	IN	@{ligs}
	\   ${ligs} =   Get Variable Value    ${lig}
	\   ${resp} =   Add LIG from variable   ${ligs}
	\   ${task} =	Wait For Task	${resp} 	60s	2s
    \   Run Keyword If	'${resp['status_code']}' != '202'   fail    ELSE    Log to Console  \n-LIG got created successfully
    ${uriList} =   Create List
    :FOR   ${fcoenet}   IN   @{fcoenets}
    \   ${resp}        Fusion Api Create Fcoe Network   body=${fcoenet}
    \   ${fcoe_name}        Get From Dictionary   ${fcoenet}   name
    \   ${uri}        Get FCoE URI    ${fcoe_name}
    \   Continue For Loop If   '${uri}' == '${null}'
    \   Append To List   ${uriList}   ${uri}
    \	Log to console    \n-FCoE network-${fcoe_name} got created successfully!

    Log to console  \ Assigning LIG1 & FCOE  - ScopeTest

    ${list_Uris} = 	Create List
    ${FCoe_Uri} =   Get FCoE URI    ${fcoe_name}
    Append to List      ${list_Uris}  ${FCoe_uri}
    ${LIG_Uri} =    Get LIG URI     LIG1
    Append to List      ${list_Uris}  ${LIG_Uri}
    ${ScopeUri} =    Get Scope URI     ScopeTest
    ${ScopeUri1} =  Catenate    SEPARATOR=/     ${ScopeUri}     resource-assignments
    ${body1} =   Get Variable value  ${scope_resources}
    ${body} =   Copy Dictionary     ${body1}
    Set to Dictionary   ${body}    addedResourceUris=${list_Uris}
    ${resp}     fusion_api_patch_scope      body=${body}    uri=${ScopeUri1}
    Run Keyword If  '${resp['status_code']}' != '202'  Fail    ELSE  log to console   \n-LIG and FCoE got assigned to scopes successfully
    ${task1} =   Get Variable value     ${resp['headers']['x-task-uri']}
	${str1} =	Convert To Lowercase	${task1}
	${task} =   Fusion Api Get Task     uri=${str1}
	${msg} =    Get Variable value  ${task['taskStatus']}
	Should Match Regexp	${msg}	((?i)Created|Add|Assigned|Remove)
    Log to console  \n The activity message for the task is - ${msg}

    Log to console  \Removing LIG1 & FCOE  - ScopeTest

    ${list_Uris} = 	Create List
    ${FCoe_Uri} =   Get FCoE URI    ${fcoe_name}
    Append to List      ${list_Uris}  ${FCoe_uri}
    ${LIG_Uri} =    Get LIG URI     LIG1
    Append to List      ${list_Uris}  ${LIG_Uri}
    ${ScopeUri} =    Get Scope URI     ScopeTest
    ${ScopeUri1} =  Catenate    SEPARATOR=/     ${ScopeUri}     resource-assignments
	${body1} =   Get Variable value  ${scope_resources}
    ${body} =   Copy Dictionary     ${body1}
    Set to Dictionary   ${body}    removedResourceUris=${list_Uris}
    ${resp}     fusion_api_patch_scope      body=${body}    uri=${ScopeUri1}
    Run Keyword If  '${resp['status_code']}' != '202'  Fail    ELSE  log to console   \n-LIG and FCoE got removed from scopes successfully
    ${task1} =   Get Variable value     ${resp['headers']['x-task-uri']}
	${str1} =	Convert To Lowercase	${task1}
	${task} =   Fusion Api Get Task     uri=${str1}
	${msg} =    Get Variable value  ${task['taskStatus']}
	Should Match Regexp	${msg}	((?i)Created|Add|Assigned|Remove)
    Log to console  \n The activity message for the task is - ${msg}


4.Removing Scope

    log to console  REMOVING THE SCOPE
    ${scopes} =     Get Scope Member    ScopeTest
    ${resp} =   Fusion Api Delete Scope     uri=${scopes['uri']}	etag=${scopes['eTag']}
    Run Keyword If  '${resp['status_code']}' != '204'  Fail    ELSE  log to console  \n Scope got removed
    ${task1} =   Get Variable value     ${resp['headers']['x-task-uri']}
	${str1} =	Convert To Lowercase	${task1}
	${task} =   Fusion Api Get Task     uri=${str1}
	${msg} =    Get Variable value  ${task['taskStatus']}
	Should Match Regexp	${msg}	((?i)Created|Add|Assigned|Deleted)
    Log to console  \n The activity message for the task is - ${msg}