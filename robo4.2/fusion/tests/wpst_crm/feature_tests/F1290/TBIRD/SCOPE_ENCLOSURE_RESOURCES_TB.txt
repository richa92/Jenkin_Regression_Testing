*** Settings ***
Documentation   Scopes using FusionLibrary API keywords
Variables		../F1290/data_variables.py
Library			json
Library			FusionLibrary
Library			RoboGalaxyLibrary
Library         Collections
Library         SSHLibrary
Resource        ../F1290/resource.txt
Library         String
Library         re
#Suite Teardown		Suite Teardown

*** Variables ***
${APPLIANCE_IP}     15.245.131.62

*** Test Cases ***

1. Login and Create Scope
	[Tags]  add   POSITIVE
    Set Log Level    TRACE
    
    Fusion Api Login Appliance    ${APPLIANCE_IP}        ${admin_credentials_TB}
		
    ${ligs} = 	Copy List	${LIGS_TB}
	:FOR	${lig}	IN	@{ligs}
	\   ${ligs} =   Get Variable Value    ${lig}
	\   ${resp} =   Add LIG from variable   ${ligs}
#    \   log to console  lig is:${resp}

	\   Run Keyword If	'${resp['status_code']}' != '202'   fail    ELSE    Log to Console  \n-LIG Got created successfully
	
	
2.EG creation
	
	${enc_group} =		Get Variable Value	${enc_group_TB}
	${resp} =   Add Enclosure Group TB from variable   ${enc_group}

	Run Keyword If	'${resp['status_code']}' != '201'	fail	ELSE 	Log to Console  \n-EG got created successfully
	
3.Adding LE	


	${LES} =	Get Variable Value	${les}
	${resp} =	Add Logical Enclosure from variable		${LES}
	${task} =	Wait For Task1	${resp} 	60s     2s
    
	Run Keyword If	'${resp['status_code']}' != '202'	fail	ELSE 	Log to Console  \n-LE  created successfully


4. Creating Scope

		Log to console    \n-Creating Scopes
		${scopes} =     Copy List   ${scopes}
        :FOR    ${scope}    IN  @{scopes}
        \   ${scope} =  Get Variable value  ${scope}
        \   ${resp} =   Fusion Api Create Scope     ${scope}
        \   Log to console  ${resp['status_code']}
		\	Run Keyword If  '${resp['status_code']}' != '201'   Fail ${resp}    ELSE  log to console  \n-Scopes  created successfully!

5.1. Assigning LIG Resource to Scopes

        Log to console  \n- LIGs - LIG1 and LIG2 are added to the same scope - Scope1
        @{Lig_name} =   Create List     LIG1    LIG2
        ${LIG_Uris} = 	Create List
        :FOR    ${x}    IN      @{Lig_name}
        \   ${LIGUri} =    Get LIG URI     ${x}
        \   Append to List      ${LIG_Uris}  ${LIGUri}
        ${ScopeUri} =    Get Scope URI     Scope1
        ${ScopeUri1} =  Catenate    SEPARATOR=/     ${ScopeUri}     resource-assignments
        ${body1} =   Get Variable value  ${scope_resources}
        ${body} =   Copy Dictionary     ${body1}
        ${len} =    Get Length  ${LIG_Uris}
        :FOR    ${x}    IN RANGE    0   ${len}
        \   ${tempList} =   Create List     ${LIG_Uris[${x}]}
        \   Set to Dictionary   ${body}    addedResourceUris=${tempList}
        \   ${resp} =    fusion_api_patch_scope     body=${body}     uri=${ScopeUri1}
        \   Run Keyword If  '${resp['status_code']}' != '202'  Fail    ELSE  log to console   \n-LIG  assigned to scopes successfully

5.2. Filtering LIG by Scopes

        log to console  \n-FILTERING LIG W.R.T ANY SCOPE
        ${NameList} =   Filter By Any Scopes   logical-interconnect-groups     Scope1      Scope2

        log to console  \n-FILTERING LIG W.R.T INDIVIDUAL SCOPE
        @{scopename} =  Create List     Scope1  Scope2
        :FOR    ${x}    IN      @{scopename}
        \   ${resp} =   Filter by   logical-interconnect-groups     ${x}


5.3. Removing LIG from Scopes

        log to console  \n Removing LIG1 from Scope1
        ${LIGUri} =    Get LIG URI     LIG1
        ${ScopeUri} =    Get Scope URI     Scope1
        ${ScopeUri1} =  Catenate    SEPARATOR=/     ${ScopeUri}     resource-assignments
        ${body1} =   Get Variable value  ${scope_resources}
        ${body} =   Copy Dictionary     ${body1}
        ${tempList} =   Create List     ${LIGUri}
        Set to Dictionary   ${body}    removedResourceUris=${tempList}
        ${resp} =    fusion_api_patch_scope     body=${body}     uri=${ScopeUri1}
        Run Keyword If  '${resp['status_code']}' != '202'  Fail    ELSE  log to console  \n-LIG  removed from scope successfully

5.4. Filtering LIG after removing the Resource

        log to console  \n-FILTERING LIG W.R TO ANY SCOPE
        ${NameList} =   Filter By Any Scopes   logical-interconnect-groups     Scope1      Scope2

        log to console  \n-FILTERING LIG W.R.T INDIVIDUAL SCOPE
        @{scopename} =  Create List     Scope1  Scope2
        :FOR    ${x}    IN      @{scopename}
        \   ${resp} =   Filter by   logical-interconnect-groups     ${x}


6.1.1 Assigning LI Resources to single Scopes

        Log to console  \n Assigning LE_1-LIG1 to Scope1 
        ${LIUri} =    Get LI URI     LE1-LIG1
        @{scope_name} =   Create List   Scope1  
        ${Scope_Uris} = 	Create List
        :FOR    ${x}    IN      @{scope_name}
        \   ${ScopeUri} =    Get Scope URI     ${x}
        \   ${ScopeUri1} =  Catenate    SEPARATOR=/     ${ScopeUri}     resource-assignments
        \   Append to List      ${Scope_Uris}  ${ScopeUri1}
        ${body1} =   Get Variable value  ${scope_resources}
        ${body} =   Copy Dictionary     ${body1}
        ${len} =    Get Length  ${Scope_Uris}
        :FOR    ${x}    IN RANGE   0   ${len}
        \   ${tempList} =   Create List     ${LIUri}
        \   Set to Dictionary   ${body}    addedResourceUris=${tempList}
        \   ${resp} =    fusion_api_patch_scope     body=${body}     uri=${Scope_Uris[${x}]}
        \   Run Keyword If  '${resp['status_code']}' != '202'  Fail    ELSE  log to console   \n-LI  assigned to scopes successfully

6.1.2 Assigning LI Resource to Scopes - LE1-LIG1 to both Scope1 and Scope2

        log to console  \n Assigning LE1LIG1 to both Scope1 and  to Scope2
        @{Li_name} =   Create List    LE1-LIG1  LE1-LIG1  	    
        ${LI_Uris} = 	Create List
        :FOR    ${x}    IN      @{Li_name}
        \   ${LIUri} =    Get LI URI     ${x}
        \   Append to List      ${LI_Uris}  ${LIUri}
        @{scope_name} =   Create List   Scope1      Scope2
        ${Scope_Uris} = 	Create List
        :FOR    ${x}    IN      @{scope_name}
        \   ${ScopeUri} =    Get Scope URI     ${x}
        \   ${ScopeUri1} =  Catenate    SEPARATOR=/     ${ScopeUri}     resource-assignments
        \   Append to List      ${Scope_Uris}  ${ScopeUri1}
        ${body1} =   Get Variable value  ${scope_resources}
        ${body} =   Copy Dictionary     ${body1}
        ${len} =    Get Length  ${Scope_Uris}
        :FOR    ${x}    IN RANGE   0   ${len}
        \   ${tempList} =   Create List     ${LI_Uris[${x}]}
        \   Set to Dictionary   ${body}    addedResourceUris=${tempList}
        \   ${resp} =    fusion_api_patch_scope     body=${body}     uri=${Scope_Uris[${x}]}
        \   Run Keyword If  '${resp['status_code']}' != '202'  Fail    ELSE  log to console   \n-LI  assigned to scopes successfully


6.1.3. Filtering LI by Scopes

        log to console  \n-FILTERING LI W.R.T INDIVIDUAL SCOPE
        @{scopename} =  Create List     Scope1  Scope2
        :FOR    ${x}    IN      @{scopename}
        \   ${resp} =   Filter by   logical-interconnects     ${x}

        log to console  \n-FILTERING W.R.T ANY SCOPES
        ${NameList} =   Filter By Any Scopes   logical-interconnects     Scope1     Scope2

        log to console  \n-FILTERING W.R.T All SCOPES
        ${NameList} =   Filter By All Scopes   logical-interconnects     Scope1     Scope2


7. Assigning Interconnects Resource to Scopes

        Log to console  Assigning both the Interconnects to the Scope1

        @{IC_name} =   Create List    CN754404R2, interconnect 3    CN754404R2, interconnect 6
        ${IC_Uris} = 	Create List
        :FOR    ${x}    IN      @{IC_name}
        \   ${ICUri} =    Get IC URI     ${x}
        \   Append to List      ${IC_Uris}  ${ICUri}
        ${ScopeUri} =    Get Scope URI     Scope1
        ${ScopeUri1} =  Catenate    SEPARATOR=/     ${ScopeUri}     resource-assignments
        ${body1} =   Get Variable value  ${scope_resources}
        ${body} =   Copy Dictionary     ${body1}
        ${len} =    Get Length  ${IC_Uris}
        :FOR    ${x}    IN RANGE    0   ${len}
        \   ${tempList} =   Create List     ${IC_Uris[${x}]}
        \   Set to Dictionary   ${body}    addedResourceUris=${tempList}
        \   ${resp} =    fusion_api_patch_scope     body=${body}     uri=${ScopeUri1}
        \   Run Keyword If  '${resp['status_code']}' != '202'  Fail    ELSE  log to console   \n-Interconnect  assigned to scopes successfully

7.2. Filtering Interconnects by Scopes

        log to console  \n-FILTERING Interconnects W.R.T SCOPES
        @{scopename} =  Create List     Scope1  Scope2
        :FOR    ${x}    IN      @{scopename}
        \   ${resp} =   Filter by   interconnects     ${x}


        log to console  \n-FILTERING IC W.R.T ANY SCOPE
        ${NameList} =   Filter By Any Scopes   interconnects     Scope1      Scope2

8.1. Assigning Server Hardware Resources to Scopes

        @{SH_name} =   Create List    CN754404R2, bay 1    	CN754406W5, bay 1
        ${SH_Uris} = 	Create List
        :FOR    ${x}    IN      @{SH_name}
        \   ${SHUri} =     Get Server Hardware URI     ${x}
        \   Append to List      ${SH_Uris}  ${SHUri}
        @{scope_name} =   Create List   Scope1  Scope2
        ${Scope_Uris} = 	Create List
        :FOR    ${x}    IN      @{scope_name}
        \   ${ScopeUri} =    Get Scope URI     ${x}
        \   ${ScopeUri1} =  Catenate    SEPARATOR=/     ${ScopeUri}     resource-assignments
        \   Append to List      ${Scope_Uris}  ${ScopeUri1}
        ${body1} =   Get Variable value  ${scope_resources}
        ${body} =   Copy Dictionary     ${body1}
        ${len} =    Get Length  ${Scope_Uris}
        :FOR    ${x}    IN RANGE   0   ${len}
        \   ${tempList} =   Create List     ${SH_Uris[${x}]}
        \   Set to Dictionary   ${body}    addedResourceUris=${tempList}
        \   ${resp} =    fusion_api_patch_scope     body=${body}     uri=${Scope_Uris[${x}]}
        \   Run Keyword If  '${resp['status_code']}' != '202'  Fail    ELSE  log to console   \n-Server Hardware  assigned to scopes successfully

8.2. Filtering Server Hardware by Scopes

        log to console  \n-FILTERING SERVER HARDWARE W.R.T SCOPE
        @{scopename} =  Create List     Scope1  Scope2
        :FOR    ${x}    IN      @{scopename}
        \   ${resp} =   Filter by   server-hardware     ${x}


        log to console  \n-FILTERING SERVER HARDWARE W.R.T ANY SCOPE
        ${NameList} =   Filter By Any Scopes   server-hardware     Scope1      Scope2


8.2. Removing Server Hardware from Scope

        Log to console  \n-Removing CN754404R2, bay 1 from Scope1
        ${SHUri} =    Get Server Hardware URI     CN754404R2, bay 1
        ${ScopeUri} =    Get Scope URI     Scope1
        ${ScopeUri1} =  Catenate    SEPARATOR=/     ${ScopeUri}     resource-assignments
        ${body1} =   Get Variable value  ${scope_resources}
        ${body} =   Copy Dictionary     ${body1}
        ${tempList} =   Create List     ${SHUri}
        Set to Dictionary   ${body}    removedResourceUris=${tempList}
        ${resp} =    fusion_api_patch_scope     body=${body}     uri=${ScopeUri1}
        Run Keyword If  '${resp['status_code']}' != '202'  Fail    ELSE  log to console   \n-Server Hardware  removed from scope successfully

8.3. Filtering Server Hardware by Scopes

        log to console  \n-FILTERING SERVER HARDWARE W.R.T SCOPE AFTER REMOVING
        ${NameList} =   Filter By Any Scopes   server-hardware     Scope1   Scope2

Appliance cleanup

    Remove All Scopes
    Remove All LE
    Remove All Enclosure Groups
    Remove All LIGs
