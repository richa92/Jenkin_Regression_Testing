*** Settings ***
Documentation	   Continuous Integration Tests for RoboGalaxy dev Branch
Resource		   F1290-OVAConfig.txt
Library			   String
Library			   BuiltIn
Force Tags		   Buildup
Suite Setup		   Load Test Data and Open Browser
Suite Teardown	   Logout And Close All Browsers

*** Test Cases ***

Login and validate scope creation with valid scope names

	Set Log Level	 TRACE
	Log Variables

#Precondition : Log into Fusion as Administrator

	${user} =	Get Data By Property  ${TestData.users}	 name  Administrator
	log to console	\nthe value in users:${user[0].name}
	Fusion UI Login to Appliance   ${user[0].name}

Precondition : Navigate to Scopes Page and validate
    Fusion UI Navigate To Scopes Page
	${scopes_page} =	Fusion Ui Is On Scopes Page
	Run Keyword If	'${scopes_page}' == 'True'	Log to Console	'Validated the navigation to Scopes Page'	ELSE	fail

Precondition : Delete all existing scopes
	Delete Scope

Step : 1a Create Scope 'Scope1' with Description and validate the creation with description
	${scopes_created} =	   Fusion UI Create Scope  ${TestData.neg_scopes[0]}
	Run Keyword If	'${scopes_created}' == 'True'	Log to Console	'Scope 1 created sucessfully'	ELSE	fail
	${scopes_desc} =	Fusion UI Get Scope Description
	Should Be Equal As Strings		${scopes_desc}	 ${TestData.neg_scopes[0].description}

Step : 1b Create Scope 'Scope2' without Description and validate the creation without description
	${scopes_created} =	   Fusion UI Create Scope  ${TestData.neg_scopes[1]}
	Run Keyword If	'${scopes_created}' == 'True'	Log to Console	'Scope 2 created sucessfully'	ELSE	fail
	${scopes_desc} =	Fusion UI Get Scope Description
	Should Be Equal As Strings		${scopes_desc}	 none

Step : 1c Create Scope 'Scope3' with Description and validate the creation with description
	${scopes_created} =	   Fusion UI Create Scope  ${TestData.neg_scopes[2]}
	Run Keyword If	'${scopes_created}' == 'True'	Log to Console	'Scope 3 created sucessfully'	ELSE	fail
	${scopes_desc} =	Fusion UI Get Scope Description
	Should Be Equal As Strings		${scopes_desc}	 ${TestData.neg_scopes[2].description}


Step : 2 Verify the number of Scopes created
	Fusion UI Click Settings Link From Scopepage
	
	${scope_count} =	Fusion UI Get Scope Count
	log to console	\nThe Count is ${scope_count}
	Should Be Equal		 ${scope_count}	  ${count}
    Fusion UI Navigate To Scopes Page
	${scopes_page} =	Fusion Ui Is On Scopes Page
	Run Keyword If	'${scopes_page}' == 'True'	Log to Console	'Validated the navigation to Scopes Page'	ELSE	fail

Step : 3 Create scope with existing scope name and validate the error message
	${scopes_created} =	   Fusion UI Verify Error Msg For Duplicate Scope  ${TestData.neg_scopes[0]}
	log to console	\nThe Error Message is ${scopes_created}
	Should Be Equal As Strings		${scopes_created}	${scope_create_error}

Step : 4 Create scope with scope name "~!@#" and validate the field validation message
	${scopes_created} =	   Fusion UI Verify Error Msg For Duplicate Scope  ${TestData.neg_scopes[3]}
	log to console	\nThe Validation Message is ${scopes_created}
	Should Be Equal As Strings		${scopes_created}	${scope_name_validate_msg}

# Step : 5 Edit existing scope with scope name "~!@#" and validate the field validation message
	${scopes_created} =	   Fusion UI Edit Verify Scope	${TestData.neg_scopes[0]}
	log to console	\nThe Validation Message is ${scopes_created}
	Should Be Equal As Strings		${scopes_created}	${scope_name_validate_msg}

Cleanup : Delete all created scopes
	Delete Scope

*** Keywords ***

Delete Scope
	${scopes_delete} =	  Fusion UI Delete All Scopes
	Run Keyword If	'${scopes_delete}' == 'True'	Log to Console	'All exisitng scopes deleted sucessfully'	ELSE	fail
