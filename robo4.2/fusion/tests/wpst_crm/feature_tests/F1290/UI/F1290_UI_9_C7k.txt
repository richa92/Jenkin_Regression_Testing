*** Settings ***
Documentation      Continuous Integration Tests for RoboGalaxy dev Branch
Resource           F1290-OVAConfig.txt
Library            String
Library            BuiltIn
Library            Collections
Force Tags         Buildup
Suite Setup         Load Test Data and Open Browser
Suite Teardown      Logout And Close All Browsers

*** Test Cases ***


1.Open browser, login and validate scope creation with valid scope names

    Set Log Level    TRACE
    Log Variables

# Precondition : Log into Fusion as Administrator
    ${user} =   Get Data By Property  ${TestData.users}  name  Administrator
    log to console  \nthe value in users:${user[0].name}
    Fusion UI Login to Appliance   ${user[0].name}

Precondition : Delete all existing Resources
    Fusion UI Delete All Scopes
    Fusion UI Delete All Appliance Networks
    Fusion UI Delete All Network Sets
    Fusion UI Remove All Enclosures
    Fusion UI Remove All Enclosure Groups
    Fusion UI Remove All Logical Interconnect Groups


# Precondition : Create 1400Ethernet Networks, 5FCNetwork and 20FcoENetwork, 1Enclosures, 20LIG, 1LI, 2Interconnects and 2Server Hardwares
Creating Bulk Ethernet Networks
    Fusion UI Create Ethernet Network   @{TestData.enetworks}

Creating 5 FC network
    :FOR    ${index}    IN RANGE    1   6
    \   ${fc_name} =        Set Variable Without Zero     ${index}    ${TestData.fcnetworks[0].name}
    \   ${TestData.fcnetworks1[0].name} =       set variable    ${fc_name}
    \   Fusion UI Create FC Network  @{TestData.fcnetworks1}
    

Creating 20 FCoE network
    :FOR    ${index}    IN RANGE    1   21
    \   ${fcoe_name} =      Set Variable Without Zero     ${index}    ${TestData.fcoenetworks[0].name}
    \   ${TestData.fcoenetworks1[0].name} =       set variable    ${fcoe_name}
    \   Fusion UI Create FCOE Network  @{TestData.fcoenetworks1}
    

Creating 20 LIG
    :FOR    ${index}    IN RANGE    1   21
    \   Log to Console  Count: ${count}
    \   ${lig_name} =       Set Variable Without Zero     ${index}    ${TestData.ligs[0].name}
    \   ${TestData.ligs1[0].name} =       set variable    ${lig_name}
    \   ${lig_created} =    Fusion UI Create Logical Interconnect Group  ${TestData.ligs1[0]}
    \   Run Keyword If  '${lig_created}' == 'True'  Log to Console  'LIG created sucessfully'   ELSE    fail


Creating EG
    ${EG}       Fusion UI Create Enclosure Group    @{TestData.encgroups1}
    Run Keyword If  '${EG}' == 'True'   Log to Console  'EG created sucessfully'    ELSE    fail

Adding enclosure
    ${Enc}      Fusion UI Add Enclosure     @{TestData.enclosures}
    Run Keyword If  '${Enc}' == 'True'  Log to Console  'Enclosure  is added sucessfully'   ELSE    fail

Precondition : Navigate to Scopes Page and validate
    Fusion Ui Navigate To Scopes Page
    ${scopes_page} =    Fusion Ui Is On Scopes Page
    Run Keyword If  '${scopes_page}' == 'True'  Log to Console  'Validated the navigation to Scopes Page'   ELSE    fail

Step2: Create 15 scopes with maximum characters in name and description
    :FOR    ${index}    IN RANGE    1   16
    \   ${scope_name}       Run Keyword If      ${index} < 10   Set Variable With Zero  ${index}    ${TestData.maxscopes[0].name}
    \   ...                 ELSE        Set Variable Without Zero       ${index}        ${TestData.maxscopes[0].name}
    \   ${scope_desc}       Run Keyword If      ${index} < 10       Set Variable With Zero      ${index}    ${TestData.maxscopes[0].description}
    \   ...                 ELSE                    Set Variable Without Zero          ${index}    ${TestData.maxscopes[0].description}
    \   ${scope_dict}       Create Dictionary   name=${scope_name}      description=${scope_desc}
    \   ${scopes_created}       Fusion UI Create Scope      ${scope_dict}
    \   Run Keyword If      '${scopes_created}' == 'True'       Log to Console  'Scope created sucessfully'     ELSE        fail
    \   ${scopes_name_val}      Fusion UI Get Scope Name
    \   Should Be Equal As Strings      ${scope_name}       ${scopes_name_val}
    \   ${scopes_desc_val}      Fusion UI Get Scope Description
    \   Should Be Equal As Strings      ${scope_desc}       ${scopes_desc_val}


Step : 2b Create a Scopes with 101 characters in Name and 1025 characters in Description to check the boundary values
    ${scope_name}       Set Variable Without Zero     ${val}    ${TestData.maxscopes[0].name}
    ${scope_desc}       Set Variable Without Zero     ${val}    ${TestData.maxscopes[0].description}
    ${scopes_created}   Fusion UI Create Scope Boundary Check    ${scope_name}     ${TestData.maxscopes[1]}
    Run Keyword If      '${scopes_created}' == 'True'     Log to Console  'Scope created sucessfully'          ELSE       fail
    ${scopes_name_val}      Fusion UI Get Scope Name
    Log to Console  \nScope Desc is ${scopes_name_val}
    Should Not Be Equal As Strings      ${TestData.maxscopes[1].name}   ${scopes_name_val}
    Should Be Equal As Strings      ${scope_name}   ${scopes_name_val}
    ${scopes_desc_val}      Fusion UI Get Scope Description
    Log to Console  \nScope Desc is ${scopes_desc_val}
    Should Not Be Equal As Strings      ${TestData.maxscopes[1].description}   ${scopes_desc_val}
    Should Be Equal As Strings      ${scope_desc}   ${scopes_desc_val}

Step : 2 Edit and Assign resources to scopes
    Fusion UI Create Scope  ${TestData.maxscopes[2]}
    Fusion UI Edit Scope    ${TestData.maxscopes[2]}

Step : 3 Assign scope to resources
    :FOR    ${index}    IN RANGE    1   21
    \   ${lig_assign_name} =        Set Variable Without Zero     ${index}    ${TestData.bulk_lig_scope[0].name}
    \   ${TestData.bulk_lig_scope1[0].name} =       set variable    ${lig_assign_name}
    \   ${lig_edited} =    Fusion UI Edit Scope For Logical Interconnect Groups  @{TestData.bulk_lig_scope1}
    \   Run Keyword If  '${lig_edited}' == 'True'   Log to Console  'Assigned LIG to Scope sucessfully' ELSE    fail
    Fusion UI Edit Scope For Enclosure    @{TestData.enclosure_scope1}
    Fusion UI Edit Scope For Server Hardware       @{TestData.server_scope1}
    Fusion UI Edit Scope For Logical Interconnect       @{TestData.li_scope1}
    Fusion UI Edit Scope For Interconnects       @{TestData.interconnect_scope1}

Step : 4 Assigning Bulk no.of Resources to a scope
    Fusion UI Assign Bulk Enets     ${TestData.bulk_scopes}
    ${activity}     Fusion UI Verify Latest Activity
    Log to console  \nthe value in Activity page is:${activity}
    Run Keyword If  '${activity}' != 'Update Resource Assignments'   fail    ELSE    Log to Console  \n-Verified the Activity page for Scopes Resource Assignment

    ${State}        Fusion UI Appliance State For Scope
    Run Keyword If  '${State}' != 'False'   Log to Console  'Successfully Verified the aplliance state during assignment'   ELSE    FAIL

*** Keywords ***

Set Variable With Zero
    [Arguments]     ${index}    ${var}
    ${scope_name} =       set variable    ${var}${0}${index}
    [Return]    ${scope_name}

Set Variable Without Zero
    [Arguments]     ${index}    ${var}
    ${scope_name} =       set variable    ${var}${index}
    [Return]    ${scope_name}






