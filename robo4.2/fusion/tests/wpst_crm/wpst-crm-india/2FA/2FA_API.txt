*** Settings ***
Documentation       Feature Test: OVF692 - 2FA LOGIN
Variables           data_variables.py

Resource            ../../../resource/fusion_api_all_resource_files.txt

Library             RoboGalaxyLibrary              # DVTs Robot Framework extensions
Library             FusionLibrary                  # DVTs Robot Framework extensions
Library             Collections
Library             json
Library             OperatingSystem
Library             Selenium2Library
Library             BuiltIn
Library             twofaloginfunction.py


*** Variables ***
${SSH_PASS}                 hpvse1
${APPLIANCE_IP}             15.212.136.19
${SSH_USER}                 root
${xapi_version}             600
${file_location}            /temp/pfx_files/cert_new_160.pem:'qazwsx'
${file_location1}           /temp/pfx_files/user.pem:'qazwsx'
${file_location_multi_cn}   /temp/pfx_files/user_multi_cn.pem:'qazwsx'
${file_location_expired_cert}   /temp/pfx_files/user_expiry_cert.pem:'qazwsx'

*** Test Cases ***

#Test Specific Setup

SET OF PRECONDITIONS - ADD CA CERT,DIRECTORY AND USERS
    ${resp}=    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}
    #ADD THE ROOT CA CERT
    ${resp1}=   fusion_api_import_external_ca_certificates   ${RootCA_signed_certs_trust_body}
    ${task} =    Wait For Task   ${resp1}   120s
    ${valDict} =   Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}
    #ADD DIRECTORY
    ${resp}=    Fusion Api Add Directory    ${add_directory}
    #CREATE NEW GROUP ROLE MAPPING
    ${resp} =   Fusion Api Assign Roles To Directory Group  ${group_role_domain_admins}

#--------------START REQUIRE ACKNOWLEDGEMENT TRUE--------------------
# -------------2FA = LOCAL=AD=TRUE, ACKNOWLEDGEMENT=TRUE-------------

PRECONDITION_1_SET_ACK_TRUE
    Fusion Api Login Appliance   ${APPLIANCE_IP}   ${admin_credentials}
    ${Response}=    Fusion API Get Login Domains Global Settings
    ${Response}=      Fusion API Edit Login Domains Global Settings	body=${edit_global_settings_ack_true}
    ${valDict} =    Create Dictionary   status_code=${200}
    Validate Response   ${Response}    ${valDict}
    ${resp} =   Fusion Api Logout Appliance

OVF692_API_TC_1_ACK_TRUE_LOGINMSGACK_TRUE_LOCAL
    ${resp}=    Fusion Api Login Appliance   ${APPLIANCE_IP}    ${admin_credentials_ack_true}
    ${valDict} =    Create Dictionary   status_code=${200}
    Validate Response   ${resp[0]}    ${valDict}
    ${resp} =   Fusion Api Logout Appliance

OVF692_API_TC_2_ACK_TRUE_LOGINMSGACK_FALSE_LOCAL
    ${resp}=    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}
    ${valDict} =    Create Dictionary   errorCode=AUTHN_LOGIN_MESSAGE_ACKNOWLEDGMENT_REQUIRED
    ...                                 status_code=${400}
    log    ${resp[0]}
    Validate Response   ${resp[0]}    ${valDict}
    ${resp} =   Fusion Api Logout Appliance

OVF692_API_TC_5_ACK_TRUE_LOGINMSGACK_TRUE_AD
    ${resp}=    Fusion Api Login Appliance   ${APPLIANCE_IP}   ${ad_credentials_ack_true}
    ${valDict} =    Create Dictionary   status_code=${200}
    Validate Response   ${resp[0]}    ${valDict}
    ${resp} =   Fusion Api Logout Appliance

OVF692_API_TC_6_ACK_TRUE_LOGINMSGACK_FALSE_AD
    ${resp}=    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${ad_credentials}
    ${valDict} =    Create Dictionary   errorCode=AUTHN_LOGIN_MESSAGE_ACKNOWLEDGMENT_REQUIRED
    ...                                 status_code=${400}
    Validate Response   ${resp[0]}    ${valDict}
    ${resp} =   Fusion Api Logout Appliance

#--------------END REQUIRE ACKNOWLEDGEMENT TRUE--------------------
#--------------START REQUIRE ACKNOWLEDGEMENT FALSE-----------------

PRECONDITION_2_SET_ACK_FALSE
    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials_ack_true}
    ${Response}=        Fusion API Get Login Domains Global Settings
    ${Response}=        Fusion API Edit Login Domains Global Settings   body=${edit_global_settings_ack_false}
    Log Dictionary      ${Response}
    ${valDict} =    Create Dictionary   status_code=${200}
    Validate Response   ${Response}    ${valDict}

OVF692_API_TC_3_ACK_FALSE_LOGINMSGACK_TRUE_LOCAL
    ${resp}=    Fusion Api Login Appliance   ${APPLIANCE_IP}    ${admin_credentials_ack_true}
    ${valDict} =    Create Dictionary   status_code=${200}
    Validate Response   ${resp[0]}  ${valDict}
    ${resp} =   Fusion Api Logout Appliance

OVF692_API_TC_4_ACK_FALSE_LOGINMSGACK_FALSE_LOCAL
    ${resp}=    Fusion Api Login Appliance   ${APPLIANCE_IP}   ${admin_credentials}
    ${valDict} =    Create Dictionary   status_code=${200}
    Validate Response   ${resp[0]}  ${valDict}
    ${resp} =   Fusion Api Logout Appliance

#--------------END REQUIRE ACKNOWLEDGEMENT FALSE--------------------

#---------------- START  2fa = local = ad = TRUE-----------------

OVF692_API_TC_10_LOGIN_LOCAL
    ${resp}=    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}
    ${valDict} =    Create Dictionary   status_code=${200}
    Validate Response   ${resp[0]}  ${valDict}
    ${resp} =   Fusion Api Logout Appliance

OVF692_API_TC_11_LOGIN_AD
    ${resp}=    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${ad_credentials}
    ${valDict} =    Create Dictionary   status_code=${200}
    Validate Response   ${resp[0]}  ${valDict}
    ${resp} =   Fusion Api Logout Appliance

OVF692_API_TC_15_LOGIN_AD_INVALID_PASSWORD
    ${resp}=    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${ad_credentials_invalid_password}
    ${valDict} =    Create Dictionary   status_code=${400}
    ...                                 errorCode=AUTHN_AUTH_FAIL
    ...                                 message=Invalid username or password.
    Validate Response   ${resp[0]}  ${valDict}
    ${resp} =   Fusion Api Logout Appliance

OVF692_API_TC_16_LOGIN_AD_INVALID_USERNAME
    ${resp}=    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${ad_credentials_invalid_username}
    ${valDict} =    Create Dictionary   status_code=${400}
    ...                                 errorCode=AUTHN_AUTH_FAIL
    ...                                 message=Invalid username or password.
    Validate Response   ${resp[0]}  ${valDict}
    ${resp} =   Fusion Api Logout Appliance

OVF692_API_TC_22_LOGIN_LOCAL_INVALID_USERNAME
    ${resp}=    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials_invalid_username}
    ${valDict} =    Create Dictionary   status_code=${400}
    ...                                 errorCode=AUTHN_AUTH_DIR_FAIL
    ...                                 message=Invalid username or password or directory.
    Validate Response   ${resp[0]}  ${valDict}
    ${resp} =   Fusion Api Logout Appliance

OVF692_API_TC_23_LOGIN_LOCAL_INVALID_PASSWORD
    ${resp}=    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials_invalid_password}
    ${valDict} =    Create Dictionary   status_code=${400}
    ...                                 errorCode=AUTHN_AUTH_DIR_FAIL
    ...                                 message=Invalid username or password or directory.
    Validate Response   ${resp[0]}  ${valDict}
    ${resp} =   Fusion Api Logout Appliance

OVF692_API_TC_9_LOGIN_2FA
    #SET THE LOGIN CERT CONFIG
    ${resp}=    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}
    ${resp}=    CLIENT LOGIN CERT CONFIG    ${login_cert_issuer}
    ${output}=    twofa_login_function    ${xapi_version}   ${file_location}    ${APPLIANCE_IP}
    ${status_check}=    STATUS CHECK    ${output}   200
    Should Be Equal As Strings       ${status_check}    True

#-------------------- END  2fa = local = ad = TRUE-----------------------------------

#-----------start  2fa = local = disable, ad = TRUE ----------
PRECONDITION_3_ENABLE_AD_DISABLE_OTHERS
    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}
    ${Response}=        Fusion API Get Login Domains Global Settings
    Log Dictionary      ${Response}
    ${login_domain_value}=  GET LOGIN DOMAIN VALUE   ${Response}    ${ad1_name}
    Log     ${login_domain_value}
    ${resp}=    CREATE BODY EDIT GLOBAL SETTING     ${edit_global_settings_enable_only_ad}      ${login_domain_value}
    Log     ${resp}
    ${resp1}=   Fusion API Edit Login Domains Global Settings     body=${resp}
    ${valDict} =    Create Dictionary   status_code=${200}
    Validate Response   ${resp1}    ${valDict}
    ${resp} =   Fusion Api Logout Appliance

OVF692_API_TC_12_LOGIN_AD_ONLY
    ${resp}=    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${ad_credentials}
    ${valDict} =    Create Dictionary   status_code=${200}
    Validate Response   ${resp[0]}  ${valDict}
    ${resp} =   Fusion Api Logout Appliance

OVF692_API_TC_25_LOGIN_2FA_DISABLED
    ${output}=    twofa_login_function    ${xapi_version}   ${file_location}    ${APPLIANCE_IP}
    ${status_check}=    STATUS CHECK    ${output}   404
    Should Be Equal As Strings       ${status_check}    True

#-----------End 2fa = local = disable, ad = TRUE ----------

#----------- START  2fa = disable local = ad = TRUE --------------
PRECONDITION_4_ENABLE_AD_AND_LOCAL_DISABLE_2FA
    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${ad_credentials}
    ${Response}=        Fusion API Get Login Domains Global Settings
    Log Dictionary      ${Response}
    ${Response}=        Fusion API Edit Login Domains Global Settings   body=${edit_global_settings_enable_local_ad}
    Log Dictionary      ${Response}
    ${valDict} =    Create Dictionary   status_code=${200}
    Validate Response   ${Response}    ${valDict}

OVF692_API_TC_13LOGIN_LOCAL_DISABLE_2FA
    ${resp}=    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}
    ${valDict} =    Create Dictionary   status_code=${200}
    Validate Response   ${resp[0]}  ${valDict}
    ${resp} =   Fusion Api Logout Appliance

OVF692_API_TC_14_LOGIN_AD_DISABLE_2FA
    ${resp}=    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${ad_credentials}
    ${valDict} =    Create Dictionary   status_code=${200}
    Validate Response   ${resp[0]}  ${valDict}
    ${resp} =   Fusion Api Logout Appliance

#----------- END  2fa = disable local = ad = TRUE----------
#-----------------START Local=2FA=Enable and AD=Disable----
DELETE THE DIRECTORY
    ${resp}=    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin}
    ${resp1}=   DELETE DIRECTORY BY NAME    ${Ad1_Name}
    ${resp} =   Fusion Api Logout Appliance

OVF692_API_TC_21_LOGIN_AD_DISABLED
    ${resp}=    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${ad_credentials}
    ${valDict} =    Create Dictionary   status_code=${400}
    ...                                 errorCode=AUTHN_AUTH_FAIL_INTERNAL_ERROR
    Validate Response   ${resp[0]}    ${valDict}
    ${resp} =   Fusion Api Logout Appliance

#-----------------END Local=2FA=Enable and AD=Disable---------
#-------START User with diff role  2FA=AD=Local=Enable--------

PRECONDITIONS - CREATE USER WITH NO ROLES AND ENABLE 2FA,AD AND LOCAL
    ${resp}=    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}
    ${resp}=    Fusion Api Add Directory    ${add_directory}
    #DELETE THE EXISTING GROUPS
    ${resp} =   Fusion Api Get Group Role Assignment
    ${group_count}=     Get from Dictionary     ${resp}     count
    ${group_mem}=   Get From Dictionary     ${resp}     members
    :FOR    ${x}    IN RANGE    0   ${group_count}
    \   ${member_val}=      Get From List   ${group_mem}    ${x}
    \   ${group_uri}=   Get From Dictionary     ${member_val}   uri
    \   Log     ${group_uri}
    \   ${resp} =   Fusion Api Delete Group Role Assignment     uri=${group_uri}
    #CREATE NEW GROUP
    ${resp} =   Fusion Api Assign Roles To Directory Group  ${group_role_dns_admin}
    #SET THE AD,2FA AND LOCAL TO ENABLE
    ${Response}=    Fusion API Get Login Domains Global Settings
    Log Dictionary      ${Response}
    ${Response}=    Fusion API Edit Login Domains Global Settings	body=${edit_global_settings_ack_false}
    Log Dictionary      ${Response}
    ${valDict} =    Create Dictionary   status_code=${200}
    Validate Response   ${Response}    ${valDict}
    ${resp} =   Fusion Api Logout Appliance

OVF692_API_TC_20_LOGIN_AD_USER_DIFF_DOMAIN
    ${resp}=    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${ad_credentials}
    ${valDict} =    Create Dictionary   errorCode=AUTHN_AUTH_FAIL_NO_ROLES
    ...                                 status_code=${400}
    ...                                 details=Unable to authenticate. The user is not associated with any role.
    Validate Response   ${resp[0]}  ${valDict}
    ${resp} =   Fusion Api Logout Appliance

OVF692_API_TC_18_LOGIN_2FA_USER_DIFF_DOMAIN
    ${output}=    twofa_login_function    ${xapi_version}   ${file_location}    ${APPLIANCE_IP}
    ${status_check}=    STATUS CHECK    ${output}   400
    Should Be Equal As Strings       ${status_check}    True
    ${error_check}=     ERROR CODE CHECK    ${output[8]}
    ${valDict} =    Create Dictionary   "errorCode"="AUTHN_AUTH_FAIL_NO_ROLES"
    Validate Response   ${error_check}    ${valDict}

#-------------- END User with diff role  2FA=AD=Local=Enable----
#------------------- START  2FA=AD=Enable  Local=Disable--------
PRE_CONDITION
    ${resp}=   Fusion Api Login Appliance   ${APPLIANCE_IP}   ${admin}
    #PRECONDITIONS - DELETE THE USER WHO HAS NO ROLES AND CREATE USER WITH ROLES AND ENABLE 2FA,AD AND DISABLE LOCAL
    #${resp}=   Fusion Api Add Directory    ${add_directory}
    #DELETE THE EXISTING GROUPS
    ${resp} =   Fusion Api Get Group Role Assignment
    ${group_count}=     Get from Dictionary     ${resp}     count
    ${group_mem}=   Get From Dictionary     ${resp}     members
    :FOR    ${x}    IN RANGE    0   ${group_count}
    \   ${member_val}=      Get From List   ${group_mem}    ${x}
    \   ${group_uri}=   Get From Dictionary     ${member_val}   uri
    \   Log     ${group_uri}
    \   ${resp} =   Fusion Api Delete Group Role Assignment     uri=${group_uri}
    #CREATE NEW GROUP
    ${resp} =   Fusion Api Assign Roles To Directory Group  ${group_role_domain_admins}

OVF692_API_TC_24_LOGIN_LOCAL_DISABLED
    #DISABLE THE LOCAL LOGIN
    ${Response}=    Fusion API Get Login Domains Global Settings
    Log Dictionary     ${Response}
    ${login_domain_value}=  GET LOGIN DOMAIN VALUE   ${Response}    ${ad1_name}
    Log     ${login_domain_value}
    ${resp}=    CREATE BODY EDIT GLOBAL SETTING     ${edit_global_settings_local_disable}   ${login_domain_value}
    Log     ${resp}
    ${resp1}=   Fusion API Edit Login Domains Global Settings   body=${resp}
    ${valDict} =    Create Dictionary   status_code=${200}
    Validate Response   ${resp1}    ${valDict}
    ${resp} =   Fusion Api Logout Appliance
    #LOGIN USING LOCAL AFTER DISABLING THE LOCAL LOGIN
    ${resp}=   Fusion Api Login Appliance   ${APPLIANCE_IP}   ${admin}
    ${valDict} =    Create Dictionary   errorCode=AUTHN_AUTH_FAIL
    ...                                 status_code=${400}
    Validate Response   ${resp[0]}  ${valDict}
    ${resp} =   Fusion Api Logout Appliance

POST-CONDITION ENABLE THE LOCAL
    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${ad_credentials}
    ${Response}=        Fusion API Get Login Domains Global Settings
    Log Dictionary      ${Response}
    ${Response}=        Fusion API Edit Login Domains Global Settings   body=${edit_global_settings_ack_false}
    Log Dictionary      ${Response}
    ${valDict} =    Create Dictionary   status_code=${200}
    Validate Response   ${Response}    ${valDict}
    ${resp} =   Fusion Api Logout Appliance

#---- END  2FA=AD=Enable  Local=Disable--------
#-----------------START INVALID----------------
OVF692_API_TC_32_2FA_WRONG_DIRECTORY_DOMAIN
    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin}
    ${resp}=    CLIENT LOGIN CERT CONFIG    ${login_cert_issuer}
    ${resp}=    CLIENT LOGIN CERT CONFIG    ${login_cert_subject}
    ${resp} =   Fusion Api Logout Appliance
    ${output}=    twofa_login_function    ${xapi_version}   ${file_location}    ${APPLIANCE_IP}
    ${status_check}=    STATUS CHECK    ${output}   400
    Should Be Equal As Strings       ${status_check}    True
    ${error_check}=     ERROR CODE CHECK    ${output[8]}
    ${valDict} =    Create Dictionary   "errorCode"="AUTHN_CERT_FAILED_EXTRACTING_DOMAIN"
    Validate Response   ${error_check}  ${valDict}

OVF692_API_TC_35_2FA_INVALID_OID
    #PRE_CONDITION - SET INVALID OID
    ${resp}=    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}
    ${resp}=    CLIENT LOGIN CERT CONFIG    ${login_cert_issuer}
    ${resp}=    CLIENT LOGIN CERT CONFIG    ${login_cert_invalid_oid}
    ${resp} =   Fusion Api Logout Appliance
    ${output}=    twofa_login_function    ${xapi_version}   ${file_location}    ${APPLIANCE_IP}
    ${status_check}=    STATUS CHECK    ${output}   400
    Should Be Equal As Strings       ${status_check}    True
    ${error_check}=     ERROR CODE CHECK    ${output[8]}
    ${valDict} =    Create Dictionary   "errorCode"="AUTHN_CERT_OID_VALIDATION_FAILED"
    Validate Response   ${error_check}  ${valDict}

OVF692_API_TC_37_2FA_WRONG_SUBJECT
    ${resp}=    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}
    ${resp}=    CLIENT LOGIN CERT CONFIG    ${login_cert_issuer}
    ${resp}=    CLIENT LOGIN CERT CONFIG    ${login_cert_wrong_subject}
    ${resp} =   Fusion Api Logout Appliance
    ${output}=    twofa_login_function    ${xapi_version}   ${file_location}    ${APPLIANCE_IP}
    ${status_check}=    STATUS CHECK    ${output}   400
    Should Be Equal As Strings       ${status_check}    True
    ${error_check}=     ERROR CODE CHECK    ${output[8]}
    ${valDict} =    Create Dictionary   "errorCode"="AUTHN_CERT_FAILED_RETRIEVING_USER_NAME"
    Validate Response   ${error_check}  ${valDict}
    ${resp}=    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}
    ${resp}=    CLIENT LOGIN CERT CONFIG    ${login_cert_issuer}
    ${resp} =   Fusion Api Logout Appliance

OVF692_API_TC_33_2FA_MISSING_GROUP_ROLE
    #DELETE EXISTING GROUPS
    ${resp}=    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}
    ${resp} =   Fusion Api Get Group Role Assignment
    ${group_count}=     Get from Dictionary     ${resp}     count
    ${group_mem}=   Get From Dictionary     ${resp}     members
    :FOR    ${x}    IN RANGE    0   ${group_count}
    \   ${member_val}=      Get From List   ${group_mem}    ${x}
    \   ${group_uri}=   Get From Dictionary     ${member_val}   uri
    \   Log     ${group_uri}
    \   ${resp} =   Fusion Api Delete Group Role Assignment     uri=${group_uri}
    ${output}=    twofa_login_function    ${xapi_version}   ${file_location}    ${APPLIANCE_IP}
    ${status_check}=    STATUS CHECK    ${output}   404
    Should Be Equal As Strings       ${status_check}    True
    ${error_check}=     ERROR CODE CHECK    ${output[7]}
    ${valDict} =    Create Dictionary   "errorCode"="AUTHN_LOGINDOMAIN_GROUP_ROLE_MAPPING_FOR_DOMAIN_NOT_FOUND"
    Validate Response   ${error_check}  ${valDict}

OVF692_API_TC_38_2FA_MULTI_CN_CERT
    ${output}=    twofa_login_function    ${xapi_version}   ${file_location_multi_cn}    ${APPLIANCE_IP}
    ${status_check}=    STATUS CHECK    ${output}   404
    Should Be Equal As Strings       ${status_check}    True
    ${error_check}=     ERROR CODE CHECK    ${output[7]}
    ${valDict} =    Create Dictionary   "errorCode"="AUTHN_LOGINDOMAIN_GROUP_ROLE_MAPPING_FOR_DOMAIN_NOT_FOUND"
    Validate Response   ${error_check}  ${valDict}

#-----------------END INVALID----------------

#----------------CLEANUP----------

CLEAN UP BEFORE EXIT
    #DELETE EXISTING GROUPS
    ${resp} =   Fusion Api Get Group Role Assignment
    ${group_count}=     Get from Dictionary     ${resp}     count
    ${group_mem}=   Get From Dictionary     ${resp}     members
    :FOR    ${x}    IN RANGE    0   ${group_count}
    \   ${member_val}=      Get From List   ${group_mem}    ${x}
    \   ${group_uri}=   Get From Dictionary     ${member_val}   uri
    \   ${resp} =   Fusion Api Delete Group Role Assignment     uri=${group_uri}
    ${Response}=        Fusion API Get Login Domains Global Settings
    Log Dictionary      ${Response}
    ${Response}=        Fusion API Edit Login Domains Global Settings   body=${edit_global_settings_enable_local_ad}
    Log Dictionary      ${Response}
    #DELETE THE DIRECTORY
    ${resp}=    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin}
    ${resp1}=   DELETE DIRECTORY BY NAME    ${Ad1_Name}
    ${resp} =   Fusion Api Logout Appliance
    #DELETE ROOT CA
    ${resp}=    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}
    ${resp2}=   fusion_api_remove_external_ca_certificates      user1_160
    ${task} =    Wait For Task     ${resp2}     120s
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}
    ${resp} =   Fusion Api Logout Appliance

#----------------CLEANUP----------

*** Keywords ***

STATUS CHECK
    [Documentation]     Check the status for the expected results
    [Arguments]   ${output}     ${expected_status}
    ${resp} =     set variable    ${output[7]}
    ${status}    Split String     ${output[0]}    ${SPACE}
    ${output_result} =    Convert To Integer    ${status[1]}
    ${status_evaluate}=     Evaluate    ${expected_status}==${output_result}
    [Return]    ${status_evaluate}

DELETE DIRECTORY BY NAME
    [Documentation]    Pass the Directory Name required to be deletes
    [Arguments]     ${dir_name}
    ${resps}=    Fusion API Get Directory
    ${mem}=    Get From Dictionary     ${resps}    members
    ${l} =    Get Length  ${mem}
    :FOR    ${x}    IN RANGE    0   ${l}
    \   ${mem_details} =     Get From List   ${mem}    ${x}
    \   Exit For Loop If    '${mem_details['name']}' == '${dir_name}'
    ${uri_mem}=     Get From Dictionary     ${mem_details}      uri
    ${resp}=    Fusion Api Delete Directory     uri=${uri_mem}
    [Return]    {resp}

ERROR CODE CHECK
    [Documentation]     Check the error code for the expected results
    [Arguments]   ${output}
    ${resp} =     set variable    ${output}
    ${temp}=    Split String From Right    ${resp}    separator=,
    ${type} =   Get From List   ${temp}   4
    ${key}    ${value}=    Split String    ${type}    :     1
    ${Dict} =   Create Dictionary   ${key.strip()}=${value.strip()}
    [Return]    ${Dict}

GET LOGIN DOMAIN VALUE
    [Documentation]     To Get the Valuse of the Login Domain for the user
    [Arguments]     ${response}     ${domain_name}
    ${config_domain}=   Get From Dictionary     ${Response}     configuredLoginDomains
    ${l} =  Get Length  ${config_domain}
    :FOR    ${x}    IN RANGE    0   ${l}
    \   ${user}=    Get From List   ${config_domain}    ${x}
    \   Exit For Loop If    '${user['name']}' == '${domain_name}'
    ${domain_val}=      Get From Dictionary     ${user}     loginDomain
    [Return]    ${domain_val}

CREATE BODY EDIT GLOBAL SETTING
    [Documentation]     To add the value of the Login Domain in the Edit Request Body
    [Arguments]     ${edit_body}    ${domain_value}
    ${def_login}=   Get From Dictionary     ${edit_body}    defaultLoginDomain
    Set to dictionary   ${def_login}    loginDomain=${domain_value}
    [Return]    ${edit_body}

CLIENT LOGIN CERT CONFIG
    [Documentation]    Edit and update the client Login Certificate Configuration
    [Arguments]    ${login_cert_body}
    ${resp2}=   fusion_api_edit_login_domains_login_certificates   ${login_cert_body}
    ${valDict} =    Create Dictionary   status_code=${200}
    Validate Response   ${resp2}    ${valDict}
    ${resp1}=   fusion_api_get_login_domains_login_certificates
    [return]