*** Settings ***
Documentation      Continuous Integration Tests for RoboGalaxy dev Branch
Resource           F1212OVAConfig.txt
Force Tags         Buildup
Suite Setup         Load Test Data and Open Browser
Suite Teardown      Logout And Close All Browsers
Library             Dialogs
Library             Collections

*** Variables ***
${ExpectedErrorMsg1}=           Unable to update firmware for the logical interconnect SGH420HHYA-LIG_B1 as an attempt was made to downgrade the firmware without selecting the force option.
#${ExpectedErrorMsg1}=          Unable to update firmware for the logical interconnect SGH420HHYA-LIG_B1 as an attempt was made to downgrade the firmware without selecting the force option.
${ExpectedErrorMsg3}=           No update required. Selected firmware is already installed in the logical interconnect SGH420HHYA-LIG_B1.

${ExpectedErrorMsg1}=           Unable to update firmware for the logical interconnect SGH420HHYA-LIG_B1 as an attempt was made to downgrade the firmware without selecting the force option.
#${ExpectedErrorMsg1}=          Unable to update firmware for the logical interconnect SGH420HHYA-LIG_B1 as an attempt was made to downgrade the firmware without selecting the force option.
${ExpectedErrorMsg3}=           No update required. Selected firmware is already installed in the logical interconnect SGH420HHYA-LIG_B1.
${ExpectedErrorMsg1}=    No update required
${ExpectedErrorMsg2}=    Selected firmware is already installed in the logical interconnect
${ExpectedErrorMsg3}=    Selected firmware is already installed
${ExpectedErrorMsg4}=    Unable to update firmware for the logical interconnect
${ExpectedErrorMsg5}=    an attempt was made to downgrade the firmware without selecting the force option
${ExpectedErrorMsg5.1}=    Retry the downgrade operation by selecting force option in the logical interconnect firmware update page
${ExpectedErrorMsg6}=    Firmware activation failed for logical interconnect
${ExpectedErrorMsg7}=    Activation failed due to failure of firmware update operation on interconnect
${ExpectedErrorMsg8}=    If the interconnects are in configured, unmanaged, maintenance or configuration error state, try the firmware activation again
${ExpectedErrorMsg9}=    If the interconnect is in any other state, refresh the enclosure and then retry the firmware update
${ExpectedErrorMsg10}=    If the problem continues to occur, contact your authorized support representative and provide them with a support dump
${ExpectedErrorMsg11}=    One or more interconnects are not in a valid state for firmware update
${ExpectedErrorMsg11.1}=   Visit the listed interconnects and examine the Activity view and follow the problem resolution steps listed there in order to bring the interconnects back to a Configured state or an Unmanaged state
${ExpectedErrorMsg11.2}=   AddedWithErrors state
${ExpectedErrorMsg12}=    There is an ongoing operation on the resource

${ExpectedErrorMsg13}=    One or more interconnects are not in a valid state for firmware update
${ExpectedErrorMsg14}=    Configuring state

#${ExpectedErrorMsg1}=          Unable to update firmware for the logical interconnect SGH420HHYA-LIG_B1 as an attempt was made to downgrade the firmware without selecting the force option.
#${ExpectedErrorMsg3}=           No update required. Selected firmware is already installed in the logical interconnect SGH420HHYA-LIG_B1.
${ExpectedErrorMsgli1}=    No update required
${ExpectedErrorMsgli2}=    Selected firmware is already installed in the logical interconnect
${Permissible_IC_STATES_BeforeUpdate}=    ['configured','unmanaged']
${Permissible_IC_STATES_AfterUpdate}=    ['configured']
${li_list} =    SGH420HHYA-LIG_B1


#...            S12/S6
#${li_list}                               'SGH420HHYA-LIG_B1'


######## BAYS EFUSE ####
${ACTIONOFFEFUSE}       OFF
${ACTIONONEFUSE}            ON
#${DEVICEEFUSE}             IOM
${DEVICEEFUSE}              SWM
${OA_HOST}          10.10.0.12
${OA_USER}          Administrator
${OA_PASS}              Admin


${one}               1
${two}               3
${three}               7

@{ODDBAYSnumer}=   ${one}
...                ${two}
...                ${three}


@{ODDBAYSnumerEFUSE}=   ${one}
...                ${two}
...                ${three}

#########


#######


#########

${ACTIONOFF}        POWEROFF INTERCONNECT
${ACTIONON}         POWERON INTERCONNECT
${DEVICE}               IOM
${OA_HOST}          10.10.0.12
${OA_USER}          Administrator
${OA_PASS}              Admin

${one}           1
${two_b}         2
${three_b}              3
${four_b}          4
${six_b}          6
${seven_b}           7

@{ODDBAYSnumer}=  ${one}
...               ${two_b}
...               ${three_b}
...               ${four_b}
...               ${six_b}
...               ${seven_b}


${two}            2
${four}           4
${six}            6

@{EVENBAYSnumer}=  ${two}
...                ${four}
...                ${six}


*** Test Cases ***
Firmware Update via Logical Interconnect level

    Set Log Level    TRACE
    Log Variables
    ${user}=    Get Data By Property    ${TestData.users}   name    Administrator
    Fusion UI Login to Appliance   ${user[0].name}


###############  Perform staging (no activation) of LIs via oneview and reboot manually. Then check activation should not happen #########################

TC01 Perform staging (no activation) of LIs via oneview and reboot manually.Then check activation should not happen
    Log To Console   "###############    Perform staging (no activation) of LIs via oneview and reboot manually. Then check activation should not happen############"
    [Documentation]       "1.3.1.1 Hill FW update LI: Perform staging (no activation) of LIs via oneview and reboot manually. Then check activation should not happen"
    Log to Console    "Testcase_ID: TP section 1.3.1.1 F1212_TC_UI_06 --> Perform staging (no activation) of LIs via oneview and reboot manually. Then check activation should not happen"
    Log To Console    ****Validation of  the interconnect states before  FW update triggers **********

    ${li_list} =   Create list     ${li_list}

    #################VERIFY IC STATE OF LI BEFORE UPGRADE #####################
#   ${Status}=    fusion_ui_verify_ic_state_of_li      ${li_list}    ${Permissible_IC_STATES_BeforeUpdate}
#   run keyword if    '${status}'=='False'    Fail      " IC states are not as Desired state "Configured" "

        #################STAGING FIRMWARE on ICMS#####################
#   ${Status}=  fusion_ui_update_firmware_logical_interconnect      @{TestData.Update_firmware_ebb}[3]
#   run keyword if    '${status}'=='False'    Fail      " Staging of firmware failed "


    #################VERIFY THE UI IC FIRMWARE VERSION and COMPARE with actual  IC version #####################
    ${Status}=    fusion_ui_validation_interconnect_firmware_from_li      ${li_list}      ${TestData.firmware1}
    ${Status1}=    Get From List    ${Status}   0
    run keyword if    '${status1}'=='True'    Fail      " Validation of  interconnects firmware versions are failed "

    #################VERIFY IC STATE OF LI AFTER STAGING FIRMWARE #####################
    ${Status}=    fusion_ui_verify_ic_state_of_li      ${li_list}    ${Permissible_IC_STATES_AfterUpdate}
    run keyword if    '${status}'=='False'    Fail      " IC states are not as Desired state "Configured" "


    ############ VERIFY THE ALERT MESSAGES on ACTIVITY PAGE ########################################
    ${Status}=    fusion_ui_validation_c7k_updatefirmwarealerts_in_li  @{TestData.LIlogicalconnect}[0]
    run keyword if    '${status}'=='False'    Fail      " Validation of alert messages are failed "
    Log To Console    ******Validation of Firmware staging via  LI level completed **********

    :FOR    ${BAY}  IN    @${ODDBAYSnumer}
    \    OA CLI EFUSE       ${OA_HOST}    ${OA_USER}        ${OA_PASS}    ${ACTIONOFF}    ${BAY}
#    \    Sleep    3 minutes 10 seconds


    :FOR    ${BAY}  IN    @${ODDBAYSnumer}
    \    OA CLI EFUSE       ${OA_HOST}    ${OA_USER}        ${OA_PASS}     ${ACTIONON}    ${BAY}
    \    Sleep    3 minutes 10 seconds


    #################VERIFY THE UI IC FIRMWARE VERSION and COMPARE with actual  IC version #####################
    ${Status}=    fusion_ui_validation_interconnect_firmware_from_li      ${li_list}      ${TestData.firmware1}
    ${Status1}=    Get From List    ${Status}   0
    run keyword if    '${status1}'=='True'    Fail      " Validation of  interconnects firmware versions are failed "

    #################VERIFY IC STATE OF LI AFTER STAGING FIRMWARE #####################
    ${Status}=  fusion_ui_verify_ic_state_of_li      ${li_list}    ${Permissible_IC_STATES_AfterUpdate}
    run keyword if    '${status}'=='False'    Fail      " IC states are not as Desired state "Configured" "



TC02 Perform staging (no activation) of LIs via oneview and reboot manually. Then check activation should not happen and then trigger activation of firmware from oneview Then check activation should success to desired firmware version after firmware update success.
    Log To Console   "###############  Perform staging (no activation) of LIs via oneview and reboot manually. Then check activation should not happen and then trigger activation of firmware  from oneview, Then check activation should success to desired firmware version after firmware update success.############"
    [Documentation]       "1.3.1.1 Hill FW update LI: Perform staging (no activation) of LIs via oneview and reboot manually. Then check activation should not happen and then trigger activation of firmware  from oneview, Then check activation should success to desired firmware version after firmware update success. "
    Log to Console    "Testcase_ID: TP section 1.3.1.1 F1212_TC_UI_07 --> Perform staging (no activation) of LIs via oneview and reboot manually. Then check activation should not happen and then trigger activation of firmware  from oneview, Then check activation should success to desired firmware version after firmware update success. "
    Log To Console    ****Validation of  the interconnect states before  FW update triggers **********

    ${li_list} =   Create list     ${li_list}

    #################VERIFY IC STATE OF LI BEFORE UPGRADE #####################
    ${Status}=    fusion_ui_verify_ic_state_of_li      ${li_list}    ${Permissible_IC_STATES_BeforeUpdate}
    run keyword if    '${status}'=='False'    Fail      " IC states are not as Desired state "Configured" "

        #################STAGING FIRMWARE on ICMS#####################
    ${Status}=  fusion_ui_update_firmware_logical_interconnect      @{TestData.Update_firmware_ebb}[3]
    run keyword if    '${status}'=='False'    Fail      " Staging of firmware failed "


    #################VERIFY THE UI IC FIRMWARE VERSION and COMPARE with actual  IC version #####################
    ${Status}=    fusion_ui_validation_interconnect_firmware_from_li      ${li_list}      ${TestData.firmware1}
    ${Status1}=    Get From List    ${Status}   0
    run keyword if    '${status1}'=='True'    Fail      " Validation of  interconnects firmware versions are failed "

    #################VERIFY IC STATE OF LI AFTER STAGING FIRMWARE #####################
    ${Status}=    fusion_ui_verify_ic_state_of_li      ${li_list}    ${Permissible_IC_STATES_AfterUpdate}
    run keyword if    '${status}'=='False'    Fail      " IC states are not as Desired state "Configured" "


    ############ VERIFY THE ALERT MESSAGES on ACTIVITY PAGE ########################################
    ${Status}=   fusion_ui_validation_c7k_updatefirmwarealerts_in_li  @{TestData.LIlogicalconnect}[0]
    run keyword if    '${status}'=='False'    Fail      " Validation of alert messages are failed "
    Log To Console    ******Validation of Firmware staging via  LI level completed **********

    :FOR    ${BAY}  IN    @${ODDBAYSnumer}
    \    OA CLI EFUSE       ${OA_HOST}    ${OA_USER}        ${OA_PASS}    ${ACTIONOFF}    ${BAY}
#    \    Sleep    3 minutes 10 seconds


    :FOR    ${BAY}  IN    @${ODDBAYSnumer}
    \    OA CLI EFUSE       ${OA_HOST}    ${OA_USER}        ${OA_PASS}     ${ACTIONON}    ${BAY}
    \    Sleep    3 minutes 10 seconds


    #################VERIFY THE UI IC FIRMWARE VERSION and COMPARE with actual  IC version #####################
    ${Status}=    fusion_ui_validation_interconnect_firmware_from_li      ${li_list}      ${TestData.firmware1}
    ${Status1}=    Get From List    ${Status}   0
    run keyword if    '${status1}'=='True'    Fail      " Validation of  interconnects firmware versions are failed "

    #################VERIFY IC STATE OF LI AFTER STAGING FIRMWARE #####################
    ${Status}=  fusion_ui_verify_ic_state_of_li      ${li_list}    ${Permissible_IC_STATES_AfterUpdate}
    run keyword if    '${status}'=='False'    Fail      " IC states are not as Desired state "Configured" "

    # Activation via oneview

    ${li_list} =   Create list     ${li_list}

    #################ACTIVATE THE STAGED FIRMWARE #####################
    ${Status}=    fusion_ui_update_firmware_logical_interconnect      @{TestData.Update_firmware_ebb}[6]
    run keyword if    '${status}'=='False'    Fail      "Firmware activation of icms Failed"

    #################VERIFY THE UI IC FIRMWARE VERSION and COMPARE with actual  IC version #####################
    ${Status}=  fusion_ui_validation_interconnect_firmware_from_li      ${li_list}      ${TestData.firmware1}
    ${Status1}=    Get From List    ${Status}   0
    run keyword if    '${status1}'=='False'    Fail      " Validation of  interconnects firmware versions are failed "

    #################VERIFY IC STATE OF LI AFTER UPGRADE #####################
    ${Status}=    fusion_ui_verify_ic_state_of_li      ${li_list}    ${Permissible_IC_STATES_AfterUpdate}
    run keyword if    '${status}'=='False'    Fail      " IC states are not as Desired state "Configured" "

    ############ VERIFY THE ALERT MESSAGES on ACTIVITY PAGE ########################################
    ${Status}=   fusion_ui_validation_c7k_updatefirmwarealerts_in_li  @{TestData.logicalconnect}[0]
    run keyword if    '${status}'=='False'    Fail      " Validation of alert messages are failed "

TC03 Verify that all the even modules that are already staged should get activated when Choose Odd/even method of activation without any modules in odd bays
    [Documentation]       "1.3.1.3 LI FW Update : Verify that all the even modules that are already staged should get activated when Choose Odd/even method of activation without any modules in odd bays"
    Log to Console    "Testcase_ID: TP section 1.3.1.3 F1212_TC_UI_16: Verify that all the even modules that are already staged should get activated when Choose Odd/even method of activation without any modules in odd bays"
    Log To Console    ***Verify that all the even modules that are already staged should get activated when Choose Odd/even method of activation without any modules in odd bays ***

    ${li_list} =   Create list     ${li_list}
    :FOR    ${BAY}  IN    @${ODDBAYSnumerEFUSE}
    \    OA CLI EFUSE BAYS      ${OA_HOST}    ${OA_USER}        ${OA_PASS}    ${DEVICEEFUSE}    ${BAY}    ${ACTIONOFFEFUSE}
    \    Sleep  3 minutes 10 seconds

    #################VERIFY IC STATE OF LI BEFORE UPGRADE #####################
    ${Status}=  fusion_ui_verify_ic_state_of_li      ${li_list}    ${Permissible_IC_STATES_BeforeUpdate}
    run keyword if    '${status}'=='False'    Fail      " IC states are not as Desired state Configured "

    #################UPDATE FIRMWARE (STAGE + ACTIVATE) UPGRADE TEST #####################
    ${Status}=    fusion_ui_update_firmware_logical_interconnect      @{TestData.Delay_Update_firmware_ebb}[4]
    run keyword if    '${status}'=='False'    Fail      " Update Firmware(Stage+Activate) of Hill via LI Failed "

    #################VERIFY THE UI IC FIRMWARE VERSION and COMPARE with actual  IC version #####################
    ${Status}=    fusion_ui_validation_interconnect_firmware_from_li      ${li_list}      ${TestData.firmware1}
    ${Status1}=    Get From List    ${Status}   0
    run keyword if    '${status1}'=='False'    Fail      " Validation of  interconnects firmware versions are failed "

    #################VERIFY IC STATE OF LI AFTER UPGRADE #####################
    ${Status}=  fusion_ui_verify_ic_state_of_li      ${li_list}    ${Permissible_IC_STATES_AfterUpdate}
    run keyword if    '${status}'=='False'    Fail      " IC states are not as Desired state "Configured" "


    ############ VERIFY THE ALERT MESSAGES on ACTIVITY PAGE ########################################
    ${Status}=     fusion_ui_validation_c7k_updatefirmwarealerts_in_li  @{TestData.updatelogicalconnect}[0]
    run keyword if    '${status}'=='False'    Fail      " Validation of alert messages are failed "

    :FOR    ${BAY}  IN    @${ODDBAYSnumerEFUSE}
    \    OA CLI EFUSE BAYS      ${OA_HOST}    ${OA_USER}        ${OA_PASS}    ${DEVICEEFUSE}    ${BAY}    ${ACTIONONEFUSE}
    \    Sleep  3 minutes 10 seconds


TC04 Verify that all the odd modules that are already staged get activated when Choose Odd/even method of activation without any modules in even bays.
    [Documentation]       "1.3.1.3 F1212_TC_UI_17 LI FW Update : Verify that all the odd modules that are already staged get activated when Choose Odd/even method of activation without any modules in even bays.
    Log to Console    "Testcase_ID: TP section 1.3.1.3 F1212_TC_UI_17: Verify that all the odd modules that are already staged get activated when Choose Odd/even method of activation without any modules in even bays."
    Log To Console    ***Verify that all the odd modules that are already staged get activated when Choose Odd/even method of activation without any modules in even bays. ***

    ${li_list} =   Create list     ${li_list}

    :FOR    ${BAY}  IN    @${EVENBAYSnumer}
    \    OA CLI EFUSE BAYS      ${OA_HOST}    ${OA_USER}        ${OA_PASS}    ${DEVICEEFUSE}    ${BAY}    ${ACTIONOFFEFUSE}
    \    Sleep  3 minutes 10 seconds

    #################VERIFY IC STATE OF LI BEFORE UPGRADE #####################
    ${Status}=    fusion_ui_verify_ic_state_of_li      ${li_list}    ${Permissible_IC_STATES_BeforeUpdate}
    run keyword if    '${status}'=='False'    Fail      " IC states are not as Desired state Configured "

    #################UPDATE FIRMWARE (STAGE + ACTIVATE) UPGRADE TEST #####################
    ${Status}=    fusion_ui_update_firmware_logical_interconnect      @{TestData.Delay_Update_firmware_ebb}[4]
    run keyword if    '${status}'=='False'    Fail      " Update Firmware(Stage+Activate) of Hill via LI Failed "

    #################VERIFY THE UI IC FIRMWARE VERSION and COMPARE with actual  IC version #####################
    ${Status}=    fusion_ui_validation_interconnect_firmware_from_li      ${li_list}      ${TestData.firmware1}
    ${Status1}=    Get From List    ${Status}   0
    run keyword if    '${status1}'=='False'    Fail      " Validation of  interconnects firmware versions are failed "

    #################VERIFY IC STATE OF LI AFTER UPGRADE #####################
    ${Status}=    fusion_ui_verify_ic_state_of_li      ${li_list}    ${Permissible_IC_STATES_AfterUpdate}
    run keyword if    '${status}'=='False'    Fail      " IC states are not as Desired state "Configured" "


    ############ VERIFY THE ALERT MESSAGES on ACTIVITY PAGE ########################################
    ${Status}=     fusion_ui_validation_c7k_updatefirmwarealerts_in_li  @{TestData.updatelogicalconnect}[0]
    run keyword if    '${status}'=='False'    Fail      " Validation of alert messages are failed "

    :FOR    ${BAY}  IN    @${EVENBAYSnumer}
    \    OA CLI EFUSE BAYS      ${OA_HOST}    ${OA_USER}        ${OA_PASS}    ${DEVICEEFUSE}    ${BAY}    ${ACTIONONEFUSE}
    \    Sleep  3 minutes 10 seconds
    Sleep   4 minutes 10 seconds



############################### Downgrading the firmware without force flag############################
TC07 Verify the alert message appears when try to set firmware baseline to the lower version and dont check the force installation flag(option) in downgrade firmware update operation In LI page
        [Documentation]       "1.3.1.1 Hill FW update LI: Verify the  alert message appears when try to set firmware baseline to the lower version and dont check the force installation flag(option) in downgrade firmware update operation In LI page"
        Log to Console    "Testcase_ID: TP section 1.3.1.1 F1212_TC_UI_58 --> Verify the  alert message appears when try to set firmware baseline to the lower version and dont check the force installation flag(option) in downgrade firmware update operation In LI page"

        ${Status}=    fusion_ui_update_firmware_logical_interconnect      @{TestData.Update_firmware_ebb_neg}[1]
        run keyword if    '${status}'=='False'    Fail      " Update Firmware(Stage+Activate) of Hill via LI Failed "

#       ${Status}=  fusion_ui_update_firmware_logical_interconnect      @{TestData.NegUpdate_firmware_ebb}[0]   # Lower version

        ${Status}=  fusion_ui_validate_error_message_li     ${TestData.firmwareLi1}
        Log to Console    ${Status}
        ${Status}=              Convert To Lowercase    ${Status}
        ${ExpectedErrorMsgbb}=   Convert To Lowercase    ${ExpectedErrorMsg1}
        #${ExpectedErrorMsg3}=   Convert To Lowercase    ${ExpectedErrorMsg3}

        Run Keyword and Continue on Failure    Should Contain       '${Status}'     ${ExpectedErrorMsgbb}   Expected Error Message Not seen
        Log to Console     Found the desired Alert message ${ExpectedErrorMsgbb}
        #Run Keyword and Continue on Failure       Should Contain       '${Status}'     ${ExpectedErrorMsg3}    Expected Error Message Not seen


###############  F1212_TC_UI_91 Verify that oneview should provide proper error message when try to perform Activate Firmware without performing staging firmware for later activation ############

TC10 Verify that oneview should provide proper error message when try to perform Activate Firmware without performing staging firmware for later activation
    Log To Console   "###############  Verify that oneview should provide proper error message when try to perform Activate Firmware without performing staging firmware for later activation ############"
    [Documentation]       "1.3.1.2 LI FW Update : Verify that oneview should provide proper error message when try to perform Activate Firmware without performing staging firmware for later activation"
    Log to Console    "Testcase_ID: TP section 1.3.1.2 F1212_TC_UI_91: Verify that oneview should provide proper error message when try to perform Activate Firmware without performing staging firmware for later activation"
    Log To Console    **Validation of  the interconnect states before  activation of FW of already staged one **********

    ${li_list} =   Create list     ${li_list}


    #################ACTIVATE THE STAGED FIRMWARE #####################
    ${Status}=    fusion_ui_update_firmware_logical_interconnect      @{TestData.LI_OK_button_check_firmware_ebb}[1]
    run keyword if    '${status}'=='True'    Fail      "Firmware activation of icms Failed"



TC06 Verify that oneview should throw proper error message when Dont select any VC for selective activation case via LI
    Log To Console   "###############  Staging firmware update of  Hill Module when IC state is configured ############"
    [Documentation]    "1.3.1.1 Hill FW update LI: Verify that oneview should throw proper error message when Dont select any VC for selective activation case via LI and Verify that oneview thrown error when Set blank value for Delay field on LI activation page"
    Log to Console    "Testcase_ID: TP section 1.3.1.1 F1212_TC_UI_55 and F1212_TC_UI_56 --> Verify that oneview should throw proper error message when Dont select any VC for selective activation case via LI and Verify that oneview thrown error when Set blank value for Delay field on LI activation page"
    Log To Console    ****Validation of  the interconnect states before  FW update triggers **********

#   ${li_list} =   Create list     ${li_list}

    #################VERIFY IC STATE OF LI BEFORE UPGRADE #####################
#   ${Status}=    fusion_ui_verify_ic_state_of_li      ${li_list}    ${Permissible_IC_STATES_BeforeUpdate}
#   run keyword if    '${status}'=='False'    Fail      " IC states are not as Desired state "Configured" "

    #################STAGING FIRMWARE on ICMS#####################
#   ${Status}=    fusion_ui_update_firmware_logical_interconnect      @{TestData.Update_firmware_stg_ebb}[0]
#   run keyword if    '${status}'=='False'    Fail      " Staging of firmware failed "


    #################STAGING FIRMWARE on ICMS#####################
    ${Status}=    fusion_ui_update_firmware_logical_interconnect      @{TestData.Activation_Neg_err_sel_delay_LI_Update_firmware_ebb}[0]
    run keyword if    '${status}'=='False'    Fail      " Staging of firmware failed "


    #################VERIFY THE UI IC FIRMWARE VERSION and COMPARE with actual  IC version #####################
#   ${Status}=    fusion_ui_validation_interconnect_firmware_from_li      ${li_list}      ${TestData.firmware1}
#   ${Status1}=    Get From List    ${Status}   0
#   run keyword if    '${status1}'=='True'    Fail      " Validation of  interconnects firmware versions are failed "

    #################VERIFY IC STATE OF LI AFTER STAGING FIRMWARE #####################
#   ${Status}=    fusion_ui_verify_ic_state_of_li      ${li_list}    ${Permissible_IC_STATES_AfterUpdate}
#   run keyword if    '${status}'=='False'    Fail      " IC states are not as Desired state "Configured" "


    ############ VERIFY THE ALERT MESSAGES on ACTIVITY PAGE ########################################
#   ${Status}=   fusion_ui_validation_c7k_updatefirmwarealerts_in_li  @{TestData.LIlogicalconnect}[0]
#    run keyword if    '${status}'=='False'    Fail      " Validation of alert messages are failed "
#   Log To Console    ******Validation of Firmware staging via  LI level completed **********



    # Activation

    ${li_list} =   Create list     ${li_list}


    #################ACTIVATE THE STAGED FIRMWARE #####################
    ${Status}=  fusion_ui_update_firmware_logical_interconnect      @{TestData.Activation_Neg_err_sel_delay_LI_Update_firmware_ebb}[1]
    run keyword if    '${status}'=='False'    Fail      "Firmware activation of icms Failed"


###############  Verify whether configuration changes are allowed during staging of Firmware update  for e.g.  the firmware update is in progress for LI, try to add or remove uplink sets, Disable uplink ports corresponding to interconnect being upgraded etc #########################

TC11 Verify whether configuration changes are allowed during staging of Firmware update for e.g.the firmware update is in progress for LI, try to add or remove uplink sets, Disable uplink ports corresponding to interconnect being upgraded etc

    [Documentation]    "1.3.1.1 Hill FW update LI: Verify whether configuration changes are allowed during staging of Firmware update  for e.g.  the firmware update is in progress for LI, try to add or remove uplink sets, Disable uplink ports corresponding to interconnect being upgraded etc"
    Log to Console    "Testcase_ID: TP section 1.3.1.1 F1212_UI_TC_87 --> Verify whether configuration changes are allowed during staging of Firmware update  for e.g.  the firmware update is in progress for LI, try to add or remove uplink sets, Disable uplink ports corresponding to interconnect being upgraded etc"


    ${li_list} =   Create list     ${li_list}


    #################STAGING FIRMWARE on ICMS#####################
    ${Status}=    fusion_ui_update_firmware_logical_interconnect      @{TestData.LI_fw_neg_Update_firmware_ebb}[3]
    run keyword if    '${status}'=='False'    Fail      " Staging of firmware failed "

    Fusion UI Create FC Network         @{TestData.fcnetworks}[0]

    fusion_ui_edit_logical_interconnect_group     @{TestData.hillceditligs}
    fusion_ui_edit_logical_interconnect_group     @{TestData.hillceditligs_removelus}


###############  Verify whether configuration changes are allowed during   activation of already staged Firmware for e.g. while the firmware update is in progress for LI, try to add or remove uplink sets, Disable uplink ports corresponding to interconnect being upgraded #########################

TC12 Verify whether configuration changes are allowed during activation of already staged Firmware for e.g. while the firmware update is in progress for LItry to add or remove uplink sets, Disable uplink ports corresponding to interconnect being upgraded

    [Documentation]    "1.3.1.1 Hill FW update LI: Verify whether configuration changes are allowed during   activation of already staged Firmware for e.g. while the firmware update is in progress for LI, try to add or remove uplink sets, Disable uplink ports corresponding to interconnect being upgraded"
    Log to Console    "Testcase_ID: TP section 1.3.1.1 F1212_UI_TC_88 --> Verify whether configuration changes are allowed during   activation of already staged Firmware for e.g. while the firmware update is in progress for LI, try to add or remove uplink sets, Disable uplink ports corresponding to interconnect being upgraded"


    ${li_list} =   Create list     ${li_list}


    #################STAGING FIRMWARE on ICMS#####################
    ${Status}=    fusion_ui_update_firmware_logical_interconnect      @{TestData.Update_firmware_ebb}[3]
    run keyword if    '${status}'=='False'    Fail      " Staging of firmware failed "

    #################ACTIVATE THE STAGED FIRMWARE #####################
    ${Status}=    fusion_ui_update_firmware_logical_interconnect      @{TestData.LI_fw_neg_active_Update_firmware_ebb}[5]
    run keyword if    '${status}'=='False'    Fail      "Firmware activation of icms Failed"

    Fusion UI Create FC Network         @{TestData.fcnetworks}[0]

    fusion_ui_edit_logical_interconnect_group     @{TestData.hillceditligs}
    fusion_ui_edit_logical_interconnect_group     @{TestData.hillceditligs_removelus}

*** comment***

TC05 Do a backup of configuration before FW update do FW update make some changes to configuration. Restore from back up and ensure that it is successful
    [Documentation]    "1.3.1.3 LI FW Update : Do a backup of configuration before FW update, do FW update, make some changes to configuration. Restore from back up and ensure that it is successful"
    Log to Console    "Testcase_ID: TP section 1.3.1.3 F1212_TC_UI_36: Do a backup of configuration before FW update, do FW update, make some changes to configuration. Restore from back up and ensure that it is successful"
    Log To Console    ***Do a backup of configuration before FW update, do FW update, make some changes to configuration. Restore from back up and ensure that it is successful ***

    Log to Console  Performing Backup Process
    fusion_ui_create_backup

    ${li_list} =   Create list     ${li_list}
    #################VERIFY IC STATE OF LI BEFORE UPGRADE #####################
    ${Status}=     fusion_ui_verify_ic_state_of_li      ${li_list}    ${Permissible_IC_STATES_BeforeUpdate}
    run keyword if    '${status}'=='False'    Fail      " IC states are not as Desired state Configured "

    #################UPDATE FIRMWARE (STAGE + ACTIVATE) UPGRADE TEST #####################
    ${Status}=    fusion_ui_update_firmware_logical_interconnect      @{TestData.Delay_Update_firmware_ebb}[4]
    run keyword if    '${status}'=='False'    Fail      " Update Firmware(Stage+Activate) of Hill via LI Failed "

    #################VERIFY THE UI IC FIRMWARE VERSION and COMPARE with actual  IC version #####################
    ${Status}=    fusion_ui_validation_interconnect_firmware_from_li      ${li_list}      ${TestData.firmware1}
    ${Status1}=    Get From List    ${Status}   0
    run keyword if    '${status1}'=='False'    Fail      " Validation of  interconnects firmware versions are failed "

    #################VERIFY IC STATE OF LI AFTER UPGRADE #####################
    ${Status}=    fusion_ui_verify_ic_state_of_li      ${li_list}    ${Permissible_IC_STATES_AfterUpdate}
    run keyword if    '${status}'=='False'    Fail      " IC states are not as Desired state "Configured" "


    ############ VERIFY THE ALERT MESSAGES on ACTIVITY PAGE ########################################
    ${Status}=   fusion_ui_validation_c7k_updatefirmwarealerts_in_li  @{TestData.updatelogicalconnect}[0]
    run keyword if    '${status}'=='False'    Fail      " Validation of alert messages are failed "

    ## Create network
#    Fusion UI Navigate To Networks Page
    Fusion UI create ethernet network  ${TestData.networks[0]}

    Log to Console  Performing Restore Process
    ${status}=  fusion_ui_restore_from_backupfile
    run keyword if  '${status}'=='False'    Fail    "Restore Process- Failed"

    ${user}=    Get Data By Property    ${TestData.users}   name    Administrator
    Fusion UI Login to Appliance   ${user[0].name}

    #################VERIFY THE UI IC FIRMWARE VERSION and COMPARE with actual  IC version #####################
    ${Status}=    fusion_ui_validation_interconnect_firmware_from_li      ${li_list}      ${TestData.firmware1}
    ${Status1}=    Get From List    ${Status}   0
    run keyword if    '${status1}'=='False'    Fail      " Validation of  interconnects firmware versions are failed "

    #################VERIFY IC STATE OF LI AFTER UPGRADE #####################
    ${Status}=    fusion_ui_verify_ic_state_of_li      ${li_list}    ${Permissible_IC_STATES_AfterUpdate}
    run keyword if    '${status}'=='False'    Fail      " IC states are not as Desired state "Configured" "

*** Keywords ***

#######################################
# OA CLI Commands
#######################################
OA CLI EFUSE
    [Documentation]       issues an EFUSE Action to the given Device\Bay.
    ...   {DEVICE} = <BLADE|IOM|NETTRAY|SWM|FAN|OA|EM>
    ...   {BAY} = desired bay for given device
    ...   {ACTION} = <ON|OFF>
    [Arguments]        ${OA_HOST}    ${OA_USER}     ${OA_PASS}   ${ACTION}   ${BAY}
    Open Connection     ${OA_HOST}     prompt=OA-    timeout=10s
    Login               ${OA_USER}     ${OA_PASS}
#    Write    ++diag--
#    Read Until    diag>
    Write    ${ACTION} ${BAY}
    Write    q
    Close All Connections


#######################################
# OA CLI Commands
#######################################
OA CLI EFUSE BAYS
    [Documentation]       issues an EFUSE Action to the given Device\Bay.
    ...   {DEVICE} = <BLADE|IOM|NETTRAY|SWM|FAN|OA|EM>
    ...   {BAY} = desired bay for given device
    ...   {ACTION} = <ON|OFF>
    [Arguments]        ${OA_HOST}    ${OA_USER}     ${OA_PASS}    ${DEVICE}    ${BAY}    ${ACTION}
    Open Connection     ${OA_HOST}     prompt=OA-    timeout=10s
    Login               ${OA_USER}     ${OA_PASS}
    Write    ++diag--
    Read Until    diag>
    Write    efuse ${DEVICE} ${BAY} ${ACTION}
    Write    q
    Close All Connections