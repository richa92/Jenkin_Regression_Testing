*** Settings ***
Documentation      Continuous   Integration Tests for RoboGalaxy dev Branch
Resource           F1212OVAConfig.txt
Force Tags         Buildup
Suite Setup         Load Test Data and Open Browser
Suite Teardown      Logout And Close All Browsers
Library             Dialogs
Library             Collections

*** Variables ***
${ExpectedErrorMsg1}=           Unable to update firmware for the logical interconnect SGH420HHYA-LIG_B1 as an attempt was made to downgrade the firmware without selecting the force option.
${ExpectedErrorMsg3}=           No update required. Selected firmware is already installed in the logical interconnect SGH420HHYA-LIG_B1.
${Permissible_IC_STATES_BeforeUpdate}=    ['configured','unmanaged']
${Permissible_IC_STATES_AfterUpdate}=    ['configured']
@{li_list_dict} =    SGH420HHYA-MLIG_B1
...             SGH420HHYA-MLIG_B2
${li_list_1} =    SGH420HHYA-MLIG_B1
${li_list_2} =    SGH420HHYA-MLIG_B2

*** Test Cases ***
Firmware Update via Logical Interconnect level

        Set Log Level    TRACE
        Log Variables
        ${user}=    Get Data By Property    ${TestData.users}   name    Administrator
        Fusion UI Login to Appliance   ${user[0].name}


###############  Staging firmware update for MULTIPLE LIs ############

TC01 Staging firmware update of Hill and VC Modules when IC state is configured
    Log To Console   "###############  Staging firmware update of  Hill Module when IC state is configured ############"
    [Documentation]       "1.3.1.1 Hill FW update LI: Staging of firmware of hill module "
    Log to Console     "Testcase_ID: TP section 1.3.1.1 F1212_TC_UI_08 --> Perform staging of one version 3.0 in all LIs. Do staging of another version 3.6 in all LIs without activation. now Perform activation ,then check desired latest staged firmware version should get activated "
    Log To Console    ****Validation of  the interconnect states before  FW update triggers **********


    ${li_list_2} =   Create list     ${li_list_2}

    #################VERIFY IC STATE OF LI BEFORE UPGRADE #####################
    ${Status}=  fusion_ui_verify_ic_state_of_li      ${li_list_2}    ${Permissible_IC_STATES_BeforeUpdate}
    run keyword if    '${status}'=='False'    Fail      " IC states are not as Desired state "Configured" "

    ${li_list_1} =   Create list     ${li_list_1}
    #################VERIFY IC STATE OF LI BEFORE UPGRADE #####################
    ${Status}=  fusion_ui_verify_ic_state_of_li      ${li_list_1}    ${Permissible_IC_STATES_BeforeUpdate}
    run keyword if    '${status}'=='False'    Fail      " IC states are not as Desired state "Configured" "

    #################STAGING FIRMWARE on ICMS#####################

    ${Status}=  fusion_ui_update_firmware_logical_interconnect      @{TestData.MLIUpdate_firmware_ebb}[0]
    run keyword if    '${status}'=='False'    Fail      " Staging of firmware failed "

    ${Status}=  fusion_ui_update_firmware_logical_interconnect      @{TestData.MLIUpdate_firmware_ebb}[2]
    run keyword if    '${status}'=='False'    Fail      "Staging of firmware failed "


    #################VERIFY THE UI IC FIRMWARE VERSION and COMPARE with actual  IC version #####################
    ${Status}=  fusion_ui_verify_interconnect_firmware_from_li      ${li_list_1}      ${TestData.Mfirmware1}
    ${Status1}=    Get From List    ${Status}   0
    run keyword if    '${status1}'=='True'    Fail      " Validation of  interconnects firmware versions are failed "
    ${Status}=  fusion_ui_verify_interconnect_firmware_from_li      ${li_list_2}      ${TestData.Mfirmware2}
    ${Status1}=    Get From List    ${Status}   0
    run keyword if    '${status1}'=='True'    Fail      " Validation of  interconnects firmware versions are failed "

    #################VERIFY IC STATE OF LI AFTER STAGING FIRMWARE #####################
    ${Status}=  fusion_ui_verify_ic_state_of_li      ${li_list_1}    ${Permissible_IC_STATES_AfterUpdate}
    run keyword if    '${status}'=='False'    Fail      " IC states are not as Desired state "Configured" "

    #################VERIFY IC STATE OF LI AFTER STAGING FIRMWARE #####################
    ${Status}=  fusion_ui_verify_ic_state_of_li      ${li_list_2}    ${Permissible_IC_STATES_AfterUpdate}
    run keyword if    '${status}'=='False'    Fail      " IC states are not as Desired state "Configured" "

    ############ VERIFY THE ALERT MESSAGES on ACTIVITY PAGE ########################################
    ${Status}=   fusion_ui_verify_c7k_updatefirmwarealerts_inLI  @{TestData.MStagelogicalconnect}[0]
    run keyword if    '${status}'=='False'    Fail      " Validation of alert messages are failed "
    ${Status}=   fusion_ui_verify_c7k_updatefirmwarealerts_inLI  @{TestData.MStagelogicalconnect}[1]
    run keyword if    '${status}'=='False'    Fail      " Validation of alert messages are failed "

    Log To Console    ******Validation of Firmware staging via  LI level completed **********

###############  ACTIVATION of Already Staging firmware for Muliple LIs ############
TC02 Perform staging of one version 3.0 in all LIs. Do staging of another version 3.6 in all LIs without activation. now Perform activation ,then check desired latest staged firmware version should get activated
    Log To Console   "###############  Perform staging of one version 3.0 in all LIs. Do staging of another version 3.6 in all LIs without activation. now Perform activation ,then check desired latest staged firmware version should get activated ############"
    [Documentation]       "1.3.1.2 LI FW Update : Activation of  FW update of Hill via LI"
    Log to Console     "Testcase_ID: TP section 1.3.1.2 F1212_TC_UI_08: Perform staging of one version 3.0 in all LIs. Do staging of another version 3.6 in all LIs without activation. now Perform activation ,then check desired latest staged firmware version should get activated"
    Log To Console    **Validation of  the interconnect states before  activation of FW of already staged one **********

    ${li_list_1} =   Create list     ${li_list_1}

    #################VERIFY IC STATE OF LI BEFORE UPGRADE #####################
    ${Status}=  fusion_ui_verify_ic_state_of_li      ${li_list_1}    ${Permissible_IC_STATES_BeforeUpdate}
    run keyword if    '${status}'=='False'    Fail      " IC states are not as Desired state "Configured" "

    ${li_list_2} =   Create list     ${li_list_2}

    #################VERIFY IC STATE OF LI BEFORE UPGRADE #####################
    ${Status}=  fusion_ui_verify_ic_state_of_li      ${li_list_2}    ${Permissible_IC_STATES_BeforeUpdate}
    run keyword if    '${status}'=='False'    Fail      " IC states are not as Desired state "Configured" "

    #################ACTIVATE THE STAGED FIRMWARE #####################
    ${Status}=  fusion_ui_update_firmware_logical_interconnect      @{TestData.MLIUpdate_firmware_ebb}[1]
    run keyword if    '${status}'=='False'    Fail      "Firmware activation of icms Failed"
    ${Status}=  fusion_ui_update_firmware_logical_interconnect      @{TestData.MLIUpdate_firmware_ebb}[3]
    run keyword if    '${status}'=='False'    Fail      "Firmware activation of icms Failed"

    #################VERIFY THE UI IC FIRMWARE VERSION and COMPARE with actual  IC version #####################
    ${Status}=  fusion_ui_verify_interconnect_firmware_from_li      ${li_list_1}      ${TestData.Mfirmware1}
    ${Status1}=    Get From List    ${Status}   0
    run keyword if    '${status1}'=='False'    Fail      " Validation of  interconnects firmware versions are failed "
    ${Status}=  fusion_ui_verify_interconnect_firmware_from_li      ${li_list_2}      ${TestData.Mfirmware2}
    ${Status1}=    Get From List    ${Status}   0
    run keyword if    '${status1}'=='False'    Fail      " Validation of  interconnects firmware versions are failed "

    #################VERIFY IC STATE OF LI AFTER UPGRADE #####################
    ${Status}=  fusion_ui_verify_ic_state_of_li      ${li_list_1}    ${Permissible_IC_STATES_AfterUpdate}
    run keyword if    '${status}'=='False'    Fail      " IC states are not as Desired state "Configured" "

    #################VERIFY IC STATE OF LI AFTER UPGRADE #####################
    ${Status}=  fusion_ui_verify_ic_state_of_li      ${li_list_2}    ${Permissible_IC_STATES_AfterUpdate}
    run keyword if    '${status}'=='False'    Fail      " IC states are not as Desired state "Configured" "


    ############ VERIFY THE ALERT MESSAGES on ACTIVITY PAGE ########################################
    ${Status}=   fusion_ui_verify_c7k_updatefirmwarealerts_inLI  @{TestData.Mlogicalconnect}[0]
    run keyword if    '${status}'=='False'    Fail      " Validation of alert messages are failed "
    ${Status}=   fusion_ui_verify_c7k_updatefirmwarealerts_inLI  @{TestData.Mlogicalconnect}[1]
    run keyword if    '${status}'=='False'    Fail      " Validation of alert messages are failed "

    Log To Console    ******Validation of activation of firmware of hill module using Parallel mode in Eth and FC channel completed **********




###############   Verify the Firmware upgrade with multiple Lis with mix of Hill, Utah Ocho , Ethernet and initiate firmware update on all Lis ############
TC03 Verify the Firmware upgrade with multiple Lis with mix of Hill Utah Ocho Ethernet and initiate firmware update on all Lis
    Log To Console   "###############  Verify the Firmware upgrade with multiple Lis with mix of Hill Utah Ocho Ethernet and initiate firmware update on all Lis ############"
    [Documentation]    "1.3.1.2 LI FW Update : Verify the Firmware upgrade with multiple Lis with mix of Hill Utah Ocho Ethernet and initiate firmware update on all Lis"
    Log to Console     "Testcase_ID: TP section 1.3.1.2 F1212_TC_UI_18: Verify the Firmware upgrade with multiple Lis with mix of Hill Utah Ocho Ethernet and initiate firmware update on all Lis"
    Log To Console    **Validation of  the interconnect states before  activation of FW of already staged one **********

    ${li_list_1} =   Create list     ${li_list_1}

    #################VERIFY IC STATE OF LI BEFORE UPGRADE #####################
    ${Status}=  fusion_ui_verify_ic_state_of_li      ${li_list_1}    ${Permissible_IC_STATES_BeforeUpdate}
    run keyword if    '${status}'=='False'    Fail      " IC states are not as Desired state "Configured" "

    ${li_list_2} =   Create list     ${li_list_2}

    #################VERIFY IC STATE OF LI BEFORE UPGRADE #####################
    ${Status}=  fusion_ui_verify_ic_state_of_li      ${li_list_2}    ${Permissible_IC_STATES_BeforeUpdate}
    run keyword if    '${status}'=='False'    Fail      " IC states are not as Desired state "Configured" "


    #################ACTIVATE THE STAGED FIRMWARE #####################
    ${Status}=  fusion_ui_update_firmware_logical_interconnect      @{TestData.MLI_New_Update_firmware_ebb}[4]
    run keyword if    '${status}'=='False'    Fail      "Firmware activation of icms Failed"
    ${Status}=  fusion_ui_update_firmware_logical_interconnect      @{TestData.MLI_New_Update_firmware_ebb}[5]
    run keyword if    '${status}'=='False'    Fail      "Firmware activation of icms Failed"

    #################VERIFY THE UI IC FIRMWARE VERSION and COMPARE with actual  IC version #####################
    ${Status}=  fusion_ui_verify_interconnect_firmware_from_li      ${li_list_1}      ${TestData.Mfirmware1}
    ${Status1}=    Get From List    ${Status}   0
    run keyword if    '${status1}'=='False'    Fail      " Validation of  interconnects firmware versions are failed "
    ${Status}=  fusion_ui_verify_interconnect_firmware_from_li      ${li_list_2}      ${TestData.Mfirmware2}
    ${Status1}=    Get From List    ${Status}   0
    run keyword if    '${status1}'=='False'    Fail      " Validation of  interconnects firmware versions are failed "

    #################VERIFY IC STATE OF LI AFTER UPGRADE #####################
    ${Status}=  fusion_ui_verify_ic_state_of_li      ${li_list_1}    ${Permissible_IC_STATES_AfterUpdate}
    run keyword if    '${status}'=='False'    Fail      " IC states are not as Desired state "Configured" "

    ${Status}=  fusion_ui_verify_ic_state_of_li      ${li_list_2}    ${Permissible_IC_STATES_AfterUpdate}
    run keyword if    '${status}'=='False'    Fail      " IC states are not as Desired state "Configured" "

    ############ VERIFY THE ALERT MESSAGES on ACTIVITY PAGE ########################################
    ${Status}=   fusion_ui_verify_c7k_updatefirmwarealerts_inLI  @{TestData.Mupdatelogicalconnect}[0]
    run keyword if    '${status}'=='False'    Fail      " Validation of alert messages are failed "
    ${Status}=   fusion_ui_verify_c7k_updatefirmwarealerts_inLI  @{TestData.Mupdatelogicalconnect}[1]
    run keyword if    '${status}'=='False'    Fail      " Validation of alert messages are failed "

    Log To Console    ******Verify the Firmware upgrade with multiple Lis with mix of Hill Utah Ocho Ethernet and initiate firmware update on all Lis completed **********

####### Perform staging of one version 3.0 in all LIs. Do staging of another version 3.6 in all LIs without activation. now Perform activation ,then check desired latest staged firmware version should get activated ######

TC04 Perform staging of one version in all LIs Do staging of another version in all LIs without activation. now Perform activation ,then check desired latest staged firmware version should get activated

    Log To Console   "###############  Perform staging of one version 3.0 in all LIs. Do staging of another version 3.6 in all LIs without activation. now Perform activation ,then check desired latest staged firmware version should get activated ############"
    [Documentation]    "1.3.1.2 LI FW Update : Perform staging of one version 3.0 in all LIs. Do staging of another version 3.6 in all LIs without activation. now Perform activation ,then check desired latest staged firmware version should get activated"
    Log to Console     "Testcase_ID: TP section 1.3.1.2 F1212_TC_UI_08: Perform staging of one version 3.0 in all LIs. Do staging of another version 3.6 in all LIs without activation. now Perform activation ,then check desired latest staged firmware version should get activated"


    ${li_list_1} =   Create list     ${li_list_1}

    #################VERIFY IC STATE OF LI BEFORE UPGRADE #####################
    ${Status}=  fusion_ui_verify_ic_state_of_li      ${li_list_1}    ${Permissible_IC_STATES_BeforeUpdate}
    run keyword if    '${status}'=='False'    Fail      " IC states are not as Desired state "Configured" "

    ${li_list_2} =   Create list     ${li_list_2}

    #################VERIFY IC STATE OF LI BEFORE UPGRADE #####################
    ${Status}=  fusion_ui_verify_ic_state_of_li      ${li_list_2}    ${Permissible_IC_STATES_BeforeUpdate}
    run keyword if    '${status}'=='False'    Fail      " IC states are not as Desired state "Configured" "

    #################STAGING FIRMWARE on one LI out of two LIs #####################
    ${Status}=  fusion_ui_update_firmware_logical_interconnect      @{TestData.MLI_stag_Update_firmware_ebb_1}[0]
    run keyword if    '${status}'=='False'    Fail      "Firmware activation of icms Failed"
    ${Status}=  fusion_ui_update_firmware_logical_interconnect      @{TestData.MLI_stag_Update_firmware_ebb_1}[2]
    run keyword if    '${status}'=='False'    Fail      "Firmware activation of icms Failed"


    #################STAGING FIRMWARE on second LI out of two LIs #####################
    ${Status}=  fusion_ui_update_firmware_logical_interconnect      @{TestData.MLI_stag_Update_firmware_ebb_2}[0]
    run keyword if    '${status}'=='False'    Fail      "Firmware activation of icms Failed"
    ${Status}=  fusion_ui_update_firmware_logical_interconnect      @{TestData.MLI_stag_Update_firmware_ebb_2}[2]
    run keyword if    '${status}'=='False'    Fail      "Firmware activation of icms Failed"

    #################ACTIVATE DESIRED FIRMWARE ON ALL LIs, WHICH IS ALREADY STAGED FIRMWARE #####################
    ${Status}=  fusion_ui_update_firmware_logical_interconnect      @{TestData.MLI_activate_Update_firmware_ebb_2}[1]
    run keyword if    '${status}'=='False'    Fail      "Firmware activation of icms Failed"
    ${Status}=  fusion_ui_update_firmware_logical_interconnect      @{TestData.MLI_activate_Update_firmware_ebb_2}[3]
    run keyword if    '${status}'=='False'    Fail      "Firmware activation of icms Failed"



    #################VERIFY THE UI IC FIRMWARE VERSION and COMPARE with actual  IC version #####################
    ${Status}=  fusion_ui_verify_interconnect_firmware_from_li      ${li_list_1}      ${TestData.Mfirmware1}
    ${Status1}=    Get From List    ${Status}   0
    run keyword if    '${status1}'=='False'    Fail      " Validation of  interconnects firmware versions are failed "
    ${Status}=  fusion_ui_verify_interconnect_firmware_from_li      ${li_list_2}      ${TestData.Mfirmware2}
    ${Status1}=    Get From List    ${Status}   0
    run keyword if    '${status1}'=='False'    Fail      " Validation of  interconnects firmware versions are failed "

    #################VERIFY IC STATE OF LI AFTER UPGRADE #####################
    ${Status}=  fusion_ui_verify_ic_state_of_li      ${li_list_1}    ${Permissible_IC_STATES_AfterUpdate}
    run keyword if    '${status}'=='False'    Fail      " IC states are not as Desired state "Configured" "

    #################VERIFY IC STATE OF LI AFTER UPGRADE #####################
    ${Status}=  fusion_ui_verify_ic_state_of_li      ${li_list_2}    ${Permissible_IC_STATES_AfterUpdate}
    run keyword if    '${status}'=='False'    Fail      " IC states are not as Desired state "Configured" "

    ############ VERIFY THE ALERT MESSAGES on ACTIVITY PAGE ########################################
    ${Status}=   fusion_ui_verify_c7k_updatefirmwarealerts_inLI  @{TestData.Mlogicalconnect}[0]
    run keyword if    '${status}'=='False'    Fail      " Validation of alert messages are failed "
    ${Status}=   fusion_ui_verify_c7k_updatefirmwarealerts_inLI  @{TestData.Mlogicalconnect}[1]
    run keyword if    '${status}'=='False'    Fail      " Validation of alert messages are failed "

 ####### Verify the Firmware update should be successful on both LIs to desired version when first LI be in version 3.0 and second LI be in version 3.9. Do a firmware update of both LIs to another version 4.45 ######

TC05 Verify the Firmware update should be successful on both LIs to desired version when first LI be in version 3.0 and second LI be in version 3.9. Do a firmware update of both LIs to another version 4.45

    Log To Console   "###############  Verify the Firmware update should be successful on both LIs to desired version when first LI be in version 3.0 and second LI be in version 3.9. Do a firmware update of both LIs to another version 4.45 ############"
    [Documentation]    "1.3.1.2 LI FW Update : Verify the Firmware update should be successful on both LIs to desired version when first LI be in version 3.0 and second LI be in version 3.9. Do a firmware update of both LIs to another version 4.45"
    Log to Console     "Testcase_ID: TP section 1.3.1.2 F1212_TC_UI_34: Verify the Firmware update should be successful on both LIs to desired version when first LI be in version 3.0 and second LI be in version 3.9. Do a firmware update of both LIs to another version 4.45"


    ${li_list_1} =   Create list     ${li_list_1}

    #################VERIFY IC STATE OF LI BEFORE UPGRADE #####################
    ${Status}=  fusion_ui_verify_ic_state_of_li      ${li_list_1}    ${Permissible_IC_STATES_BeforeUpdate}
    run keyword if    '${status}'=='False'    Fail      " IC states are not as Desired state "Configured" "

    ${li_list_2} =   Create list     ${li_list_2}

    #################VERIFY IC STATE OF LI BEFORE UPGRADE #####################
    ${Status}=  fusion_ui_verify_ic_state_of_li      ${li_list_2}    ${Permissible_IC_STATES_BeforeUpdate}
    run keyword if    '${status}'=='False'    Fail      " IC states are not as Desired state "Configured" "


    #################STAGING FIRMWARE on one LI out of two LIs #####################
    ${Status}=  fusion_ui_update_firmware_logical_interconnect      @{TestData.MLI_stag_Update_firmware_ebb_1}[0]
    run keyword if    '${status}'=='False'    Fail      "Firmware activation of icms Failed"
    ${Status}=  fusion_ui_update_firmware_logical_interconnect      @{TestData.MLI_stag_Update_firmware_ebb_1}[2]
    run keyword if    '${status}'=='False'    Fail      "Firmware activation of icms Failed"


    #################STAGING FIRMWARE on second LI out of two LIs #####################
    ${Status}=  fusion_ui_update_firmware_logical_interconnect      @{TestData.MLI_stag_Update_firmware_ebb_2}[0]
    run keyword if    '${status}'=='False'    Fail      "Firmware activation of icms Failed"
    ${Status}=  fusion_ui_update_firmware_logical_interconnect      @{TestData.MLI_stag_Update_firmware_ebb_2}[2]
    run keyword if    '${status}'=='False'    Fail      "Firmware activation of icms Failed"

    #################STAGING and ACTIVATE THIRD FIRMWARE ON ALL LIs  #####################
          #########STAGING ON MULTIPLE LIs #########
    ${Status}=  fusion_ui_update_firmware_logical_interconnect      @{TestData.MLI_Stag_activate_Update_firmware_ebb_2}[0]
    run keyword if    '${status}'=='False'    Fail      "Firmware activation of icms Failed"
    ${Status}=  fusion_ui_update_firmware_logical_interconnect      @{TestData.MLI_Stag_activate_Update_firmware_ebb_2}[2]
    run keyword if    '${status}'=='False'    Fail      "Firmware activation of icms Failed"
         #########ACTIVATE  ON MULTIPLE LIs #########
    ${Status}=  fusion_ui_update_firmware_logical_interconnect      @{TestData.MLI_Stag_activate_Update_firmware_ebb_2}[1]
    run keyword if    '${status}'=='False'    Fail      "Firmware activation of icms Failed"
    ${Status}=  fusion_ui_update_firmware_logical_interconnect      @{TestData.MLI_Stag_activate_Update_firmware_ebb_2}[3]
    run keyword if    '${status}'=='False'    Fail      "Firmware activation of icms Failed"



    #################VERIFY THE UI IC FIRMWARE VERSION and COMPARE with actual  IC version #####################
    ${Status}=  fusion_ui_verify_interconnect_firmware_from_li      ${li_list_1}      ${TestData.Mfirmware1}
    ${Status1}=    Get From List    ${Status}   0
    run keyword if    '${status1}'=='False'    Fail      " Validation of  interconnects firmware versions are failed "
    ${Status}=  fusion_ui_verify_interconnect_firmware_from_li      ${li_list_2}      ${TestData.Mfirmware2}
    ${Status1}=    Get From List    ${Status}   0
    run keyword if    '${status1}'=='False'    Fail      " Validation of  interconnects firmware versions are failed "

    #################VERIFY IC STATE OF LI AFTER UPGRADE #####################
    ${Status}=  fusion_ui_verify_ic_state_of_li      ${li_list_1}    ${Permissible_IC_STATES_AfterUpdate}
    run keyword if    '${status}'=='False'    Fail      " IC states are not as Desired state "Configured" "

    #################VERIFY IC STATE OF LI AFTER UPGRADE #####################
    ${Status}=  fusion_ui_verify_ic_state_of_li      ${li_list_2}    ${Permissible_IC_STATES_AfterUpdate}
    run keyword if    '${status}'=='False'    Fail      " IC states are not as Desired state "Configured" "

    ############ VERIFY THE ALERT MESSAGES on ACTIVITY PAGE ########################################
    ${Status}=   fusion_ui_verify_c7k_updatefirmwarealerts_inLI  @{TestData.Mlogicalconnect}[0]
    run keyword if    '${status}'=='False'    Fail      " Validation of alert messages are failed "
    ${Status}=   fusion_ui_verify_c7k_updatefirmwarealerts_inLI  @{TestData.Mlogicalconnect}[1]
    run keyword if    '${status}'=='False'    Fail      " Validation of alert messages are failed "



 ####### One LI is in latest version and second LI is in lower version. Perform upgrade on second LI and ensure that second LI alone is upgraded successfully to the latest version ######

TC06 One LI is in latest version and second LI is in lower version. Perform upgrade on second LI and ensure that second LI alone is upgraded successfully to the latest version

    Log To Console   "###############  One LI is in latest version and second LI is in lower version. Perform upgrade on second LI and ensure that second LI alone is upgraded successfully to the latest version ############"
    [Documentation]    "1.3.1.2 LI FW Update : One LI is in latest version and second LI is in lower version. Perform upgrade on second LI and ensure that second LI alone is upgraded successfully to the latest version"
    Log to Console     "Testcase_ID: TP section 1.3.1.2 F1212_TC_UI_35: One LI is in latest version and second LI is in lower version. Perform upgrade on second LI and ensure that second LI alone is upgraded successfully to the latest version"


    ${li_list_1} =   Create list     ${li_list_1}

    #################VERIFY IC STATE OF LI BEFORE UPGRADE #####################
    ${Status}=  fusion_ui_verify_ic_state_of_li      ${li_list_1}    ${Permissible_IC_STATES_BeforeUpdate}
    run keyword if    '${status}'=='False'    Fail      " IC states are not as Desired state "Configured" "

    ${li_list_2} =   Create list     ${li_list_2}

    #################VERIFY IC STATE OF LI BEFORE UPGRADE #####################
    ${Status}=  fusion_ui_verify_ic_state_of_li      ${li_list_2}    ${Permissible_IC_STATES_BeforeUpdate}
    run keyword if    '${status}'=='False'    Fail      " IC states are not as Desired state "Configured" "


    #################STAGING and ACTIVATE FIRMWARE(Upgrade) on one LI out of two LIs #####################
    ${Status}=  fusion_ui_update_firmware_logical_interconnect      @{TestData.MLI_stag_active_Update_firmware_ebb_higher_2}[4]
    run keyword if    '${status}'=='False'    Fail      "Firmware activation of icms Failed"
#   ${Status}=  fusion_ui_update_firmware_logical_interconnect      @{TestData.MLI_stag_active_Update_firmware_ebb_higher_2}[5]
#   run keyword if    '${status}'=='False'    Fail      "Firmware activation of icms Failed"


    #################STAGING AND ACTIVATET FIRMWARE (UPGRADE )on second LI out of two LIs #####################
#   ${Status}=  fusion_ui_update_firmware_logical_interconnect      @{TestData.MLI_stag_active_Update_firmware_ebb_lower_ver_1}[4]
#   run keyword if    '${status}'=='False'    Fail      "Firmware activation of icms Failed"
    ${Status}=  fusion_ui_update_firmware_logical_interconnect      @{TestData.MLI_stag_active_Update_firmware_ebb_lower_ver_1}[5]
    run keyword if    '${status}'=='False'    Fail      "Firmware activation of icms Failed"

    #################STAGING and ACTIVATE WITH LATEST FIRMWARE ON ALL LIs  #####################
          #########STAGING ON MULTIPLE LIs #########
    ${Status}=  fusion_ui_update_firmware_logical_interconnect      @{TestData.MLI_stag_active_Update_firmware_ebb_higher_2}[5]
    run keyword if    '${status}'=='False'    Fail      "Firmware activation of icms Failed"


    #################VERIFY THE UI IC FIRMWARE VERSION and COMPARE with actual  IC version #####################
    ${Status}=  fusion_ui_verify_interconnect_firmware_from_li      ${li_list_1}      ${TestData.Mfirmware1}
    ${Status1}=    Get From List    ${Status}   0
    run keyword if    '${status1}'=='False'    Fail      " Validation of  interconnects firmware versions are failed "
    ${Status}=  fusion_ui_verify_interconnect_firmware_from_li      ${li_list_2}      ${TestData.Mfirmware2}
    ${Status1}=    Get From List    ${Status}   0
    run keyword if    '${status1}'=='False'    Fail      " Validation of  interconnects firmware versions are failed "

    #################VERIFY IC STATE OF LI AFTER UPGRADE #####################
    ${Status}=  fusion_ui_verify_ic_state_of_li      ${li_list_1}    ${Permissible_IC_STATES_AfterUpdate}
    run keyword if    '${status}'=='False'    Fail      " IC states are not as Desired state "Configured" "

    #################VERIFY IC STATE OF LI AFTER UPGRADE #####################
    ${Status}=  fusion_ui_verify_ic_state_of_li      ${li_list_2}    ${Permissible_IC_STATES_AfterUpdate}
    run keyword if    '${status}'=='False'    Fail      " IC states are not as Desired state "Configured" "

    ############ VERIFY THE ALERT MESSAGES on ACTIVITY PAGE ########################################
    ${Status}=   fusion_ui_verify_c7k_updatefirmwarealerts_inLI  @{TestData.Mlogicalconnect}[0]
    run keyword if    '${status}'=='False'    Fail      " Validation of alert messages are failed "
    ${Status}=   fusion_ui_verify_c7k_updatefirmwarealerts_inLI  @{TestData.Mlogicalconnect}[1]
    run keyword if    '${status}'=='False'    Fail      " Validation of alert messages are failed "

TC07 Verify the behavior of one view when Perform staging of one version (without activation) on one LI. Then do staging and activation of another image on All LIs
    Log To Console   "###############  Verify the behavior of one view when Perform staging of one version (without activation) on one LI. Then do staging and activation of another image on All LIs ############"
    [Documentation]    "1.3.1.1 Hill FW update LI: Verify the behavior of one view when Perform staging of one version (without activation) on one LI. Then do staging and activation of another image on All LIs"
    Log to Console     "Testcase_ID: TP section 1.3.1.1 F1212_TC_UI_09 --> Verify the behavior of one view when Perform staging of one version (without activation) on one LI. Then do staging and activation of another image on All LIs"
    Log To Console    ****Validation of  the interconnect states before  FW update triggers **********

    ${li_list_1} =   Create list     ${li_list_1}

    #################VERIFY IC STATE OF LI BEFORE UPGRADE #####################
    ${Status}=    fusion_ui_verify_ic_state_of_li      ${li_list_1}    ${Permissible_IC_STATES_BeforeUpdate}
    run keyword if    '${status}'=='False'    Fail      " IC states are not as Desired state "Configured" "

    ${li_list_2} =   Create list     ${li_list_2}

    #################VERIFY IC STATE OF LI BEFORE UPGRADE #####################
    ${Status}=    fusion_ui_verify_ic_state_of_li      ${li_list_2}    ${Permissible_IC_STATES_BeforeUpdate}
    run keyword if    '${status}'=='False'    Fail      " IC states are not as Desired state "Configured" "

    #################STAGING FIRMWARE on ICMS#####################

    ${Status}=    fusion_ui_update_firmware_logical_interconnect      @{TestData.MLIUpdate_firmware_ebb}[0]
    run keyword if    '${status}'=='False'    Fail      " Staging of firmware failed "

    ###### Stage and activate ###################
          #########STAGING ON MULTIPLE LIs #########
    ${Status}=    fusion_ui_update_firmware_logical_interconnect      @{TestData.MLI_Stag_activate_Update_firmware_ebb_2}[0]
    run keyword if    '${status}'=='False'    Fail      "Firmware activation of icms Failed"
    ${Status}=    fusion_ui_update_firmware_logical_interconnect      @{TestData.MLI_Stag_activate_Update_firmware_ebb_2}[2]
    run keyword if    '${status}'=='False'    Fail      "Firmware activation of icms Failed"
         #########ACTIVATE  ON MULTIPLE LIs #########
    ${Status}=    fusion_ui_update_firmware_logical_interconnect      @{TestData.MLI_Stag_activate_Update_firmware_ebb_2}[1]
    run keyword if    '${status}'=='False'    Fail      "Firmware activation of icms Failed"
    ${Status}=    fusion_ui_update_firmware_logical_interconnect      @{TestData.MLI_Stag_activate_Update_firmware_ebb_2}[3]
    run keyword if    '${status}'=='False'    Fail      "Firmware activation of icms Failed"

    #################VERIFY THE UI IC FIRMWARE VERSION and COMPARE with actual  IC version #####################
    ${Status}=    fusion_ui_verify_interconnect_firmware_from_li      ${li_list_1}      ${TestData.Mfirmware1}
    ${Status1}=    Get From List    ${Status}   0
    run keyword if    '${status1}'=='False'    Fail      " Validation of  interconnects firmware versions are failed "
    ${Status}=    fusion_ui_verify_interconnect_firmware_from_li      ${li_list_2}      ${TestData.Mfirmware2}
    ${Status1}=    Get From List    ${Status}   0
    run keyword if    '${status1}'=='False'    Fail      " Validation of  interconnects firmware versions are failed "

    #################VERIFY IC STATE OF LI AFTER UPGRADE #####################
    ${Status}=    fusion_ui_verify_ic_state_of_li      ${li_list_1}    ${Permissible_IC_STATES_AfterUpdate}
    run keyword if    '${status}'=='False'    Fail      " IC states are not as Desired state "Configured" "

    #################VERIFY IC STATE OF LI AFTER UPGRADE #####################
    ${Status}=    fusion_ui_verify_ic_state_of_li      ${li_list_2}    ${Permissible_IC_STATES_AfterUpdate}
    run keyword if    '${status}'=='False'    Fail      " IC states are not as Desired state "Configured" "

    ############ VERIFY THE ALERT MESSAGES on ACTIVITY PAGE ########################################
    ${Status}=   fusion_ui_verify_c7k_updatefirmwarealerts_inLI  @{TestData.Mlogicalconnect}[0]
    run keyword if    '${status}'=='False'    Fail      " Validation of alert messages are failed "
    ${Status}=    fusion_ui_verify_c7k_updatefirmwarealerts_inLI  @{TestData.Mlogicalconnect}[1]
    run keyword if    '${status}'=='False'    Fail      " Validation of alert messages are failed "




