*** Settings ** *
Documentation        Feature Test:  F702
...                  This set of test cases is to verify the feature F702 related to LLDP tagging
...
Variables              data_variables.py
# Suite Setup           Run FTS and test-specific setup
# Suite Teardown        Suite Teardown
Resource               ../../resources/resource.txt
Library                Collections
Library                json
Library                OperatingSystem
Library                Selenium2Library
Library                apic.py
Test Setup             KC Load Test Data

*** Variables ** *
${SSH_PASS}                     hpvse1
#${DataFile}                        ./OVAData.xml
${DataFile}         ./OVAData.xml
${APPLIANCE_IP}                10.10.2.159
#${X-API-VERSION}                201
${APIC_APPLIANCE_IP}            10.10.3.71
${li}                          SGH411DFYA-LIG1
${lig}                        LIG1
${RTtrue}                     True
${TLtrue}                     True
${RTfalse}                    False
${TLfalse}                    False
${LLDPEnabledIP}                     10.10.1.176
${LLDPDisabledIP}
${RECALCIP}                    10.10.1.240
${BAY}                1
${ACTIONOFF}        OFF
${ACTIONON}            ON
${DEVICE}                IOM
#${OA_HOST}            10.10.0.26
${OA_HOST}            10.10.2.11
${OA_USER}            Administrator
${OA_PASS}                Admin
${ICM_1}                        SGH411DFYA, interconnect 1
${ICM_2}                        SGH411DFYA, interconnect 2
${APIC_IPList_disabled}             10.10.1.240, 10.10.1.176
${APIC_IPList_enabled}        10.10.1.176
${APIC_IPList_Bay1Off}        10.10.1.240
${APIC_HOST}                     10.10.3.71
${APIC_USER}                    admin
${APIC_PASS}                    password
#${APIC_TOPOLOGY}               comp/prov-VMware/ctrlr-[HPVC-WPST-DVS]-10.10.3.74/hv-host-314
#${APIC_TOPOLOGY}               comp/prov-VMware/ctrlr-[HPVC-WPST-DVS]-10.10.3.74/hv-host-24
#${APIC_TOPOLOGY}               comp/prov-VMware/ctrlr-[HPVC-WPST-DVS]-10.10.3.74/hv-host-423
${APIC_TOPOLOGY}                comp/prov-VMware/ctrlr-[HPVC-WPST-DVS]-10.10.3.74/hv-host-436


*** Test Cases ** *

00 Appliance LogIn
    Fusion Api Login Appliance         ${APPLIANCE_IP}        ${admin_credentials}
    ${users} =    Get Variable Value    ${users}
    Run Keyword If    ${users} is not ${null}    Add Users from variable                ${users}
    ${ethernet_networks} =    Get Variable Value    ${ethernet_networks1}
    Run Keyword If    ${ethernet_networks1} is not ${null}    Add Ethernet Networks from variable    ${ethernet_networks1}

00 Create LIG, create enclosure group and import enclosure
   [Tags]  14
    ${body} =    Build LIG body      ${ligs['lig1']}
    ${resp} =    Fusion Api Create LIG    ${body}
    ${task} =    Wait For Task    ${resp}  60s 2s
    Add Enclosure Group from variable        ${enc_group}
    Add Enclosures from variable   ${encs}

00 Create server profile and ping blade
    [Tags]  15
    Power off ALL servers
    ${profiles} =    Copy List     ${server_profiles}
    Add Server Profiles from variable    ${profiles}
    Power on server      SGH411DFYA, bay 6
    Log to console and logfile      Waiting 10 minutes for server to boot...
    Sleep   10min
    #Wait For Appliance To Become Pingable   10.10.2.31

01 Edit LIG - EnableRichTLV EnableTaggedLldp - Update from Group - Validate LLDP Ip Address
    Edit LIG    ${ligs['ligTT']}    ${li}    ${LLDPEnabledIP}    ${TLtrue}    ${RTtrue}
    Validate Interconnects            ${ICM_1}        ${TLtrue}        ${TLtrue}        ${LLDPEnabledIP}
    Validate Interconnects            ${ICM_2}        ${TLtrue}        ${TLtrue}        ${LLDPEnabledIP}

    #Verifying APIC Level Changes
    ${status}=            APIC LogIn and Validate Topology                  ${APIC_APPLIANCE_IP}          ${apic_admin_credentials}     ${APIC_TOPOLOGY}      ${APIC_IPList_enabled}
    run keyword if  '${status}'=='False'    Fail    'Toplogy did not match'

    #Verify Leaf validateions
    ${status} =    leaf_validate   @{Testdata.switches_taggedenabled}
    run keyword if    '${status}' == 'False'    Fail    'Management Ip Address mismatch at Leaf switch"


02 Edit LIG - DisbableRichTLV EnableTaggedLldp - Update from Group - Validate LLDP Ip Address
'enableRichTLV': False,'enableTaggedLldp': True
    Edit LIG    ${ligs['ligFT']}    ${li}    ${LLDPEnabledIP}    ${TLtrue}    ${RTfalse}
    Validate Interconnects            ${ICM_1}        ${TLtrue}        ${RTfalse}        ${LLDPEnabledIP}
    Validate Interconnects            ${ICM_2}        ${TLtrue}        ${RTfalse}        ${LLDPEnabledIP}
    #Verifying APIC Level Changes
    ${status}=            APIC LogIn and Validate Topology                  ${APIC_APPLIANCE_IP}          ${apic_admin_credentials}     ${APIC_TOPOLOGY}      ${APIC_IPList_enabled}
    run keyword if  '${status}'=='False'    Fail    'Toplogy did not match'
    ${status} =    leaf_validate   @{Testdata.switches_taggedenabled}
    run keyword if    '${status}' == 'False'    Fail    'Management Ip Address mismatch at Leaf switch"

03 Edit LIG - EnableRichTLV DisableTaggedLldp - Update from Group - Validate LLDP Ip Address
#'enableRichTLV': True,'enableTaggedLldp': False
    Edit LIG    ${ligs['ligTF']}    ${li}    ${LLDPDisabledIP}    ${TLfalse}    ${RTtrue}
    Validate Interconnects            ${ICM_1}        ${TLfalse}        ${RTtrue}        ${LLDPDisabledIP}
    Validate Interconnects            ${ICM_2}        ${TLfalse}        ${RTtrue}        ${LLDPDisabledIP}
    ${status} =    leaf_validate   @{Testdata.switches_taggeddisabled}
    run keyword if    '${status}' == 'False'    Fail    'Management Ip Address mismatch at Leaf switch"

04 Edit LIG - DisableRichTLV DisableTaggedLldp - Update from Group - Validate LLDP Ip Address
    Edit LIG    ${ligs['ligFF']}    ${li}    ${LLDPDisabledIP}    ${TLfalse}    ${RTfalse}
    Validate Interconnects            ${ICM_1}        ${TLfalse}        ${RTfalse}        ${LLDPDisabledIP}
    Validate Interconnects            ${ICM_2}        ${TLfalse}        ${RTfalse}        ${LLDPDisabledIP}
    ${status} =    leaf_validate   @{Testdata.switches_taggeddisabled}
    run keyword if    '${status}' == 'False'    Fail    'Management Ip Address mismatch at Leaf switch"

05 Edit LI - EnableRichTLV EnableTaggedLldp - Validate LLDP Ip Address
    Edit LI        ${li}    ${li_set1}        ${LLDPEnabledIP}    ${TLtrue}    ${RTtrue}
    Validate Interconnects            ${ICM_1}        ${TLtrue}        ${RTtrue}        ${LLDPEnabledIP}
    Validate Interconnects            ${ICM_2}        ${TLtrue}        ${RTtrue}        ${LLDPEnabledIP}
    #Verifying APIC Level Changes
    ${status}=            APIC LogIn and Validate Topology                  ${APIC_APPLIANCE_IP}          ${apic_admin_credentials}     ${APIC_TOPOLOGY}      ${APIC_IPList_enabled}
    run keyword if  '${status}'=='False'    Fail    'Toplogy did not match'
    ${status} =        leaf_validate   @{Testdata.switches_taggedenabled}
    run keyword if    '${status}' == 'False'    Fail    'Management Ip Address mismatch at Leaf switch"

06 Edit LI - Disable RichTLV EnableTaggedLldp - Validate LLDP Ip Address
    Edit LI        ${li}    ${li_set2}        ${LLDPEnabledIP}    ${TLtrue}    ${RTfalse}
    Validate Interconnects            ${ICM_1}        ${TLtrue}        ${RTfalse}        ${LLDPEnabledIP}
    Validate Interconnects            ${ICM_2}        ${TLtrue}        ${RTfalse}        ${LLDPEnabledIP}
    #Verifying APIC Level Changes
    ${status}=            APIC LogIn and Validate Topology                  ${APIC_APPLIANCE_IP}          ${apic_admin_credentials}     ${APIC_TOPOLOGY}      ${APIC_IPList_enabled}
    run keyword if  '${status}'=='False'    Fail    'Toplogy did not match'
    ${status} =        leaf_validate   @{Testdata.switches_taggedenabled}
    run keyword if    '${status}' == 'False'    Fail    'Management Ip Address mismatch at Leaf switch"

07 Edit LI - EnableRichTLV DisableTaggedLldp - Validate LLDP Ip Address
    Edit LI        ${li}    ${li_set3}        ${LLDPDisabledIP}    ${TLfalse}    ${RTtrue}
    Validate Interconnects            ${ICM_1}        ${TLfalse}        ${RTtrue}        ${LLDPDisabledIP}
    Validate Interconnects            ${ICM_2}        ${TLfalse}        ${RTtrue}        ${LLDPDisabledIP}
    ${status} =    leaf_validate   @{Testdata.switches_taggeddisabled}
    run keyword if    '${status}' == 'False'    Fail    'Management Ip Address mismatch at Leaf switch"

08 Edit LI - DisableRichTLV DisableTaggedLldp - Validate LLDP Ip Address
    Edit LI        ${li}    ${li_set4}        ${LLDPDisabledIP}    ${TLfalse}    ${RTfalse}
    Validate Interconnects            ${ICM_1}        ${TLfalse}        ${RTfalse}        ${LLDPDisabledIP}
    Validate Interconnects            ${ICM_2}        ${TLfalse}        ${RTfalse}        ${LLDPDisabledIP}
    ${status} =    leaf_validate   @{Testdata.switches_taggeddisabled}
    run keyword if    '${status}' == 'False'    Fail    'Management Ip Address mismatch at Leaf switch"

09 Previleges validation NetworkAdmin
    Fusion Api Login Appliance         ${APPLIANCE_IP}        ${network_admin}
    Log to console and logfile         Trying to Edit LIGandLI as NetworkAdmin user Should be allowed
    Edit LIG    ${ligs['ligTT']}    ${li}    ${LLDPEnabledIP}    ${TLtrue}    ${RTtrue}
    #Verifying APIC Level Changes
    ${status}=            APIC LogIn and Validate Topology                  ${APIC_APPLIANCE_IP}          ${apic_admin_credentials}     ${APIC_TOPOLOGY}      ${APIC_IPList_enabled}
    run keyword if  '${status}'=='False'    Fail    'Toplogy did not match'

    ${status} =    leaf_validate   @{Testdata.switches_taggedenabled}
    run keyword if    '${status}' == 'False'    Fail    'Management Ip Address mismatch at Leaf switch"

    Edit LI        ${li}    ${li_set1}        ${LLDPEnabledIP}    ${TLtrue}    ${RTtrue}
    Fusion Api Logout Appliance
    #Verifying APIC Level Changes
    ${status}=            APIC LogIn and Validate Topology                  ${APIC_APPLIANCE_IP}          ${apic_admin_credentials}     ${APIC_TOPOLOGY}      ${APIC_IPList_enabled}
    run keyword if  '${status}'=='False'    Fail    'Toplogy did not match'
    ${status} =    leaf_validate   @{Testdata.switches_taggedenabled}
    run keyword if    '${status}' == 'False'    Fail    'Management Ip Address mismatch at Leaf switch"
    Log to console and logfile    \nSuccessfully Validated NetworkAdmin EditLIandEditLIG with Taggedlldp User has privilege

10 Previleges validation StorageAdmin
    Fusion Api Login Appliance         ${APPLIANCE_IP}        ${storage_admin}
    ${body} =    Build LIG body      ${ligs['ligTT']}
    Log to console and logfile         Trying to Edit LIG for storageAdmin user Should not be allowed
    ${lig} =         Get LIG Member      ${LIG1}
    ${lig_uri} =    Get LIG Uri         ${LIG1}
    ${resp} =     Fusion Api Edit LIG    body=${body}        uri=${lig_uri}
    ${valDict} =     Create Dictionary    status_code=${401}
    Validate Response    ${resp}    ${valDict}
    Log to console and logfile    \nSuccessfully StorageAdmin EditLIG with Taggedlldp User has no privilege
    Log to console and logfile         \nTrying to Edit LI for storageAdmin user Should not be allowed
    ${body} =    Build LI body    ${li_set1}
    ${li_uri} =     Get LI URI   ${li}
    ${resp} =     Fusion Api Get Li    ${li_uri}
    Log   ${resp}
    ${es} =     Get From Dictionary        ${resp}    ethernetSettings
    ${uri} =     Get From Dictionary        ${es}        uri
    ${id} =     Get From Dictionary        ${es}        id
    Log        ${id}
    Set to Dictionary    ${body}    id    ${id}
    Log   ${body}
    ${resp1} =     Fusion Api Update LI Ethernet Settings    body=${body}        uri=${li_uri}
    ${valDict} =     Create Dictionary    status_code=${401}
    Validate Response    ${resp1}    ${valDict}
    Log to console and logfile    \nSuccessfully Validated StorageAdmin EditLI with Taggedlldp User has no privilege
    Fusion Api Logout Appliance

11 Previleges validation ServerAdmin
    Fusion Api Login Appliance         ${APPLIANCE_IP}        ${server_admin}
    ${body} =   Build LIG body      ${ligs['ligTT']}
    Log to console and logfile         Trying to Edit LIG for serverAdmin user Should not be allowed
    ${lig} =         Get LIG Member      ${LIG1}
    ${lig_uri} =    Get LIG Uri         ${LIG1}
    ${resp} =     Fusion Api Edit LIG    body=${body}        uri=${lig_uri}
    ${valDict} =     Create Dictionary    status_code=${401}
    Validate Response    ${resp}    ${valDict}
    Log to console and logfile    \nSuccessfully serverAdmin EditLIG with Taggedlldp User has no privilege
    Log to console and logfile         \nTrying to Edit LI for serverAdmin user Should not be allowed
    ${body} =    Build LI body    ${li_set1}
    ${li_uri} =     Get LI URI   ${li}
    ${resp} =     Fusion Api Get Li    ${li_uri}
    Log   ${resp}
    ${es} =     Get From Dictionary        ${resp}    ethernetSettings
    ${uri} =     Get From Dictionary        ${es}        uri
    ${id} =     Get From Dictionary        ${es}        id
    Log        ${id}
    Set to Dictionary    ${body}    id    ${id}
    Log   ${body}
    ${resp1} =     Fusion Api Update LI Ethernet Settings    body=${body}        uri=${li_uri}
    ${valDict} =     Create Dictionary    status_code=${401}
    Validate Response    ${resp1}    ${valDict}
    Log to console and logfile    \nSuccessfully Validated serverAdmin EditLI with Taggedlldp User has no privilege
    Fusion Api Logout Appliance

12 Previleges validation backupAdmin
    Fusion Api Login Appliance         ${APPLIANCE_IP}        ${backup_admin}
    ${body} =   Build LIG body      ${ligs['ligTT']}
    Log to console and logfile         Trying to Edit LIG for backupAdmin user Should not be allowed
    ${lig} =         Get LIG Member      ${LIG1}
    ${lig_uri} =    Get LIG Uri         ${LIG1}
    ${resp} =     Fusion Api Edit LIG    body=${body}        uri=${lig_uri}
    ${valDict} =     Create Dictionary    status_code=${401}
    Validate Response    ${resp}    ${valDict}
    Log to console and logfile    \nSuccessfully backupAdmin EditLIG with Taggedlldp User has no privilege
    Log to console and logfile         \nTrying to Edit LI for backupAdmin user Should not be allowed
    ${body} =    Build LI body    ${li_set1}
    ${li_uri} =     Get LI URI   ${li}
    ${resp} =     Fusion Api Get Li    ${li_uri}
    Log   ${resp}
    ${es} =     Get From Dictionary        ${resp}    ethernetSettings
    ${uri} =     Get From Dictionary        ${es}        uri
    ${id} =     Get From Dictionary        ${es}        id
    Log        ${id}
    Set to Dictionary    ${body}    id    ${id}
    Log   ${body}
    ${resp1} =     Fusion Api Update LI Ethernet Settings    body=${body}        uri=${li_uri}
    ${valDict} =     Create Dictionary    status_code=${401}
    Validate Response    ${resp1}    ${valDict}
    Log to console and logfile    \nSuccessfully Validated backupAdmin EditLI with Taggedlldp User has no privilege
    Fusion Api Logout Appliance

13 Power_Offinterconnect and verify the Recalculated Ip being updated
    Fusion Api Login Appliance         ${APPLIANCE_IP}        ${admin_credentials}
    OA CLI POWEROFF    ${OA_HOST}    ${OA_USER}    ${OA_PASS}   INTERCONNECT    ${BAY}
    Log to Console  Waiting for interconnect claim process to complete
    Sleep    3 minutes 10 seconds
    Edit LI        ${li}    ${li_set1}        ${RECALCIP}    ${TLtrue}    ${RTtrue}
    Log to Console    Validating interconnects
    Validate Interconnects            ${ICM_1}        ${TLtrue}        ${RTtrue}        ${RECALCIP}
    Validate Interconnects            ${ICM_2}        ${TLtrue}        ${RTtrue}        ${RECALCIP}
    ${status}=                leaf_validate            @{Testdata.switches_poweroffbay1}
    run keyword if    '${status}'=='False'    Fail    'Management Ip Address mismatch at Leaf switch"
    Edit LI        ${li}    ${li_set4}        ${LLDPDisabledIP}    ${TLfalse}    ${TLfalse}
    Validate Interconnects            ${ICM_1}        ${TLfalse}        ${TLfalse}        ${LLDPDisabledIP}
    Validate Interconnects            ${ICM_2}        ${TLfalse}        ${TLfalse}        ${LLDPDisabledIP}

    #Verifying Leaf Validations
    ${status}=                leaf_validate            @{Testdata.switches_poweroffbay1}
    run keyword if    '${status}'=='False'    Fail    'Management Ip Address mismatch at Leaf switch"
    Log to Console    Verfied Re-Calculated Ip after Power OFF completed at LI and interconnects


14 Power_ON interconnect and verify the Recalculated Ip being updated
    OA CLI POWERON    ${OA_HOST}    ${OA_USER}    ${OA_PASS}   INTERCONNECT    ${BAY}
    Log to Console  Waiting for interconnect claim process to complete
    Sleep    3 minutes 10 seconds
    Edit LI        ${li}    ${li_set1}        ${LLDPEnabledIP}    ${TLtrue}    ${RTtrue}
    Validate Interconnects            ${ICM_1}        ${TLtrue}        ${RTtrue}        ${LLDPEnabledIP}
    Validate Interconnects            ${ICM_2}        ${TLtrue}        ${RTtrue}        ${LLDPEnabledIP}

    #Verifying APIC Level Changes
    ${status}=            APIC LogIn and Validate Topology                  ${APIC_APPLIANCE_IP}          ${apic_admin_credentials}     ${APIC_TOPOLOGY}      ${APIC_IPList_enabled}
    run keyword if  '${status}'=='False'    Fail    'Toplogy did not match'
    ${status}=                leaf_validate            @{Testdata.switches_taggedenabled}
    run keyword if    '${status}'=='False'    Fail    'Management Ip Address mismatch at Leaf switch"
    Edit LI        ${li}    ${li_set4}        ${LLDPDisabledIP}    ${TLfalse}    ${RTfalse}
    Validate Interconnects            ${ICM_1}        ${TLfalse}        ${RTfalse}        ${LLDPDisabledIP}
    Validate Interconnects            ${ICM_2}        ${TLfalse}        ${RTfalse}        ${LLDPDisabledIP}
    ${status}=                leaf_validate            @{Testdata.switches_taggeddisabled}
    run keyword if    '${status}'=='False'    Fail    'Management Ip Address mismatch at Leaf switch"
    Log to Console    Verfied Re-Calculated Ip after Power ON completed

15 Efuse_Off interconnect and verify the Recalculated Ip being updated
    Log to Console    Enabling Tagged LLDP at LI before EfuseOFF Action
    Edit LI        ${li}    ${li_set1}        ${LLDPEnabledIP}    ${TLtrue}    ${RTtrue}
    Validate Interconnects            ${ICM_1}        ${TLtrue}        ${RTtrue}        ${LLDPEnabledIP}
    Validate Interconnects            ${ICM_2}        ${TLtrue}        ${RTtrue}        ${LLDPEnabledIP}
    #Verifying APIC Level Changes
    ${status}=            APIC LogIn and Validate Topology                  ${APIC_APPLIANCE_IP}          ${apic_admin_credentials}     ${APIC_TOPOLOGY}      ${APIC_IPList_enabled}
    run keyword if  '${status}'=='False'    Fail    'Toplogy did not match'
    ${status}=                leaf_validate            @{Testdata.switches_taggedenabled}
    run keyword if    '${status}'=='False'    Fail    'Management Ip Address mismatch at Leaf switch"
    Log to Console        \nPerforming Efuse OFF
    OA CLI EFUSE        ${OA_HOST}    ${OA_USER}        ${OA_PASS}    ${DEVICE}    ${BAY}    ${ACTIONOFF}
    Sleep    3 minutes 10 seconds
    Fusion Api Login Appliance         ${APPLIANCE_IP}        ${admin_credentials}
    ValidateLI LLDP Ip Address    ${li}    ${RECALCIP}
    ValidateLI TaggedLLDP and RICH TLV    ${li}    ${TLtrue}    ${RTtrue}
    Validate Interconnects            ${ICM_1}        ${TLtrue}        ${RTtrue}        ${RECALCIP}
    Validate Interconnects            ${ICM_2}        ${TLtrue}        ${RTtrue}        ${RECALCIP}
    ${status}=                leaf_validate            @{Testdata.switches_poweroffbay1}
    run keyword if    '${status}'=='False'    Fail    'Management Ip Address mismatch at Leaf switch"
    Log to Console    \n Successfully Verfied Re-Calculated Ip after Efuse OFF


16 EFUSE_ON interconnect and verify the Ip being updated
    Log to Console    Enabling Tagged LLDP at LI before EfuseON Action
    OA CLI EFUSE        ${OA_HOST}    ${OA_USER}        ${OA_PASS}    ${DEVICE}    ${BAY}    ${ACTIONON}
    Sleep    3 minutes 10 seconds
    Fusion Api Login Appliance         ${APPLIANCE_IP}        ${admin_credentials}
    ValidateLI LLDP Ip Address    ${li}    ${LLDPEnabledIP}
    ValidateLI TaggedLLDP and RICH TLV    ${li}    ${TLtrue}    ${RTtrue}
    Log to Console    \n Successfully Verfied LLDPIp after Efuse ON completed
    Edit LI        ${li}    ${li_set1}        ${LLDPEnabledIP}    ${TLtrue}    ${RTtrue}
    Validate Interconnects            ${ICM_1}        ${TLtrue}        ${RTtrue}        ${LLDPEnabledIP}
    Validate Interconnects            ${ICM_2}        ${TLtrue}        ${RTtrue}        ${LLDPEnabledIP}
    ${status}=                leaf_validate            @{Testdata.switches_taggedenabled}
    run keyword if    '${status}'=='False'    Fail    'Management Ip Address mismatch at Leaf switch"
    #Verifying APIC Level Changes
    ${status}=            APIC LogIn and Validate Topology                  ${APIC_APPLIANCE_IP}          ${apic_admin_credentials}     ${APIC_TOPOLOGY}      ${APIC_IPList_enabled}
    run keyword if  '${status}'=='False'    Fail    'Toplogy did not match'

    Edit LI        ${li}    ${li_set4}        ${LLDPDisabledIP}    ${TLfalse}    ${RTfalse}
    Validate Interconnects            ${ICM_1}        ${TLfalse}        ${RTfalse}        ${LLDPDisabledIP}
    Validate Interconnects            ${ICM_2}        ${RTfalse}        ${RTfalse}        ${LLDPDisabledIP}
    #Verifying Leaf Validate
    ${status}=                leaf_validate            @{Testdata.switches_taggeddisabled}
    run keyword if    '${status}'=='False'    Fail    'Management Ip Address mismatch at Leaf switch"
    Log to Console    \nSuccessfully Verfied  Ip is updated after Efuse ON completed

    Edit LIG    ${ligs['ligTT']}    ${li}    ${LLDPEnabledIP}    ${TLtrue}    ${RTtrue}
    Validate Interconnects            ${ICM_1}        ${TLtrue}        ${RTtrue}        ${LLDPEnabledIP}
    Validate Interconnects            ${ICM_2}        ${TLtrue}        ${RTtrue}        ${LLDPEnabledIP}

    #Verifying APIC Level Changes
    ${status}=            APIC LogIn and Validate Topology                  ${APIC_APPLIANCE_IP}          ${apic_admin_credentials}     ${APIC_TOPOLOGY}      ${APIC_IPList_enabled}
    run keyword if  '${status}'=='False'    Fail    'Toplogy did not match'

    ${status}=                leaf_validate            @{Testdata.switches_taggedenabled}
    run keyword if    '${status}'=='False'    Fail    'Management Ip Address mismatch at Leaf switch"17 Firmware downgrade verify lldp ip address does not perculate when tagged lldp is enabled

    Edit LI        ${li}    ${li_set1}        ${LLDPEnabledIP}    ${TLtrue}    ${RTtrue}
    Validate Interconnects            ${ICM_1}        ${TLtrue}        ${TLtrue}        ${LLDPEnabledIP}
    Validate Interconnects            ${ICM_2}        ${TLtrue}        ${TLtrue}        ${LLDPEnabledIP}

    #Verifying APIC Level Changes
    ${status}=            APIC LogIn and Validate Topology                  ${APIC_APPLIANCE_IP}          ${apic_admin_credentials}     ${APIC_TOPOLOGY}      ${APIC_IPList_enabled}
    run keyword if  '${status}'=='False'    Fail    'Toplogy did not match'

    ${status}=                leaf_validate            @{Testdata.switches_taggedenabled}
    run keyword if    '${status}'=='False'    Fail    'Management Ip Address mismatch at Leaf switch"


17 Firmware downgrade verify lldp ip address does not perculate when tagged lldp is enabled
    Fusion Api Login Appliance         ${APPLIANCE_IP}        ${admin_credentials}
    ${body} =     Build LI SPP body    ${li_spp_downgrade}
    Log     ${body}
    ${li_uri} =     Get LI URI   ${li}
    ${resp1} =     Fusion Api Li Upgrade Firmware    body=${body}        uri=${li_uri}
    Log        ${resp1}
    ${task} =        Wait For Task     ${resp1}     30 min        15s
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}
    Log to Console    Firmware Downgrade to 4.3 complete
    Log to Console    Verify Un-supported firmware version does not perculate the lldp ipaddress even if tagged lldp is enabled
    Edit LI        ${li}    ${li_set1}        ${LLDPDisabledIP}    ${TLtrue}    ${RTtrue}
    Validate Interconnects            ${ICM_1}        ${TLtrue}        ${RTtrue}        ${LLDPDisabledIP}
    Validate Interconnects            ${ICM_2}        ${TLtrue}        ${RTtrue}        ${LLDPDisabledIP}

    ${status}=                leaf_validate            @{Testdata.switches_taggeddisabled}
    run keyword if    '${status}'=='False'    Fail    'Management Ip Address mismatch at Leaf switch"


18 Firmware upgrade to 4.5 verify lldp ip address perculates when tagged lldp is enabled
    Fusion Api Login Appliance         ${APPLIANCE_IP}        ${admin_credentials}
    ${body} =     Build LI SPP body    ${li_spp_upgrade}
    Log     ${body}
    ${li_uri} =     Get LI URI   ${li}
    ${resp1} =     Fusion Api Li Upgrade Firmware    body=${body}        uri=${li_uri}
    Log        ${resp1}
    ${task} =        Wait For Task     ${resp1}     30 min        15s
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}
    Log to Console    \nFirmware Upgrade to 4.5 complete
    Sleep    1 minutes 1 seconds
    Log to Console    \nVerify LLDP IpAdress perculated automatically after upgrade
    ValidateLI LLDP Ip Address        ${li}    ${LLDPEnabledIP}
    Log to Console    Enable tagged LLDP and Verify LLDP IpAdress perculated in right manner
    Edit LI        ${li}    ${li_set1}        ${LLDPEnabledIP}    ${TLtrue}    ${RTtrue}
    Validate Interconnects            ${ICM_1}        ${TLtrue}        ${RTtrue}        ${LLDPEnabledIP}
    Validate Interconnects            ${ICM_2}        ${TLtrue}        ${RTtrue}        ${LLDPEnabledIP}
    #Verifying APIC Level Changes
    ${status}=            APIC LogIn and Validate Topology                  ${APIC_APPLIANCE_IP}          ${apic_admin_credentials}     ${APIC_TOPOLOGY}      ${APIC_IPList_enabled}
    run keyword if    '${status}'=='False'    Fail    'Toplogy did not match'
    ${status}=                leaf_validate            @{Testdata.switches_taggedenabled}
    run keyword if    '${status}'=='False'    Fail    'Management Ip Address mismatch at Leaf switch"
    Log to Console    Disable tagged LLDP and Verify LLDP IpAdress is set as blank
    Fusion Api Login Appliance         ${APPLIANCE_IP}        ${admin_credentials}
    Edit LI        ${li}    ${li_set4}        ${LLDPDisabledIP}    ${TLfalse}    ${TLfalse}
    Validate Interconnects            ${ICM_1}        ${TLfalse}        ${TLfalse}        ${LLDPDisabledIP}
    Validate Interconnects            ${ICM_2}        ${TLfalse}        ${TLfalse}        ${LLDPDisabledIP}
    ${status}=                leaf_validate            @{Testdata.switches_taggeddisabled}
    run keyword if    '${status}'=='False'    Fail    'Management Ip Address mismatch at Leaf switch"

    Fusion Api Logout Appliance

*** Keywords ***

KC Load Test Data
    Set Log Level    TRACE
    Load Test Data  ${DataFile}

Build LI SPP body
    [Arguments]        ${li_spp}
    ${liedit} =     Copy Dictionary    ${li_spp}
    ${command} =                       Get Variable Value  ${li_spp['command']}
    ${sppUri} =           Get Variable Value  ${li_spp['sppUri']}
    ${force} =              Get Variable Value  ${li_spp['force']}
    ${body} =     Create Dictionary                command=${command}
    ...                                         sppUri=${sppUri}
    ...                                         force=${force}
    ...
    [Return]    ${body}

APIC INVENTORY SYNC
    [Documentation]    issues a inventory synch at APIC appliance
    [Arguments]           ${APIC_HOST}    ${APIC_USER}        ${APIC_PASS}
    Open Connection     ${APIC_HOST}     timeout=20s
    Login               ${APIC_USER}     ${APIC_PASS}
    Write    cd /aci/vm-networking/policies/vmware/vmm-domains/HPVC-WPST-DVS/controllers/10.10.3.74
    Write    bash
    Read Until    admin@apic1:10.10.3.74>
    Write    moset inventory-trigger-state triggered
    Sleep         10secs
    Log to console and logfile            Triggering inventory re-synch at APIC nodes
    Write    moconfig commit
    Sleep         15secs
    Close All Connections
    Sleep         120secs

APIC LogIn and Validate Topology
    [Arguments]     ${APIC_APPLIANCE_IP}        ${apic_admin_credentials}       ${APIC_TOPOLOGY}        ${NODE_IP}
    APIC INVENTORY SYNC             ${APIC_HOST}    ${APIC_USER}        ${APIC_PASS}
    Log to console      Wait time for APIC to reflect CRM changes
    ${token} =      loginApic       ${APIC_APPLIANCE_IP}        ${apic_admin_credentials}
    ${apic_ip} =    Get Variable Value  ${apic_ip}
    ${status} =    validate_Apic_topology    ${APIC_APPLIANCE_IP}        ${token}    ${APIC_TOPOLOGY}     ${NODE_IP}
    [Return]    ${status}

Edit LIG
    [Arguments]        ${lig}    ${li}    ${LLDPIP}    ${ltlv}    ${rtlv}
    Fusion Api Login Appliance         ${APPLIANCE_IP}        ${admin_credentials}
    ${body} =    Build LIG body    ${lig}
    Log to console and logfile    ${body}
    ${lig} =         Get LIG Member      ${LIG1}
    Log to console and logfile    \n${lig}
    ${lig_uri} =    Get LIG Uri        ${LIG1}
    Log to console and logfile    \n${lig_uri}
    ${resp} =     Fusion Api Edit LIG    body=${body}        uri=${lig_uri}
    Log to console and logfile    \n\n${resp}
    ${task} =    Wait For Task     ${resp}     120s
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}
    Perform an Update From Group    ${li}    120 min        1 min
    ValidateLI LLDP Ip Address    ${li}    ${LLDPIP}
    ValidateLI TaggedLLDP and RICH TLV    ${li}    ${ltlv}    ${rtlv}

ValidateLI LLDP Ip Address
    [Arguments]        ${li}    ${LLDPIP}
    ${li_uri} =     Get LI URI   ${li}
    ${resp} =     Fusion Api Get Li    ${li_uri}
    ${es} =     Get From Dictionary        ${resp}    ethernetSettings
    ${ip} =     Get From Dictionary        ${es}    lldpIpv4Address
    ${status} =    Should Be Equal    ${ip}    ${LLDPIP}
    run keyword if    '${status}'=='False'    Fail    "LLDP Ip Address is not calculated in correct manner"

ValidateLI TaggedLLDP and RICH TLV
    [Arguments]        ${li}    ${ltlv}    ${rtlv}
    ${li_uri} =     Get LI URI   ${li}
    ${getresp} =     Fusion Api Get Li    ${li_uri}
    Log        ${getresp}
    ${es} =     Get From Dictionary        ${getresp}    ethernetSettings
    ${LLDPTLV} =     Get From Dictionary        ${es}    enableTaggedLldp
    ${RichTLV} =     Get From Dictionary        ${es}    enableRichTLV
    Should Be Equal As Strings    ${ltlv}    ${LLDPTLV}
    Should Be Equal As Strings    ${rtlv}    ${RichTLV}

Get IC
    [Arguments]        ${ICM_NAME}
    ${resp} =   fusion api get interconnect
    Log        ${resp}
    ${ics} =     Get From Dictionary     ${resp}    members
    ${l} =     Get Length    ${ics}
    :FOR    ${x}    IN RANGE    0    ${l}
    \   ${ic} =     Get From List   ${ics}    ${x}
    \     Exit For Loop If     '${ic['name']}' == '${ICM_NAME}'
    [Return]    ${ic}
    Log        ${ic}

Validate Interconnects
    [Arguments]        ${ICM_NAME}        ${ltlv}        ${rtlv}        ${LLDPIP}
    Log to console and logfile    Validating Interconnects for LLDP and taggedTLV and RichTLV flags
    ${ic} =     Get IC        ${ICM_NAME}
    ${enableRichTLV} =             Get From IC    ${ic}   enableRichTLV
    ${enableTaggedLldp} =         Get From IC    ${ic}   enableTaggedLldp
    ${lldpip} =                Get from IC     ${ic}        lldpIpv4Address
    Should be Equal as Strings    ${enableRichTLV}        ${rtlv}
    Should be Equal as Strings    ${enableTaggedLldp}        ${ltlv}
    Should be Equal as Strings    ${lldpip}        ${LLDPIP}

Perform an Update From Group
    [Arguments]        ${li}=${LE}-${LIG1}    ${timeout}=5 min     ${interval}=15s
    ${li_uri} =    Get LI URI    ${li}
    ${resp} =         Fusion Api Update from group    ${li_uri}
    ${task} =        Wait For Task     ${resp}     ${timeout}        ${interval}
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}

Edit LI
    [Arguments]        ${li}    ${li_set1}    ${LLDPIP}    ${ltlv}        ${rtlv}
    Fusion Api Login Appliance         ${APPLIANCE_IP}        ${admin_credentials}
    ${body} =    Build LI body    ${li_set1}
    ${li_uri} =     Get LI URI   ${li}
    ${resp} =     Fusion Api Get Li    ${li_uri}
    Log   ${resp}
    ${es} =     Get From Dictionary        ${resp}    ethernetSettings
    ${uri} =     Get From Dictionary        ${es}        uri
    ${id} =     Get From Dictionary        ${es}        id
    Log        ${id}
    Set to Dictionary    ${body}    id    ${id}
    Log   ${body}
    ${resp1} =     Fusion Api Update LI Ethernet Settings    body=${body}        uri=${li_uri}
    Log   ${resp1}
    ${task} =    Wait For Task     ${resp1}     120s
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}
    ValidateLI LLDP Ip Address    ${li}    ${LLDPIP}
    ValidateLI TaggedLLDP and RICH TLV    ${li}    ${ltlv}    ${rtlv}

Build LI body
    [Arguments]        ${liedit}
    ${liedit} =     Copy Dictionary    ${liedit}
    ${type} =                       Get Variable Value  ${liedit['type']}
    ${enableRichTLV} =           Get Variable Value  ${liedit['enableRichTLV']}
    ${enableTaggedLldp} =              Get Variable Value  ${liedit['enableTaggedLldp']}
    ${body} =     Create Dictionary                type=${type}
    ...                                         enableRichTLV=${enableRichTLV}
    ...                                         enableTaggedLldp=${enableTaggedLldp}
    ...
    [Return]    ${body}

SSH to host and ping x
    [Documentation]    SSH's to a given host, then pings an IP from that host
    [Arguments]           ${HOST}    ${HOST2}
    Open Connection And Log In      ${HOST}
    ${Output}=    Execute Command    ping -c 4 ${HOST2}    return_stdout=True    return_rc=False
    Log to console and logfile    ${Output}
    Should Contain    ${Output}    ttl=
    Close All Connections

Add LIG from variable
    [Documentation]    Adds an LIG to an appliance from a variable which contains a list of dicts with the entire payload
    [Arguments]        ${ligx}
    Log       Adding LIG ${ligx}
    ${ligx} =     Copy Dictionary    ${ligs['${ligx}']}

    ${name} =                       Get Variable Value  ${ligx['name']}
    ${enclosureIndexes} =           Get Variable Value  ${ligx['enclosureIndexes']}
    ${enclosureType} =              Get Variable Value  ${ligx['enclosureType']}
    ${ethernetSettings} =           Get Variable Value  ${ligx['ethernetSettings']}
    ${fcoeSettings} =               Get Variable Value  ${ligx['fcoeSettings']}
    ${internalNetworkUris} =        Get Variable Value  ${ligx['internalNetworkUris']}
    ${interconnectBaySet} =         Get Variable Value  ${ligx['interconnectBaySet']}
    ${interconnectMapTemplate} =    Get Variable Value  ${ligx['interconnectMapTemplate']}
    ${qosConfiguration} =           Get Variable Value  ${ligx['qosConfiguration']}
    ${redundancyType} =             Get Variable Value  ${ligx['redundancyType']}
    ${stackingMode} =               Get Variable Value  ${ligx['stackingMode']}
    ${telemetryConfiguration} =     Get Variable Value  ${ligx['telemetryConfiguration']}
    ${snmpConfiguration} =          Get Variable Value  ${ligx['snmpConfiguration']}
    ${uplinkSets} =                 Get Variable Value  ${ligx['uplinkSets']}
    #${uplinkSets} =     Copy List    ${ligx['uplinkSets']}
    ${l} =     Get Length    ${uplinkSets}


    :FOR    ${x}    IN RANGE    0    ${l}
    \    ${networkType} =     Get From Dictionary     ${uplinkSets[${x}]}    networkType
    \    ${networks} =         Get From Dictionary        ${uplinkSets[${x}]}    networkUris
    \   ${nativeNetworkUri} =   Get Variable Value     ${uplinkSets[${x}]['nativeNetworkUri']}
    \     Run Keyword If     '${networkType}' == 'FibreChannel'    Continue For Loop
    #\    ${networkUris} =     Get FCoE Uris    ${networks}
    #\   ${ethernetUris} =   Get Ethernet URIs   ${networks}
    #\   ${networkUris} =    combine lists   ${networkUris}  ${ethernetUris}
    \    ${networkUris} =     Get Ethernet URIs    ${networks}
    \    Set to dictionary    ${uplinkSets[${x}]}    networkUris        ${networkUris}
    \   ${nativeNetworkUri} =     Run Keyword If   '${nativeNetworkUri}' != 'None'    Get Ethernet Uri    ${nativeNetworkUri}
    \   Set to dictionary   ${uplinkSets[${x}]}    nativeNetworkUri     ${nativeNetworkUri}


    Log   ${uplinkSets}
    ${body} =     Fusion Api Create LIG Payload    name=${name}
    ...                                         enclosureType=${enclosureType}
    ...                                         ethernetSettings=${ethernetSettings}
    ...                                            interconnectMapTemplate=${interconnectMapTemplate}
    ...                                         stackingMode=${stackingMode}
    ...                                         telemetryConfiguration=${telemetryConfiguration}
    ...                                         snmpConfiguration=${snmpConfiguration}
    ...                                            uplinkSets=${uplinkSets}

    ${resp} =     Fusion Api Create LIG    ${body}
    ${task} =    Wait For Task    ${resp}     60s       2s
    ${liguri} =     Get From Dictionary    ${task['associatedResource']}    resourceUri
    [Return]    ${resp}

# FTS
    # Set Log Level    DEBUG
    # Get VM IP   ${VM}
    # First Time Setup                    password=hpvse123

Test Specific Setup
    Set Log Level    TRACE
    Run Keyword and Ignore Error    Write To ciDebug Log
    Log to console and logfile    [TEST-SPECIFIC SETUP]
    Fusion Api Login Appliance         ${APPLIANCE_IP}        ${admin_credentials}
    ${users} =    Get Variable Value    ${users}
    Run Keyword If    ${users} is not ${null}    Add Users from variable                ${users}
    ${ethernet_networks} =    Get Variable Value    ${ethernet_networks}
    Run Keyword If    ${ethernet_networks} is not ${null}    Add Ethernet Networks from variable    ${ethernet_networks}
    #${ethernet_ranges} =    Get Variable Value    ${ethernet_ranges}
    # Run Keyword If    ${ethernet_ranges} is not ${null}        Run Keyword for List    ${ethernet_ranges}    Create Ethernet Range
    #${fc_networks} =    Get Variable Value    ${fc_networks}
    # Run Keyword If    ${fc_networks} is not ${null}    Add FC Networks from variable        ${fc_networks}
    #${fcoe_networks} =    Get Variable Value    ${fcoe_networks}
    # Run Keyword If    ${fcoe_networks} is not ${null}    Add FCoE Networks from variable        ${fcoe_networks}
    #${licenses} =    Get Variable Value    ${licenses}
    # Run Keyword If    ${licenses} is not ${null}        Add Licenses from variable        ${licenses}
    # Login all users     ${users}

Run FTS and test-specific setup
    Set Log Level    TRACE
    # FTS
    Test Specific Setup
