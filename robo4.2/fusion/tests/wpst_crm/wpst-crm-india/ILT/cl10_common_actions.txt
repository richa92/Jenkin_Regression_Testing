*** Settings ***
Documentation       Feature Test: F862
Variables           data_variables_ca.py
Variables			data_variables.py
Resource            ../../../resource/fusion_api_all_resource_files.txt
Library             Collections
Library             json
Library             OperatingSystem
Library 			data_variables.py
Library             ILT_validation.py

*** Variables ***
${SSH_PASS}                     hpvse1
${DataFile}                 OVAData.xml
${APPLIANCE_IP}                 15.212.137.104
${BROWSER}                      Firefox
${SeleniumSpeed}                        0.1
${ApplianceUrl}                 https://15.212.137.104
${LE_name}                       LE
${file}                          fusion_dump.sdmp
${uname}                         root
${pwd}                           hpvse1
${ICM_NAME}     FVTCRMENC3, interconnect 3
${LE_name}                       LE
${file}                          fusion_dump.sdmp
${uname}                         root
${pwd}                           hpvse1
${bayno}						 3	
${scriptpath}					 C:\\Users\\Administrator\\git\\latest_fusion\\fusion\\tests\\wpst_crm\\wpst-crm-india\\ILT\\le_support_dup_scripts	

*** Test Cases ***
Appliance LogIn 
    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}
    KC Load Test Data 
    Load Test Data and Open Browser   

Check that the Chloride ICM is in the monitored state
    Set Log Level   TRACE
    Run Keyword and Ignore Error    Write To ciDebug Log
    ${ic} =     Get IC      ${ICM_NAME}
    ${state} =     Get From IC    ${ic}   state
    Should Be Equal As Strings    ${state}  Monitored
    
Verify Interconnect Ports	
	Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}
	${getresponse}=  Fusion Api Get Interconnect Link Topology
	${verify_ports}=		verify_ic_ports		${APPLIANCE_IP}		${admin_credentials}		${getresponse}
	Should Be True		${verify_ports}			    
   
Verify that the power state is On 
    [Tags]      viewPower
    Run Keyword and Ignore Error    Write To ciDebug Log
    ${ic} =     Get IC      ${ICM_NAME}   
    ${powerStatus} =     Get From IC    ${ic}   powerState
    Should Be Equal As Strings    ${powerStatus}    On

Issue a powerControl Off, verify
    [Tags]  powerOff
    Log to console and logfile  -Issue powerControl Off
    Run Keyword and Ignore Error    Write To ciDebug Log
    ${ic} =     Get IC          ${ICM_NAME}
    ${uri} =    Get From IC     ${ic}   uri   

    ${body} =   Create Dictionary   op=replace
    ...                             path=/powerState
    ...                             value=Off
    ${body} =   Create list     ${body}
    ${resp} =   fusion api patch interconnect   body=${body}    uri=${uri}
    Log         ${resp}
    ${task} =   Wait for Task   ${resp}
    ${valDict} =    Create Dictionary   status_code=${200}
    ...                                 taskState=Completed
    Validate Response   ${task}    ${valDict}
    Sleep    90s
    Log to console and logfile  -Verify it's off    
    ${ic} =     Get IC          ${ICM_NAME}
    ${powerState} =     Get From IC    ${ic}   powerState
    Should Be Equal As Strings    ${powerState}    Off

Verify the Interconnect state from EM Calls
    ${EMreturn}=        tbird_fetch_icm_data_from_em            @{TestData.TB_interconnect_FVT_1}
    ${powerstate} =     Get From Dictionary     ${EMreturn}     PowerState
    Run Keyword If    ${powerstate}=="Off"      Log To Console  IC Sates as desired   ELSE     Fail

Issue a powerControl On, verify
    [Tags]  powerOn
    Log to console and logfile  -Issue powerControl On
    ${ic} =     Get IC          ${ICM_NAME}
    ${uri} =    Get From IC     ${ic}   uri
    ${body} =   Create Dictionary   op=replace
    ...                             path=/powerState
    ...                             value=On
    ${body} =   Create list     ${body}
    ${resp} =   fusion api patch interconnect   body=${body}    uri=${uri}
    Log         ${resp}
    ${task} =   Wait for Task   ${resp}
    ${valDict} =    Create Dictionary   status_code=${200}
    ...                                 taskState=Completed
    Validate Response   ${task}    ${valDict}
    sleep   30s
    Log to console and logfile  -Verify it's on
    ${ic} =     Get IC      ${ICM_NAME}
    ${powerState} =     Get From IC    ${ic}   powerState
    Should Be Equal As Strings    ${powerState}    On

Verify the Interconnect state from EM Calls
    ${EMreturn}=        tbird_fetch_icm_data_from_em            @{TestData.TB_interconnect_FVT_1}
    ${powerstate} =     Get From Dictionary     ${EMreturn}     PowerState
    Run Keyword If    ${powerstate}=="On"   Log To Console  IC Sates as desired   ELSE     Fail
    
UIDLightControl On
    [Tags]  UIDon
    ${ic} =     Get IC          ${ICM_NAME}
    ${uri} =    Get From IC     ${ic}   uri
    ${data} =   Create Dictionary   op=replace
    ...                             path=/uidState
    ...                             value=On
    ${body} =   Create List     ${data}
    ${resp} =   fusion api patch interconnect   body=${body}    uri=${uri}
    ${task} =   Wait for Task   ${resp}

    ${valDict} =    Create Dictionary   status_code=${200}
    ...                                 taskState=Completed
    Validate Response   ${task}    ${valDict}
    sleep   30s
    Log to console and logfile  -Verify it's on
    ${ic} =     Get IC          ${ICM_NAME}
    ${uidLightStatus} =     Get From IC    ${ic}   uidState
    Should Be Equal As Strings    ${uidLightStatus}     On

Verify the UID state is ON from EM Calls
    ${EMreturn}=        tbird_fetch_icm_data_from_em            @{TestData.TB_interconnect_FVT_1}
    ${uidstate} =   Get From Dictionary     ${EMreturn}     UidState
    Run Keyword If    ${uidstate}=="Lit"    Log To Console  UID state as desired   ELSE     Fail

UIDLightControl Off
    [Tags]  UIDoff

    ${ic} =     Get IC      ${ICM_NAME}
    ${uri} =    Get From IC     ${ic}   uri
    ${data} =   Create Dictionary   op=replace
    ...                             path=/uidState
    ...                             value=Off
    ${body} =   Create List     ${data}
    ${resp} =   fusion api patch interconnect   body=${body}    uri=${uri}
    ${task} =   Wait for Task   ${resp}

    ${valDict} =    Create Dictionary   status_code=${200}
    ...                                 taskState=Completed
    Validate Response   ${task}    ${valDict}
    sleep   10s
    Log to console and logfile  -Verify it's off
    ${ic} =     Get IC          ${ICM_NAME}
    ${uidLightStatus} =     Get From IC    ${ic}   uidState
    Should Be Equal As Strings    ${uidLightStatus}     Off

Verify the UIDLightControl state is OFF from EM Calls
    ${EMreturn}=        tbird_fetch_icm_data_from_em            @{TestData.TB_interconnect_FVT_1}
    ${uidstate} =   Get From Dictionary     ${EMreturn}     UidState
    Run Keyword If    ${uidstate}=="Off"    Log To Console  UID state as desired   ELSE     Fail    
    

Interconnect reset 
    [Tags]  pos
    Run Keyword and Ignore Error    Write To ciDebug Log
    ${ic} =     Get IC          ${ICM_NAME}
    ${uri} =    Get From IC     ${ic}   uri
    ${data} =   Create Dictionary   op=replace
    ...                             path=/deviceResetState
    ...                             value=Reset
    ${body} =   Create List     ${data}
    ${resp} =   fusion api patch interconnect   body=${body}    uri=${uri}
    Log     ${resp}
    ${task} =   Wait for Task   ${resp}

    ${valDict} =    Create Dictionary   status_code=${200}
    ...                                 taskState=Completed
    Validate Response   ${task}    ${valDict}
    Log to console and logfile  -Verify it's reset
    ${ic} =     Get IC          ${ICM_NAME}
    ${deviceResetStatus} =     Get From IC    ${ic}   deviceResetState
    Should Be Equal As Strings    ${deviceResetStatus}  Normal
        
Interconnect Reset when ICM is powered off and verify that it fails
    [Tags]  pos
    Run Keyword and Ignore Error    Write To ciDebug Log
    ${ic} =     Get IC          ${ICM_NAME}
    ${uri} =    Get From IC     ${ic}   uri
    # Power off interconnect
    ${body} =   Create Dictionary   op=replace
    ...                             path=/powerState
    ...                             value=Off
    ${body} =   Create list     ${body}
    ${resp} =   fusion api patch interconnect   body=${body}    uri=${uri}
    Log         ${resp}
    sleep   90s
    # Issue Reset request
    ${data} =   Create Dictionary   op=replace
    ...                             path=/deviceResetState
    ...                             value=Reset
    ${body} =   Create List     ${data}
    ${resp} =   fusion api patch interconnect   body=${body}    uri=${uri}
    ${task} =   Wait for Task   ${resp}
    ${valDict} =    Create Dictionary   status_code=${200}
    ...                                 taskState=Error

    Validate Response   ${task}    ${valDict}
    sleep   30s    


Interconnect PowerOn and UID ON in a SingleRequest
    [Tags]  powerOn
    Log to console and logfile  -Issue powerControl On
    Run Keyword and Ignore Error    Write To ciDebug Log
    ${ic} =     Get IC      ${ICM_NAME}
    ${uri} =    Get From IC     ${ic}   uri
    ${data} =   Create Dictionary   op=replace
    ...                             path=/powerState
    ...                             value=On
    ${body} =   Create list     ${data}
    ${data} =   Create Dictionary   op=replace
    ...                             path=/uidState
    ...                             value=On
    Append to List  ${body}     ${data}
    ${resp} =   fusion api patch interconnect   body=${body}    uri=${uri}
    ${task} =   Wait for Task   ${resp}

    ${valDict} =    Create Dictionary   status_code=${200}
    ...                                 taskState=Completed
    Validate Response   ${task}    ${valDict}
    sleep   20s
    Log to console and logfile  -Verify it's ON
    ${ic} =     Get IC          ${ICM_NAME}
    ${powerstate} =     Get From IC    ${ic}   powerState
    Should Be Equal As Strings    ${powerstate}  On
    Log to console and logfile  -Verify Uid state ON
    ${ic} =     Get IC          ${ICM_NAME}
    ${uidState} =     Get From IC    ${ic}   uidState
    Should Be Equal As Strings    ${uidState}  On

Verify Interconnect Details
    [Tags]  Details
    ${ic} =     Get IC          ${ICM_NAME}
    ${partNumber} =     Get From IC    ${ic}   partNumber
    ${model} =     Get From IC    ${ic}   model
    ${firmwareVersion} =     Get From IC    ${ic}   firmwareVersion
    ${serialNumber} =     Get From IC    ${ic}   serialNumber
    ${EMreturn}=        tbird_fetch_icm_data_from_em            @{TestData.TB_interconnect_FVT_1}
    Log         ${EMreturn}
    ${ProductName} =    Get From Dictionary         ${EMreturn}         Productname
    ${SerialNumber} =   Get From Dictionary         ${EMreturn}         Serialnumber
    ${PartNumber} =     Get From Dictionary         ${EMreturn}         Partnumber
    ${FirmwareVersion} =    Get From Dictionary         ${EMreturn}         FirmwareVersion
    #Run Keyword If    ${ProductName}==${model_exp}     Log To Console  UID state as desired   ELSE     Fail
    Run Keyword and Continue on Failure    Should Be Equal  '${ProductName}'        '${model}'      Product Name as desired
    Log to console and logfile          \n'${ProductName}' from EM matches '${model}' from Interconnect GET call
    Run Keyword and Continue on Failure    Should Be Equal  '${SerialNumber}'       '${serialNumber}'   Serial Number as desired
    Log to console and logfile          \n'${SerialNumber}' from EM matches '${serialNumber}' from Interconnect GET call
    Run Keyword and Continue on Failure    Should Be Equal  '${PartNumber}'     '${partNumber}'     Part Number as desired
    Log to console and logfile          \n'${PartNumber}' from EM matches '${partNumber}' from Interconnect GET call
    Run Keyword and Continue on Failure    Should Be Equal  '${FirmwareVersion}'        '${firmwareVersion}'    Part Number as desired
    Log to console and logfile          \n'${FirmwareVersion}' from EM matches '${firmwareVersion}' from Interconnect GET call
    
Interconnect PowerOff and UID Off in a SingleRequest
    [Tags]  powerOff
    Log to console and logfile  -Issue powerControl Off
    Run Keyword and Ignore Error    Write To ciDebug Log
    ${ic} =     Get IC      ${ICM_NAME}
    ${uri} =    Get From IC     ${ic}   uri
    ${data} =   Create Dictionary   op=replace
    ...                             path=/powerState
    ...                             value=Off
    ${body} =   Create list     ${data}
    ${data} =   Create Dictionary   op=replace
    ...                             path=/uidState
    ...                             value=Off
    Append to List  ${body}     ${data}
    ${resp} =   fusion api patch interconnect   body=${body}    uri=${uri}
    ${task} =   Wait for Task   ${resp}

    ${valDict} =    Create Dictionary   status_code=${200}
    ...                                 taskState=Completed
    Validate Response   ${task}    ${valDict}
    sleep   90s
    Log to console and logfile  -Verify it's OFF
    ${ic} =     Get IC          ${ICM_NAME}
    ${powerstate} =     Get From IC    ${ic}   powerState
    Should Be Equal As Strings    ${powerstate}  Off
    Log to console and logfile  -Verify Uid state OFF
    ${ic} =     Get IC          ${ICM_NAME}
    ${uidState} =     Get From IC    ${ic}   uidState
    Should Be Equal As Strings    ${uidState}  Off

Interconnect Reset and UID On in a SingleRequest
    Run Keyword and Ignore Error    Write To ciDebug Log

    ${ic} =     Get IC      ${ICM_NAME}
    ${uri} =    Get From IC     ${ic}   uri
    Log to console and logfile  -Power On ICM
    ${data} =   Create Dictionary   op=replace
    ...                             path=/powerState
    ...                             value=On
    ${body} =   Create list     ${data}
    ${resp} =   fusion api patch interconnect   body=${body}    uri=${uri}
    sleep   20s
    ${data} =   Create Dictionary   op=replace
    ...                             path=/deviceResetState
    ...                             value=Reset
    ${body} =   Create list     ${data}
    ${data} =   Create Dictionary   op=replace
    ...                             path=/uidState
    ...                             value=On
    Append to List  ${body}     ${data}
    ${resp} =   fusion api patch interconnect   body=${body}    uri=${uri}
    ${task} =   Wait for Task   ${resp}
    ${valDict} =    Create Dictionary   status_code=${200}
    ...                                 taskState=Completed
    Validate Response   ${task}    ${valDict}
    Log to console and logfile  -Verify Uid state ON
    ${ic} =     Get IC          ${ICM_NAME}
    ${uidState} =     Get From IC    ${ic}   uidState
    Should Be Equal As Strings    ${uidState}  On

*** comment ***       

F669_TC_API_15 Collect Logical Enclosure Support Dump
    #Get Enclosure Support Dump      ${LE_name}      ${file}
    Tbird Fusion Ui Validate Support Dump    ${uname}    ${pwd}   ${APPLIANCE_IP}    ${bayno}    ${scriptpath}   





*** Keywords ***
Log into Fusion appliance as Administrator
    ${user} =  Get Data By Property  ${TestData.users}  name  Administrator
    Fusion UI Login to Appliance   ${user[0].name}

Validate Interconnect firmware version
    [Arguments]    ${ICM}               @{TestData.TB_interconnect_FVT}
    ${ic} =     Get IC          ${ICM}
    ${firmwareVersion} =     Get From IC    ${ic}   firmwareVersion
    Log to console and logfile          \nFirmwareVersion from ICM '${ICM}' is '${firmwareVersion}'
    # ${serialNumber} =     Get From IC    ${ic}   serialNumber
    ${EMreturn}=        tbird_fetch_icm_data_from_em            @{TestData.TB_interconnect_FVT}
    # Log           ${EMreturn}
    ${FirmwareVersion} =    Get From Dictionary         ${EMreturn}         FirmwareVersion
    Run Keyword and Continue on Failure    Should Be Equal  '${FirmwareVersion}'        '${firmwareVersion}'    Part Number as desired
    Log to console and logfile          \n'${FirmwareVersion}' from EM matches '${firmwareVersion}' from Interconnect GET call

KC Load Test Data
    Set Log Level    TRACE
    Load Test Data  ${DataFile}


Get IC
    [Arguments]     ${ICM_NAME}
    ${resp} =   fusion api get interconnect
    Log     ${resp}
    ${ics} =     Get From Dictionary     ${resp}    members
    ${l} =  Get Length  ${ics}
    :FOR    ${x}    IN RANGE    0   ${l}
    \   ${ic} =     Get From List   ${ics}    ${x}
    \   Exit For Loop If    '${ic['name']}' == '${ICM_NAME}'
    [Return]    ${ic}
    Log     ${ic}

Get LE
    [Arguments]     ${LE_NAME}
    ${resp} =   fusion api get Logical Enclosure
    Log     ${resp}
    ${les} =     Get From Dictionary     ${resp}    members
    ${l} =  Get Length  ${les}
    :FOR    ${x}    IN RANGE    0   ${l}
    \   ${le} =     Get From List   ${les}    ${x}
    \   Exit For Loop If    '${le['name']}' == '${LE_name}'
    [Return]    ${le}
    Log     ${le}

Get from LE
    [Arguments]     ${le}   ${element}
    ${return} =     Get From Dictionary     ${le}   ${element}
    [Return]    ${return}


Get Enclosure Support Dump
    [Arguments]                ${le}         ${file}
    ${le}=      Get LE           ${le}
    ${logicalEnclosureUri}=     Get from LE         ${le}       uri
    ${logicalEnclosureId}=      Fetch From Right        ${logicalEnclosureUri}      /

    # Build LE Support Dump Payload
    ${encrypt}=         Convert to Integer      1
    ${applianceDump}=   Convert to Integer      0
    ${LE SupportDump Payload}=                  Create Dictionary   errorCode=API-TEST      encrypt=${encrypt}
    #...                 includeApplianceDump=${applianceDump}

    # Create Enclosure Support Dump
    ${Response}=        Fusion Api Get Logical Enclosure Support Dump   body=${LE SupportDump Payload}
    ...                 id=${logicalEnclosureId}
    ${status_code}=     Get From Dictionary     ${Response}             status_code
    Should Be Equal as Strings                  ${status_code}          202
    ...                 msg=Failed to initiate Create Enclosure Support Dump.

    # Wait for task to complete
    ${task} =                       Wait For Task           ${Response}     1200s    30s
    ${status_code}=                 Get From Dictionary     ${task}         status_code
    Should Be Equal as Strings      ${status_code}          200             msg=Failed to Create Enclosure Support Dump.

    # Download Generated Support Dump file
    ${associatedResource}=      Get From Dictionary     ${task}                 associatedResource
    ${supportDumpUri}=          Get From Dictionary     ${associatedResource}   resourceUri

    ${Response}=        Fusion Api Download Support Dump            uri=${supportDumpUri}   localfile=${file}
    ${status_code}=     Get From Dictionary     ${Response}         status_code
    Should Be Equal as Strings                  ${status_code}      200
    ...                 msg=Failed to Download Enclosure Support Dump.

    [Return]    ${Response}

Verify Enclosure in Monitored State
    ${Enc}=         Get Enclosure     ${ENC Serial Number}
    ${state}=       Get From Dictionary     ${Enc}       state
    # Should be Equal as Strings    ${state}                Monitored   msg=Enclosure ${ENC Serial Number} not in Monitored state.

Verify Enclosure in Configured State
    ${Enc}=         Get Enclosure     ${ENC Serial Number}
    ${state}=       Get From Dictionary     ${Enc}       state
    # Should be Equal as Strings    ${state}                Configured      msg=Enclosure ${ENC Serial Number} not in Configured state.

Verify Interconnect Ports
	[Arguments]                ${APPLIANCE_IP}         ${admin_credentials}		
	${var} =		verify_ic_ports		${APPLIANCE_IP}         ${admin_credentials}
	
Load Test Data and Open Browser
    Set Log Level    TRACE    
    Log Variables
    Open Browser  ${ApplianceUrl}  ${Browser}
    Maximize Browser Window
    Set Selenium Speed  ${SeleniumSpeed}	
	
	
