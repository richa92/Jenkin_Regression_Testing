*** Settings ***
Documentation    Feature Test: UI-PART1
Resource    F629-CONFIG.txt
#Force Tags     Buildup
Suite Setup    Load Test Data and Open Browser
Suite Teardown    Logout And Close All Browsers
Library            Dialogs
Library    String
*** Variable ***
${ICM_1}                 Titan, interconnect 1
${ICM_2}                 Titan, interconnect 2
${Message_List_pauseflood_uplink}        A pause flood condition has been detected on the uplink port(s) X6.
${Message_List_pauseflood_downlink}        Connection on downlink port 2, subport a has failed. A pause frame flood condition caused the port to be unlinked.

${ACTIONOFF}            OFF
${ACTIONON}             ON

*** Test Cases ***

00 Log into fusion as Administrator
    [Documentation]    Log in to Appliance
    Log To Console    *********Log into Appliance as Administrator*****************
    ${user} =    Get Data By Property    ${TestData.users}    name    Administrator
    fusion_ui_login_to_appliance    ${user[0].name}
    Log to Console    Successfully logged in as Administrator

01 Verifying default PauseFloodProtection default value in LI
     ${Status}=    fusion_ui_verify_logical_interconnects    @{TestData.li_default_data}
     Run Keyword If  '${Status}' == 'True'   Log to Console  Default pause flood protection value is Enabled    ELSE    Fail

02 Verify pause flood alert for sheppard
    [Documentation]   Induce pause flood on uplink Sheppard
    ${medConfigResponse} =  SSH to host and run med_config   ${BAY1_IP}  ${UL_PORT_NAME}  ${UL_PF_OPTION}
    Should Not Contain    ${medConfigResponse}  Invalid value specified for op_pause_flood_status
    #The below sleep is needed for the pause flood to reflect on the OV
    Sleep   1 minutes 30 seconds
    #Verifying the pause flood alert
    ${status}=  fusion_ui_validate_c7000_pause_flood_alert    ${Message_List_pauseflood_uplink}  @{TestData.interconnects}
    Log to Console  Verify that alert should not present
    run keyword if  '${status}'=='False'    Fail    'Pause Flood alert not available'

    ${status1}=     fusion_ui_verify_interconnect_uplinkport_view            @{TestData.interconnects}
    run keyword if  '${status1}'=='False'    Fail    'Interconnect Uplink View validation not successful'

03 Edit LIG and update from group
    fusion_ui_edit_logical_interconnect_group   @{TestData.edit_ligs}
    Log to console  Edit LIG completed
    # Update from group
    fusion_ui_update_logical_interconnect_from_group    ${TestData.lis[0]}
    Log to Console  !!!Update from group completed Successfully!!!
    #[Documentation]    Verifying the pause flood alert
    ${status}=  fusion_ui_validate_c7000_pause_flood_alert    ${Message_List_pauseflood_uplink}  @{TestData.interconnects}
    Log to Console  Verify that alert should be present
    run keyword if  '${status}'=='False'    Fail    'Pause Flood alert not available'
    ${status1}=     fusion_ui_verify_interconnect_uplinkport_view            @{TestData.interconnects}
    run keyword if  '${status1}'=='False'    Fail    'Interconnect Uplink View validation not successful'

04 Edit LIG for disabling the pause flood detection and then perform 'Update from group' from LI
    fusion_ui_edit_logical_interconnect_group   @{TestData.edit_ligs_disable_pauseflood}
    # Update from group
    fusion_ui_update_logical_interconnect_from_group    ${TestData.lis[0]}
    Log to Console  !!!Update from group completed Successfully!!!
    [Documentation]    Verifying the pause flood alert
    ${status}=  fusion_ui_validate_c7000_pause_flood_alert    ${Message_List_pauseflood_uplink}  @{TestData.interconnects}
    Log to Console  Verify that alert should be present
    run keyword if  '${status}'=='True'    Fail    'Pause Flood alert is available'
    ${status1}=     fusion_ui_verify_interconnect_uplinkport_view            @{TestData.interconnects1}
    run keyword if  '${status1}'=='False'    Fail    'Interconnect Uplink View validation not successful'

05 Edit LIG for Enabling the pause flood detection and then perform 'Update from group' from LI
    fusion_ui_edit_logical_interconnect_group   @{TestData.edit_ligs}
    # Update from group
    fusion_ui_update_logical_interconnect_from_group    ${TestData.lis[0]}
    Log to Console  !!!Update from group completed Successfully!!!
    [Documentation]    Verifying the pause flood alert
    ${status}=  fusion_ui_validate_c7000_pause_flood_alert    ${Message_List_pauseflood_uplink}  @{TestData.interconnects}
    Log to Console  Verify that alert should not present
    run keyword if  '${status}'=='True'    Fail    'Pause Flood alert is available'
    ${status1}=     fusion_ui_verify_interconnect_uplinkport_view            @{TestData.interconnects1}
    run keyword if  '${status1}'=='False'    Fail    'Interconnect Uplink View validation not successful'

06 verify clear port counter
    [Documentation]   Induce pause flood on uplink Sheppard
    ${medConfigResponse} =  SSH to host and run med_config   ${BAY1_IP}  ${UL_PORT_NAME}  ${UL_PF_OPTION}
    Should Not Contain    ${medConfigResponse}  Invalid value specified for op_pause_flood_status
    #The below sleep is needed for the pause flood to reflect on the OV
    Sleep   1 minutes 30 seconds
    fusion_ui_c7000_clear_port_counters  @{TestData.interconnects}
    ${status}=  fusion_ui_validate_c7000_pause_flood_alert    ${Message_List_pauseflood_uplink}  @{TestData.interconnects}
    Log to Console  Verify that alert should not present
    run keyword if  '${status}'=='False'    Fail    'Pause Flood alert not available'
    ${status1}=     fusion_ui_verify_interconnect_uplinkport_view            @{TestData.interconnects}
    run keyword if  '${status1}'=='False'    Fail    'Interconnect Uplink View validation not successful'

07 verify reapply configuration
    fusion_ui_c7000_reapply_configuration  @{TestData.interconnects}
    ${status}=  fusion_ui_validate_c7000_pause_flood_alert    ${Message_List_pauseflood_uplink}  @{TestData.interconnects}
    Log to Console  Verify that alert should not present
    run keyword if  '${status}'=='False'    Fail    'Pause Flood alert not available'
    ${status1}=     fusion_ui_verify_interconnect_uplinkport_view            @{TestData.interconnects}
    run keyword if  '${status1}'=='False'    Fail    'Interconnect Uplink View validation not successful'

08 Power Cycle on VC module
    #Power off interconnect
    OA CLI POWEROFF    ${OA_HOST}    ${OA_USER}    ${OA_PASS}   INTERCONNECT    ${BAY1}
    Log to Console  Waiting for interconnect power off to complete
    Sleep   2 minutes 30 seconds

    #Power on interconnect
    OA CLI POWERON    ${OA_HOST}    ${OA_USER}    ${OA_PASS}   INTERCONNECT    ${BAY1}
    Log to Console  Waiting for interconnect power on and claim process to complete
    Sleep   5 minutes 30 seconds

    #[Documentation]    verifying the pause flood alert
    ${status}=  fusion_ui_validate_c7000_pause_flood_alert    ${Message_List_pauseflood_uplink}  @{TestData.interconnects}
    Log to Console  Verify that alert should not present
    run keyword if  '${status}'=='True'    Fail    'Pause Flood alert is available'
    ${status}=     fusion_ui_verify_interconnect_uplinkport_view            @{TestData.interconnects1}
    run keyword if  '${status}'=='False'    Fail    'Interconnect Uplink View validation not successful'

09 Efuse VC module
    [Documentation]   Induce pause flood on uplink Sheppard
    ${medConfigResponse} =  SSH to host and run med_config   ${BAY1_IP}  ${UL_PORT_NAME}  ${UL_PF_OPTION}
    Should Not Contain    ${medConfigResponse}  Invalid value specified for op_pause_flood_status
    Sleep   1 minutes 30 seconds

    #Efuse off interconnect
    OA CLI EFUSE           ${OA_HOST}       ${OA_USER}            ${OA_PASS}    ${DEVICE}    ${BAY1}    ${ACTIONOFF}
    Log to Console  Waiting for interconnect efuse off to complete
    Sleep   2 minutes 30 seconds

    #Efuse ON the interconnect
    OA CLI EFUSE           ${OA_HOST}       ${OA_USER}            ${OA_PASS}    ${DEVICE}    ${BAY1}    ${ACTIONON}
    Log to Console  Waiting for interconnect efuse on to complete
    Sleep   5 minutes 30 seconds

    #[Documentation]    verifying the pause flood alert - Known issue with efuse
    ${status}=  fusion_ui_validate_c7000_pause_flood_alert    ${Message_List_pauseflood_uplink}  @{TestData.interconnects}
    Log to Console  Verify that alert should not present
    run keyword if  '${status}'=='True'    Fail    'Pause Flood alert is available'

    ${status}=     fusion_ui_verify_interconnect_uplinkport_view            @{TestData.interconnects1}
    run keyword if  '${status}'=='False'    Fail    'Interconnect Uplink View validation not successful'

10 Refresh Enclosure page in Pause flood condition
    [Documentation]   Induce pause flood on uplink Sheppard
    ${medConfigResponse} =  SSH to host and run med_config   ${BAY1_IP}  ${UL_PORT_NAME}  ${UL_PF_OPTION}
    Should Not Contain    ${medConfigResponse}  Invalid value specified for op_pause_flood_status
    Sleep   1 minutes 30 seconds

    #[Documentation]   Done refresh of enclosure
    fusion_ui_refresh_enclosure_by_name    ${TestData.enclosures[0].name}    False
    Log to Console  Waiting for enclosure refresh to complete
    Sleep   4 minutes 30 seconds

    #[Documentation]    verifying the pause flood alert
    ${status}=  fusion_ui_validate_c7000_pause_flood_alert    ${Message_List_pauseflood_uplink}  @{TestData.interconnects}
    Log to Console  Verify that alert should not present
    run keyword if  '${status}'=='False'    Fail    'Pause Flood alert not available'
    ${status}=     fusion_ui_verify_interconnect_uplinkport_view            @{TestData.interconnects}
    run keyword if  '${status}'=='False'    Fail    'Interconnect Uplink View validation not successful'

11 Reset Loop And Pause Flood Protection
    [Documentation]   Induce pause flood on uplink Sheppard
    ${medConfigResponse} =  SSH to host and run med_config   ${BAY1_IP}  ${UL_PORT_NAME}  ${UL_PF_OPTION}
    Should Not Contain    ${medConfigResponse}  Invalid value specified for op_pause_flood_status
    Sleep   1 minutes 30 seconds

    #[Documentation]   Reset Loop and Protection
    fusion_ui_reset_C7000_interconnect_loop_and_pause_flood_protection            @{TestData.interconnects}
    Log to Console  Waiting for reset loop and protection to complete
    Sleep   2 minutes 30 seconds

    #[Documentation]    verifying the pause flood alert
    ${status}=  fusion_ui_validate_c7000_pause_flood_alert    ${Message_List_pauseflood_uplink}  @{TestData.interconnects}
    Log to Console  Verify that alert should not present
    run keyword if  '${status}'=='True'    Fail    'Pause Flood alert is available'
    ${status}=     fusion_ui_verify_interconnect_uplinkport_view            @{TestData.interconnects1}
    run keyword if  '${status}'=='False'    Fail    'Interconnect Uplink View validation not successful'

12 Disable uplink Port
    [Documentation]   Induce pause flood on uplink Sheppard
    ${medConfigResponse} =  SSH to host and run med_config   ${BAY1_IP}  ${UL_PORT_NAME}  ${UL_PF_OPTION}
    Should Not Contain    ${medConfigResponse}  Invalid value specified for op_pause_flood_status
    Sleep   1 minutes 30 seconds

    #[Documentation]   Disable Uplink Port
    fusion_ui_edit_interconnect            @{TestData.interconnects_port_disable}
    Log to Console  Waiting for port to disable
    Sleep   1 minutes 30 seconds

    #[Documentation]    verifying the pause flood alert
    ${status}=  fusion_ui_validate_c7000_pause_flood_alert    ${Message_List_pauseflood_uplink}  @{TestData.interconnects}
    Log to Console  Verify that alert should not present
    run keyword if  '${status}'=='True'    Fail    'Pause Flood alert is available'

    #[Documentation]   Enable Uplink Port
    fusion_ui_edit_interconnect            @{TestData.interconnects_port_enable}
    Log to Console  Waiting for port to enable it again
    Sleep   1 minutes 30 seconds

    #[Documentation]    verifying the pause flood alert
    ${status}=  fusion_ui_validate_c7000_pause_flood_alert    ${Message_List_pauseflood_uplink}  @{TestData.interconnects}
    Log to Console  Verify that alert should not present
    run keyword if  '${status}'=='False'    Fail    'Pause Flood alert is  not available'
    ${status}=     fusion_ui_verify_interconnect_uplinkport_view            @{TestData.interconnects}
    run keyword if  '${status}'=='False'    Fail    'Interconnect Uplink View validation not successful'

13 Remove interconnect which is not in Pause flood condition as part of same LI
    #Efuse off interconnect 2
    OA CLI EFUSE           ${OA_HOST}       ${OA_USER}            ${OA_PASS}    ${DEVICE}    ${BAY2}    ${ACTIONOFF}
    Log to Console  Waiting for 2nd interconnect efuse off to complete
    Sleep   2 minutes 30 seconds

    #[Documentation]    verifying the pause flood alert
    ${status}=  fusion_ui_validate_c7000_pause_flood_alert    ${Message_List_pauseflood_uplink}  @{TestData.interconnects}
    Log to Console  Verify that alert should not present
    run keyword if  '${status}'=='False'    Fail    'Pause Flood alert not available'
    ${status}=     fusion_ui_verify_interconnect_uplinkport_view            @{TestData.interconnects4}
    run keyword if  '${status}'=='False'    Fail    'Interconnect Uplink View validation not successful'

    #Clear pause flood condition on uplink
    ${medConfigResponse} =  SSH to host and run med_config   ${BAY1_IP}  ${UL_PORT_NAME}  ${UL_CPF_OPTION}
    Should Not Contain    ${medConfigResponse}  Invalid value specified for op_pause_flood_status
    Sleep   1 minutes 30 seconds

    #Efuse on interconnect 2
    OA CLI EFUSE           ${OA_HOST}       ${OA_USER}            ${OA_PASS}    ${DEVICE}    ${BAY2}    ${ACTIONON}
    Log to Console  Waiting for 2nd interconnect efuse on to complete
    Sleep   2 minutes 30 seconds

14 Pause flood condition at the downlink port (For all the enet modules Sheppard, supershaw, biggs and bergstrom)
    [Documentation]    inject pause flood on the downlink port
    ${medConfigResponse} =  SSH to host and run med_config   ${BAY1_IP}  ${DL_PORT_NAME}  ${DL_PF_OPTION}
    Should Not Contain    ${medConfigResponse}  Invalid value specified for op_pause_flood_status
    #The below sleep is needed for the pause flood to reflect on the OV
    Sleep   2 minutes 30 seconds

    #Verifying the pause flood alert
    ${status}=  fusion_ui_validate_c7000_pause_flood_alert    ${Message_List_pauseflood_downlink}  @{TestData.interconnects}
    Log to Console  Verify that alert should not present
    run keyword if  '${status}'=='false'    Fail    'Pause Flood alert not available'
    ${status1}=    fusion_ui_verify_interconnect_downlinkport_view_tbird         @{TestData.interconnects}
    run keyword if  '${status1}'=='False'    Fail    'Interconnect Downlink Edit validation not successful'
    #${status2}=     fusion_ui_verify_interconnect_uplinkport_view            @{TestData.interconnects}
    #run keyword if  '${status2}'=='False'    Fail    'Interconnect Uplink View validation not successful'

15 Disabling and Enabling back the downlink port in pause flood condition
    fusion_ui_edit_interconnect    ${TestData.interconnects_disable[0]}
    Sleep   1 minutes 30 seconds
    fusion_ui_edit_interconnect    ${TestData.interconnects_enable[0]}
    Sleep   1 minutes 30 seconds
    ${status}=  fusion_ui_validate_c7000_pause_flood_alert    ${Message_List_pauseflood_downlink}  @{TestData.interconnects}
    Log to Console  Verify that alert should not present
    run keyword if  '${status}'=='False'    Fail    'Pause Flood alert available'
    ${status1}=     fusion_ui_verify_interconnect_uplinkport_view            @{TestData.interconnects1}
    run keyword if  '${status1}'=='False'    Fail    'Interconnect Uplink View validation not successful'

16 Edit LI for disabling the pause flood detection
    ${resp}=  fusion_ui_edit_logical_interconnects   @{Testdata.editli_disable_pauseflood}
    Sleep   1 minutes 30 seconds
    ${status}=  fusion_ui_validate_c7000_pause_flood_alert    ${Message_List_pauseflood_downlink}  @{TestData.interconnects}
    Log to Console  Verify that alert should not present
    run keyword if  '${status}'=='True'    Fail    'Pause Flood alert available'
    ${status1}=     fusion_ui_verify_interconnect_uplinkport_view            @{TestData.interconnects2}
    run keyword if  '${status1}'=='False'    Fail    'Interconnect Uplink View validation not successful'

17 Edit LI for enable the pause flood detection
    ${resp}=  fusion_ui_edit_logical_interconnects   @{Testdata.editli_enable_pauseflood}
    Sleep   1 minutes 30 seconds
    ${status}=  fusion_ui_validate_c7000_pause_flood_alert    ${Message_List_pauseflood_downlink}  @{TestData.interconnects}
    Log to Console  Verify that alert should not present
    run keyword if  '${status}'=='True'    Fail    'Pause Flood alert available'
    ${status1}=     fusion_ui_verify_interconnect_uplinkport_view            @{TestData.interconnects2}
    run keyword if  '${status1}'=='False'    Fail    'Interconnect Uplink View validation not successful'

18 Edit Server profile delete connection
    fusion_ui_edit_server_profile   @{TestData.edit_server_profile}
    ${status}=  fusion_ui_validate_c7000_pause_flood_alert    ${Message_List_pauseflood_downlink}  @{TestData.interconnects}
    Log to Console  Verify that alert should not present
    run keyword if  '${status}'=='True'    Fail    'Pause Flood alert not available'
    ${status1}=     fusion_ui_verify_interconnect_uplinkport_view            @{TestData.interconnects1}
    run keyword if  '${status1}'=='False'    Fail    'Interconnect Uplink View validation not successful'

19 Remove the uplinkset which has the Uplink port in pause flood condition
    ${resp}=  fusion_ui_edit_logical_interconnects   @{Testdata.editli_remove_lus}
    ${status}=  fusion_ui_validate_c7000_pause_flood_alert    ${Message_List_pauseflood_downlink}  @{TestData.interconnects}
    Log to Console  Verify that alert should not present
    run keyword if  '${status}'=='True'    Fail    'Pause Flood alert not available'
    ${status1}=     fusion_ui_verify_interconnect_uplinkport_view            @{TestData.interconnects5}
    run keyword if  '${status1}'=='False'    Fail    'Interconnect Uplink View validation not successful'