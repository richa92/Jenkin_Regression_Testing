*** Settings ** *
Documentation        Feature Test:  OV292
...                  This set of test cases is to verify the feature SNMPv3 synergy related testing
...
Variables               data_variables.py
Resource                ../../../../resource/fusion_api_all_resource_files.txt
Library                Collections
Library                json
Library                OperatingSystem
Library                Selenium2Library

*** Variables ** *
${SSH_PASS}                     hpvse1
${APPLIANCE_IP}                  192.168.144.146
${Inconsistent_State}           NOT_CONSISTENT
${consistent_State}             CONSISTENT
${State_Configured}             Configured


*** Test Cases ** *

OVF292_API_TC_02 AddsnmpUser_DefaultAttributes_NOAUTHNOPRIV
    #Create Logical Interconnect group -LIG
    [Tags]  14
    Log to console    Create LIG group
    #LIG with Ethernet Modules
    Fusion Api Login Appliance    ${APPLIANCE_IP}        ${admin_credentials}
    ${resp} =    Create LIG      ${ligs_tbird_SE_Multi_LIG_Scenario}
    Log to console and logfile    \n\nLIG Created Successfully:${resp}

    ${lig_edit}    Get LIG member    ${LIG_New}
    ${lig_uri}    Get Variable Value    ${lig_edit['uri']}
    Set Global Variable    ${LIG_URI}    ${lig_uri}
    ${lig_snmp}    Edit LIG body for SNMP    ${LIG_New}    ${ligs_tbird_SE_Multi_LIG['snmpUsers']}    ${ligs_tbird_SE_Multi_LIG['trapDestinations']}
    Set To Dictionary    ${lig_edit}    eTag=
    Set To Dictionary    ${lig_edit}    snmpConfiguration=${lig_snmp}
    ${resp}    fusion_api_edit_lig    body=${lig_edit}    uri=${LIG_URI}
    Log to console and logfile    \n\nLIG Created Successfully:${resp}
    Run Keyword If  '${resp['status_code']}' == '202'    Log to console  \nStatus Code: ${resp['status_code']} \nSuccessfully!! Edited the LIG for snmpV3 single user with auth & priv protocols and trap details\n
    ...    ELSE    FAIL
    ${task} =    Wait For Task     ${resp}     180 s    10 s
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}





OVF292_API_TC_03 AddsnmpUser_NoUserNameSpecified

    Fusion Api Login Appliance    ${APPLIANCE_IP}        ${admin_credentials}
    ${lig_edit}    Get LIG member    ${LIG_New}
    ${lig_uri}    Get Variable Value    ${lig_edit['uri']}
    Set Global Variable    ${LIG_URI}    ${lig_uri}
    ${lig_snmp}    Edit LIG body for SNMP    ${LIG_New}    ${ligs_tbird_SE_Multi_LIG_No_Name['snmpUsers']}    ${ligs_tbird_SE_Multi_LIG_No_Name['trapDestinations']}
    Set To Dictionary    ${lig_edit}    eTag=
    Set To Dictionary    ${lig_edit}    snmpConfiguration=${lig_snmp}
    ${resp}    fusion_api_edit_lig    body=${lig_edit}    uri=${LIG_URI}
    Log to console and logfile    \n\nLIG Created Successfully:${resp}
    ${message} =    Get Variable Value  ${error_Mandatory_Attribute_Check['message']}
    ${errorCode} =    Get Variable Value  ${error_Mandatory_Attribute_Check['errorCode']}
    Log to console and logfile    \nMessage:${message}
    ${valDict} =     Create Dictionary    status_code=${400}
    ...                                 message=${message}
    ...                                 errorCode=${errorCode}
    Validate Response    ${resp}    ${valDict}


OVF292_API_TC_04 AddsnmpUser_SecLevel_Authentication_AuthNprotocolMD5

    Fusion Api Login Appliance    ${APPLIANCE_IP}        ${admin_credentials}
    ${lig_edit}    Get LIG member    ${LIG_New}
    ${lig_uri}    Get Variable Value    ${lig_edit['uri']}
    Set Global Variable    ${LIG_URI}    ${lig_uri}
    ${lig_snmp}    Edit LIG body for SNMP    ${LIG_New}    ${ligs_tbird_SE_Multi_LIG_AuthprotocolMD5['snmpUsers']}    ${ligs_tbird_SE_Multi_LIG_AuthprotocolMD5['trapDestinations']}
    Set To Dictionary    ${lig_edit}    eTag=
    Set To Dictionary    ${lig_edit}    snmpConfiguration=${lig_snmp}
    ${resp}    fusion_api_edit_lig    body=${lig_edit}    uri=${LIG_URI}
    Log to console and logfile    \n\nLIG Created Successfully:${resp}
    Run Keyword If  '${resp['status_code']}' == '202'    Log to console  \nStatus Code: ${resp['status_code']} \nSuccessfully!! Edited the LIG for snmpV3 single user with auth & priv protocols and trap details\n
    ...    ELSE    FAIL
    ${task} =    Wait For Task     ${resp}     180 s    10 s
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}

    #Verify SNMP Users
    ${lig_snmp_users} =           Get Variable Value  ${ligs_tbird_SE_Multi_LIG_AuthprotocolMD5['snmpUsers']}
    ${len1} =     Get Length    ${lig_snmp_users}
    ${lig_Create_user}=    Create List
    :FOR    ${x}    IN RANGE    0    ${len1}
    \    ${users1} =     Get From Dictionary    ${lig_snmp_users}    ${x}
    \    ${list_user_1}=    Get From Dictionary    ${users1}    snmpV3UserName
    \    Append To List    ${lig_Create_user}    ${list_user_1}
    Log to console and logfile    \n\nResp Content Is: ${lig_Create_user}
    Verify SNMP Users     ${LIG_New}    ${lig_Create_user}
    Log to console and logfile    \nUsers are verified successfully Security Level Authentication with MD5


OVF292_API_TC_05 AddsnmpUser_SecLevel_Authentication_AuthNprotocolSHA1


    Fusion Api Login Appliance    ${APPLIANCE_IP}        ${admin_credentials}
    ${lig_edit}    Get LIG member    ${LIG_New}
    ${lig_uri}    Get Variable Value    ${lig_edit['uri']}
    Set Global Variable    ${LIG_URI}    ${lig_uri}
    ${lig_snmp}    Edit LIG body for SNMP    ${LIG_New}    ${ligs_tbird_SE_Multi_LIG_AuthprotocolSHA1['snmpUsers']}    ${ligs_tbird_SE_Multi_LIG_AuthprotocolSHA1['trapDestinations']}
    Set To Dictionary    ${lig_edit}    eTag=
    Set To Dictionary    ${lig_edit}    snmpConfiguration=${lig_snmp}
    ${resp}    fusion_api_edit_lig    body=${lig_edit}    uri=${LIG_URI}
    Log to console and logfile    \n\nLIG Created Successfully:${resp}
    Run Keyword If  '${resp['status_code']}' == '202'    Log to console  \nStatus Code: ${resp['status_code']} \nSuccessfully!! Edited the LIG for snmpV3 single user with auth & priv protocols and trap details\n
    ...    ELSE    FAIL
    ${task} =    Wait For Task     ${resp}     180 s    10 s
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}

    #Verify SNMP Users
    ${lig_snmp_users} =           Get Variable Value  ${ligs_tbird_SE_Multi_LIG_AuthprotocolSHA1['snmpUsers']}
    ${len1} =     Get Length    ${lig_snmp_users}
    ${lig_Create_user}=    Create List
    :FOR    ${x}    IN RANGE    0    ${len1}
    \    ${users1} =     Get From Dictionary    ${lig_snmp_users}    ${x}
    \    ${list_user_1}=    Get From Dictionary    ${users1}    snmpV3UserName
    \    Append To List    ${lig_Create_user}    ${list_user_1}
    Log to console and logfile    \n\nResp Content Is: ${lig_Create_user}
    Verify SNMP Users     ${LIG_New}    ${lig_Create_user}
    Log to console and logfile    \nUsers are verified successfully Security Level Authentication with SHA1



OVF292_API_TC_57 AddsnmpUser_SecLevel_Authentication_AuthNprotocolSHA2

    Fusion Api Login Appliance    ${APPLIANCE_IP}        ${admin_credentials}
    ${lig_edit}    Get LIG member    ${LIG_New}
    ${lig_uri}    Get Variable Value    ${lig_edit['uri']}
    Set Global Variable    ${LIG_URI}    ${lig_uri}
    ${lig_snmp}    Edit LIG body for SNMP    ${LIG_New}    ${ligs_tbird_SE_Multi_LIG_AuthprotocolSHA2['snmpUsers']}    ${ligs_tbird_SE_Multi_LIG_AuthprotocolSHA2['trapDestinations']}
    Set To Dictionary    ${lig_edit}    eTag=
    Set To Dictionary    ${lig_edit}    snmpConfiguration=${lig_snmp}
    ${resp}    fusion_api_edit_lig    body=${lig_edit}    uri=${LIG_URI}
    Log to console and logfile    \n\nLIG Created Successfully:${resp}
    Run Keyword If  '${resp['status_code']}' == '202'    Log to console  \nStatus Code: ${resp['status_code']} \nSuccessfully!! Edited the LIG for snmpV3 single user with auth & priv protocols and trap details\n
    ...    ELSE    FAIL
    ${task} =    Wait For Task     ${resp}     180 s    10 s
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}

    #Verify SNMP Users
    ${lig_snmp_users} =           Get Variable Value  ${ligs_tbird_SE_Multi_LIG_AuthprotocolSHA2['snmpUsers']}
    ${len1} =     Get Length    ${lig_snmp_users}
    ${lig_Create_user}=    Create List
    :FOR    ${x}    IN RANGE    0    ${len1}
    \    ${users1} =     Get From Dictionary    ${lig_snmp_users}    ${x}
    \    ${list_user_1}=    Get From Dictionary    ${users1}    snmpV3UserName
    \    Append To List    ${lig_Create_user}    ${list_user_1}
    Log to console and logfile    \n\nResp Content Is: ${lig_Create_user}
    Verify SNMP Users     ${LIG_New}    ${lig_Create_user}
    Log to console and logfile    \nUsers are verified successfully Security Level Authentication with SHA2



OVF292_API_TC_62 AddsnmpUser_SecLevel_AuthPriv_Authentication SHA1 And Privacy DES

    Fusion Api Login Appliance    ${APPLIANCE_IP}        ${admin_credentials}
    ${lig_edit}    Get LIG member    ${LIG_New}
    ${lig_uri}    Get Variable Value    ${lig_edit['uri']}
    Set Global Variable    ${LIG_URI}    ${lig_uri}
    ${lig_snmp}    Edit LIG body for SNMP    ${LIG_New}    ${ligs_tbird_SE_Multi_LIG_Authprotocol_SHA1_DES['snmpUsers']}    ${ligs_tbird_SE_Multi_LIG_Authprotocol_SHA1_DES['trapDestinations']}
    Set To Dictionary    ${lig_edit}    eTag=
    Set To Dictionary    ${lig_edit}    snmpConfiguration=${lig_snmp}
    ${resp}    fusion_api_edit_lig    body=${lig_edit}    uri=${LIG_URI}
    Log to console and logfile    \n\nLIG Created Successfully:${resp}
    Run Keyword If  '${resp['status_code']}' == '202'    Log to console  \nStatus Code: ${resp['status_code']} \nSuccessfully!! Edited the LIG for snmpV3 single user with auth & priv protocols and trap details\n
    ...    ELSE    FAIL
    ${task} =    Wait For Task     ${resp}     180 s    10 s
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}

    #Verify SNMP Users
    ${lig_snmp_users} =           Get Variable Value  ${ligs_tbird_SE_Multi_LIG_Authprotocol_SHA1_DES['snmpUsers']}
    ${len1} =     Get Length    ${lig_snmp_users}
    ${lig_Create_user}=    Create List
    :FOR    ${x}    IN RANGE    0    ${len1}
    \    ${users1} =     Get From Dictionary    ${lig_snmp_users}    ${x}
    \    ${list_user_1}=    Get From Dictionary    ${users1}    snmpV3UserName
    \    Append To List    ${lig_Create_user}    ${list_user_1}
    Log to console and logfile    \n\nResp Content Is: ${lig_Create_user}
    Verify SNMP Users     ${LIG_New}    ${lig_Create_user}
    Log to console and logfile    \nUsers are verified successfully Security Level Authentication with Privacy SHA and DES


OVF292_API_TC_63 AddsnmpUser_SecLevel_AuthPriv_Authentication SHA1 And Privacy AES128

    Fusion Api Login Appliance    ${APPLIANCE_IP}        ${admin_credentials}
    ${lig_edit}    Get LIG member    ${LIG_New}
    ${lig_uri}    Get Variable Value    ${lig_edit['uri']}
    Set Global Variable    ${LIG_URI}    ${lig_uri}
    ${lig_snmp}    Edit LIG body for SNMP    ${LIG_New}    ${ligs_tbird_SE_Multi_LIG_Authprotocol_SHA1_AES128['snmpUsers']}    ${ligs_tbird_SE_Multi_LIG_Authprotocol_SHA1_AES128['trapDestinations']}
    Set To Dictionary    ${lig_edit}    eTag=
    Set To Dictionary    ${lig_edit}    snmpConfiguration=${lig_snmp}
    ${resp}    fusion_api_edit_lig    body=${lig_edit}    uri=${LIG_URI}
    Log to console and logfile    \n\nLIG Created Successfully:${resp}
    Run Keyword If  '${resp['status_code']}' == '202'    Log to console  \nStatus Code: ${resp['status_code']} \nSuccessfully!! Edited the LIG for snmpV3 single user with auth & priv protocols and trap details\n
    ...    ELSE    FAIL
    ${task} =    Wait For Task     ${resp}     180 s    10 s
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}

    #Verify SNMP Users
    ${lig_snmp_users} =           Get Variable Value  ${ligs_tbird_SE_Multi_LIG_Authprotocol_SHA1_AES128['snmpUsers']}
    ${len1} =     Get Length    ${lig_snmp_users}
    ${lig_Create_user}=    Create List
    :FOR    ${x}    IN RANGE    0    ${len1}
    \    ${users1} =     Get From Dictionary    ${lig_snmp_users}    ${x}
    \    ${list_user_1}=    Get From Dictionary    ${users1}    snmpV3UserName
    \    Append To List    ${lig_Create_user}    ${list_user_1}
    Log to console and logfile    \n\nResp Content Is: ${lig_Create_user}
    Verify SNMP Users     ${LIG_New}    ${lig_Create_user}
    Log to console and logfile    \nUsers are verified successfully Security Level Authentication with Privacy SHA and AES128



OVF292_API_TC_64 AddsnmpUser_SecLevel_AuthPriv_Authentication SHA2 And Privacy AES192

    Fusion Api Login Appliance    ${APPLIANCE_IP}        ${admin_credentials}
    ${lig_edit}    Get LIG member    ${LIG_New}
    ${lig_uri}    Get Variable Value    ${lig_edit['uri']}
    Set Global Variable    ${LIG_URI}    ${lig_uri}
    ${lig_snmp}    Edit LIG body for SNMP    ${LIG_New}    ${ligs_tbird_SE_Multi_LIG_Authprotocol_SHA2_AES192['snmpUsers']}    ${ligs_tbird_SE_Multi_LIG_Authprotocol_SHA2_AES192['trapDestinations']}
    Set To Dictionary    ${lig_edit}    eTag=
    Set To Dictionary    ${lig_edit}    snmpConfiguration=${lig_snmp}
    ${resp}    fusion_api_edit_lig    body=${lig_edit}    uri=${LIG_URI}
    Log to console and logfile    \n\nLIG Created Successfully:${resp}
    Run Keyword If  '${resp['status_code']}' == '202'    Log to console  \nStatus Code: ${resp['status_code']} \nSuccessfully!! Edited the LIG for snmpV3 single user with auth & priv protocols and trap details\n
    ...    ELSE    FAIL
    ${task} =    Wait For Task     ${resp}     180 s    10 s
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}

    #Verify SNMP Users
    ${lig_snmp_users} =           Get Variable Value  ${ligs_tbird_SE_Multi_LIG_Authprotocol_SHA2_AES192['snmpUsers']}
    ${len1} =     Get Length    ${lig_snmp_users}
    ${lig_Create_user}=    Create List
    :FOR    ${x}    IN RANGE    0    ${len1}
    \    ${users1} =     Get From Dictionary    ${lig_snmp_users}    ${x}
    \    ${list_user_1}=    Get From Dictionary    ${users1}    snmpV3UserName
    \    Append To List    ${lig_Create_user}    ${list_user_1}
    Log to console and logfile    \n\nResp Content Is: ${lig_Create_user}
    Verify SNMP Users     ${LIG_New}    ${lig_Create_user}
    Log to console and logfile    \nUsers are verified successfully Security Level Authentication with Privacy SHA2 and AES192


OVF292_API_TC_65 AddsnmpUser_SecLevel_AuthPriv_Authentication SHA2 And Privacy AES256

    Fusion Api Login Appliance    ${APPLIANCE_IP}        ${admin_credentials}
    ${lig_edit}    Get LIG member    ${LIG_New}
    ${lig_uri}    Get Variable Value    ${lig_edit['uri']}
    Set Global Variable    ${LIG_URI}    ${lig_uri}
    ${lig_snmp}    Edit LIG body for SNMP    ${LIG_New}    ${ligs_tbird_SE_Multi_LIG_Authprotocol_SHA2_AES256['snmpUsers']}    ${ligs_tbird_SE_Multi_LIG_Authprotocol_SHA2_AES256['trapDestinations']}
    Set To Dictionary    ${lig_edit}    eTag=
    Set To Dictionary    ${lig_edit}    snmpConfiguration=${lig_snmp}
    ${resp}    fusion_api_edit_lig    body=${lig_edit}    uri=${LIG_URI}
    Log to console and logfile    \n\nLIG Created Successfully:${resp}
    Run Keyword If  '${resp['status_code']}' == '202'    Log to console  \nStatus Code: ${resp['status_code']} \nSuccessfully!! Edited the LIG for snmpV3 single user with auth & priv protocols and trap details\n
    ...    ELSE    FAIL
    ${task} =    Wait For Task     ${resp}     180 s    10 s
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}

    #Verify SNMP Users
    ${lig_snmp_users} =           Get Variable Value  ${ligs_tbird_SE_Multi_LIG_Authprotocol_SHA2_AES256['snmpUsers']}
    ${len1} =     Get Length    ${lig_snmp_users}
    ${lig_Create_user}=    Create List
    :FOR    ${x}    IN RANGE    0    ${len1}
    \    ${users1} =     Get From Dictionary    ${lig_snmp_users}    ${x}
    \    ${list_user_1}=    Get From Dictionary    ${users1}    snmpV3UserName
    \    Append To List    ${lig_Create_user}    ${list_user_1}
    Log to console and logfile    \n\nResp Content Is: ${lig_Create_user}
    Verify SNMP Users     ${LIG_New}    ${lig_Create_user}
    Log to console and logfile    \nUsers are verified successfully Security Level Authentication with Privacy SHA2 and AES192

OVF292_API_TC_66 AddsnmpUser_DuplicateNamesNotAllowed

    Log to console and logfile    \nSNMP User Duplicate Not Allowed

    Fusion Api Login Appliance    ${APPLIANCE_IP}        ${admin_credentials}
    ${lig_edit}    Get LIG member    ${LIG_New}
    ${lig_uri}    Get Variable Value    ${lig_edit['uri']}
    Set Global Variable    ${LIG_URI}    ${lig_uri}
    ${lig_snmp}    Edit LIG body for SNMP    ${LIG_New}    ${lig_tbird_edit_snmp_user_duplicate_error['snmpUsers']}    ${lig_tbird_edit_snmp_user_duplicate_error['trapDestinations']}
    Set To Dictionary    ${lig_edit}    eTag=
    Set To Dictionary    ${lig_edit}    snmpConfiguration=${lig_snmp}
    ${resp}    fusion_api_edit_lig    body=${lig_edit}    uri=${LIG_URI}
    Log to console and logfile    \n\nLIG Created Successfully:${resp}
    ${message} =    Get Variable Value  ${error_lig['message']}
    ${errorCode} =    Get Variable Value  ${error_lig['errorCode']}
    Log to console and logfile    \n
    Log to console and logfile    \nMessage:${message}
    ${valDict} =     Create Dictionary    status_code=${400}
    ...                                 message=${message}
    ...                                 errorCode=${errorCode}
    Validate Response    ${resp}    ${valDict}

OVF292_API_TC_67 AddsnmpUser_Invalidvalues_UserName

    Log to console and logfile    \nInvalidvalues Username
    Fusion Api Login Appliance    ${APPLIANCE_IP}        ${admin_credentials}
    ${lig_edit}    Get LIG member    ${LIG_New}
    ${lig_uri}    Get Variable Value    ${lig_edit['uri']}
    Set Global Variable    ${LIG_URI}    ${lig_uri}
    ${lig_snmp}    Edit LIG body for SNMP    ${LIG_New}    ${lig_tbird_Invalidvalues_UserName['snmpUsers']}    ${lig_tbird_Invalidvalues_UserName['trapDestinations']}
    Set To Dictionary    ${lig_edit}    eTag=
    Set To Dictionary    ${lig_edit}    snmpConfiguration=${lig_snmp}
    ${resp}    fusion_api_edit_lig    body=${lig_edit}    uri=${LIG_URI}
    Log to console and logfile    \n\nLIG Created Successfully:${resp}
    ${message} =    Get Variable Value  ${error_invalid_user['message']}
    ${errorCode} =    Get Variable Value  ${error_invalid_user['errorCode']}
    Log to console and logfile    \nMessage:${message}
    ${valDict} =     Create Dictionary    status_code=${400}
    ...                                 message=${message}
    ...                                 errorCode=${errorCode}
    Validate Response    ${resp}    ${valDict}


OVF292_API_TC_68 AddsnmpUser_Invalidvalues_AuthPassPhrase

    Log to console and logfile    \nInvalid Auth Phrase Password Verification
    Fusion Api Login Appliance    ${APPLIANCE_IP}        ${admin_credentials}
    ${lig_edit}    Get LIG member    ${LIG_New}
    ${lig_uri}    Get Variable Value    ${lig_edit['uri']}
    Set Global Variable    ${LIG_URI}    ${lig_uri}
    ${lig_snmp}    Edit LIG body for SNMP    ${LIG_New}    ${lig_tbird_Invalidvalues_AuthPassPhrase['snmpUsers']}    ${lig_tbird_Invalidvalues_AuthPassPhrase['trapDestinations']}
    Set To Dictionary    ${lig_edit}    eTag=
    Set To Dictionary    ${lig_edit}    snmpConfiguration=${lig_snmp}
    ${resp}    fusion_api_edit_lig    body=${lig_edit}    uri=${LIG_URI}
    Log to console and logfile    \n\nLIG Created Successfully:${resp}
    ${message} =    Get Variable Value  ${error_invalid_Auth_password['message']}
    ${errorCode} =    Get Variable Value  ${error_invalid_Auth_password['errorCode']}
    Log to console and logfile    \nMessage:${message}
    ${valDict} =     Create Dictionary    status_code=${400}
    ...                                 message=${message}
    ...                                 errorCode=${errorCode}
    Validate Response    ${resp}    ${valDict}

OVF292_API_TC_69 AddsnmpUser_Invalidvalues_PrivPassPhrase

    Log to console and logfile    \nInvalid Auth Privilege Phrase Password Verification
    Fusion Api Login Appliance    ${APPLIANCE_IP}        ${admin_credentials}
    ${lig_edit}    Get LIG member    ${LIG_New}
    ${lig_uri}    Get Variable Value    ${lig_edit['uri']}
    Set Global Variable    ${LIG_URI}    ${lig_uri}
    ${lig_snmp}    Edit LIG body for SNMP    ${LIG_New}    ${lig_tbird_Invalidvalues_Auth_Priv_Pass_Phrase['snmpUsers']}    ${lig_tbird_Invalidvalues_Auth_Priv_Pass_Phrase['trapDestinations']}
    Set To Dictionary    ${lig_edit}    eTag=
    Set To Dictionary    ${lig_edit}    snmpConfiguration=${lig_snmp}
    ${resp}    fusion_api_edit_lig    body=${lig_edit}    uri=${LIG_URI}
    Log to console and logfile    \n\nLIG Created Successfully:${resp}
    ${message} =    Get Variable Value  ${error_invalid_Priv_password['message']}
    ${errorCode} =    Get Variable Value  ${error_invalid_Priv_password['errorCode']}
    Log to console and logfile    \nMessage:${message}
    ${valDict} =     Create Dictionary    status_code=${400}
    ...                                 message=${message}
    ...                                 errorCode=${errorCode}
    Validate Response    ${resp_lig}    ${valDict}


OVF292_API_TC_70 AddsnmpUser_MandatoryAttributeCheck_Name
    Log to console and logfile    \nInvalid Auth Privilege Phrase Password Verification
    Fusion Api Login Appliance    ${APPLIANCE_IP}        ${admin_credentials}
    ${lig_edit}    Get LIG member    ${LIG_New}
    ${lig_uri}    Get Variable Value    ${lig_edit['uri']}
    Set Global Variable    ${LIG_URI}    ${lig_uri}
    ${lig_snmp}    Edit LIG body for SNMP    ${LIG_New}    ${lig_tbird_Mandatory_Attribute_Check_Name['snmpUsers']}    ${lig_tbird_Mandatory_Attribute_Check_Name['trapDestinations']}
    Set To Dictionary    ${lig_edit}    eTag=
    Set To Dictionary    ${lig_edit}    snmpConfiguration=${lig_snmp}
    ${resp}    fusion_api_edit_lig    body=${lig_edit}    uri=${LIG_URI}
    Log to console and logfile    \n\nLIG Created Successfully:${resp}
    ${message} =    Get Variable Value  ${error_Mandatory_Attribute_Check['message']}
    ${errorCode} =    Get Variable Value  ${error_Mandatory_Attribute_Check['errorCode']}
    Log to console and logfile    \nMessage:${message}
    ${valDict} =     Create Dictionary    status_code=${400}
    ...                                 message=${message}
    ...                                 errorCode=${errorCode}
    Validate Response    ${resp}    ${valDict}


OVF292_API_TC_71 AddsnmpUser_MandatoryAttributeCheck_AuthAlgo
    Log to console and logfile    \nInvalid Auth Privilege Phrase Password Verification
    Fusion Api Login Appliance    ${APPLIANCE_IP}        ${admin_credentials}
    ${lig_edit}    Get LIG member    ${LIG_New}
    ${lig_uri}    Get Variable Value    ${lig_edit['uri']}
    Set Global Variable    ${LIG_URI}    ${lig_uri}
    ${lig_snmp}    Edit LIG body for SNMP    ${LIG_New}    ${lig_tbird_Mandatory_Attribute_Check_Authlgo['snmpUsers']}    ${lig_tbird_Mandatory_Attribute_Check_Authlgo['trapDestinations']}
    Set To Dictionary    ${lig_edit}    eTag=
    Set To Dictionary    ${lig_edit}    snmpConfiguration=${lig_snmp}
    ${resp}    fusion_api_edit_lig    body=${lig_edit}    uri=${LIG_URI}
    Log to console and logfile    \n\nLIG Created Successfully:${resp}
    ${message} =    Get Variable Value  ${error_Mandatory_Attribute_Check['message']}
    ${errorCode} =    Get Variable Value  ${error_Mandatory_Attribute_Check['errorCode']}
    Log to console and logfile    \nMessage:${message}
    ${valDict} =     Create Dictionary    status_code=${400}
    ...                                 message=${message}
    ...                                 errorCode=${errorCode}
    Validate Response    ${resp}    ${valDict}


OVF292_API_TC_72 AddsnmpUser_MandatoryAttributeCheck_AuthPassPhrase

    Log to console and logfile    \nInvalid Auth Password Phrase MandatoryAttribute Check Verification
    Fusion Api Login Appliance    ${APPLIANCE_IP}        ${admin_credentials}
    ${lig_edit}    Get LIG member    ${LIG_New}
    ${lig_uri}    Get Variable Value    ${lig_edit['uri']}
    Set Global Variable    ${LIG_URI}    ${lig_uri}
    ${lig_snmp}    Edit LIG body for SNMP    ${LIG_New}    ${lig_tbird_Mandatory_Attribute_Check_AuthPassPhrase['snmpUsers']}    ${lig_tbird_Mandatory_Attribute_Check_AuthPassPhrase['trapDestinations']}
    Set To Dictionary    ${lig_edit}    eTag=
    Set To Dictionary    ${lig_edit}    snmpConfiguration=${lig_snmp}
    ${resp}    fusion_api_edit_lig    body=${lig_edit}    uri=${LIG_URI}
    Log to console and logfile    \n\nLIG Created Successfully:${resp}
    ${message} =    Get Variable Value  ${error_invalid_Auth_password['message']}
    ${errorCode} =    Get Variable Value  ${error_invalid_Auth_password['errorCode']}
    Log to console and logfile    \nMessage:${message}
    ${valDict} =     Create Dictionary    status_code=${400}
    ...                                 message=${message}
    ...                                 errorCode=${errorCode}
    Validate Response    ${resp}    ${valDict}


OVF292_API_TC_73 AddsnmpUser_MandatoryAttributeCheck_PrivAlgorithm

    Log to console and logfile    \n Auth Privilege Phrase MandatoryAttribute Check Verification
    Fusion Api Login Appliance    ${APPLIANCE_IP}        ${admin_credentials}
    ${lig_edit}    Get LIG member    ${LIG_New}
    ${lig_uri}    Get Variable Value    ${lig_edit['uri']}
    Set Global Variable    ${LIG_URI}    ${lig_uri}
    ${lig_snmp}    Edit LIG body for SNMP    ${LIG_New}    ${lig_tbird_Mandatory_Attribute_Check_Auth_Priv_PassPhrase['snmpUsers']}    ${lig_tbird_Mandatory_Attribute_Check_Auth_Priv_PassPhrase['trapDestinations']}
    Set To Dictionary    ${lig_edit}    eTag=
    Set To Dictionary    ${lig_edit}    snmpConfiguration=${lig_snmp}
    ${resp}    fusion_api_edit_lig    body=${lig_edit}    uri=${LIG_URI}
    Log to console and logfile    \n\nLIG Created Successfully:${resp}
    ${message} =    Get Variable Value  ${error_Mandatory_Attribute_Check['message']}
    ${errorCode} =    Get Variable Value  ${error_Mandatory_Attribute_Check['errorCode']}
    Log to console and logfile    \nMessage:${message}
    ${valDict} =     Create Dictionary    status_code=${400}
    ...                                 message=${message}
    ...                                 errorCode=${errorCode}
    Validate Response    ${resp}    ${valDict}


OVF292_API_TC_74 AddsnmpUser_Passphrase_LengthCheck

    Log to console and logfile    \n Password Phrase Length Verification
    Fusion Api Login Appliance    ${APPLIANCE_IP}        ${admin_credentials}
    ${lig_edit}    Get LIG member    ${LIG_New}
    ${lig_uri}    Get Variable Value    ${lig_edit['uri']}
    Set Global Variable    ${LIG_URI}    ${lig_uri}
    ${lig_snmp}    Edit LIG body for SNMP    ${LIG_New}    ${lig_tbird_Password_Length_Check['snmpUsers']}    ${lig_tbird_Password_Length_Check['trapDestinations']}
    Set To Dictionary    ${lig_edit}    eTag=
    Set To Dictionary    ${lig_edit}    snmpConfiguration=${lig_snmp}
    ${resp}    fusion_api_edit_lig    body=${lig_edit}    uri=${LIG_URI}
    Log to console and logfile    \n\nLIG Created Successfully:${resp}
    ${message} =    Get Variable Value  ${error_invalid_Priv_password['message']}
    ${errorCode} =    Get Variable Value  ${error_invalid_Priv_password['errorCode']}
    Log to console and logfile    \nMessage:${message}

    ${valDict} =     Create Dictionary    status_code=${400}
    ...                                 message=${message}
    ...                                 errorCode=${errorCode}
    Validate Response    ${resp}    ${valDict}
    Log to console and logfile    \n Password Phrase Length Verification is less than 8 ....verified successfully!!!!



OVF292_API_TC_75 AddsnmpUser_MaximumSnmpUsersAllowedToBeAdded

    Log to console and logfile    \n Maximum SnmpUsers Allowed To Be Added
    Fusion Api Login Appliance    ${APPLIANCE_IP}        ${admin_credentials}
    ${lig_edit}    Get LIG member    ${LIG_New}
    ${lig_uri}    Get Variable Value    ${lig_edit['uri']}
    Set Global Variable    ${LIG_URI}    ${lig_uri}
    ${lig_snmp}    Edit LIG body for SNMP    ${LIG_New}    ${lig_tbird_Maximum_No_Of_Users['snmpUsers']}    ${lig_tbird_Maximum_No_Of_Users['trapDestinations']}
    Set To Dictionary    ${lig_edit}    eTag=
    Set To Dictionary    ${lig_edit}    snmpConfiguration=${lig_snmp}
    ${resp}    fusion_api_edit_lig    body=${lig_edit}    uri=${LIG_URI}
    Log to console and logfile    \n\nLIG Created Successfully:${resp}
    ${message} =    Get Variable Value  ${error_Maximum_No_of_users['message']}
    ${errorCode} =    Get Variable Value  ${error_Maximum_No_of_users['errorCode']}
    Log to console and logfile    \nMessage:${message}
    ${valDict} =     Create Dictionary    status_code=${400}
    ...                                 message=${message}
    ...                                 errorCode=${errorCode}
    Validate Response    ${resp}    ${valDict}


OVF292_API_TC_81 Modify snmp User_Auth and Privacy details

    Fusion Api Login Appliance    ${APPLIANCE_IP}        ${admin_credentials}
    ${lig_edit}    Get LIG member    ${LIG_New}
    ${lig_uri}    Get Variable Value    ${lig_edit['uri']}
    Set Global Variable    ${LIG_URI}    ${lig_uri}
    ${lig_snmp}    Edit LIG body for SNMP    ${LIG_New}    ${lig_tbird_add_lig_snmp_users['snmpUsers']}    ${lig_tbird_add_lig_snmp_users['trapDestinations']}
    Set To Dictionary    ${lig_edit}    eTag=
    Set To Dictionary    ${lig_edit}    snmpConfiguration=${lig_snmp}
    ${resp}    fusion_api_edit_lig    body=${lig_edit}    uri=${LIG_URI}
    Log to console and logfile    \n\nLIG Created Successfully:${resp}

     ${lig_edit}    Get LIG member    ${LIG_New}
    ${lig_uri}    Get Variable Value    ${lig_edit['uri']}
    Set Global Variable    ${LIG_URI}    ${lig_uri}
    ${lig_snmp}    Edit LIG body for SNMP    ${LIG_New}    ${lig_tbird_edit_lig_snmp_users['snmpUsers']}    ${lig_tbird_edit_lig_snmp_users['trapDestinations']}
    Set To Dictionary    ${lig_edit}    eTag=
    Set To Dictionary    ${lig_edit}    snmpConfiguration=${lig_snmp}
    ${resp}    fusion_api_edit_lig    body=${lig_edit}    uri=${LIG_URI}
    Log to console and logfile    \n\nLIG Created Successfully:${resp}
    #Verify SNMP Users

    ${lig_snmp_users} =           Get Variable Value  ${lig_tbird_edit_lig_snmp_users['snmpUsers']}
    ${len1} =     Get Length    ${lig_snmp_users}
    ${lig_Create_user}=    Create List
    :FOR    ${x}    IN RANGE    0    ${len1}
    \    ${users1} =     Get From Dictionary    ${lig_snmp_users}    ${x}
    \    ${list_user_1}=    Get From Dictionary    ${users1}    snmpV3UserName
    \    Append To List    ${lig_Create_user}    ${list_user_1}
    Log to console and logfile    \n\nResp Content Is: ${lig_Create_user}
    Verify SNMP Users     ${LIG_New}    ${lig_Create_user}
    Log to console and logfile    \nUsers are verified successfully Security Level Authentication and Privacy Details

*** Keywords ***


Create LIG
    [Documentation]    Suite Setup Tasks
    [Arguments]        ${body1}
    Fusion Api Login Appliance    ${APPLIANCE_IP}    ${admin_credentials}
    ${body}    Build LIG body    ${body1}
    Log to console and logfile    \n-Creating LIG ${body}
    ${resp}    Fusion Api Create LIG    ${body}
    ${task} =   Wait For Task   ${resp}    60s  2s

Edit LIG body for SNMP
    [Documentation]    Edit LIG for SNMPv3
    [Arguments]    ${LIG1}    ${snmpusers}    ${trapdestination}
    Fusion Api Login Appliance    ${APPLIANCE_IP}    ${admin_credentials}
    ${lig_get}    Fusion Api Get Lig    param=?filter=name=${LIG1}
    ${lig_snmp}    Get Variable Value    ${lig_get['members'][0]['snmpConfiguration']}
    Set To Dictionary    ${lig_snmp}    v3Enabled=true
    Set To Dictionary    ${lig_snmp}    snmpUsers=${snmpusers}
    Set To Dictionary    ${lig_snmp}    trapDestinations=${trapdestination}
    [Return]    ${lig_snmp}
    [Return]    ${resp}

Verify Interconnect State
    [Documentation]    Interconnect state verification
    [Arguments]        ${ICM_1}        ${POWER_STATE}
    Fusion Api Login Appliance         ${APPLIANCE_IP}        ${admin_credentials}
    ${ic} =        Get IC        ${ICM_1}
    ${State} =    Get From IC        ${ic}    state
    Log to console and logfile        \tICM state is ${ICM_1}:${State}
    Should Be Equal As Strings    ${State}    ${POWER_STATE}

Get SNMPUSers from Data
    [Documentation]    SNMPUSers from Data
    [Arguments]    ${li_body}
    ${li_snmp_configuration} =           Get Variable Value  ${li_body}
    Log to console and logfile    \n\nResp Content Is: ${li_snmp_configuration}
    ${li_snmp_users} =           Get Variable Value  ${li_snmp_configuration['snmpUsers']}
    Log to console and logfile    \n\nResp Content Is: ${li_snmp_users}
    ${len1} =     Get Length    ${li_snmp_users}
    ${li_Create_user}=    Create List
    #${li_Create_user_Sec_Level}=    Create List
    :FOR    ${x}    IN RANGE    0    ${len1}
    \    ${users1} =     Get From Dictionary    ${li_snmp_users}    ${x}
    \    ${list_user_1}=    Get From Dictionary    ${users1}    snmpV3UserName
    \    Append To List    ${li_Create_user}    ${list_user_1}

    Log to console and logfile    \n\nUsers are: ${li_Create_user}

    [Return]   ${li_Create_user}


Get Trap Destinations IPs
    [Documentation]    Getting Trap Destinations IPs
    [Arguments]    ${li}
    ${li_uri} =     Get LI URI   ${li}
    ${resp_li} =    Fusion Api Get Li    ${li_uri}
    ${snmp_config}=    Get From Dictionary    ${resp_li}    snmpConfiguration
    ${trap_dest_dict}=    Get From Dictionary    ${snmp_config}    trapDestinations
    ${len1} =     Get Length    ${trap_dest_dict}
    ${li_Create_traps_ip}=    Create List
    ${trap_type_list}=    Create List
    ${engine_id_list}=    Create List
    :FOR    ${x}    IN RANGE    0    ${len1}
    \    ${trapips} =     Get From Dictionary    ${trap_dest_dict}    ${x}
    \    ${list_trapips}=    Get From Dictionary    ${trapips}    trapDestination
    \    Append To List    ${li_Create_traps_ip}    ${list_trapips}
    Log to console and logfile    \n\nTrap Ips are are: ${li_Create_traps_ip}
    [Return]    ${li_Create_traps_ip}

Get Trap Destinations Trap Type
    [Documentation]    Getting Trap Destinations Trap Type
    [Arguments]    ${li}
    ${li_uri} =     Get LI URI   ${li}
    log to console    LI URI is ${li_uri}
    ${resp_li} =    Fusion Api Get Li    ${li_uri}
    ${snmp_config}=    Get From Dictionary    ${resp_li}    snmpConfiguration
    ${trap_dest_dict}=    Get From Dictionary    ${snmp_config}    trapDestinations
    ${len1} =     Get Length    ${trap_dest_dict}
    ${trap_type_list}=    Create List
    :FOR    ${x}    IN RANGE    0    ${len1}
    \    ${trap_type}=    Get From Dictionary    ${trap_dest_dict[0]}    inform
    \    Append To List    ${trap_type_list}    ${trap_type}
    Log to console and logfile    \n\nTrap Type is: ${trap_type}
    [Return]   ${trap_type}

Get Trap Destinations Engine ID
    [Documentation]    Getting Trap Destinations Engine ID
    [Arguments]    ${li}
    ${li_uri} =     Get LI URI   ${li}
    ${resp_li} =    Fusion Api Get Li    ${li_uri}
    ${snmp_config}=    Get From Dictionary    ${resp_li}    snmpConfiguration
    ${trap_dest_dict}=    Get From Dictionary    ${snmp_config}    trapDestinations
    ${len1} =     Get Length    ${trap_dest_dict}
    ${engine_id_list}=    Create List
    :FOR    ${x}    IN RANGE    0    ${len1}
    \    ${Engine_ID_Details}=    Get From Dictionary    ${trap_dest_dict[0]}    engineId
    \    Append To List    ${engine_id_list}    ${Engine_ID_Details}
    Log to console and logfile    \n\nUsers are: ${engine_id_list}
    [Return]    ${engine_id_list}

Edit LI
    [Documentation]    Perform Edit LI
    [Arguments]        ${li}        ${li_body}
    Fusion Api Login Appliance    ${APPLIANCE_IP}    ${admin_credentials}
    ${li_uri} =     Get LI URI   ${li}
    log to console    LI URI is ${li_uri}
    ${resp} =    Fusion Api Get Li    ${li_uri}
    log to console  Editing Li with snmp ${resp}
    ${respl} =    Fusion Api Update snmp configuration    body=${li_body}    uri=${li_uri}
    log to console  Editing Li with snmp ${respl}
    #${task} =  Wait For Task   ${respl}    300s    2s
    #Run Keyword If '${respl['status_code']}' != '202'   Fail    ELSE    Log to Console  \n-LI  Edited successfully
    [Return]    ${respl}


Verify SNMP Users Edit LI
    [Documentation]    Verifying SNMP Users Edit LI
    [Arguments]        ${li}        ${data_users}    ${Security_Level}
    Log to console and logfile    Validating Interconnects for SNMP
    Fusion Api Login Appliance    ${APPLIANCE_IP}    ${admin_credentials}
    ${li_uri} =     Get LI URI   ${li}
    log to console    LI URI is ${li_uri}
    ${resp_li} =    Fusion Api Get Li    ${li_uri}
    log to console  Editing Li with snmp ${resp_li}

    #For Single & Multiple users
    ${snmp_config} =     Get From Dictionary        ${resp_li}    snmpConfiguration
    Log to console and logfile    SNMP Config..${snmp_config}
    ${snmp_users} =     Get From Dictionary       ${snmp_config}    snmpUsers
    Log to console and logfile    SNMP Users...${snmp_users}
    ${len} =     Get Length    ${snmp_users}
    Log to console and logfile    Length..${len}
    ${Create_user}=    Create List
    ${Level}=    Create List
    :FOR    ${x}    IN RANGE    0    ${len}
    \    ${users} =     Get From Dictionary    ${snmp_users}    ${x}
    \    ${list_user}=    Get From Dictionary    ${users}    snmpV3UserName
    \    Append To List    ${Create_user}    ${list_user}
    \    ${users} =     Get From Dictionary    ${snmp_users}    ${x}
    \    ${User_Sec_Level}=    Get From Dictionary    ${users}    securityLevel
    \    Append To List    ${Level}    ${User_Sec_Level}
    #User Names
    ${len}    Get Length    ${data_users}
    :For    ${x}    In Range    0    ${len}
    \    List Should Contain Value    ${Create_user}    ${data_users[${x}]}
    #Security Level
    ${len}    Get Length    ${Security_Level}
    :For    ${x}    In Range    0    ${len}
    \    List Should Contain Value    ${Level}    ${Security_Level[${x}]}
    #\     Lists Should Be Equal    ${Level}    ${Security_Level}

    #Lists Should Be Equal    ${Level}    ${Security_Level}

Verify LI Consistency State
    [Documentation]    Verifying LI Consistency State
    [Arguments]        ${li}    ${State}
    ${li_uri} =     Get LI URI   ${li}
    ${resp} =     Fusion Api Get Li    ${li_uri}
    ${LI_Consistent_state} =     Get From Dictionary        ${resp}    consistencyStatus
    Should Be Equal As Strings    ${LI_Consistent_state}    ${State}
    Log to console and logfile    \n\nConsistent state Is: ${LI_Consistent_state}

Get IC
    [Documentation]    Interconnect details
    [Arguments]        ${ICM_NAME}
    ${resp} =   fusion api get interconnect
    Log        ${resp}
    ${ics} =     Get From Dictionary     ${resp}    members
    ${l} =     Get Length    ${ics}
    :FOR    ${x}    IN RANGE    0    ${l}
    \   ${ic} =     Get From List   ${ics}    ${x}
    \     Exit For Loop If     '${ic['name']}' == '${ICM_NAME}'
    [Return]    ${ic}
    Log        ${ic}

Perform an Update From Group
    [Documentation]    Update From Group
    [Arguments]        ${li}=${li}    ${timeout}=5 min     ${interval}=15s
    ${li_uri} =    Get LI URI    ${li}
    ${resp} =         Fusion Api Update from group    ${li_uri}
    ${task} =        Wait For Task     ${resp}     ${timeout}        ${interval}
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}

Verify SNMP Users
    [Documentation]    Verifying SNMP Users
    [Arguments]        ${lig}        ${data_users}
    Fusion Api Login Appliance    ${APPLIANCE_IP}    ${admin_credentials}
    Log to console and logfile    Validating Interconnects for SNMP
    ${lig_uri} =    Get LIG URI    ${lig}
    ${Resp_Lig} =     fusion_api_get_lig    ${lig_uri}

    #For Single & Multiple users
    ${snmp_config} =     Get From Dictionary        ${Resp_Lig}    snmpConfiguration
    Log to console and logfile    SNMP Config..${snmp_config}
    ${snmp_users} =     Get From Dictionary       ${snmp_config}    snmpUsers
    Log to console and logfile    SNMP Users...${snmp_users}
    ${len} =     Get Length    ${snmp_users}
    Log to console and logfile    Length..${len}
    ${Create_user}=    Create List
    :FOR    ${x}    IN RANGE    0    ${len}
    \    ${users} =     Get From Dictionary    ${snmp_users}    ${x}
    \    ${list_user}=    Get From Dictionary    ${users}    snmpV3UserName
    \    Append To List    ${Create_user}    ${list_user}

    ${len}    Get Length    ${data_users}
    :For    ${x}    In Range    0    ${len}
    \    List Should Contain Value    ${Create_user}    ${data_users[${x}]}

    #\    List Should Contain Value    ${Create_user}    ${data_users}
    #Log to console and logfile    list of SNMP User Name List..${Create_user}
    #List Should Contain Value    ${Create_user}    ${data_users}
    Log to console and logfile    SNMP Users are successfully Verified



