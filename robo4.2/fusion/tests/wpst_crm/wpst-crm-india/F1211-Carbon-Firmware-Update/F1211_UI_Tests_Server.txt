
*** Settings ***

Documentation		Continuous Integration Tests for RoboGalaxy dev Branch
Resource			./OVAConfig.txt
Force Tags			Buildup
Library				SSHLibrary
Library				String
Library				Collections
Library				RoboGalaxyLibrary
Library             FusionLibrary


*** Variables ***
${ApplianceUrl}    https://10.10.3.99
#${ApplianceUrl}    https://15.212.167.3
#${Browser}         IE
${Browser}         FireFox
#${Browser}         Chrome
#${SeleniumSpeed}   0.03
${ICM_NAME}         CN7515048X, interconnect 4
${ICM_BAY}          4
${ENCLOSURE_NAME}   0000000010
#${ENCLOSURE_NAME}   CN7515048X
${HOVER1}           xpath=//*[@id='cic-enclosure-show-switchbays']/ol[@class='hp-bays cic-enclosure-switch-row'][${ICM_BAY}]
${HOVER2}           xpath=//*[@id='cic-enclosure-show-switchbays']/ol[@class='hp-bays cic-enclosure-switch-row'][${ICM_BAY}]

${ICM_a_1}                      ${ENCLOSURE_NAME}, interconnect 1
${ICM_a_2}                      ${ENCLOSURE_NAME}, interconnect 2
${ICM_b_4}                      ${ENCLOSURE_NAME}, interconnect 4
${ICM_b_5}                      ${ENCLOSURE_NAME}, interconnect 5

${UPGRADE_FIRMWARE}             1.01.04
${DOWNGRADE_FIRMWARE}           1.00.26

*** Keywords ***
Power Off ICM
    #
    ${status}=  tbird_fusion_ui_chloride_power_off   @{TestData.TB_interconnect}
    run keyword if  '${status}'=='False'    Fail    'Power Off action failed on Interconnect'
    #
    
Power On ICM
    #
    ${status}=  tbird_fusion_ui_chloride_power_on   @{TestData.TB_interconnect}
    run keyword if  '${status}'=='False'    Fail    'Power On action failed on Interconnect'
    #
Check Action Menu Entry
    Wait for Element and Click  hp-main-menu-control
    Wait for Element and Click  link=Interconnects
    Wait for Element and Click  xpath=//*[@id='cic-interconnect-actions']/label
    ${status}=  Wait for Element Visible    link=Clear port counter
    run keyword if  '${status}'=='True'    Fail    'Clear port counter is visible'
    ${status}=  Wait for Element Visible    link=Edit
    run keyword if  '${status}'=='True'    Fail    'Edit is visible'
    ${status}=  Wait for Element Visible    link=Reapply configuration
    run keyword if  '${status}'=='True'    Fail    'Reapply configuration is visible'
    ${status}=  Wait for Element Visible    link=Loop and Pause flood Protection
    run keyword if  '${status}'=='True'    Fail    'Loop and Pause flood Protection is visible'

Check UID is OFF
    Wait for Element and Click  hp-main-menu-control
    Wait for Element and Click  link=Interconnects
    sleep   3
    Wait for Element and Click  xpath=//td[@class='' and text()='${ICM_NAME}']
    sleep   5
    ${status}=  Wait for Element Visible    xpath=//*[@id='cic-interconnect-show-uid-light-control' and @class='hp-uid-big hp-tooltipped']
    run keyword if  '${status}'=='False'    Fail    'UID is ON'

Check Management Interface
    Wait for Element and Click  hp-main-menu-control
    Wait for Element and Click  link=Interconnects
    sleep   3
    Wait for Element and Click  xpath=//td[@class='' and text()='${ICM_NAME}']
    sleep   5
    Wait for Element and Click  xpath=//*[@id='cic-interconnect-panel-selector']/div
    Wait for Element and Click  link=General
    Wait for Element Visible    xpath=//*[@id='cic-interconnect-details-management-interface-div']
    sleep   5
    ${status}=  get text    xpath=//*[@id='cic-interconnect-details-management-interface-div']
    log to console  ${status}
    run keyword if  '${status}'!='none'    Fail    'It is not none'

Check ICM Data
    [Arguments]     ${icm_name}
    Wait for Element and Click  hp-main-menu-control
    Wait for Element and Click  link=Interconnects
    sleep   3
    Wait for Element and Click  xpath=//td[@class='' and text()='${icm_name}']
    sleep   5
    Wait for Element and Click  xpath=//*[@id='cic-interconnect-panel-selector']/div
    Wait for Element and Click  link=General
    Wait for Element Visible    xpath=//*[@id='cic-interconnect-details-version']
    sleep   5
    ${frmversion}=  get text    xpath=//*[@id='cic-interconnect-details-version']
    #log to console  ${frmversion}
    Wait for Element Visible    xpath=//*[@id='cic-interconnect-details-module-state']
    sleep   5
    ${state}=  get text    xpath=//*[@id='cic-interconnect-details-module-state']
    #log to console  ${state}
    Wait for Element Visible    xpath=//*[@id='cic-interconnect-details-baseline-version']
    sleep   5
    ${baseversion}=  get text    xpath=//*[@id='cic-interconnect-details-baseline-version']
    #log to console  ${baseversion}
    Wait for Element Visible    xpath=//*[@id='cic-interconnect-details-interconnect-power']
    sleep   5
    ${powerstate}=  get text    xpath=//*[@id='cic-interconnect-details-interconnect-power']
    #log to console  ${powerstate}
    sleep   5
    ${baseline}=  get text    xpath=//*[@id='cic-interconnect-details-firmwareBaseline']
    #log to console  ${baseline}
    
    ${icm_data}=  Create Dictionary
    set to Dictionary   ${icm_data}    frmversion=${frmversion}
    set to Dictionary   ${icm_data}    state=${state}
    set to Dictionary   ${icm_data}    baseversion=${baseversion}
    set to Dictionary   ${icm_data}    powerstate=${powerstate}
    set to Dictionary   ${icm_data}    baseline=${baseline}
    [Return]    ${icm_data}

Check Interconnect UID In Enclosure Rear View
    [Arguments]     ${ICM_BAY}  ${ENCLOSURE_NAME}   ${UID_STATE}
    Wait for Element and Click  hp-main-menu-control
    Wait for Element and Click  link=Enclosures
    sleep   3
    Wait for Element and Click  xpath=//td[@class='' and text()='${ENCLOSURE_NAME}']
    sleep   5
    move_to_element_and_click   ${HOVER1}   ${HOVER1}
    ${status}=  Wait for Element Visible    xpath=//*[@id='cic-enclosure-icm-uid-light-control-flyout-${ICM_BAY}' and @data-status='${UID_STATE}']
    log to console  ${status}
    run keyword if  '${UID_STATE}'=='On'    run keyword if  '${status}'=='False'    Fail    'UID is Off'
    run keyword if  '${UID_STATE}'=='Off'    run keyword if  '${status}'=='False'    Fail    'UID is On'

Create LIG
	[Arguments]     ${LIG_DATA}
	Log To Console    ******CREATE LIG**********
	#${Status}=    fusion_ui_create_logical_interconnect_group_tbird 		${LIG_DATA}
	${Status}=    fusion_ui_create_tbird_logical_interconnect_group 		${LIG_DATA}
	Run Keyword And Continue On Failure   Should Be Equal   '${Status}'   'True'   ${Status}
	Log To Console    ******CREATE LIG operations completed**********

Create EG		
	[Arguments]     ${EG_DATA}
	Log To Console    ******CREATE EG**********
	${Status}=    fusion_ui_create_tbird_enclosure_group    ${EG_DATA} 
	Run Keyword And Continue On Failure   Should Be Equal   '${Status}'   'True'   ${Status}
	#verify EG creation
	#fusion_ui_verify_enclosuregroup    @{TestData.encgroups} 
	#Log To Console    ******CREATE EG operations completed**********

Create LE	
	[Arguments]     ${LE_DATA}
	Log To Console    ******CREATE LE**********
	${Status}=    fusion_ui_create_tbird_logical_enclosure    ${LE_DATA} 
	Run Keyword And Continue On Failure   Should Be Equal   '${Status}'   'True'   ${Status}
	Log To Console    ******CREATE LE operations completed**********

Update Carbon Firmware From LE
    [Arguments]     ${LE_DATA}      
    Log To Console    ******Update LE Firmware**********
    ${Status}=    fusion_ui_update_tbird_logical_enclosure_firmware    ${LE_DATA} 
    Run Keyword And Continue On Failure   Should Be Equal   '${Status}'   'True'   ${Status}
    Log To Console    ******CREATE LE operations completed**********

Update Carbon Firmware From LE and check auth
    [Arguments]     ${LE_DATA}      
    Log To Console    ******Update LE Firmware**********
    ${Status}=    fusion_ui_update_tbird_logical_enclosure_firmware    ${LE_DATA} 
    Run Keyword And Continue On Failure   Should Be Equal   '${Status}'   'True'   ${Status}
    Log To Console    ******CREATE LE operations completed**********

Downgrade Carbon Firmware From LE
    [Arguments]     ${LE_DATA}
    Log To Console    ******Update LE Firmware**********
    ${Status}=    fusion_ui_update_tbird_logical_enclosure_firmware    ${LE_DATA}
    Run Keyword And Continue On Failure   Should Be Equal   '${Status}'   'True'   ${Status}
    Log To Console    ******UPDATE LE Firmware operations completed**********

Update Carbon Firmware From LI
    [Arguments]     ${LI_DATA}
    Log To Console    ******Update LI Firmware**********
    ${Status}=    fusion_ui_update_firmware_tbird_logical_interconnect    ${LI_DATA}
    Run Keyword And Continue On Failure   Should Be Equal   '${Status}'   'True'   ${Status}
    Log To Console    ******UPDATE LI Firmware operations completed**********
    [return]    ${Status}

Remove LIG
	[Arguments]     ${LIG_DATA}
	Log To Console    ******Remove LIG **********
	${Status}=    fusion_ui_delete_logical_interconnect_group    ${LIG_DATA}
	Run Keyword And Continue On Failure   Should Be Equal   '${Status}'   'True'   ${Status}
	Log To Console    ******Delete LIG operations completed**********
Remove EG
	[Arguments]     ${EG_DATA}
	Log To Console    ******Remove EG **********
	${Status}=    fusion_ui_delete_enclosure_group    ${EG_DATA}
	Run Keyword And Continue On Failure   Should Be Equal   '${Status}'   'True'   ${Status}
	Log To Console    ******Delete EG operations completed**********

Remove LE
	[Arguments]     ${LE_DATA}
	Log To Console    ******Remove LE **********
	${Status}=    fusion_ui_delete_logical_enclosure    ${LE_DATA}
	Run Keyword And Continue On Failure   Should Be Equal   '${Status}'   'True'   ${Status}
	Log To Console    ******Delete LEG operations completed**********

Do Clean Up
	Log To Console    ******Removing LIG, EG, LE**********
	Remove LE	${LE_DATA}
	Remove EG	${EG_DATA}
	Remove LIG	${LIG_DATA}
	
Fusion Login
    #
    Load Test Data  ${DataFile}
    Open Browser  ${ApplianceUrl}  ${Browser}
    Maximize Browser Window
    Log into Fusion appliance as Administrator
    #
F1211_TC_01 : Carbon in Bay 1 and perform LE parallel fwu with Compatble fw 
	#
	#Remove LE     @{TestData.les_a_2}
	#Create LIG    @{TestData.ligs_a_1}
	#Create EG     @{TestData.encgroups_a_1}
	#Create LE     @{TestData.les_a_1}
	#Update Carbon Firmware From LE    @{TestData.kcles_upgrade}
	#fusion_ui_validate_le_firmware_upgrade_activity_details    @{TestData.les_a_1}
	#
	#Do Clean Up
	#
	#Remove LE     @{TestData.les_a_2}
	#
	#fusion_ui_update_firmware_tbird_logical_interconnect    

Create Server Profile
    [Arguments]     ${SERVER_DATA}
    Log To Console    *********Create Server profile**************** 
    # below is the new ui function
    ${Status}=    fusion_ui_create_server_profile     ${SERVER_DATA}
    # below is the old ui function
    #${status}=    bak_fusion_ui_create_server_profile    ${SERVER_DATA}
    Log to Console   Server profile creation status: ${Status}
    [return]    ${Status}
    # Usage of keyword
    #Create Server Profile    @{TestData.profiles_1} - old data file
    # new data file
    #Create Server Profile    @{TestData.server_profile_create}

Edit Server Profile
    [Arguments]     ${SERVER_DATA}
    fusion_ui_edit_server_profile   ${SERVER_DATA}

Power ON Server
    [Arguments]     ${SERVER_DATA}
    #fusion_ui_power_on_server_hardware    @{TestData.server_power_list}
    fusion_ui_power_on_server_hardware    ${SERVER_DATA}

Power OFF Server
    [Arguments]     ${SERVER_DATA}
    fusion_ui_power_off_server_hardware    ${SERVER_DATA}

Delete Server Profile
    [Arguments]     ${SERVER_DATA}
    fusion_ui_delete_server_profile     ${SERVER_DATA}

Perform LI downgrade 
    #
    #Run Keyword and Ignore Error    Remove All LEs
    #Create LIG    @{TestData.ligs_1_4}
    #Create EG     @{TestData.encgroups_1_4}
    #Create LE     @{TestData.les_1_4}
    Update Carbon Firmware From LI    @{TestData.li_para_downgrade_1_4}[0]
    #
    ${data}=    Check ICM Data    ${ICM_a_1}
    log to console    ${data}
    ${frmversion} =     Get From Dictionary     ${data}    frmversion
    log to console    ${frmversion}
    Should Be Equal As Strings    ${frmversion}    ${DOWNGRADE_FIRMWARE}
    #
    ${data}=    Check ICM Data    ${ICM_b_4}
    log to console    ${data}
    ${frmversion} =     Get From Dictionary     ${data}    frmversion
    log to console    ${frmversion}
    Should Be Equal As Strings    ${frmversion}    ${DOWNGRAsDE_FIRMWARE}
    #

Remove All LEs
    Run Keyword and Ignore Error    Remove LE     @{TestData.les_a_1}
    Run Keyword and Ignore Error    Remove LE     @{TestData.les_a_2}
    Run Keyword and Ignore Error    Remove LE     @{TestData.les_b_4}
    Run Keyword and Ignore Error    Remove LE     @{TestData.les_b_5}
    Run Keyword and Ignore Error    Remove LE     @{TestData.les_1_4}
    Run Keyword and Ignore Error    Remove LE     @{TestData.les_2_5}
    Run Keyword and Ignore Error    Remove LE     @{TestData.les_1_4_2_5}

Remove All EG on Appliance
    log to console    Removing all EG on Appliance
    Run Keyword And Continue On Failure    fusion_ui_remove_all_enclosure_groups

Remove All LIG on Appliance
    log to console    Removing all LIG on Appliance
    Run Keyword And Continue On Failure    fusion_ui_remove_all_logical_interconnect_groups

Remove All Server Profile on Appliance
    log to console    Removing all Server profile on Appliance
    fusion_ui_delete_all_appliance_server_profiles    fusion_ui_delete_all_appliance_server_profiles

Power Off All Server Profile on Apppliance
    log to console    Powering off all Server profile on Appliance
    fusion_ui_delete_all_appliance_server_profiles    fusion_ui_power_off_all_server_profiles

*** Test Cases ***
 
Test: Fusion Login
    Fusion Login
    Run Keyword And Continue On Failure    Fusion UI Create User    @{TestData.create_users}

Clean Appliance
    Run Keyword and Ignore Error    Power Off All Server Profile on Apppliance
    Run Keyword and Ignore Error    Remove All Server Profile on Appliance
    Run Keyword and Ignore Error    Remove All LEs
    Run Keyword and Ignore Error    Remove All EG on Appliance
    Run Keyword and Ignore Error    Remove All LIG on Appliance


Create LIG and EG
    log to console   \nCreating LIG and EG
    #Create LIG    @{TestData.ligs_a_1}
    #Create EG     @{TestData.encgroups_a_1}
    #Create LIG    @{TestData.ligs_a_2}
    #Create EG     @{TestData.encgroups_a_2}
    #Create LIG    @{TestData.ligs_b_4}
    #Create EG     @{TestData.encgroups_b_4}
    #Create LIG    @{TestData.ligs_b_5}
    #Create EG     @{TestData.encgroups_b_5}
    #Create LIG    @{TestData.ligs_1_4}
    #Create EG     @{TestData.encgroups_1_4}
    #Create LIG    @{TestData.ligs_2_5}
    #Create EG     @{TestData.encgroups_2_5}
    #Create EG     @{TestData.encgroups_multi_li_1_4_2_5}
    log to console     \nDone with LIG and EG creation

Downgrade Modules before tests
    Create LIG    @{TestData.ligs_1_4_2uplinks}
    Create EG     @{TestData.encgroups_1_4}
    #
    Create LE     @{TestData.les_1_4}
    #
    Perform LI downgrade
    
F1211_TC_UI_ Perform orchecstrated fimrware upgrade with redudant path at server and uplink in carbon
    #
    Fusion UI Create fc Network   @{TestData.fcnetworks}
    #
    ##Run Keyword and Ignore Error    Remove All LEs
    #Remove EG    @{TestData.encgroups_1_4}
    #Remove LIG    @{TestData.ligs_1_4_2uplinks}
    #Create LIG    @{TestData.ligs_1_4_2uplinks}
    #Create EG     @{TestData.encgroups_1_4}
    #
    #Create LE     @{TestData.les_1_4}
    #
    fusion_ui_power_off_server_profile    @{TestData.server_profile_create}
    #
    log to console    powering off server
    sleep    60
    #
    Create Server Profile    @{TestData.server_profile_create}
    #
    fusion_ui_power_on_server_profile     @{TestData.server_profile_create}
    #
    log to console    powering on the server
    sleep    180
    #${status}=    fusion_ui_edit_logical_interconnects   @{Testdata.ligs_li_1_4_upl_remove_net}
    #
    Update Carbon Firmware From LI    @{TestData.li_icm_orche_upgrade_1_4}[0]
    #${status}=    Update Carbon Firmware From LI    @{TestData.li_icm_downgrade_1_4}[0]
    log to console    ${status}
    #
    ${data}=    Check ICM Data    ${ICM_a_1}
    log to console    ${data}
    ${frmversion} =     Get From Dictionary     ${data}    frmversion
    log to console    ${frmversion}
    Should Be Equal As Strings    ${frmversion}    ${UPGRADE_FIRMWARE}
    #
    ${data}=    Check ICM Data    ${ICM_b_4}
    log to console    ${data}
    ${frmversion} =     Get From Dictionary     ${data}    frmversion
    log to console    ${frmversion}
    Should Be Equal As Strings    ${frmversion}    ${UPGRADE_FIRMWARE}
    #
    ${powerstate} =     Get From Dictionary     ${data}    powerstate
    log to console   'Power state of ICM is ${powerstate}'
    Should Be Equal As Strings    ${powerstate}    On
    #

Downgrade Modules before tests
    Perform LI downgrade

F1211_TC_UI_27 : perform orchecstrated fimrware upgrade with redudant path at server and no uplink at carbon
    #
    #Fusion UI Create fc Network   @{TestData.fcnetworks}
    #
    ##Run Keyword and Ignore Error    Remove All LEs
    #Remove EG    @{TestData.encgroups_1_4}
    #Remove LIG    @{TestData.ligs_1_4_2uplinks}
    #Create LIG    @{TestData.ligs_1_4_2uplinks}
    #Create EG     @{TestData.encgroups_1_4}
    #
    #Create LE     @{TestData.les_1_4}
    #
    #fusion_ui_power_off_server_profile    @{TestData.server_profile_create}
    #
    #log to console    powering off server
    #sleep    60
    #
    #Create Server Profile    @{TestData.server_profile_create}
    #
    #fusion_ui_power_on_server_profile     @{TestData.server_profile_create}
    #
    #log to console    powering on the server
    #sleep    180
    ${status}=    fusion_ui_edit_logical_interconnects   @{Testdata.ligs_li_1_4_upl_remove_net}
    #
    Update Carbon Firmware From LI    @{TestData.li_icm_orche_upgrade_1_4}[0]
    #${status}=    Update Carbon Firmware From LI    @{TestData.li_icm_downgrade_1_4}[0]
    log to console    ${status}
    #
    ${data}=    Check ICM Data    ${ICM_a_1}
    log to console    ${data}
    ${frmversion} =     Get From Dictionary     ${data}    frmversion
    log to console    ${frmversion}
    Should Be Equal As Strings    ${frmversion}    ${UPGRADE_FIRMWARE}
    #
    ${data}=    Check ICM Data    ${ICM_b_4}
    log to console    ${data}
    ${frmversion} =     Get From Dictionary     ${data}    frmversion
    log to console    ${frmversion}
    Should Be Equal As Strings    ${frmversion}    ${UPGRADE_FIRMWARE}
    #
    ${powerstate} =     Get From Dictionary     ${data}    powerstate
    log to console   'Power state of ICM is ${powerstate}'
    Should Be Equal As Strings    ${powerstate}    On
    #

Downgrade Modules before tests
    Perform LI downgrade

F1211_TC_UI_29 : perform orchecstrated fimrware upgrade with redudant path at server and unlinked port at carbon
    #
    fusion_ui_power_off_server_profile    @{TestData.server_profile_create}
    Run Keyword and Ignore Error    Remove All Server Profile on Appliance
    #
    #Fusion UI Create fc Network   @{TestData.fcnetworks}
    #
    Run Keyword and Ignore Error    Remove All LEs
    Remove EG    @{TestData.encgroups_1_4}
    Remove LIG   @{TestData.ligs_1_4_2uplinks_unlinked}
    Create LIG    @{TestData.ligs_1_4_2uplinks_unlinked}
    Create EG     @{TestData.encgroups_1_4}
    Create LE     @{TestData.les_1_4}
    #
    Create Server Profile    @{TestData.server_profile_create}
    fusion_ui_power_on_server_profile     @{TestData.server_profile_create}
    log to console    powering on the server
    sleep    180
    #
    Update Carbon Firmware From LI    @{TestData.li_icm_orche_upgrade_1_4}[0]
    #
    ${data}=    Check ICM Data    ${ICM_a_1}
    log to console    ${data}
    ${frmversion} =     Get From Dictionary     ${data}    frmversion
    log to console    ${frmversion}
    Should Be Equal As Strings    ${frmversion}    ${UPGRADE_FIRMWARE}
    #
    ${data}=    Check ICM Data    ${ICM_b_4}
    log to console    ${data}
    ${frmversion} =     Get From Dictionary     ${data}    frmversion
    log to console    ${frmversion}
    Should Be Equal As Strings    ${frmversion}    ${UPGRADE_FIRMWARE}
    #
    ${powerstate} =     Get From Dictionary     ${data}    powerstate
    log to console   'Power state of ICM is ${powerstate}'
    Should Be Equal As Strings    ${powerstate}    On
    #
    #Do Clean Up
    #
    #Remove LE     @{TestData.les_1_5}
    #

*** comment ***

 ######### Include downgrade test here #########
 F1211_TC_27 : Carbon in Bay 1 and Bay 4 and one of the Carbon do not have Uplink
    #
    #Fusion UI Create fc Network   @{TestData.fcnetworks}
    #
    #Run Keyword and Ignore Error    Remove All LEs
    #Remove EG    @{TestData.encgroups_1_4}
    #Remove LIG    @{TestData.ligs_1_4_2uplinks}
    #Create LIG    @{TestData.ligs_1_4_2uplinks}
    #Create EG     @{TestData.encgroups_1_4}
    #
    #Create LE     @{TestData.les_1_4}
    #
    #Create Server Profile    @{TestData.server_profile_create}
    #fusion_ui_power_on_server_profile     @{TestData.server_profile_create}
    #log to console    powering on the server
    #sleep    720
    #${status}=    fusion_ui_edit_logical_interconnects   @{Testdata.ligs_li_1_4_upl_remove_net}
    #log to console    ${status}
    #
    #Update Carbon Firmware From LI    @{TestData.li_icm_orche_upgrade_1_4}[0]
    ${status}=    Update Carbon Firmware From LI    @{TestData.li_icm_downgrade_1_4}[0]
    log to console    ${status}
    #
    ${data}=    Check ICM Data    ${ICM_a_1}
    log to console    ${data}
    ${frmversion} =     Get From Dictionary     ${data}    frmversion
    log to console    ${frmversion}
    Should Be Equal As Strings    ${frmversion}    ${UPGRADE_FIRMWARE}
    #
    ${data}=    Check ICM Data    ${ICM_b_4}
    log to console    ${data}
    ${frmversion} =     Get From Dictionary     ${data}    frmversion
    log to console    ${frmversion}
    Should Be Equal As Strings    ${frmversion}    ${UPGRADE_FIRMWARE}
    #
    ${powerstate} =     Get From Dictionary     ${data}    powerstate
    log to console   'Power state of ICM is ${powerstate}'
    Should Be Equal As Strings    ${powerstate}    On
    #
 
F1211_TC_28 : Carbon in Bay 1 and Bay 4 and one of the Carbon do not have Uplink
    #
    #Fusion UI Create fc Network   @{TestData.fcnetworks}
    #Create Server Profile    @{TestData.server_profile_create}
    #Perform firmware update using Orchestrated option
    #
    #Create LIG    @{TsestData.ligs_1_4_2uplinks}
    #Create EG     @{TestData.encgroups_1_4}
    #Run Keyword and Ignore Error    Remove All LEs
    #Create LE     @{TestData.les_1_4}
    #
    fusion_ui_edit_logical_interconnects   @{Testdata.ligs_li_1_4_upl_differet_fc_net}
    #
    Update Carbon Firmware From LI    @{TestData.li_icm_orche_upgrade_1_4}[5]
    #
    sleep    1700
    ${data}=    Check ICM Data    ${ICM_a_1}
    log to console    ${data}
    ${frmversion} =     Get From Dictionary     ${data}    frmversion
    log to console    ${frmversion}
    Should Be Equal As Strings    ${frmversion}    ${UPGRADE_FIRMWARE}
    #
    ${data}=    Check ICM Data    ${ICM_b_4}
    log to console    ${data}
    ${frmversion} =     Get From Dictionary     ${data}    frmversion
    log to console    ${frmversion}
    Should Be Equal As Strings    ${frmversion}    ${UPGRADE_FIRMWARE}
    #
    ${powerstate} =     Get From Dictionary     ${data}    powerstate
    log to console   'Power state of ICM is ${powerstate}'
    Should Be Equal As Strings    ${powerstate}    On
    #
    #Do Clean Up
    #
    #Remove LE     @{TestData.les_1_5}
    #
 
 ######### Include downgrade test here #########
 F1211_TC_27 : Carbon in Bay 1 and Bay 4 and one of the Carbon do not have Uplink
    #
    #Fusion UI Create fc Network   @{TestData.fcnetworks}
    #
    #Run Keyword and Ignore Error    Remove All LEs
    #Remove EG    @{TestData.encgroups_1_4}
    #Remove LIG    @{TestData.ligs_1_4_2uplinks}
    #Create LIG    @{TestData.ligs_1_4_2uplinks}
    #Create EG     @{TestData.encgroups_1_4}
    #
    #Create LE     @{TestData.les_1_4}
    #
    #Create Server Profile    @{TestData.server_profile_create}
    #fusion_ui_power_on_server_profile     @{TestData.server_profile_create}
    #log to console    powering on the server
    #sleep    720
    #${status}=    fusion_ui_edit_logical_interconnects   @{Testdata.ligs_li_1_4_upl_remove_net}
    #log to console    ${status}
    #
    #Update Carbon Firmware From LI    @{TestData.li_icm_orche_upgrade_1_4}[0]
    ${status}=    Update Carbon Firmware From LI    @{TestData.li_icm_downgrade_1_4}[0]
    log to console    ${status}
    #
    ${data}=    Check ICM Data    ${ICM_a_1}
    log to console    ${data}
    ${frmversion} =     Get From Dictionary     ${data}    frmversion
    log to console    ${frmversion}
    Should Be Equal As Strings    ${frmversion}    ${UPGRADE_FIRMWARE}
    #
    ${data}=    Check ICM Data    ${ICM_b_4}
    log to console    ${data}
    ${frmversion} =     Get From Dictionary     ${data}    frmversion
    log to console    ${frmversion}
    Should Be Equal As Strings    ${frmversion}    ${UPGRADE_FIRMWARE}
    #
    ${powerstate} =     Get From Dictionary     ${data}    powerstate
    log to console   'Power state of ICM is ${powerstate}'
    Should Be Equal As Strings    ${powerstate}    On
    #
    #Do Clean Up
    #
    #Remove LE     @{TestData.les_1_5}
    #
 
 
 
 ######### Include downgrade test here #########