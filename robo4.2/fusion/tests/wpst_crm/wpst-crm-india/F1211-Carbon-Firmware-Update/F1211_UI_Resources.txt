
*** Settings ***

Documentation       Continuous Integration Tests for RoboGalaxy dev Branch
Resource            ./OVAConfig.txt
Force Tags          Buildup
Library             SSHLibrary
Library             String
Library             Collections
Library             RoboGalaxyLibrary
Library             FusionLibrary


*** Variables ***
#${ApplianceUrl}    https://15.212.161.193
${ApplianceUrl}    https://10.10.3.99
#${Browser}         IE
${Browser}         FireFox
#${Browser}         Chrome
#${SeleniumSpeed}   0.03
${ICM_NAME}         0000000010, interconnect 1
${ICM_BAY}          1
${ENCLOSURE_NAME}   0000000010
#${ENCLOSURE}        CN7515048X
${ENCLOSURE}        0000000010

${ICM_a_1}                      ${ENCLOSURE}, interconnect 1
${ICM_a_2}                      ${ENCLOSURE}, interconnect 2
${ICM_b_4}                      ${ENCLOSURE}, interconnect 4
${ICM_b_5}                      ${ENCLOSURE}, interconnect 5

${UPGRADE_FIRMWARE}             1.01.04
${DOWNGRADE_FIRMWARE}           1.00.26
${FIRMWARE3}                    1.00.22

${sameversionmsg}    No update required. Selected firmware is already installed in the logical interconnect

*** Keywords ***
Power Off ICM
    #
    ${status}=  tbird_fusion_ui_chloride_power_off   @{TestData.TB_interconnect}
    run keyword if  '${status}'=='False'    Fail    'Power Off action failed on Interconnect'
    #
    
Power On ICM
    #
    ${status}=  tbird_fusion_ui_chloride_power_on   @{TestData.TB_interconnect}
    run keyword if  '${status}'=='False'    Fail    'Power On action failed on Interconnect'
    #
Check Action Menu Entry
    Wait for Element and Click  hp-main-menu-control
    Wait for Element and Click  link=Interconnects
    Wait for Element and Click  xpath=//*[@id='cic-interconnect-actions']/label
    ${status}=  Wait for Element Visible    link=Clear port counter
    run keyword if  '${status}'=='True'    Fail    'Clear port counter is visible'
    ${status}=  Wait for Element Visible    link=Edit
    run keyword if  '${status}'=='True'    Fail    'Edit is visible'
    ${status}=  Wait for Element Visible    link=Reapply configuration
    run keyword if  '${status}'=='True'    Fail    'Reapply configuration is visible'
    ${status}=  Wait for Element Visible    link=Loop and Pause flood Protection
    run keyword if  '${status}'=='True'    Fail    'Loop and Pause flood Protection is visible'

Check UID is OFF
    Wait for Element and Click  hp-main-menu-control
    Wait for Element and Click  link=Interconnects
    sleep   3
    Wait for Element and Click  xpath=//td[@class='' and text()='${ICM_NAME}']
    sleep   5
    ${status}=  Wait for Element Visible    xpath=//*[@id='cic-interconnect-show-uid-light-control' and @class='hp-uid-big hp-tooltipped']
    run keyword if  '${status}'=='False'    Fail    'UID is ON'

Check Management Interface
    Wait for Element and Click  hp-main-menu-control
    Wait for Element and Click  link=Interconnects
    sleep   3
    Wait for Element and Click  xpath=//td[@class='' and text()='${ICM_NAME}']
    sleep   5
    Wait for Element and Click  xpath=//*[@id='cic-interconnect-panel-selector']/div
    Wait for Element and Click  link=General
    Wait for Element Visible    xpath=//*[@id='cic-interconnect-details-management-interface-div']
    sleep   5
    ${status}=  get text    xpath=//*[@id='cic-interconnect-details-management-interface-div']
    log to console  ${status}
    run keyword if  '${status}'!='none'    Fail    'It is not none'

Check ICM Data
    [Arguments]     ${icm_name}
    Wait for Element and Click  hp-main-menu-control
    Wait for Element and Click  link=Interconnects
    sleep   3
    Wait for Element and Click  xpath=//td[@class='' and text()='${icm_name}']
    sleep   5
    Wait for Element and Click  xpath=//*[@id='cic-interconnect-panel-selector']/div
    Wait for Element and Click  link=General
    Wait for Element Visible    xpath=//*[@id='cic-interconnect-details-version']
    sleep   5
    ${frmversion}=  get text    xpath=//*[@id='cic-interconnect-details-version']
    log to console  ${frmversion}
    Wait for Element Visible    xpath=//*[@id='cic-interconnect-details-module-state']
    sleep   5
    ${state}=  get text    xpath=//*[@id='cic-interconnect-details-module-state']
    log to console  ${state}
    Wait for Element Visible    xpath=//*[@id='cic-interconnect-details-baseline-version']
    sleep   5
    ${baseversion}=  get text    xpath=//*[@id='cic-interconnect-details-baseline-version']
    log to console  ${baseversion}
    Wait for Element Visible    xpath=//*[@id='cic-interconnect-details-interconnect-power']
    sleep   5
    ${powerstate}=  get text    xpath=//*[@id='cic-interconnect-details-interconnect-power']
    log to console  ${powerstate}
    sleep   5
    ${baseline}=  get text    xpath=//*[@id='cic-interconnect-details-firmwareBaseline']
    log to console  ${baseline}

    ${icm_data}=  Create Dictionary
    set to Dictionary   ${icm_data}    frmversion=${frmversion}
    set to Dictionary   ${icm_data}    state=${state}
    set to Dictionary   ${icm_data}    baseversion=${baseversion}
    set to Dictionary   ${icm_data}    powerstate=${powerstate}
    set to Dictionary   ${icm_data}    baseline=${baseline}
    [Return]    ${icm_data}

Check LI Data
    [Arguments]     ${li_name}
    Wait for Element and Click  hp-main-menu-control
    Wait for Element and Click  link=Logical Interconnects
    sleep   3
    Wait for Element and Click  xpath=//td[@class='' and text()='${li_name}']
    sleep   5
    Wait for Element and Click  xpath=//*[@id='cic-interconnect-panel-selector']/div
    Wait for Element and Click  link=General
    Wait for Element Visible    xpath=//*[@id='cic-interconnect-details-version']
    sleep   5
    ${frmversion}=  get text    xpath=//*[@id='cic-interconnect-details-version']
    log to console  ${frmversion}
    Wait for Element Visible    xpath=//*[@id='cic-interconnect-details-module-state']
    sleep   5
    ${state}=  get text    xpath=//*[@id='cic-interconnect-details-module-state']
    log to console  ${state}


Check Interconnect UID In Enclosure Rear View
    [Arguments]     ${ICM_BAY}  ${ENCLOSURE_NAME}   ${UID_STATE}
    Wait for Element and Click  hp-main-menu-control
    Wait for Element and Click  link=Enclosures
    sleep   3
    Wait for Element and Click  xpath=//td[@class='' and text()='${ENCLOSURE_NAME}']
    sleep   5
    move_to_element_and_click   ${HOVER1}   ${HOVER1}
    ${status}=  Wait for Element Visible    xpath=//*[@id='cic-enclosure-icm-uid-light-control-flyout-${ICM_BAY}' and @data-status='${UID_STATE}']
    log to console  ${status}
    run keyword if  '${UID_STATE}'=='On'    run keyword if  '${status}'=='False'    Fail    'UID is Off'
    run keyword if  '${UID_STATE}'=='Off'    run keyword if  '${status}'=='False'    Fail    'UID is On'

Create LIG
    [Arguments]     ${LIG_DATA}
    Log To Console    ******CREATE LIG**********
    #${Status}=    fusion_ui_create_logical_interconnect_group_tbird    ${LIG_DATA}
    ${Status}=    fusion_ui_create_tbird_logical_interconnect_group    ${LIG_DATA}
    Run Keyword And Continue On Failure   Should Be Equal   '${Status}'   'True'   ${Status}
    Log To Console    ******CREATE LIG operations completed**********

Create EG
    [Arguments]     ${EG_DATA}
    Log To Console    ******CREATE EG**********
    ${Status}=    fusion_ui_create_tbird_enclosure_group    ${EG_DATA} 
    Run Keyword And Continue On Failure   Should Be Equal   '${Status}'   'True'   ${Status}
    #verify EG creation
    #fusion_ui_verify_enclosuregroup    @{TestData.encgroups} 
    #Log To Console    ******CREATE EG operations completed**********

Create LE
    [Arguments]     ${LE_DATA}
    Log To Console    ******CREATE LE**********
    ${Status}=    fusion_ui_create_tbird_logical_enclosure    ${LE_DATA} 
    Run Keyword And Continue On Failure   Should Be Equal   '${Status}'   'True'   ${Status}
    Log To Console    ******CREATE LE operations completed**********

Update Carbon Firmware From LE
    [Arguments]     ${LE_DATA}      
    Log To Console    ******Update LE Firmware**********
    ${Status}=    fusion_ui_update_tbird_logical_enclosure_firmware    ${LE_DATA} 
    Run Keyword And Continue On Failure   Should Be Equal   '${Status}'   'True'   ${Status}
    Log To Console    ******CREATE LE operations completed**********

Downgrade Carbon Firmware From LE
    [Arguments]     ${LE_DATA}
    Log To Console    ******Update LE Firmware**********
    ${Status}=    fusion_ui_update_tbird_logical_enclosure_firmware    ${LE_DATA}
    Run Keyword And Continue On Failure   Should Be Equal   '${Status}'   'True'   ${Status}
    Log To Console    ******CREATE LE operations completed**********

Update Carbon Firmware From LI
    [Arguments]     ${LI_DATA}
    Log To Console    ******Update LI Firmware**********
    ${Status}=    fusion_ui_update_firmware_tbird_logical_interconnect    ${LI_DATA}
    Run Keyword And Continue On Failure   Should Be Equal   '${Status}'   'True'   ${Status}
    Log To Console    ******CREATE LI operations completed**********

Remove LIG
    [Arguments]     ${LIG_DATA}
    Log To Console    ******Remove LIG **********
    ${Status}=    fusion_ui_delete_logical_interconnect_group    ${LIG_DATA}
    Run Keyword And Continue On Failure   Should Be Equal   '${Status}'   'True'   ${Status}
    Log To Console    ******Delete LIG operations completed**********
Remove EG
    [Arguments]     ${EG_DATA}
    Log To Console    ******Remove EG **********
    ${Status}=    fusion_ui_delete_enclosure_group    ${EG_DATA}
    Run Keyword And Continue On Failure   Should Be Equal   '${Status}'   'True'   ${Status}
    Log To Console    ******Delete EG operations completed**********

Remove LE
    [Arguments]     ${LE_DATA}
    Log To Console    ******Remove LE **********
    ${Status}=    fusion_ui_delete_logical_enclosure    ${LE_DATA}
    Run Keyword And Continue On Failure   Should Be Equal   '${Status}'   'True'   ${Status}
    Log To Console    ******Delete LE operations completed**********

Do Clean Up
    Log To Console    ******Removing LIG, EG, LE**********
    Remove LE    ${LE_DATA}
    Remove EG    ${EG_DATA}
    Remove LIG    ${LIG_DATA}

Create LIG and EG
    Create LIG    @{TestData.ligs_a_1}
    Create EG     @{TestData.encgroups_a_1}
    Create LIG    @{TestData.ligs_a_2}
    Create EG     @{TestData.encgroups_a_2}
    Create LIG    @{TestData.ligs_b_4}
    Create EG     @{TestData.encgroups_b_4}
    Create LIG    @{TestData.ligs_b_5}
    Create EG     @{TestData.encgroups_b_5}
    Create LIG    @{TestData.ligs_1_4}
    Create EG     @{TestData.encgroups_1_4}
    Create LIG    @{TestData.ligs_2_5}
    Create EG     @{TestData.encgroups_2_5}
    Create EG     @{TestData.encgroups_multi_li_1_4_2_5}

Remove All LEs
    Run Keyword and Ignore Error    Remove LE     @{TestData.les_a_1}
    Run Keyword and Ignore Error    Remove LE     @{TestData.les_a_2}
    Run Keyword and Ignore Error    Remove LE     @{TestData.les_b_4}
    Run Keyword and Ignore Error    Remove LE     @{TestData.les_b_5}
    Run Keyword and Ignore Error    Remove LE     @{TestData.les_1_4}
    Run Keyword and Ignore Error    Remove LE     @{TestData.les_2_5}
    Run Keyword and Ignore Error    Remove LE     @{TestData.les_1_4_2_5}

Remove All EG on Appliance
    log to console    Removing all EG on Appliance
    Run Keyword And Continue On Failure    fusion_ui_remove_all_enclosure_groups

Remove All LIG on Appliance
    log to console    Removing all LIG on Appliance
    Run Keyword And Continue On Failure    fusion_ui_remove_all_logical_interconnect_groups

Remove All LE on Appliance
    log to console    Removing all LE on Appliance
    Run Keyword And Continue On Failure    fusion_ui_delete_tbird_logical_enclosure  

Remove EG and LIG
    Run Keyword and Ignore Error    Remove EG    ${enc_groups_carbon_a1}
    Run Keyword and Ignore Error    Remove EG    ${enc_groups_carbon_a2}
    Run Keyword and Ignore Error    Remove EG    ${enc_groups_carbon_b4}
    Run Keyword and Ignore Error    Remove EG    ${enc_groups_carbon_b5}
    Run Keyword and Ignore Error    Remove EG    ${enc_groups_carbon_1_4}
    Run Keyword and Ignore Error    Remove EG    ${enc_groups_carbon_2_5}
    Run Keyword and Ignore Error    Remove LIG    ${lig_tbird_a_1}
    Run Keyword and Ignore Error    Remove LIG    ${lig_tbird_a_2}
    Run Keyword and Ignore Error    Remove LIG    ${lig_tbird_b_4}
    Run Keyword and Ignore Error    Remove LIG    ${lig_tbird_b_5}
    Run Keyword and Ignore Error    Remove LIG    ${lig_tbird_1_4}
    Run Keyword and Ignore Error    Remove LIG    ${lig_tbird_2_5}

*** comment ***
Open Connection And Log In
    [Documentation]     Opens an SSH session to an appliance and logs in
    [Arguments]         ${SSH_HOST}=localhost   ${SSH_USER}=root
    Open Connection     ${SSH_HOST}     timeout=180s
    Run Keyword If      '${SSH_PASS}' is ${null}      Set Suite variable  ${SSH_PASS}     hpvse1
    Login               ${SSH_USER}     ${SSH_PASS}
