*** Settings ***
Documentation		Feature Test: F258 API IP POOLS
...                 This Test Suite includes Add/Delete/Edit/Positive/Negative Scenarios of Subnet and Range Page.
...					It also Includes Associate/Disassociate/Allocate/Collect of Subnet and Ranges.
Variables 		    data_variables.py		

#Suite Setup   		Run FTS and test-specific setup
#Suite Teardown		Suite Teardown

Resource            ../../../resource/fusion_api_all_resource_files.txt

Library				Collections
Library             json
Library				OperatingSystem
Library		        Selenium2Library 
Library				BuiltIn

*** Variables ***
${SSH_PASS}                     hpvse1
${APPLIANCE_IP} 				15.212.136.106
${SSH_USER}						root
${VAL_DELETE}				<Response [204]>
${POTASH}					Virtual Connect SE 40Gb F8 Module for Synergy
${CHLORIDE20}				Synergy 20Gb Interconnect Link Module
${timeout}					1200
${interval}					30
${IP_CHECK_FALSE}			False
${IP_CHECK}					True
${PUBLICPRIVATE}

*** Test Cases ***


#Test Specific Setup

Login to Appliance
	${resp}=	Fusion Api Login Appliance 		${APPLIANCE_IP}		${admin_credentials}
	Log		${resp[1]}
	${privateauth}=		OA AUTH TOKEN	${APPLIANCE_IP}
	Log 	${privateauth}
	${con1}=	catenate	:${privateauth}
	Set Global Variable		${PUBLICPRIVATE}
	${PUBLICPRIVATE}= 	catenate   ${resp[1]}${con1}
	Log		${PUBLICPRIVATE}
	${resp} = 			fusion_api_create_ipv4_subnet	 body=${subnet[24]}		sessionID=${PUBLICPRIVATE}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${subnets}=   Get Subnet		19.19.19.0
	${uri}=    Get from Subnet		${subnets}			uri
	${resp} =       fusion_api_delete_ipv4_subnet   		 uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${204}
	Validate Response	${resp}	${valDict}
	
F258_API_SUBNET_TC_01-CREATE SUBNET 19.19.19.0
	${resp} = 			fusion_api_create_ipv4_subnet	 body=${subnet[24]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}

F258_API_SUBNET_TC_02 - CREATE SUBNET WITH NETWORK ID 127.0.0.1
	${resp} = 			fusion_api_create_ipv4_subnet	 body=${subnet[9]}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=IPV4_LOOPBACK
	Validate Response	${resp}	${valDict}

F258_API_SUBNET_TC_03 - CREATE SUBNET WITH SUBNETMASK 127.0.0.1
	${resp} = 			fusion_api_create_ipv4_subnet	 body=${subnet[26]}	
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=INVALID_SUBNET_MASK
	Validate Response	${resp}	${valDict}
	
F258_API_SUBNET_TC_04 - CREATE SUBNET WITH GATEWAY 127.0.0.1
	${resp} = 			fusion_api_create_ipv4_subnet	 body=${subnet[23]}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=INVALID_GATEWAY
	Validate Response	${resp}	${valDict}

F258_API_SUBNET_TC_05 - CREATE SUBNET WITH DNS 127.0.0.1
	${resp} = 			fusion_api_create_ipv4_subnet	 body=${subnet[25]}	
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=IPV4_LOOPBACK
	Validate Response	${resp}	${valDict}
	
F258_API_SUBNET_TC_06 - CREATE SUBNET WITH MULTICAST NETWORK IP 224.0.0.0
	${resp} = 			fusion_api_create_ipv4_subnet	 body=${subnet[19]}	
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=IPV4_MULTICAST
	Validate Response	${resp}	${valDict}
	
F258_API_SUBNET_TC_07 - CREATE SUBNET WITH MULTICAST SUBNETMASK 224.0.0.0
	${resp} = 			fusion_api_create_ipv4_subnet	 body=${subnet[28]}	
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=INVALID_SUBNET_ID
	Validate Response	${resp}	${valDict}

F258_API_SUBNET_TC_08 - CREATE SUBNET WITH MULTICAST GATEWAY 224.0.0.0
	${resp} = 			fusion_api_create_ipv4_subnet	 body=${subnet[27]}	
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=INVALID_GATEWAY
	Validate Response	${resp}	${valDict}
	
F258_API_SUBNET_TC_09 - CREATE SUBNET WITH MULTICAST DNS 224.0.0.0
	${resp} = 			fusion_api_create_ipv4_subnet	 body=${subnet[29]}	
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=IPV4_MULTICAST
	Validate Response	${resp}	${valDict}

F258_API_SUBNET_TC_10 - VALIDATE CREATED SUBNET DATA
	${subnets}=		Get Subnet		19.19.19.0
	${uri}=		Get from Subnet				${subnets}			uri
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${valDict} = 	Create Dictionary	networkId=19.19.19.0
	...									domain=OneDNS.com
	...									gateway=19.19.19.1
	...									subnetmask=255.255.255.0
	...									category=id-range-IPV4-subnet									
	Validate Response	${resp}	${valDict}

F258_API_SUBNET_TC_12 - CREATE DUPLICATE SUBNET 19.19.19.0	
	${resp} =	fusion_api_create_ipv4_subnet	 body=${subnet[24]}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=OVERLAPPING_SUBNET
	Validate Response	${resp}	${valDict}


F258_API_SUBNET_TC_24-CREATE SUBNET WITH EMPTY GATEWAY
	${resp} = 	fusion_api_create_ipv4_subnet	 body=${subnet[6]}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=GATEWAY_IPV4_FORMAT
	Validate Response	${resp}	${valDict}

F258_API_SUBNET_TC_25-CREATE SUBNET WITH INVALID NETWORK IP 258.890.1.0
	${resp} = 	fusion_api_create_ipv4_subnet	 body=${subnet[10]}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=ADDRESS_FORMAT_IPV4
	Validate Response	${resp}	${valDict}
	
F258_API_SUBNET_TC_26- CREATE SUBNET WITH INVALID NETWORK IP 1234.10.10.0
	${resp} = 	fusion_api_create_ipv4_subnet	 body=${subnet[12]}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=ADDRESS_FORMAT_IPV4
	Validate Response	${resp}	${valDict}	

F258_API_SUBNET_TC_27-CREATE SUBNET WITH INVALID NETWORK IP 10. .10.0
	${resp} = 			fusion_api_create_ipv4_subnet	 body=${subnet[13]}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=ADDRESS_FORMAT_IPV4
	Validate Response	${resp}	${valDict}
	
F258_API_SUBNET_TC_28-CREATE SUBNET WITH INVALID NETWORK IP a.b.c
	${resp} = 			fusion_api_create_ipv4_subnet	 body=${subnet[11]}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=ADDRESS_FORMAT_IPV4
	Validate Response	${resp}	${valDict}
	
F258_API_SUBNET_TC_29-CREATE SUBNET WITH EMPTY SUBNETMASK ID
	${resp} = 			fusion_api_create_ipv4_subnet	 body=${subnet[7]}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=ADDRESS_FORMAT_IPV4
	Validate Response	${resp}	${valDict}
	
F258_API_SUBNET_TC_30-CREATE SUBNET WITH EMPTY DOMAIN NAME
	${resp} = 			fusion_api_create_ipv4_subnet	 body=${subnet[8]}
	${valDict} = 	Create Dictionary	errorCode=INVALID_DOMAIN_NAME
	...									status_code=${400}
	Validate Response	${resp}	${valDict}

#---------------------------------EDIT SUBNET--------------

CREATE SUBNET 50.40.30.0
	${resp} = 			fusion_api_create_ipv4_subnet	 body=${subnet[5]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	
F258_API_SUBNET_TC_31 - EDIT SUBNET ADD DNS 50.40.30.0
	${subnets}=			Get Subnet		50.40.30.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} = 			fusion_api_edit_ipv4_subnet	 	body=${subnet[14]}		uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${Verify_return}=	Verify Subnet Data 		${subnet[14]}		50.40.30.0
	Log		${Verify_return}


F258_API_SUBNET_TC_32 - EDIT SUBNET SUBNETMASK OUTSIDE THE RANGE 50.40.30.0
	${subnets}=			Get Subnet		50.40.30.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} = 			fusion_api_edit_ipv4_subnet	 	body=${subnet[15]}		uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=UNSUPPORTED_SUBNET_MASK
	Validate Response	${resp}	${valDict}
	${Verify_return}=	Verify Subnet Data 		${subnet[14]}		50.40.30.0
	
F258_API_ASSOCIATE_TC_09-EDIT SUBNET CHANGE THE NAME 50.40.30.0
	${subnets}=			Get Subnet		50.40.30.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} = 			fusion_api_edit_ipv4_subnet	 	body=${subnet[16]}		uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${Verify_return}=	Verify Subnet Data 		${subnet[16]}		50.40.30.0
	

F258_API_ASSOCIATE_TC_19 - EDIT SUBNET CHANGE GATEWAY 50.40.30.0
	${subnets}=			Get Subnet		50.40.30.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} = 			fusion_api_edit_ipv4_subnet	 	body=${subnet[17]}		uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${Verify_return}=	Verify Subnet Data 		${subnet[17]}		50.40.30.0
		
CREATE SUBNET-10.10.10.0	
	${resp} = 			fusion_api_create_ipv4_subnet	 body=${subnet[0]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}

CREATE RANGE-10.10.10.0
	${range}=   Build IPRange Body    	${ipv4ranges}      10.10.10.0    		test1	
	:For  ${x}  in  @{range}
	\   ${resp}=  fusion_api_create_ipv4_range   	${x}
	\   ${valDict} = 	Create Dictionary		status_code=${200}
	\   Validate Response	${resp}	${valDict}
	
F258_API_RANGE_TC_53 - EDIT SUBNET HAVING RANGE ADD DNS, CHANGE NAME AND SUBNETMASK
	${subnets}=			Get Subnet		10.10.10.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} = 			fusion_api_edit_ipv4_subnet	 	body=${subnet[18]}		uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${Data_NetworkId}=	Get From Dictionary		${subnet[18]}	networkId
	${Data_Gateway}=	Get From Dictionary		${subnet[18]}	gateway
	${Data_Domain}=	Get From Dictionary		${subnet[18]}	domain
	${Data_Subnetmask}=	Get From Dictionary		${subnet[18]}	subnetmask
	${dns}=	Get From Dictionary 	${subnet[18]}	dnsServers
	${dns1}=	Get From List	${dns}	0
	${subnets}=			Get Subnet		10.10.10.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${valDict} = 	Create Dictionary	networkId=${Data_NetworkId}
	...									gateway=${Data_Gateway}
	...									subnetmask=${Data_Subnetmask}
	...									domain=${Data_Domain}
	Validate Response	${resp}	${valDict}
	${resp_dns}= 	Get From Dictionary 	${resp}		dnsServers
	${resp_dns1}= 	Get From List 	${resp_dns}		0
	Should Be Equal As Strings		${resp_dns1}	${dns1}


F258_API_RANGE_TC_52 - CREATE RANGE WITH EMPTY URI	
	${resp} = 			fusion_api_create_ipv4_range	 body=${ipv4ranges[0]}	
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=INVALID_SUBNET_URI
	Validate Response	${resp}	${valDict}

CREATE RANGE-Range1Sub504030
	${range}=   Build IPRange Body    	${ipv4ranges}      50.40.30.0    		Range1Sub504030	
	:For  ${x}  in  @{range}
	\   ${resp}=  fusion_api_create_ipv4_range   	${x}
	\   ${valDict} = 	Create Dictionary		status_code=${200}
	\   Validate Response	${resp}	${valDict}
	
CREATE RANGE-Range2Sub504030
	${range}=   Build IPRange Body    	${ipv4ranges}      50.40.30.0    		Range2Sub504030	
	:For  ${x}  in  @{range}
	\   ${resp}=  fusion_api_create_ipv4_range   	${x}
	\   ${valDict} = 	Create Dictionary		status_code=${200}
	\   Validate Response	${resp}	${valDict}

F258_API_SUBNET_TC_11 - CREATE NETWORK WITH SUBNET HAVING MORE THAN 1 RANGE NetworkSub504030
	${network_body}=	Build Network Body With Subnet Uri		${Ethernet_network_1}		NetworkSub504030		50.40.30.0
	${resp} = 	Fusion Api Create Ethernet Network		body=${network_body}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}    

F258_API_ASSOCIATE_TC_22 - ASSOCIATE AN ALREADY ASSOCIATED SUBNET WHILE NETWORK CREATION
	${network_body}=	Build Network Body With Subnet Uri		${Ethernet_network_1}		NetworkSub40		50.40.30.0
	${resp} = 	Fusion Api Create Ethernet Network		body=${network_body}
	${valDict} = 	Create Dictionary	status_code=${501}
	...									errorCode=CRM_SUBNET_ALREADY_ASSOCIATED
	Validate Response	${resp}	${valDict}


F258_API_SUBNET_TC_13 - EDIT SUBNET ID AND SUBNETMASK OF AN ASSOCIATED SUBNET
	${subnets}=			Get Subnet		50.40.30.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} = 			fusion_api_edit_ipv4_subnet	 	body=${subnet[39]}		uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=SUBNET_EDIT_NOT_ALLOWED
	Validate Response	${resp}	${valDict}
	${Verify_return}=	Verify Subnet Data 		${subnet[17]}		50.40.30.0
	
	
ALLOCATE IP FROM RANGE Range2Sub504030
	${subnets}=			Get Subnet		50.40.30.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} = 	fusion_api_allocate_ipv4_subnet		${subnet_allocate[9]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	Validate Response	${resp}	${valDict}
	
F258_API_SUBNET_TC_22 -DELETE SUBNET 50.40.30.0 WHERE IP ALREADY ALLOCATED
	${subnets}=   Get Subnet		50.40.30.0
	${uri}=    Get from Subnet		${subnets}			uri
	${resp} =       fusion_api_delete_ipv4_subnet   		 uri=${uri}
	${valDict} = 	Create Dictionary		status_code=${400}
	...										errorCode=SUBNET_DELETE_NOT_ALLOWED
	Validate Response	${resp}	${valDict}
	
COLLECTOR IP FROM RANGE Range2Sub504030	
	${subnets}=			Get Subnet		50.40.30.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} = 	fusion_api_collect_ipv4_subnet		${subnet_allocate[9]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	Validate Response	${resp}	${valDict}

F258_API_SUBNET_TC_21- DELETE A ASSOCIATED SUBNET HAVING RANGE
	${subnets}=   Get Subnet		50.40.30.0
	${uri}=    Get from Subnet		${subnets}			uri
	${resp} =       fusion_api_delete_ipv4_subnet   		 uri=${uri}
	${valDict} = 	Create Dictionary		status_code=${400}
	...										errorCode=SUBNET_DELETE_NOT_ALLOWED
	Validate Response	${resp}	${valDict}

F258_API_SUBNET_TC_16- CREATE SUBNET WITH MISMATCH SUBNETID AND SUBNETMASK
	${resp} = 			fusion_api_create_ipv4_subnet	 body=${subnet[40]}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									message=IPv4 Address is incorrectly formatted. 16.16.16.16.0
	Validate Response	${resp}	${valDict}
	${resp} = 			fusion_api_create_ipv4_subnet	 body=${subnet[41]}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									message=16.16.16.64 is an invalid Network ID for Subnet Mask 255.255.255.128.
	Validate Response	${resp}	${valDict}
	${resp} = 			fusion_api_create_ipv4_subnet	 body=${subnet[42]}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									message=16.16.16.192 is an invalid Network ID for Subnet Mask 255.255.255.128.
	Validate Response	${resp}	${valDict}

DELETE NETWORK NetworkSub504030
	${neturi}=	Get Ethernet URI	NetworkSub504030
	${resp}=	Fusion Api Delete Ethernet Network 		uri=${neturi}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}  

DELETE SUBNET-10.10.10.0
	${subnets}=   Get Subnet		10.10.10.0
	${uri}=    Get from Subnet		${subnets}			uri
	${resp} =       fusion_api_delete_ipv4_subnet   		 uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${204}
	Validate Response	${resp}	${valDict}

DELETE SUBNET-50.40.30.0
	${subnets}=   Get Subnet		50.40.30.0
	${uri}=    Get from Subnet		${subnets}			uri
	${resp} =       fusion_api_delete_ipv4_subnet   		 uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${204}
	Validate Response	${resp}	${valDict}

#----------------------------------- SUBNET EDIT END

#------------------------------NETWORKSET start-------

F258_API_SUBNET_TC_18 - EDIT SUBNET ID AND SUBNETMASK OUTSIDE THE RANGE DEFINED 15.15.15.0
	${resp} = 			fusion_api_create_ipv4_subnet	 body=${subnet[21]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${range}=   Build IPRange Body    	${ipv4ranges}      15.15.15.0    		test151	
	:For  ${x}  in  @{range}
	\   ${resp}=  fusion_api_create_ipv4_range   	${x}
	\   ${valDict} = 	Create Dictionary		status_code=${200}
	\   Validate Response	${resp}	${valDict}
	Validate Response	${resp}	${valDict}
	${range}=   Build IPRange Body    	${ipv4ranges}      15.15.15.0    		test152	
	:For  ${x}  in  @{range}
	\   ${resp}=  fusion_api_create_ipv4_range   	${x}
	\   ${valDict} = 	Create Dictionary		status_code=${200}
	\   Validate Response	${resp}	${valDict}
	${subnets}=			Get Subnet		15.15.15.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} = 			fusion_api_edit_ipv4_subnet	 	body=${subnet[22]}		uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=SUBNET_EDIT_NOT_ALLOWED
	Validate Response	${resp}	${valDict}

CREATE NETWORK NETWORK15
	${network_body}=	Build Network Body With Subnet Uri		${Ethernet_network_1}		NETWORK15		15.15.15.0
	${resp} = 	Fusion Api Create Ethernet Network		body=${network_body}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}  


F258_API_NETWORKSET_TC_01 - CREATE A NETWORKSET NetSet15 HAVING ASSOCIATED NETWORK
	${network_body} = 		Add Network Sets from NetworkSet Name	${network_sets}		NetSet15	
	${resp} = 	Fusion Api Create Network Set		body=${network_body}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict} 
	
F258_API_NETWORKSET_TC_02 - DELETE THE CREATED A NETWORKSET NetSet15 HAVING ASSOCIATED NETWORK	
	${resp} = 	Fusion Api Delete Network Set		name=NetSet15
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict} 


F258_API_NETWORKSET_TC_03 - CREATE NETWORK SET HAVING ASSOCIATED AND NOT ASSOCIATED NETWORKS
	${resp} = 			fusion_api_create_ipv4_subnet	 body=${subnet[3]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	#CREATE NETWORK NETWORK40
	${resp} = 	Fusion Api Create Ethernet Network		body=${Ethernet_network_1[9]}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict} 
	#CREATE NETWORKSET with NETWORK40 and NETWORK15
	${network_body} = 		Add Network Sets from NetworkSet Name	${network_sets}		NetSet4015	
	${resp} = 	Fusion Api Create Network Set		body=${network_body}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}
	
F258_API_NETWORKSET_TC_04 - ADD RANGE TO SUBNET 15.15.15.0 ALREADY IN NETWORK SET
	${range}=   Build IPRange Body    	${ipv4ranges}      15.15.15.0    		test15R3	
	:For  ${x}  in  @{range}
	\   ${resp}=  fusion_api_create_ipv4_range   	${x}
	\   ${valDict} = 	Create Dictionary		status_code=${200}
	\   Validate Response	${resp}	${valDict}	


F258_API_NETWORKSET_TC_09 - DELETE A RANGE WHICH IS ASSOCIATED WITH A NETWORKSET
	${subnets}=			Get Subnet		15.15.15.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	Log 	${rangeuri}
	Log 	${rangeuri[0]}
	${resp} = 			fusion_api_delete_ipv4_range	 	uri=${rangeuri[0]}
	Log 	${resp}

F258_API_NETWORKSET_TC_07 -DELETE NETWORKSET HAVING ASSOCIATED SUBNET
	${resp} = 			fusion_api_create_ipv4_subnet	 body=${subnet[22]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${range}=   Build IPRange Body    	${ipv4ranges}      16.16.16.0    		Range16	
	:For  ${x}  in  @{range}
	\   ${resp}=  fusion_api_create_ipv4_range   	${x}
	\   ${valDict} = 	Create Dictionary		status_code=${200}
	\   Validate Response	${resp}	${valDict}
	${network_body}=	Build Network Body With Subnet Uri		${Ethernet_network_1}		NETWORK16		16.16.16.0
	${resp} = 	Fusion Api Create Ethernet Network		body=${network_body}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict} 
	${network_body} = 		Add Network Sets from NetworkSet Name	${network_sets}		NetSet16	
	${resp} = 	Fusion Api Create Network Set		body=${network_body}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict} 
	${resp} = 	Fusion Api Delete Network Set		name=NetSet16
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict} 
	
DELETING THE NETWORK CREATED ABOVE TC
	${neturi}=	Get Ethernet URI	NETWORK16
	${resp}=	Fusion Api Delete Ethernet Network 		uri=${neturi}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict} 

	
F258_API_NETWORKSET_TC_08 -DELETE NETWORKSET HAVING NO ASSOCIATED SUBNET
	${resp} = 	Fusion Api Create Ethernet Network		body=${Ethernet_network_1[5]}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict} 
	${network_body} = 		Add Network Sets from NetworkSet Name	${network_sets}		NetSet16A	
	${resp} = 	Fusion Api Create Network Set		body=${network_body}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict} 
	${resp} = 	Fusion Api Delete Network Set		name=NetSet16A
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict} 

DELETE NETWORK Network16A
	${neturi}=	Get Ethernet URI	Network16A
	${resp}=	Fusion Api Delete Ethernet Network 		uri=${neturi}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict} 

DELETE NETWORKSET NetSet4015
	${resp} = 	Fusion Api Delete Network Set		name=NetSet4015
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict} 
	
DELETE NETWORK NETWORK15
	${neturi}=	Get Ethernet URI	NETWORK15
	${resp}=	Fusion Api Delete Ethernet Network 		uri=${neturi}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict} 
	
DELETE NETWORK NETWORK40
	${neturi}=	Get Ethernet URI	NETWORK40
	${resp}=	Fusion Api Delete Ethernet Network 		uri=${neturi}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict} 

DELETE SUBNET-15.15.15.0
	${subnets}=   Get Subnet		15.15.15.0
	${uri}=    Get from Subnet		${subnets}			uri
	${resp} =       fusion_api_delete_ipv4_subnet   		 uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${204}
	Validate Response	${resp}	${valDict}	
	
DELETE SUBNET- 16.16.16.0
	${subnets}=   Get Subnet		16.16.16.0
	${uri}=    Get from Subnet		${subnets}			uri
	${resp} =       fusion_api_delete_ipv4_subnet   		 uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${204}
	Validate Response	${resp}	${valDict}
	
DELETE SUBNET-40.40.40.0
	${subnets}=   Get Subnet		40.40.40.0
	${uri}=    Get from Subnet		${subnets}			uri
	${resp} =       fusion_api_delete_ipv4_subnet   		 uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${204}
	Validate Response	${resp}	${valDict}	

#----------------------------networkset end------------------------

# ----------------------------------RANGES START

CREATE SUBNET-30.30.30.0
	${resp} = 			fusion_api_create_ipv4_subnet	 body=${subnet[2]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}

CREATE RANGE-30.30.30.0
	${range}=   Build IPRange Body    	${ipv4ranges}      30.30.30.0    		test13	
	:For  ${x}  in  @{range}
	\   ${resp}=  fusion_api_create_ipv4_range   	${x}
	\   ${valDict} = 	Create Dictionary		status_code=${200}
	\   Validate Response	${resp}	${valDict}

F258_API_RANGE_TC_03- EDIT A DISABLE RANGE
	${subnets}=			Get Subnet		30.30.30.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp} = 			fusion_api_edit_ipv4_range	 	body=${range_disable[0]}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${range}=   Build IPRange Body    	${ipv4ranges}      30.30.30.0    		test1330
	${resp} = 			fusion_api_edit_ipv4_range	 	body=${range[0]}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}

F258_API_RANGE_TC_02 - DISABLE A RANGE AND CREATE ANOTHER DUPLICATE RANGE
	${subnets}=			Get Subnet		30.30.30.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp} = 			fusion_api_edit_ipv4_range	 	body=${range_disable[0]}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${range}=   Build IPRange Body    	${ipv4ranges}      30.30.30.0    		test1330
	:For  ${x}  in  @{range}
	\   ${resp}=  fusion_api_create_ipv4_range   	${x}
	\   ${valDict} = 	Create Dictionary		status_code=${400}
	\	...										errorCode=OVERLAPPING_RANGE_NAME
	\   Validate Response	${resp}	${valDict}
	

F258_API_RANGE_TC_04 - DISABLE A RANGE AND CREATE ANOTHER RANGE WITH SAME NAME
	${subnets}=		Get Subnet		30.30.30.0
	${uri}=		Get from Subnet				${subnets}			uri
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp} = 		fusion_api_edit_ipv4_range	 	body=${range_disable[0]}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${getrangedup}		Get From Dictionary		${ipv4ranges[14]}		name
	${range}=   Build IPRange Body    	${ipv4ranges}      30.30.30.0    		${getrangedup}
	:For  ${x}  in  @{range}
	\   ${resp}=  fusion_api_create_ipv4_range   	${x}
	\   ${valDict} = 	Create Dictionary		status_code=${400}
	\	...										errorCode=OVERLAPPING_RANGE_NAME
	\   Validate Response	${resp}	${valDict}

F258_API_RANGE_TC_57 - CREATE RANGE LAST IP GREATER THAN THE FIRST IP
	${range}=   Build IPRange Body    	${ipv4ranges}      30.30.30.0    		OverLapRange	
	:For  ${x}  in  @{range}
	\   ${resp}=  fusion_api_create_ipv4_range   	${x}
	\   ${valDict} = 	Create Dictionary		status_code=${400}
	\	...									errorCode=INVALID_POOLRANGE
	\   Validate Response	${resp}	${valDict}
	
F258_API_RANGE_TC_56 - CREATE RANGE START ID SAME AS SUBNET ID
	${range}=   Build IPRange Body    	${ipv4ranges}      30.30.30.0    		SameSubnetIdStartAddress	
	:For  ${x}  in  @{range}
	\   ${resp}=  fusion_api_create_ipv4_range   	${x}
	\   ${valDict} = 	Create Dictionary		status_code=${400}
	\	...									errorCode=INVALID_IP_RANGE
	\   Validate Response	${resp}	${valDict}

F258_API_RANGE_TC_55 -CREATE RANGE INVALID LAST IP ADDRESS
	${range}=   Build IPRange Body    	${ipv4ranges}      30.30.30.0    		InvalidEndAddress	
	:For  ${x}  in  @{range}
	\   ${resp}=  fusion_api_create_ipv4_range   	${x}
	\   ${valDict} = 	Create Dictionary		status_code=${400}
	\	...									errorCode=ADDRESS_FORMAT_IPV4
	\   Validate Response	${resp}	${valDict}
	
F258_API_RANGE_TC_08 -CREATE RANGE LOOPBACK END ADDRESS
	${range}=   Build IPRange Body    	${ipv4ranges}      30.30.30.0    		LoopbackEndAddress	
	:For  ${x}  in  @{range}
	\   ${resp}=  fusion_api_create_ipv4_range   	${x}
	\   ${valDict} = 	Create Dictionary		status_code=${400}
	\	...									errorCode=INVALID_IP_RANGE
	\   Validate Response	${resp}	${valDict}	
	
F258_API_RANGE_TC_07 - CREATE RANGE LOOPBACK START ADDRESS
	${range}=   Build IPRange Body    	${ipv4ranges}      30.30.30.0    		LoopbackStartAddress	
	:For  ${x}  in  @{range}
	\   ${resp}=  fusion_api_create_ipv4_range   	${x}
	\   ${valDict} = 	Create Dictionary		status_code=${400}
	\	...									errorCode=INVALID_POOLRANGE
	\   Validate Response	${resp}	${valDict}
	
F258_API_RANGE_TC_54 - CREATE RANGE EMPTY ADDRESSES
	${range}=   Build IPRange Body    	${ipv4ranges}      30.30.30.0    		EmptyAddress	
	:For  ${x}  in  @{range}
	\   ${resp}=  fusion_api_create_ipv4_range   	${x}
	\   ${valDict} = 	Create Dictionary		status_code=${400}
	\	...									errorCode=ADDRESS_FORMAT_IPV4
	\   Validate Response	${resp}	${valDict}


F258_API_RANGE_TC_20 - DELETION OF DISABLED RANGE
	${subnets}=			Get Subnet		30.30.30.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp} = 			fusion_api_edit_ipv4_range	 	body=${range_disable[0]}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${range}=   Build IPRange Body    	${ipv4ranges}      30.30.30.0    		test1330
	${resp} = 			fusion_api_delete_ipv4_range	 	body=${range[0]}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${204}
	Validate Response	${resp}	${valDict}
	

F258_API_RANGE_TC_06-CREATE RANGE DATA
	${range}=   Build IPRange Body    	${ipv4ranges}      30.30.30.0    		test13	
	:For  ${x}  in  @{range}
	\   ${resp}=  fusion_api_create_ipv4_range   	${x}
	\   ${valDict} = 	Create Dictionary		status_code=${200}
	\   Validate Response	${resp}	${valDict}
	
F258_API_RANGE_TC_11 - VERIFY THE CREATED RANGE DATA
	${subnets}=			Get Subnet		30.30.30.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp}=	fusion_api_get_ipv4_range 	uri=${rangeuri[0]}	
	${valDict} = 	Create Dictionary		name=test13
	...										startAddress=30.30.30.2
	...										endAddress=30.30.30.200
	Validate Response	${resp}	${valDict}	
	
F258_API_RANGE_TC_12-CREATE RANGE WITH DUPLICATE START AND END ADDRESS
	${range}=   Build IPRange Body    	${ipv4ranges}      30.30.30.0    		test13Duplicate	
	:For  ${x}  in  @{range}
	\   ${resp}=  fusion_api_create_ipv4_range   	${x}
	\   ${valDict} = 	Create Dictionary		status_code=${400}
	\	...										errorCode=OVERLAPPING_POOLRANGE
	\   Validate Response	${resp}	${valDict}

F258_API_RANGE_TC_13 - CREATE DUPLICATE RANGE WITH SAME NAME BUT DIFFERENT IP ADDRESS
	${range}=   Build IPRange Body    	${ipv4ranges_edit}      30.30.30.0    		test13
	:For  ${x}  in  @{range}
	\   ${resp}=  fusion_api_create_ipv4_range   	${x}
	\   ${valDict} = 	Create Dictionary		status_code=${400}
	\	...										errorCode=OVERLAPPING_RANGE_NAME
	\   Validate Response	${resp}	${valDict}
	
F258_API_RANGE_TC_24-DELETE AN NON_EXISTING RANGE
	${subnets}=			Get Subnet		30.30.30.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp} = 			fusion_api_delete_ipv4_range	 	uri=${rangeuri[0]}
	${resp1} = 			fusion_api_delete_ipv4_range	 	uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${404}
	...									errorCode=RESOURCE_NOT_FOUND
	Validate Response	${resp1}	${valDict}

F258_API_RANGE_TC_25 - CREATE RANGE WITH SAME FIRST AND LAST IP
	${range}=   Build IPRange Body    	${ipv4ranges}      30.30.30.0    		RangeSameFirstEndIp	
	:For  ${x}  in  @{range}
	\   ${resp}=  fusion_api_create_ipv4_range   	${x}
	\   ${valDict} = 	Create Dictionary		status_code=${200}
	\   Validate Response	${resp}	${valDict}


F258_API_RANGE_TC_33-DELETE RANGE AND REASSIGN THE IP TO NEW RANGE
	${subnets}=			Get Subnet		30.30.30.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp} = 	fusion_api_delete_ipv4_range	 	uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary		status_code=${204}
	Validate Response	${resp}	${valDict}	
	${range}=   Build IPRange Body    	${ipv4ranges}      30.30.30.0    		RangeReAssignIpAfterDelete
	:For  ${x}  in  @{range}
	\   ${resp}=  fusion_api_create_ipv4_range   	${x}
	\   ${valDict} = 	Create Dictionary		status_code=${200}
	\   Validate Response	${resp}	${valDict}

F258_API_RANGE_TC_37-OVERLAPPING 2ND RANGE
	${range}=   Build IPRange Body    	${ipv4ranges}      30.30.30.0    		RangeSameFirstEndIp
	:For  ${x}  in  @{range}
	\   ${resp}=  fusion_api_create_ipv4_range   	${x}
	\   ${valDict} = 	Create Dictionary		status_code=${400}
	...											errorCode=OVERLAPPING_POOLRANGE
	\   Validate Response	${resp}	${valDict}

CREATE SUBNET-100.100.100.0
	${resp} = 	fusion_api_create_ipv4_subnet	 body=${subnet[30]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	
F258_API_RANGE_TC_36-CREATE RANGE OUTSIDE THE SCOPE OF SUBNET
	${range}=   Build IPRange Body    	${ipv4ranges}      100.100.100.0    		RangeSameFirstEndIp
	:For  ${x}  in  @{range}
	\   ${resp}=  fusion_api_create_ipv4_range   	${x}
	\   ${valDict} = 	Create Dictionary		status_code=${400}
	...											errorCode=INVALID_IP_RANGE
	\   Validate Response	${resp}	${valDict}
	
DELETE SUBNET -100.100.100.0
	${subnets}=   Get Subnet		100.100.100.0
	${uri}=    Get from Subnet		${subnets}			uri
	${resp} =       fusion_api_delete_ipv4_subnet   		 uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${204}
	Validate Response	${resp}	${valDict}
	
DELETE SUBNET - 30.30.30.0
	${subnets}=   Get Subnet		30.30.30.0
	${uri}=    Get from Subnet		${subnets}			uri
	${resp} =       fusion_api_delete_ipv4_subnet   		 uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${204}
	Validate Response	${resp}	${valDict}
	

#--------------------- RANGE END----------------------

#---------------------------RANGE ALLOCATE STARTS---------------

CREATE SUBNET 150.150.150.0
	${resp} = 	fusion_api_create_ipv4_subnet	 body=${subnet[48]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}

CREATE RANGE-RangeSub150
	${range}=   Build IPRange Body    	${ipv4ranges}      150.150.150.0    		Range150Allocate	
	:For  ${x}  in  @{range}
	\   ${resp}=  fusion_api_create_ipv4_range   	${x}
	\   ${valDict} = 	Create Dictionary		status_code=${200}
	\   Validate Response	${resp}	${valDict}

CREATE NETWORK NETWORK150 AND ASSOCIATE THE SUBNET 150
	${network_body}=	Build Network Body With Subnet Uri		${Ethernet_network_1}		NETWORK150		150.150.150.0
	${resp} = 	Fusion Api Create Ethernet Network		body=${network_body}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict} 

F258_API_RANGE_TC_38- EDIT RANGE EXPAND FIRST IP
	${subnets}=			Get Subnet		150.150.150.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${range}=   Build IPRange Body    	${ipv4ranges_edit}      150.150.150.0    		Range150ExpandFirstIp
	${resp} = 			fusion_api_edit_ipv4_range	 	body=${range[0]}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	Verify Range Data	${ipv4ranges_edit[1]}	150.150.150.0
	
F258_API_RANGE_TC_39- EDIT RANGE EXPAND LAST IP
	${subnets}=			Get Subnet		150.150.150.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${range}=   Build IPRange Body    	${ipv4ranges_edit}      150.150.150.0    		Range150ExpandLastIp
	${resp} = 			fusion_api_edit_ipv4_range	 	body=${range[0]}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	Verify Range Data	${ipv4ranges_edit[2]}	150.150.150.0
	

F258_API_RANGE_TC_40- EDIT RANGE EXPAND FIRST AND LAST LAST IP
	${subnets}=			Get Subnet		150.150.150.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${range}=   Build IPRange Body    	${ipv4ranges_edit}      150.150.150.0    		Range150ExpandFirstLastIp
	${resp} = 			fusion_api_edit_ipv4_range	 	body=${range[0]}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	Verify Range Data	${ipv4ranges_edit[3]}	150.150.150.0
	
	
F258_API_RANGE_TC_41- EDIT RANGE SHRINK FIRST IP
	${subnets}=			Get Subnet		150.150.150.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${range}=   Build IPRange Body    	${ipv4ranges_edit}      150.150.150.0    		Range150ShrinkFirstIp
	${resp} = 			fusion_api_edit_ipv4_range	 	body=${range[0]}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	Verify Range Data	${ipv4ranges_edit[4]}	150.150.150.0
	
F258_API_RANGE_TC_42- EDIT RANGE SHRINK LAST IP
	${subnets}=			Get Subnet		150.150.150.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${range}=   Build IPRange Body    	${ipv4ranges_edit}      150.150.150.0    		Range150ShrinkLastIp
	${resp} = 			fusion_api_edit_ipv4_range	 	body=${range[0]}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	Verify Range Data	${ipv4ranges_edit[5]}	150.150.150.0
	
	
F258_API_RANGE_TC_43- EDIT RANGE SHRINK FIRST AND LAST IP
	${subnets}=			Get Subnet		150.150.150.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${range}=   Build IPRange Body    	${ipv4ranges_edit}      150.150.150.0    		Range150ShrinkFirstLastIp
	${resp} = 			fusion_api_edit_ipv4_range	 	body=${range[0]}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	Verify Range Data	${ipv4ranges_edit[6]}	150.150.150.0
	
F258_API_RANGE_TC_44- EDIT RANGE SHRINK FIRST AND EXPAND LAST IP
	${subnets}=			Get Subnet		150.150.150.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${range}=   Build IPRange Body    	${ipv4ranges_edit}      150.150.150.0    		Range150ShrinkExpandIp
	${resp} = 			fusion_api_edit_ipv4_range	 	body=${range[0]}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	Verify Range Data	${ipv4ranges_edit[7]}	150.150.150.0
	
EDIT RANGE BACK TO ORIGINAL VALUES
	${subnets}=			Get Subnet		150.150.150.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${range}=   Build IPRange Body    	${ipv4ranges_edit}      150.150.150.0    		Range150Allocate
	${resp} = 			fusion_api_edit_ipv4_range	 	body=${range[0]}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	
ALLOCATE 6 IPS FROM THE RANGE
	${subnets}=			Get Subnet		150.150.150.150
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} = 	fusion_api_allocate_ipv4_subnet		${subnet_allocate[17]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	Validate Response	${resp}	${valDict}

F258_API_RANGE_TC_32-ALLOCATED + FREE IP EQUALS TOTAL IP COUNT
	${subnets}=			Get Subnet		150.150.150.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp} = 			fusion_api_get_ipv4_range	 	uri=${rangeuri[0]}
	${freeId_count} =     Get From Dictionary     ${resp}    freeIdCount
	${freed}= 	set variable	${freeId_count}
	${allocatedId_count} =     Get From Dictionary     ${resp}    allocatedIdCount
	${allocate}=	set variable	${allocatedId_count}
	${total} = 	Evaluate	${freed}+${allocate}
	${valDict} = 	Create Dictionary	totalCount=${total}
	Validate Response	${resp}	${valDict}

F258_API_RANGE_TC_45- EDIT RANGE AND EXPAND FIRST IP AFTER ALLOCATION
	${subnets}=			Get Subnet		150.150.150.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${range}=   Build IPRange Body    	${ipv4ranges_edit}      150.150.150.0    		Range150ExpandFirstIp
	${resp} = 			fusion_api_edit_ipv4_range	 	body=${range[0]}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=EDIT_NOT_ALLOWED
	Validate Response	${resp}	${valDict}
	Verify Range Data After Allocate	${ipv4ranges_edit[8]}	${ipv4ranges_edit[1]} 	150.150.150.0
	
	
F258_API_RANGE_TC_46- EDIT RANGE AND EXPAND LAST IP AFTER ALLOCATION
	${subnets}=			Get Subnet		150.150.150.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${range}=   Build IPRange Body    	${ipv4ranges_edit}      150.150.150.0    		Range150ExpandLastIpAllocated
	${resp} = 			fusion_api_edit_ipv4_range	 	body=${range[0]}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}	
	Verify Range Data	${ipv4ranges_edit[9]}	150.150.150.0
	
F258_API_RANGE_TC_47-EDIT RANGE AND SHRINK FIRST IP AFTER ALLOCATION
	${subnets}=			Get Subnet		150.150.150.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${range}=   Build IPRange Body    	${ipv4ranges_edit}      150.150.150.0    		Range150ShrinkFirstIpAllocated
	${resp} = 			fusion_api_edit_ipv4_range	 	body=${range[0]}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=EDIT_NOT_ALLOWED
	Validate Response	${resp}	${valDict}
	Verify Range Data After Allocate	${ipv4ranges_edit[9]}	${ipv4ranges_edit[10]}	 150.150.150.0
		
F258_API_RANGE_TC_48-EDIT RANGE AND SHRINK LAST IP AFTER ALLOCATION
	${subnets}=			Get Subnet		150.150.150.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${range}=   Build IPRange Body    	${ipv4ranges_edit}      150.150.150.0    		Range150ShrinkFirstLastIp
	${resp} = 			fusion_api_edit_ipv4_range	 	body=${range[0]}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=EDIT_NOT_ALLOWED
	Validate Response	${resp}	${valDict}
	Verify Range Data After Allocate	${ipv4ranges_edit[9]}	${ipv4ranges_edit[6]}	150.150.150.0
		
F258_API_RANGE_TC_49 - EDIT RANGE SHRINK FIRST AND EXPAND LAST IP AFTER ALLOCATION
	${subnets}=			Get Subnet		150.150.150.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${range}=   Build IPRange Body    	${ipv4ranges_edit}      150.150.150.0    		Range150ShrinkExpandIp
	${resp} = 			fusion_api_edit_ipv4_range	 	body=${range[0]}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=EDIT_NOT_ALLOWED
	Validate Response	${resp}	${valDict}
	Verify Range Data After Allocate	${ipv4ranges_edit[9]}	${ipv4ranges_edit[7]}	150.150.150.0
		
F258_API_RANGE_TC_35-DISABLE A RANGE AFTER IP ARE ALLOCATED
	${subnets}=			Get Subnet		150.150.150.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp} = 			fusion_api_edit_ipv4_range	 	body=${range_disable[0]}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${200}
	
F258_API_RANGE_TC_58-EDIT AND EXPAND LAST IP OF A ALLOCATED AND DISABLED RANGE
	${subnets}=			Get Subnet		150.150.150.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${range}=   Build IPRange Body    	${ipv4ranges_edit}      150.150.150.0    		Range150DisExpLastIpAllocat
	${resp} = 			fusion_api_edit_ipv4_range	 	body=${range[0]}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	Verify Range Data	${ipv4ranges_edit[11]}	150.150.150.0
	
F258_API_RANGE_TC_51- DELETE A DISABLED AND ALLOCATED RANGE
	${subnets}=			Get Subnet		150.150.150.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp} = 			fusion_api_delete_ipv4_range	 	uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=HAS_IPS_IN_USE
	Validate Response	${resp}	${valDict}
	
F258_API_RANGE_TC_19 - RETURN IPs TO DISABLED RANGE Range2Sub504030	
	${subnets}=			Get Subnet		150.150.150.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} = 	fusion_api_collect_ipv4_subnet		${subnet_allocate[17]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	Validate Response	${resp}	${valDict}	
	
DELETE THE NETWORK150
	${neturi}=	Get Ethernet URI	NETWORK150
	${resp}=	Fusion Api Delete Ethernet Network 		uri=${neturi}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict} 
	
DELETE SUBNET 150.150.150.0 
	${subnets}=   Get Subnet		150.150.150.0
	${uri}=    Get from Subnet		${subnets}			uri
	${resp} =       fusion_api_delete_ipv4_subnet   		 uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${204}
	Validate Response	${resp}	${valDict}


#---------------------------RANGE ALLOCATE END ---------------

#------------------------NETWORK START-----------------------


CREATE SUBNET 100.100.100.0
	${resp} = 	fusion_api_create_ipv4_subnet	 body=${subnet[30]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	
F258_API_ASSOCIATE_TC_01 - ASSOCIATE A SUBNET WITH EMPTY SUBNET URI
	${resp} = 	Fusion Api Create Ethernet Network		body=${Ethernet_network_1[6]}
	${valDict} = 	Create Dictionary	errorCode=CRM_BADLY_FORMED_URI
	Validate Response	${resp}	${valDict}

F258_API_NETWORK_TC_03 - CREATE NETWORK WITH DEFAULT VALUES AND NO SUBNETS 
	${resp} = 	Fusion Api Create Ethernet Network		body=${Ethernet_network_1[5]}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict} 
	
	
F258_API_NETWORK_TC_02- CREATE NETWORK NET100 ASSOCIATE SUBNET WITHOUT RANGES 
	${network_body}=	Build Network Body With Subnet Uri		${Ethernet_network_1}		NET100	100.100.100.0
	Log		${network_body}
	${resp} = 	Fusion Api Create Ethernet Network		body=${network_body}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict} 
	


F258_API_ASSOCIATE_TC_20- DELETE A SUBNET WHICH IS ASSOCIATED WITH A NETWORK 100.100.100.0
	${subnets}=   Get Subnet		100.100.100.0
	${uri}=    Get from Subnet		${subnets}			uri
	${resp} =       fusion_api_delete_ipv4_subnet   		 uri=${uri}
	${valDict} = 	Create Dictionary	errorCode=SUBNET_DELETE_NOT_ALLOWED
	...									status_code=${400}
	Validate Response	${resp}	${valDict}

F258_API_ASSOCIATE_TC_21 - ADD RANGE TO A SUBNET ASSOCIATED WITH A NETWORK
	${range}=   Build IPRange Body    	${ipv4ranges}      100.100.100.0    		Range100AssiciateTestCase	
	Log				${range}
	:For  ${x}  in  @{range}
	\   ${resp}=  fusion_api_create_ipv4_range   	${x}
	\   ${valDict} = 	Create Dictionary		status_code=${200}
	\   Validate Response	${resp}	${valDict}


F258_API_NETWORK_TC_04 - CREATE BULK NETWORK WITH NO ASSOCIATION 
	${resp} = 	fusion_api_create_ethernet_bulk_networks		${bulk_networks_dict}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict} 



#------------------NETWORK END------------------------

#----------------------------NETWORK Start------------------------

CREATE SUBNET 125
	${resp} = 	fusion_api_create_ipv4_subnet	 body=${subnet[34]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}

CREATE RANGE-Range125A
	${range}=   Build IPRange Body    	${ipv4ranges}      125.125.125.0    		Range125A	
	:For  ${x}  in  @{range}
	\   ${resp}=  fusion_api_create_ipv4_range   	${x}
	\   ${valDict} = 	Create Dictionary		status_code=${200}
	\   Validate Response	${resp}	${valDict}

F258_API_NETWORK_TC_01- CREATE TAGGED NETWORK AND ASSOCIATE SUBNET HAVING RANGE
	${network_body}=	Build Network Body With Subnet Uri		${Ethernet_network_1}		NETWORK125		125.125.125.0
	${resp} = 	Fusion Api Create Ethernet Network		body=${network_body}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict} 

CREATE SUBNET 126
	${resp} = 	fusion_api_create_ipv4_subnet	 body=${subnet[35]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}

F258_API_NETWORK_TC_08 - DELETE NETWORK HAVING SUBNET ASSOCIATED
	${neturi}=	Get Ethernet URI	NETWORK125
	${resp}=	Fusion Api Delete Ethernet Network 		uri=${neturi}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict} 
	
DELETE CREATED Network16A
	${neturi}=	Get Ethernet URI	Network16A
	${resp}=	Fusion Api Delete Ethernet Network 		uri=${neturi}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict} 

F258_API_NETWORK_TC_09 - DELETE NETWORK WITH NO SUBNET ASSOCIATED
	${resp} = 	Fusion Api Create Ethernet Network		body=${Ethernet_network_1[5]}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict} 
	${neturi}=	Get Ethernet URI	Network16A
	${resp}=	Fusion Api Delete Ethernet Network 		uri=${neturi}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict} 

F258_API_NETWORK_TC_12-CREATE UNTAGGED NETWORK AND ASSOCIATE WITH SUBNET
	${network_body}=	Build Network Body With Subnet Uri		${Ethernet_network_1}		NETWORK126Untagged		126.126.126.0
	${resp} = 	Fusion Api Create Ethernet Network		body=${network_body}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict} 

DELETE THE UNTAGGED NETWORK NETWORK126Untagged
	${neturi}=	Get Ethernet URI	NETWORK126Untagged
	${resp}=	Fusion Api Delete Ethernet Network 		uri=${neturi}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict} 


DELETE SUBNET 125.125.125.0
	${subnets}=   Get Subnet		125.125.125.0
	${uri}=    Get from Subnet		${subnets}			uri
	${resp} =       fusion_api_delete_ipv4_subnet   		 uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${204}
	Validate Response	${resp}	${valDict}
	
DELETE SUBNET 126.126.126.0
	${subnets}=   Get Subnet		126.126.126.0
	${uri}=    Get from Subnet		${subnets}			uri
	${resp} =       fusion_api_delete_ipv4_subnet   		 uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${204}
	Validate Response	${resp}	${valDict}
	
#----------------------------NETWORK End------------------------

#------------------------------Associate start-------

CREATE SUBNET-20.20.20.0
	${resp} = 	fusion_api_create_ipv4_subnet	 body=${subnet[1]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}

CREATE RANGE-20.20.20.0
	${range}=   Build IPRange Body    	${ipv4ranges}      20.20.20.0    		RangeSub20	
	:For  ${x}  in  @{range}
	\   ${resp}=  fusion_api_create_ipv4_range   	${x}
	\   ${valDict} = 	Create Dictionary		status_code=${200}
	\   Validate Response	${resp}	${valDict}
	
F258_API_ASSOCIATE_TC_07 - ALLOCATE IP FROM RANGE WHICH IS NOT ASSOCIATE
	${subnets}=			Get Subnet		20.20.20.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} = 	fusion_api_allocate_ipv4_subnet		${subnet_allocate[1]}		${uri}
	${valDict} = 	Create Dictionary		errorCode=SUBNET_NOT_ASSOCIATED
	...										status_code=${400}
	Validate Response	${resp}	${valDict}


F258_API_ASSOCIATE_TC_11- DELETE RANGE WHICH IS ASSOCIATED
	${network_body}=	Build Network Body With Subnet Uri		${Ethernet_network_1}		NETWORK20		20.20.20.0
	${resp} = 	Fusion Api Create Ethernet Network		body=${network_body}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict} 
	${subnets}=			Get Subnet		20.20.20.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${range}=   Build IPRange Body    	${ipv4ranges}      20.20.20.0    		RangeSub20
	${resp} = 			fusion_api_delete_ipv4_range	 	body=${range[0]}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${204}
	Validate Response	${resp}	${valDict}

F258_API_ASSOCIATE_TC_12 - CREATE NETWORK WITH EMPTY SUBNET URI TO ASSOCIATE
	${resp} = 	Fusion Api Create Ethernet Network		body=${Ethernet_network_1[12]}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=CRM_BADLY_FORMED_URI
	Validate Response	${resp}	${valDict}
	
F258_API_ASSOCIATE_TC_13 - CREATE NETWORK WITH EMPTY NETWORK NAME
	${resp} = 	Fusion Api Create Ethernet Network		body=${Ethernet_network_1[13]}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=CRM_MISSING_NAME
	Validate Response	${resp}	${valDict}
	
DELETE THE NETWORK 
	${neturi}=	Get Ethernet URI	NETWORK20
	${resp}=	Fusion Api Delete Ethernet Network 		uri=${neturi}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict} 

DELETE SUBNET-20.20.20.0
	${subnets}=   Get Subnet		20.20.20.0
	${uri}=    Get from Subnet		${subnets}			uri
	${resp} =       fusion_api_delete_ipv4_subnet   		 uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${204}
	Validate Response	${resp}	${valDict}

#----------------------------Associate end------------------------



#----------------------------ALLOCATE Start------------------------

CREATE SUBNET 210
	${resp} = 	fusion_api_create_ipv4_subnet	 body=${subnet[33]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}

CREATE RANGE-RangeSub210
	${range}=   Build IPRange Body    	${ipv4ranges}      210.210.210.0    		RangeSub210	
	:For  ${x}  in  @{range}
	\   ${resp}=  fusion_api_create_ipv4_range   	${x}
	\   ${valDict} = 	Create Dictionary		status_code=${200}
	\   Validate Response	${resp}	${valDict}

CREATE NETWORK NETWORK210 AND ASSOCIATE THE SUBNET 210
	${network_body}=	Build Network Body With Subnet Uri		${Ethernet_network_1}		NETWORK210		210.210.210.0
	${resp} = 	Fusion Api Create Ethernet Network		body=${network_body}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict} 

F258_API_ALLOCATE_TC_01 - ALLOCATE NO EXISTING IP
	${subnets}=			Get Subnet		210.210.210.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} = 	fusion_api_allocate_ipv4_subnet		${subnet_allocate[3]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${400}
	...										errorCode=OUT_OF_RANGE
	Validate Response	${resp}	${valDict}

ALLOCATE SPECIFIC IP- 210.210.210.10
	${subnets}=			Get Subnet		210.210.210.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} = 	fusion_api_allocate_ipv4_subnet		${subnet_allocate[2]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	Validate Response	${resp}	${valDict}

	
F258_API_ALLOCATE_TC_02 - VERIFY IT ALLOCATED THE REQUESTED IP
	${subnets}=			Get Subnet		210.210.210.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp}=	fusion_api_get_ipv4_range 	uri=${rangeuri[0]}		
	${range_allocated_uri} =     Get From Dictionary     ${resp}    allocatedFragmentUri
	${resp}=	fusion_api_get_ipv4_range 	uri=${range_allocated_uri}	
	${members1} =     Get From Dictionary     ${resp}    members
	${member_list} = 	Get From List	${members1}		0
	${val_member} = 	Get From Dictionary		${member_list} 		startAddress
	Should Be Equal As Strings		${val_member}	210.210.210.10

F258_API_ALLOCATE_TC_11- ALLOCATE ALREADY ALLOCTED IP
	${subnets}=			Get Subnet		210.210.210.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} = 	fusion_api_allocate_ipv4_subnet		${subnet_allocate[2]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${400}
	...										message=Unable to allocate the following IDs [210.210.210.10] as they are already in use.
	...										errorCode=ID_ALLOCATION_VALIDATION_FAILURE
	Validate Response	${resp}	${valDict}

F258_API_ALLOCATE_TC_04 - FRAGMENT TYPE OF ALLOCATED IP SHOWS AS -IN USE
	${subnets}=			Get Subnet		210.210.210.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp}=	fusion_api_get_ipv4_range 	uri=${rangeuri[0]}		
	${range_allocated_uri} =     Get From Dictionary     ${resp}    allocatedFragmentUri
	${resp}=	fusion_api_get_ipv4_range 	uri=${range_allocated_uri}	
	${members1} =     Get From Dictionary     ${resp}    members
	${member_list} = 	Get From List	${members1}		0
	${val_member} = 	Get From Dictionary		${member_list} 		fragmentType
	Should Be Equal As Strings		${val_member}	IN_USE

F258_API_ALLOCATE_TC_05 - ALLOCATE SET OF IP WHERE 1 IP IS IN USE
	${subnets}=			Get Subnet		210.210.210.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} = 	fusion_api_allocate_ipv4_subnet		${subnet_allocate[4]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${400}
	...										message=Unable to allocate the following IDs [210.210.210.10] as they are already in use.
	...										errorCode=ID_ALLOCATION_VALIDATION_FAILURE
	Validate Response	${resp}	${valDict}
	
F258_API_ALLOCATE_TC_07 -ALLOCATE BROADCAST IP
	${subnets}=			Get Subnet		210.210.210.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} = 	fusion_api_allocate_ipv4_subnet		${subnet_allocate[5]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${400}
	...										errorCode=OUT_OF_RANGE
	Validate Response	${resp}	${valDict}

F258_API_ALLOCATE_TC_14 -ALLOCATE DNS IP
	${subnets}=			Get Subnet		210.210.210.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} = 	fusion_api_allocate_ipv4_subnet		${subnet_allocate[6]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${400}
	...										errorCode=OUT_OF_RANGE
	Validate Response	${resp}	${valDict}	

F258_API_ALLOCATE_TC_13 - ALLOCATE GATEWAY IP
	${subnets}=			Get Subnet		210.210.210.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} = 	fusion_api_allocate_ipv4_subnet		${subnet_allocate[7]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${400}
	...										errorCode=OUT_OF_RANGE
	Validate Response	${resp}	${valDict}

F258_API_ALLOCATE_TC_10 - ALLOCATE FROM A DISABLE RANGE
	${subnets}=			Get Subnet		210.210.210.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp} = 			fusion_api_edit_ipv4_range	 	body=${range_disable[0]}		uri=${rangeuri[0]}
	Log		${resp}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${resp} = 	fusion_api_allocate_ipv4_subnet		${subnet_allocate_count[2]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${400}

ENABLE THE RANGE
	${subnets}=			Get Subnet		210.210.210.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp} = 			fusion_api_edit_ipv4_range	 	body=${range_enable[0]}		uri=${rangeuri[0]}
	Log		${resp}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	
	

F258_API_ALLOCATE_TC_03 - ALLOCATE MORE IP THAN AVAILABLE IP ADDRESS IN RANGE
	${subnets}=			Get Subnet		210.210.210.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} = 	fusion_api_allocate_ipv4_subnet		${subnet_allocate_count[1]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${400}
	...										message=Unable to allocate an IP address because subnet does not have any available IP addresses.
	Validate Response	${resp}	${valDict}	

F258_API_ALLOCATE_TC_08 - ALLOCATE 6 IP BY COUNT
	${subnets}=			Get Subnet		210.210.210.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} = 	fusion_api_allocate_ipv4_subnet		${subnet_allocate_count[0]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	Validate Response	${resp}	${valDict}

F258_API_ALLOCATE_TC_06 - ALLOCATE IP BY COUNT WHEN NOT ALL IPs ARE AVALIABLE
	${subnets}=			Get Subnet		210.210.210.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} = 	fusion_api_allocate_ipv4_subnet		${subnet_allocate_count[0]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${400}
	...										errorCode=SUBNET_EXHAUSTED
	Validate Response	${resp}	${valDict}

	
COLLECT ALL THE ALLOCATED IP
	${subnets}=			Get Subnet		210.210.210.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} = 	fusion_api_collect_ipv4_subnet		${subnet_collect[3]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	Validate Response	${resp}	${valDict}

F258_API_ALLOCATE_TC_16 - ALLOCATE 1 IP AFTER ALL THE IP's ARE ALLOCATED
	${subnets}=			Get Subnet		210.210.210.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} = 	fusion_api_allocate_ipv4_subnet		${subnet_collect[3]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	Validate Response	${resp}	${valDict}
	${subnets}=			Get Subnet		210.210.210.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} = 	fusion_api_allocate_ipv4_subnet		${subnet_allocate_count[2]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${400}
	...										errorCode=SUBNET_EXHAUSTED
	Validate Response	${resp}	${valDict}

COLLECT BACK ALL THE ALLOCATED IP
	${subnets}=			Get Subnet		210.210.210.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} = 	fusion_api_collect_ipv4_subnet		${subnet_collect[3]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	Validate Response	${resp}	${valDict}

F258_API_ALLOCATE_TC_15 - ALLOCATE IP BY COUNT ON A RANGE HAVING DISTRIBUTED ALLOCATION
	${subnets}=			Get Subnet		210.210.210.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} = 	fusion_api_allocate_ipv4_subnet		${subnet_allocate[8]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	Validate Response	${resp}	${valDict}
	${subnets}=			Get Subnet		210.210.210.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} = 	fusion_api_allocate_ipv4_subnet		${subnet_allocate_count[0]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	Validate Response	${resp}	${valDict}

COLLECT THE ALLOCATED IP
	${subnets}=			Get Subnet		210.210.210.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} = 	fusion_api_collect_ipv4_subnet		${subnet_collect[3]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	Validate Response	${resp}	${valDict}
	
DELETE NETWORK NETWORK210
	${neturi}=	Get Ethernet URI	NETWORK210
	${resp}=	Fusion Api Delete Ethernet Network 		uri=${neturi}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict} 


DELETE SUBNET -210.210.210.0
	${subnets}=   Get Subnet		210.210.210.0
	${uri}=    Get from Subnet		${subnets}			uri
	${resp} =       fusion_api_delete_ipv4_subnet   		 uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${204}
	Validate Response	${resp}	${valDict}

#----------------------------ALLOCATE end------------------------


#---------------------------COLLECTOR STARTS---------------
CREATE SUBNET 50.40.40.0
	${resp} = 	fusion_api_create_ipv4_subnet	 body=${subnet[4]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}

CREATE SUBNET 50.40.41.0
	${resp} = 	fusion_api_create_ipv4_subnet	 body=${subnet[43]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}

CREATE RANGE-Range1Sub504040
	${range}=   Build IPRange Body    	${ipv4ranges}      50.40.40.0    		Range1Sub504040	
	:For  ${x}  in  @{range}
	\   ${resp}=  fusion_api_create_ipv4_range   	${x}
	\   ${valDict} = 	Create Dictionary		status_code=${200}
	\   Validate Response	${resp}	${valDict}	
	
CREATE RANGE-Range1Sub504041
	${range}=   Build IPRange Body    	${ipv4ranges}      50.40.41.0   		Range1Sub504041	
	:For  ${x}  in  @{range}
	\   ${resp}=  fusion_api_create_ipv4_range   	${x}
	\   ${valDict} = 	Create Dictionary		status_code=${200}
	\   Validate Response	${resp}	${valDict}

CREATE NETWORK NetworkSub504040
	${network_body}=	Build Network Body With Subnet Uri		${Ethernet_network_1}		NetworkSub504040		50.40.40.0
	${resp} = 	Fusion Api Create Ethernet Network		body=${network_body}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict} 

CREATE NETWORK NetworkSub504041
	${network_body}=	Build Network Body With Subnet Uri		${Ethernet_network_1}		NetworkSub504041		50.40.41.0
	${resp} = 	Fusion Api Create Ethernet Network		body=${network_body}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict} 

ALLOCATE IP FROM RANGE Range1Sub504040
	${subnets}=			Get Subnet		50.40.40.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} = 	fusion_api_allocate_ipv4_subnet		${subnet_allocate[10]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	Validate Response	${resp}	${valDict}

ALLOCATE IP FROM RANGE Range1Sub504041
	${subnets}=			Get Subnet		50.40.41.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} = 	fusion_api_allocate_ipv4_subnet		${subnet_allocate[11]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	Validate Response	${resp}	${valDict}
	
F258_API_COLLECT_TC_01-COLLECTS IP FROM SPECIFIED RANGE Range1Sub504040	
	${subnets}=			Get Subnet		50.40.40.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} = 	fusion_api_collect_ipv4_subnet		${subnet_allocate[10]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	Validate Response	${resp}	${valDict}
	
F258_API_COLLECT_TC_08-COLLECTING AN ALREADY COLLECTED IP
	${subnets}=			Get Subnet		50.40.40.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} = 	fusion_api_collect_ipv4_subnet		${subnet_allocate[10]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	Validate Response	${resp}	${valDict}

F258_API_COLLECT_TC_09-IP RETURNED TO THE SPECIFIED RANGE
	#ALLOCATE IP
	${subnets}=			Get Subnet		50.40.40.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} = 	fusion_api_allocate_ipv4_subnet		${subnet_allocate[10]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	Validate Response	${resp}	${valDict}
	#CHECK THE FREED COUNT
	${subnets}=			Get Subnet		50.40.40.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp}=	fusion_api_get_ipv4_range 	uri=${rangeuri[0]}
	Log		${resp}
	${valDict} = 	Create Dictionary		freeIdCount=${10}
	Validate Response	${resp}	${valDict}
	#COLLECT THE IP
	${subnets}=			Get Subnet		50.40.40.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} = 	fusion_api_collect_ipv4_subnet		${subnet_allocate[10]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	Validate Response	${resp}	${valDict}
	#CHECK THE FREED COUNT
	${subnets}=			Get Subnet		50.40.40.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp}=	fusion_api_get_ipv4_range 	uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary		freeIdCount=${11}
	Validate Response	${resp}	${valDict}

ALLOCATE 1 IP FROM BOTH RANGE
	${subnets}=			Get Subnet		50.40.40.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} = 	fusion_api_collect_ipv4_subnet		${subnet_allocate[10]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	Validate Response	${resp}	${valDict}
	${subnets}=			Get Subnet		50.40.41.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} = 	fusion_api_collect_ipv4_subnet		${subnet_allocate[11]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	Validate Response	${resp}	${valDict}

F258_API_COLLECT_TC_03- COLLECTS IP FROM MORE THAN 1 POOLS
	${subnets}=			Get Subnet		50.40.40.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} = 	fusion_api_collect_ipv4_subnet		${subnet_allocate[10]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	Validate Response	${resp}	${valDict}	
	${subnets}=			Get Subnet		50.40.41.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} = 	fusion_api_collect_ipv4_subnet		${subnet_allocate[11]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	Validate Response	${resp}	${valDict}
	
ALLOCATE MULTIPLE IP FROM 
	${subnets}=			Get Subnet		50.40.40.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} = 	fusion_api_allocate_ipv4_subnet		${subnet_allocate[12]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	Validate Response	${resp}	${valDict}
	
	
F258_API_COLLECT_TC_06-COLLECT ONLY ALLOCATED IP's
	${subnets}=			Get Subnet		50.40.40.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} = 	fusion_api_collect_ipv4_subnet		${subnet_allocate[18]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	Validate Response	${resp}	${valDict}
	${ip_list}= 	Get From Dictionary 	${resp}		idList
	${resp_ip_1}=	Get From List 	${ip_list}	0
	${resp_ip_2}=	Get From List 	${ip_list}	1
	${resp_ip_3}=	Get From List 	${ip_list}	2
	${ip_1_datafile}=	Get From Dictionary 	${subnet_allocate[13]}	idList
	${datafile_ip_1}=	Get From List 	${ip_1_datafile}	1
	${datafile_ip_2}=	Get From List 	${ip_1_datafile}	2
	${datafile_ip_3}=	Get From List 	${ip_1_datafile}	4
	Should Be Equal As Strings		${resp_ip_1}	${datafile_ip_1}
	Should Be Equal As Strings		${resp_ip_2}	${datafile_ip_2}
	Should Be Equal As Strings		${resp_ip_3}	${datafile_ip_3}

F258_API_COLLECT_TC_04-COLLECTOR FRAGMENTS MARKED FREE
	${subnets}=			Get Subnet		50.40.40.0
	${uri}=			Get from Subnet				${subnets}			uri
    ${resp} =   fusion api get ipv4 subnet		uri=${uri}
    ${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
    ${resp}=	fusion api get ipv4 range	uri=${rangeuri[0]}		param=free-fragments
    ${members1} =     Get From Dictionary     ${resp}    members
    ${member_list} = 	Get From List	${members1}		0
	${get_fragmentType} = 	Get From Dictionary		${member_list} 		fragmentType
	Should Be Equal		${get_fragmentType}	   FREE
	
F258_API_COLLECT_TC_05-GIVES AVAILABLE FREE FRAGMENT INFORMATION 
	${subnets}=			Get Subnet		50.40.40.0
	${uri}=			Get from Subnet				${subnets}			uri
    ${resp} =   fusion api get ipv4 subnet		uri=${uri}
    ${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
    ${resp}=	fusion api get ipv4 range	uri=${rangeuri[0]}		param=free-fragments
    ${members1} =     Get From Dictionary     ${resp}    members
    ${member_list} = 	Get From List	${members1}		0
    ${start_address} = 	Get From Dictionary		${member_list} 		startAddress
	${end_address} = 	Get From Dictionary		${member_list} 		endAddress
	${start_address}=	Remove String	${start_address}	.
	${end_address}=	Remove String	${end_address}	.
	${check}= 		Evaluate 	${start_address}<=${end_address}
	Should Be Equal As Strings		${check} 	${IP_CHECK}
	
F258_API_COLLECT_TC_07 - COLLECT MULTIPLE IP WITH CORRECT IP'S SPECIFIED
	${subnets}=			Get Subnet		50.40.40.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} = 	fusion_api_collect_ipv4_subnet		${subnet_allocate[12]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	Validate Response	${resp}	${valDict}

F258_API_COLLECT_TC_17 - INVALID COLLECTOR IP
	${subnets}=			Get Subnet		50.40.40.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} = 	fusion_api_collect_ipv4_subnet		${subnet_allocate[14]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${400}
	...										errorCode=ADDRESS_FORMAT_IPV4
	Validate Response	${resp}	${valDict}

COLLECT ALL IP FROM SUBNET 50.40.40.0
	${subnets}=			Get Subnet		50.40.40.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} = 	fusion_api_collect_ipv4_subnet		${subnet_allocate[15]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	Validate Response	${resp}	${valDict}

COLLECT ALL IP FROM SUBNET 50.40.41.0
	${subnets}=			Get Subnet		50.40.41.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} = 	fusion_api_collect_ipv4_subnet		${subnet_allocate[16]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	Validate Response	${resp}	${valDict}

DELETE NETWORK NetworkSub504040
	${neturi}=	Get Ethernet URI	NetworkSub504040
	${resp}=	Fusion Api Delete Ethernet Network 		uri=${neturi}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict} 
	
DELETE NETWORK NetworkSub504041
	${neturi}=	Get Ethernet URI	NetworkSub504041
	${resp}=	Fusion Api Delete Ethernet Network 		uri=${neturi}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict} 

DELETE SUBNET-50.40.40.0
	${subnets}=   Get Subnet		50.40.40.0
	${uri}=    Get from Subnet		${subnets}			uri
	${resp} =       fusion_api_delete_ipv4_subnet   		 uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${204}
	Validate Response	${resp}	${valDict}

DELETE SUBNET -50.40.41.0
	${subnets}=   Get Subnet		50.40.41.0
	${uri}=    Get from Subnet		${subnets}			uri
	${resp} =       fusion_api_delete_ipv4_subnet   		 uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${204}
	Validate Response	${resp}	${valDict}
	
	
#---------------------------COLLECTOR END ---------------

#---------------------------VLSM STARTS---------------
CREATE VLSM SUBNETS-vlsm1,vlsm2,vlsm3,vlsm4
	#CREATE SUBNET-vlsm1
	${resp} = 	fusion_api_create_ipv4_subnet	 body=${subnet[44]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	#CREATE SUBNET-vlsm2
	${resp} = 	fusion_api_create_ipv4_subnet	 body=${subnet[45]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	#CREATE SUBNET-vlsm3
	${resp} = 	fusion_api_create_ipv4_subnet	 body=${subnet[46]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	#CREATE SUBNET-vlsm4
	${resp} = 	fusion_api_create_ipv4_subnet	 body=${subnet[47]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}

VLSM_TC-ASSIGN THE VLSM RANGES TO THE SUBNETS
	#CREATE RANGE-RangeVlsm1
	${range}=   Build IPRange Body    	${ipv4ranges}      192.168.1.192    		RangeVlsm1	
	:For  ${x}  in  @{range}
	\   ${resp}=  fusion_api_create_ipv4_range   	${x}
	\   ${valDict} = 	Create Dictionary		status_code=${200}
	\   Validate Response	${resp}	${valDict}
	#CREATE RANGE-RangeVlsm2
	${range}=   Build IPRange Body    	${ipv4ranges}      192.168.1.0    		RangeVlsm2	
	:For  ${x}  in  @{range}
	\   ${resp}=  fusion_api_create_ipv4_range   	${x}
	\   ${valDict} = 	Create Dictionary		status_code=${200}
	\   Validate Response	${resp}	${valDict}
	#CREATE RANGE-RangeVlsm3
	${range}=   Build IPRange Body    	${ipv4ranges}      192.168.1.128    		RangeVlsm3	
	:For  ${x}  in  @{range}
	\   ${resp}=  fusion_api_create_ipv4_range   	${x}
	\   ${valDict} = 	Create Dictionary		status_code=${200}
	\   Validate Response	${resp}	${valDict}
	#CREATE RANGE-RangeVlsm4
	${range}=   Build IPRange Body    	${ipv4ranges}      192.168.1.224    		RangeVlsm4	
	:For  ${x}  in  @{range}
	\   ${resp}=  fusion_api_create_ipv4_range   	${x}
	\   ${valDict} = 	Create Dictionary		status_code=${200}
	\   Validate Response	${resp}	${valDict}

DELETE THE VLSM SUBNETS
	#DELETE SUBNET -vlsm1
	${subnets}=   Get Subnet		192.168.1.192
	${uri}=    Get from Subnet		${subnets}			uri
	${resp} =       fusion_api_delete_ipv4_subnet   		 uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${204}
	Validate Response	${resp}	${valDict}
	#DELETE SUBNET -vlsm2
	${subnets}=   Get Subnet		192.168.1.0
	${uri}=    Get from Subnet		${subnets}			uri
	${resp} =       fusion_api_delete_ipv4_subnet   		 uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${204}
	Validate Response	${resp}	${valDict}
	#DELETE SUBNET -vlsm3
	${subnets}=   Get Subnet		192.168.1.128
	${uri}=    Get from Subnet		${subnets}			uri
	${resp} =       fusion_api_delete_ipv4_subnet   		 uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${204}
	Validate Response	${resp}	${valDict}
	#DELETE SUBNET -vlsm4
	${subnets}=   Get Subnet		192.168.1.224
	${uri}=    Get from Subnet		${subnets}			uri
	${resp} =       fusion_api_delete_ipv4_subnet   		 uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${204}
	Validate Response	${resp}	${valDict}

#---------------------------VLSM END---------------



#-----------HAPPY PATH WITH A SUBNET 200.200.200.0 RangeAllocateTestCase NetAssociateSub200 -- START--	
CREATE SUBNET-200.200.200.0
	${resp} = 	fusion_api_create_ipv4_subnet	 body=${subnet[31]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}

CREATE RANGE -RangeAllocateTestCase
	${range}=   Build IPRange Body    	${ipv4ranges}      200.200.200.0    		RangeAllocateTestCase	
	:For  ${x}  in  @{range}
	\   ${resp}=  fusion_api_create_ipv4_range   	${x}
	\   ${valDict} = 	Create Dictionary		status_code=${200}
	\   Validate Response	${resp}	${valDict}
	
CREATE NETWORK AND ASSOCIATE THE SUBNET
	${network_body}=	Build Network Body With Subnet Uri		${Ethernet_network_1}		NetAssociateSub200		200.200.200.0
	${resp} = 	Fusion Api Create Ethernet Network		body=${network_body}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict} 

	
GET NETWORK URI NetAssociateSub200
	${neturi}=	Get Ethernet URI	NetAssociateSub200
	Log	 ${neturi}
	
GET RANGE INFO AND CHECK ALLOCATED COUNT - 0
	${subnets}=			Get Subnet		200.200.200.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp}=	fusion_api_get_ipv4_range 	uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary		allocatedIdCount=${0}
	Validate Response	${resp}	${valDict}

ALLOCATE IP FROM SUBNET 200.200.200.0
	${subnets}=			Get Subnet		200.200.200.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} = 	fusion_api_allocate_ipv4_subnet		${subnet_allocate[0]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	Validate Response	${resp}	${valDict}


GET RANGE INFO AND CHECK ALLOCATED COUNT - 1
	${subnets}=			Get Subnet		200.200.200.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp}=	fusion_api_get_ipv4_range 	uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary		allocatedIdCount=${1}
	Validate Response	${resp}	${valDict}

COLLECTOR IP FROM SUBNET 200.200.200.0	
	${subnets}=			Get Subnet		200.200.200.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} = 	fusion_api_collect_ipv4_subnet		${subnet_collect[0]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	Validate Response	${resp}	${valDict}
	
GET RANGE INFO TO CHECK ALLOCATED COUNT - 0
	${subnets}=			Get Subnet		200.200.200.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp}=	fusion_api_get_ipv4_range 	uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary		allocatedIdCount=${0}
	Validate Response	${resp}	${valDict}
	
DELETE NETWORK NetAssociateSub200
	${neturi}=	Get Ethernet URI	NetAssociateSub200
	${resp}=	Fusion Api Delete Ethernet Network 		uri=${neturi}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict} 
	
DELETE SUBNET -200.200.200.0
	${subnets}=   Get Subnet		200.200.200.0
	${uri}=    Get from Subnet		${subnets}			uri
	${resp} =       fusion_api_delete_ipv4_subnet   		 uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${204}
	Validate Response	${resp}	${valDict}

#-----------HAPPY PATH WITH A SUBNET 200.200.200.0 RangeAllocateTestCase NetAssociateSub200 -- END--


DELETE NETWORK bulk_5
	${neturi}=	Get Ethernet URI	bulk_5
	${resp}=	Fusion Api Delete Ethernet Network 		uri=${neturi}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict} 
	
DELETE NETWORK bulk_6
	${neturi}=	Get Ethernet URI	bulk_6
	${resp}=	Fusion Api Delete Ethernet Network 		uri=${neturi}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict} 
	
DELETE NETWORK bulk_7
	${neturi}=	Get Ethernet URI	bulk_7
	${resp}=	Fusion Api Delete Ethernet Network 		uri=${neturi}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict} 
	
DELETE NETWORK bulk_8
	${neturi}=	Get Ethernet URI	bulk_8
	${resp}=	Fusion Api Delete Ethernet Network 		uri=${neturi}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict} 

DELETE NETWORK NET100
	${neturi}=	Get Ethernet URI	NET100
	${resp}=	Fusion Api Delete Ethernet Network 		uri=${neturi}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict} 

#-------GET RANGE URI START	ENABLE DISABLE


#-------GET RANGE URI START	


DELETE SUBNET 100.100.100.0
	${subnets}=   Get Subnet		100.100.100.0
	${uri}=    Get from Subnet		${subnets}			uri
	${resp} =       fusion_api_delete_ipv4_subnet   		 uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${204}
	Validate Response	${resp}	${valDict}

DELETE Subnet-10.10.10.0
	${subnets}=   Get Subnet		10.10.10.0
	${uri}=    Get from Subnet		${subnets}			uri
	${resp} =       fusion_api_delete_ipv4_subnet   		 uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${204}
	Validate Response	${resp}	${valDict}

#----------------------------USER START------------------
CREATE ALL THE USER  
	${users} =	Get Variable Value	${users}
	Run Keyword If	${users} is not ${null}    Add Users from variable				${users} 

CREATE SUBNET,RANGE AND NETWORK FOR VALIDATING USERS VIEW PRIVILEGE
	${resp} = 	fusion_api_create_ipv4_subnet	 body=${subnet[3]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${range}=   Build IPRange Body    	${ipv4ranges}      40.40.40.0    		Range40Users	
	:For  ${x}  in  @{range}
	\   ${resp}=  fusion_api_create_ipv4_range   	${x}
	\   ${valDict} = 	Create Dictionary		status_code=${200}
	\   Validate Response	${resp}	${valDict}
	${network_body}=	Build Network Body With Subnet Uri		${Ethernet_network_1}		NetworkSub40		40.40.40.0
	${resp} = 	Fusion Api Create Ethernet Network		body=${network_body}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict} 

#----------------------------STORAGE USER START------------------	
F258_API_USER_TC_06-STORAGE USER LOGIN 
	${resp}= 	Fusion Api Login Appliance 		${APPLIANCE_IP}		${storage_admin}  
	Log 	${resp}

F258_API_USER_TC_10-VALIDATE STORAGE USER CAN VIEW 
	${subnets}=			Get Subnet		40.40.40.0
	${valDict} = 	Create Dictionary	networkId=40.40.40.0
	Validate Response	${subnets}	${valDict}
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp}=	fusion_api_get_ipv4_range 	uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary		name=Range40Users
	Validate Response	${resp}	${valDict}
	
F258_API_USER_TC_09 - EDIT SUBNET FOR STORAGE USER
	${subnets}=			Get Subnet		40.40.40.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} = 			fusion_api_edit_ipv4_subnet	 	body=${subnet[37]}		uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${401}
	...									errorCode=AUTHORIZATION
	Validate Response	${resp}	${valDict}
	
F258_API_USER_TC_07-VALIDATE STORAGE USER CANNOT ADD
	${resp} = 	fusion_api_create_ipv4_subnet	 body=${subnet[36]}
	${valDict} = 	Create Dictionary	status_code=${401}
	...									errorCode=AUTHORIZATION
	Validate Response	${resp}	${valDict}
	
F258_API_USER_TC_08-VALIDATE STORAGE USER CANNOT DELETE
	${subnets}=   Get Subnet		40.40.40.0
	${uri}=    Get from Subnet		${subnets}			uri
	${resp} =       fusion_api_delete_ipv4_subnet   		 uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${401}
	...									errorCode=AUTHORIZATION
	Validate Response	${resp}	${valDict}

#----------------------------------STORAGE USER END---------------------

#----------------------------READONLY USER START------------------	
F258_API_USER_TC_11-LOGIN READONLY USER  
	${resp}= 	Fusion Api Login Appliance 		${APPLIANCE_IP}		${readonly_admin}  
	Log 	${resp}

F258_API_USER_TC_15-VALIDATE READONLY USER CAN VIEW 
	${resp} = 	fusion_api_create_ipv4_subnet	 body=${subnet[3]}
	${subnets}=			Get Subnet		40.40.40.0
	${valDict} = 	Create Dictionary	networkId=40.40.40.0
	Validate Response	${subnets}	${valDict}
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp}=	fusion_api_get_ipv4_range 	uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary		name=Range40Users
	Validate Response	${resp}	${valDict}
	
F258_API_USER_TC_14-EDIT SUBNET FOR READONLY USER
	${subnets}=			Get Subnet		40.40.40.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} = 			fusion_api_edit_ipv4_subnet	 	body=${subnet[37]}		uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${401}
	...									errorCode=AUTHORIZATION
	Validate Response	${resp}	${valDict}
	
F258_API_USER_TC_12-VALIDATE READONLY USER CANNOT ADD
	${resp} = 	fusion_api_create_ipv4_subnet	 body=${subnet[36]}
	${valDict} = 	Create Dictionary	status_code=${401}
	...									errorCode=AUTHORIZATION
	Validate Response	${resp}	${valDict}
	
F258_API_USER_TC_13-VALIDATE READONLY USER CANNOT DELETE
	${subnets}=   Get Subnet		40.40.40.0
	${uri}=    Get from Subnet		${subnets}			uri
	${resp} =       fusion_api_delete_ipv4_subnet   		 uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${401}
	...									errorCode=AUTHORIZATION
	Validate Response	${resp}	${valDict}

#----------------------------------READONLY USER END---------------------

#----------------------------BACKUP USER START------------------	
F258_API_USER_TC_16-LOGIN BACKUP USER  
	${resp}= 	Fusion Api Login Appliance 		${APPLIANCE_IP}		${backup_admin}  
	Log 	${resp}


F258_API_USER_TC_20-VALIDATE BACKUP USER CAN VIEW 
	${subnets}=			Get Subnet		40.40.40.0
	${valDict} = 	Create Dictionary	networkId=40.40.40.0
	Validate Response	${subnets}	${valDict}
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp}=	fusion_api_get_ipv4_range 	uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary		name=Range40Users
	Validate Response	${resp}	${valDict}
	
F258_API_USER_TC_19-EDIT SUBNET FOR BACKUP USER
	${subnets}=			Get Subnet		40.40.40.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} = 			fusion_api_edit_ipv4_subnet	 	body=${subnet[37]}		uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${401}
	...									errorCode=AUTHORIZATION
	Validate Response	${resp}	${valDict}
	
F258_API_USER_TC_17-VALIDATE BACKUP USER CANNOT ADD
	${resp} = 	fusion_api_create_ipv4_subnet	 body=${subnet[36]}
	${valDict} = 	Create Dictionary	status_code=${401}
	...									errorCode=AUTHORIZATION
	Validate Response	${resp}	${valDict}
	
F258_API_USER_TC_18-VALIDATE BACKUP USER CANNOT DELETE
	${subnets}=   Get Subnet		40.40.40.0
	${uri}=    Get from Subnet		${subnets}			uri
	${resp} =       fusion_api_delete_ipv4_subnet   		 uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${401}
	...									errorCode=AUTHORIZATION
	Validate Response	${resp}	${valDict}

#----------------------------------BACKUP USER END---------------------

#----------------------------SERVER USER START------------------	

F258_API_USER_TC_01-LOGIN SERVER USER  
	${resp}= 	Fusion Api Login Appliance 		${APPLIANCE_IP}		${server_admin}  
	Log 	${resp}

F258_API_USER_TC_05-VALIDATE SERVER USER CAN VIEW 
	${subnets}=			Get Subnet		40.40.40.0
	${valDict} = 	Create Dictionary	networkId=40.40.40.0
	Validate Response	${subnets}	${valDict}
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp}=	fusion_api_get_ipv4_range 	uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary		name=Range40Users
	Validate Response	${resp}	${valDict}

F258_API_USER_TC_04-EDIT SUBNET FOR SERVER USER
	${subnets}=			Get Subnet		40.40.40.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} = 			fusion_api_edit_ipv4_subnet	 	body=${subnet[37]}		uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	
F258_API_USER_TC_02-VALIDATE SERVER USER CANNOT ADD
	${resp} = 	fusion_api_create_ipv4_subnet	 body=${subnet[36]}
	${valDict} = 	Create Dictionary	status_code=${401}
	...									errorCode=AUTHORIZATION
	Validate Response	${resp}	${valDict}
	
F258_API_USER_TC_03-VALIDATE SERVER USER CANNOT DELETE
	${subnets}=   Get Subnet		40.40.40.0
	${uri}=    Get from Subnet		${subnets}			uri
	${resp} =       fusion_api_delete_ipv4_subnet   		 uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${401}
	...									errorCode=AUTHORIZATION
	Validate Response	${resp}	${valDict}

#----------------------------------SERVER USER END---------------------
#----------------------------NETWORK USER START------------------	

F258_API_USER_TC_21-LOGIN NETWORK USER  
	${resp}= 	Fusion Api Login Appliance 		${APPLIANCE_IP}		${network_admin}  
	Log 	${resp}

F258_API_USER_TC_25-VALIDATE NETWORK USER CAN VIEW 
	${subnets}=			Get Subnet		40.40.40.0
	${valDict} = 	Create Dictionary	networkId=40.40.40.0
	Validate Response	${subnets}	${valDict}
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp}=	fusion_api_get_ipv4_range 	uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary		name=Range40Users
	Validate Response	${resp}	${valDict}
	
F258_API_USER_TC_24-VALIDATE NETWORK USER CAN EDIT SUBNET
	${subnets}=			Get Subnet		40.40.40.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} = 			fusion_api_edit_ipv4_subnet	 	body=${subnet[38]}		uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	
F258_API_USER_TC_22-VALIDATE NETWORK USER CAN ADD
	${resp} = 	fusion_api_create_ipv4_subnet	 body=${subnet[31]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}	

F258_API_USER_TC_23-VALIDATE NETWORK USER CAN DELETE 200.200.200.0
	${subnets}=   Get Subnet		200.200.200.0
	${uri}=    Get from Subnet		${subnets}			uri
	${resp} =       fusion_api_delete_ipv4_subnet   		 uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${204}
	Validate Response	${resp}	${valDict}
	
#---------------------------------NETWORK USER END---------------------

RE-LOGIN WITH PRIVATE AND PUBLIC KEY FOR ADMIN
	${resp}=	Fusion Api Login Appliance 		${APPLIANCE_IP}		${admin_credentials}
	Log		${resp[1]}
	${privateauth}=		OA AUTH TOKEN	${APPLIANCE_IP}
	Log 	${privateauth}
	${con1}=	catenate	:${privateauth}
	Set Global Variable		${PUBLICPRIVATE}
	${PUBLICPRIVATE}= 	catenate   ${resp[1]}${con1}
	Log		${publicprivate}
	${resp} = 			fusion_api_create_ipv4_subnet	 body=${subnet[24]}		sessionID=${PUBLICPRIVATE}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${subnets}=   Get Subnet		19.19.19.0
	${uri}=    Get from Subnet		${subnets}			uri
	${resp} =       fusion_api_delete_ipv4_subnet   		 uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${204}
	Validate Response	${resp}	${valDict}
	
DELETE NETWORK NetworkSub40
	${neturi}=	Get Ethernet URI	NetworkSub40
	${resp}=	Fusion Api Delete Ethernet Network 		uri=${neturi}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict} 

SUBNET DELETE 40.40.40.0
	${subnets}=   Get Subnet		40.40.40.0
	${uri}=    Get from Subnet		${subnets}			uri
	${resp} =       fusion_api_delete_ipv4_subnet   		 uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${204}
	Validate Response	${resp}	${valDict}
	
	
#---------------------------USER END


#-----------HAPPY PATH WITH A SUBNET 200.200.200.0 RangeAllocateTestCase NetAssociateSub200 -- START--	

CREATE Subnet WITH 200.200.200.0
	${resp} = 	fusion_api_create_ipv4_subnet	 body=${subnet[31]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}

CREATE Range FOR RangeAllocateTestCase
	${range}=   Build IPRange Body    	${ipv4ranges}      200.200.200.0    		RangeAllocateTestCase	
	:For  ${x}  in  @{range}
	\   ${resp}=  fusion_api_create_ipv4_range   	${x}
	\   ${valDict} = 	Create Dictionary		status_code=${200}
	\   Validate Response	${resp}	${valDict}
	
CREATE A NETWORK AND ASSOCIATE THE SUBNET
	${network_body}=	Build Network Body With Subnet Uri		${Ethernet_network_1}		NetAssociateSub200		200.200.200.0
	${resp} = 	Fusion Api Create Ethernet Network		body=${network_body}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict} 

	
GET THE NETWORK URI NetAssociateSub200
	${neturi}=	Get Ethernet URI	NetAssociateSub200
	Log	 ${neturi}
	
GET Range INFO CHECK ALLOCATED COUNT - 0
	${subnets}=			Get Subnet		200.200.200.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp}=	fusion_api_get_ipv4_range 	uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary		allocatedIdCount=${0}
	Validate Response	${resp}	${valDict}

ALLOCATE IP SUBNET 200.200.200.0
	${subnets}=			Get Subnet		200.200.200.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} = 	fusion_api_allocate_ipv4_subnet		${subnet_allocate[0]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	Validate Response	${resp}	${valDict}


GET RANGE INFO CHECK ALLOCATED COUNT - 1
	${subnets}=			Get Subnet		200.200.200.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp}=	fusion_api_get_ipv4_range 	uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary		allocatedIdCount=${1}
	Validate Response	${resp}	${valDict}

COLLECT IP FROM SUBNET 200.200.200.0	
	${subnets}=			Get Subnet		200.200.200.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} = 	fusion_api_collect_ipv4_subnet		${subnet_collect[0]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	Validate Response	${resp}	${valDict}
	
GET RANGE INFORMATION AND CHECK ALLOCATED COUNT-0
	${subnets}=			Get Subnet		200.200.200.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp}=	fusion_api_get_ipv4_range 	uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary		allocatedIdCount=${0}
	Validate Response	${resp}	${valDict}
	
DELETE NetAssociateSub200
	${neturi}=	Get Ethernet URI	NetAssociateSub200
	${resp}=	Fusion Api Delete Ethernet Network 		uri=${neturi}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict} 
	
DELETE Subnet FOR 200.200.200.0
	${subnets}=   Get Subnet		200.200.200.0
	${uri}=    Get from Subnet		${subnets}			uri
	${resp} =       fusion_api_delete_ipv4_subnet   		 uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${204}
	Validate Response	${resp}	${valDict}

#-----------NETWORK ADMIN - HHAPPY PATH WITH A SUBNET 200.200.200.0 RangeAllocateTestCase NetAssociateSub200 -- END--
	


#------------------------------Validate  Test
CREATE SUBNET 130.130.130.0
	${resp} = 	fusion_api_create_ipv4_subnet	 body=${subnet[51]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	
F258_API_RANGE_TC_59-CREATE RANGE NAME WITH 33 CHARACTERS	
	${range}=   Build IPRange Body    	${ipv4ranges}      130.130.130.0    		33character33character33character	
	:For  ${x}  in  @{range}
	\   ${resp}=  fusion_api_create_ipv4_range   	${x}
	\   ${valDict} = 	Create Dictionary		status_code=${400}
	\	...										errorCode=INVALID_RANGE_NAME
	\   Validate Response	${resp}	${valDict}

F258_API_RANGE_TC_60-CREATE RANGE NAME WITH 32 CHARACTERS	
	${range}=   Build IPRange Body    	${ipv4ranges}      130.130.130.0    		32character32character32characte
	:For  ${x}  in  @{range}
	\   ${resp}=  fusion_api_create_ipv4_range   	${x}
	\   ${valDict} = 	Create Dictionary		status_code=${200}
	\   Validate Response	${resp}	${valDict}


F258_API_SUBNET_TC_33-DOMAIN NAME DO NOT ALL SPECIAL CHARACTERS
	${resp} = 	fusion_api_create_ipv4_subnet	 body=${subnet[52]}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=INVALID_DOMAIN_NAME
	Validate Response	${resp}	${valDict}
	
F258_API_SUBNET_TC_34-DOMAIN NAME ALLOWS ONLY . AND - AS SPECIAL CHAR
	${resp} = 	fusion_api_create_ipv4_subnet	 body=${subnet[53]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}


CREATE SUBNET 1.1.1.0
	${resp} = 	fusion_api_create_ipv4_subnet	 body=${subnet[20]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}

F258_API_SUBNET_TC_35-EDIT SUBNETMASK 255.255.255.128
	${subnets}=			Get Subnet		1.1.1.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} = 			Fusion Api Edit Ipv4 Subnet	 	body=${edit_subnet[2]}		uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}	
	${Gateway}=	Get From Dictionary		${edit_subnet[2]}	gateway
	${NetworkId}=	Get From Dictionary		${edit_subnet[2]}	networkId
	${Subnetmask}=	Get From Dictionary		${edit_subnet[2]}	subnetmask
	${Domain}=	Get From Dictionary		${edit_subnet[2]}	domain
	${subnets}=			Get Subnet		1.1.1.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${valDict} = 	Create Dictionary	gateway=${Gateway}
	...									networkId=${NetworkId}
	...									subnetmask=${Subnetmask}
	...									domain=${Domain}
	Validate Response	${resp}	${valDict}

F258_API_SUBNET_TC_36-EDIT SUBNETMASK 255.255.255.192
	${subnets}=			Get Subnet		1.1.1.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} = 			Fusion Api Edit Ipv4 Subnet	 	body=${edit_subnet[7]}		uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${Gateway}=	Get From Dictionary		${edit_subnet[7]}	gateway
	${NetworkId}=	Get From Dictionary		${edit_subnet[7]}	networkId
	${Subnetmask}=	Get From Dictionary		${edit_subnet[7]}	subnetmask
	${Domain}=	Get From Dictionary		${edit_subnet[7]}	domain
	${subnets}=			Get Subnet		1.1.1.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${valDict} = 	Create Dictionary	gateway=${Gateway}
	...									networkId=${NetworkId}
	...									subnetmask=${Subnetmask}
	...									domain=${Domain}
	Validate Response	${resp}	${valDict}
	
F258_API_SUBNET_TC_37-EDIT SUBNETMASK 255.255.255.224
	${subnets}=			Get Subnet		1.1.1.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} = 			Fusion Api Edit Ipv4 Subnet	 	body=${edit_subnet[3]}		uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${Gateway}=	Get From Dictionary		${edit_subnet[3]}	gateway
	${NetworkId}=	Get From Dictionary		${edit_subnet[3]}	networkId
	${Subnetmask}=	Get From Dictionary		${edit_subnet[3]}	subnetmask
	${Domain}=	Get From Dictionary		${edit_subnet[3]}	domain
	${subnets}=			Get Subnet		1.1.1.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${valDict} = 	Create Dictionary	gateway=${Gateway}
	...									networkId=${NetworkId}
	...									subnetmask=${Subnetmask}
	...									domain=${Domain}
	Validate Response	${resp}	${valDict}
	
F258_API_SUBNET_TC_38-EDIT SUBNETMASK 255.255.255.240
	${subnets}=			Get Subnet		1.1.1.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} = 			Fusion Api Edit Ipv4 Subnet	 	body=${edit_subnet[4]}		uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${Gateway}=	Get From Dictionary		${edit_subnet[4]}	gateway
	${NetworkId}=	Get From Dictionary		${edit_subnet[4]}	networkId
	${Subnetmask}=	Get From Dictionary		${edit_subnet[4]}	subnetmask
	${Domain}=	Get From Dictionary		${edit_subnet[4]}	domain
	${subnets}=			Get Subnet		1.1.1.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${valDict} = 	Create Dictionary	gateway=${Gateway}
	...									networkId=${NetworkId}
	...									subnetmask=${Subnetmask}
	...									domain=${Domain}
	Validate Response	${resp}	${valDict}
	
F258_API_SUBNET_TC_39-EDIT SUBNETMASK 255.255.255.248
	${subnets}=			Get Subnet		1.1.1.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} = 			Fusion Api Edit Ipv4 Subnet	 	body=${edit_subnet[5]}		uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${Gateway}=	Get From Dictionary		${edit_subnet[5]}	gateway
	${NetworkId}=	Get From Dictionary		${edit_subnet[5]}	networkId
	${Subnetmask}=	Get From Dictionary		${edit_subnet[5]}	subnetmask
	${Domain}=	Get From Dictionary		${edit_subnet[5]}	domain
	${subnets}=			Get Subnet		1.1.1.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${valDict} = 	Create Dictionary	gateway=${Gateway}
	...									networkId=${NetworkId}
	...									subnetmask=${Subnetmask}
	...									domain=${Domain}
	Validate Response	${resp}	${valDict}
	
F258_API_SUBNET_TC_40-EDIT SUBNETMASK 255.255.255.252
	${subnets}=			Get Subnet		1.1.1.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} = 			Fusion Api Edit Ipv4 Subnet	 	body=${edit_subnet[6]}		uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${Gateway}=	Get From Dictionary		${edit_subnet[6]}	gateway
	${NetworkId}=	Get From Dictionary		${edit_subnet[6]}	networkId
	${Subnetmask}=	Get From Dictionary		${edit_subnet[6]}	subnetmask
	${Domain}=	Get From Dictionary		${edit_subnet[6]}	domain
	${subnets}=			Get Subnet		1.1.1.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${valDict} = 	Create Dictionary	gateway=${Gateway}
	...									networkId=${NetworkId}
	...									subnetmask=${Subnetmask}
	...									domain=${Domain}
	Validate Response	${resp}	${valDict}

F258_API_RANGE_TC_09-RANGE FIRST IP IS MULTICAST
	${range}=   Build IPRange Body    	${ipv4ranges}      130.130.130.0    		RangeFirstMulticast	
	:For  ${x}  in  @{range}
	\   ${resp}=  fusion_api_create_ipv4_range   	${x}
	\   ${valDict} = 	Create Dictionary		status_code=${400}
	\	...										errorCode=INVALID_POOLRANGE
	\   Validate Response	${resp}	${valDict}
	
F258_API_RANGE_TC_10-RANGE LAST IP IS MULTICAST
	${range}=   Build IPRange Body    	${ipv4ranges}      130.130.130.0    		RangeLastMulticast	
	:For  ${x}  in  @{range}
	\   ${resp}=  fusion_api_create_ipv4_range   	${x}
	\   ${valDict} = 	Create Dictionary		status_code=${400}
	\	...										errorCode=INVALID_IP_RANGE
	\   Validate Response	${resp}	${valDict}


F258_API_RANGE_TC_27-CREATE MULTIPLE RANGE -2 RANGES
	${subnets}=			Get Subnet		1.1.1.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} = 			Fusion Api Edit Ipv4 Subnet	 	body=${edit_subnet[2]}		uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${range}=   Build IPRange Body    	${ipv4ranges}      1.1.1.0    		Range1
	:For  ${x}  in  @{range}
	\   ${resp}=  fusion_api_create_ipv4_range   	${x}
	\   ${valDict} = 	Create Dictionary		status_code=${200}
	\   Validate Response	${resp}	${valDict}	
	${range}=   Build IPRange Body    	${ipv4ranges}      1.1.1.0    		Range2
	:For  ${x}  in  @{range}
	\   ${resp}=  fusion_api_create_ipv4_range   	${x}
	\   ${valDict} = 	Create Dictionary		status_code=${200}
	\   Validate Response	${resp}	${valDict}
	
F258_API_RANGE_TC_34-DELETE A RANGE AND ASSIGN IP TO EXISTING RANGE
	${subnets}=			Get Subnet		1.1.1.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp} = 			fusion_api_delete_ipv4_range	 	uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${204}
	Validate Response	${resp}	${valDict}
	${subnets}=			Get Subnet		1.1.1.0
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${range}=   Build IPRange Body    	${ipv4ranges_edit}      1.1.1.0    		Range1	
	${resp} = 			fusion_api_edit_ipv4_range	 	body=${range[0]}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}

DELETE THE SUBNET-1.1.1.0
	${subnets}=   Get Subnet	1.1.1.0
	${uri}=    Get from Subnet		${subnets}			uri
	${resp} =       fusion_api_delete_ipv4_subnet   		 uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${204}
	Validate Response	${resp}	${valDict}

DELETE THE SUBNET-132.132.132.0
	${subnets}=   Get Subnet	132.132.132.0
	${uri}=    Get from Subnet		${subnets}			uri
	${resp} =       fusion_api_delete_ipv4_subnet   		 uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${204}
	Validate Response	${resp}	${valDict}

DELETE THE SUBNET-130.130.130.0
	${subnets}=   Get Subnet	130.130.130.0
	${uri}=    Get from Subnet		${subnets}			uri
	${resp} =       fusion_api_delete_ipv4_subnet   		 uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${204}
	Validate Response	${resp}	${valDict}

#------------------------------VAlidate END 


#-------------------PATCH START
CREATE SUBNET-175.175.175.0
	${resp} = 	fusion_api_create_ipv4_subnet	 body=${subnet[54]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}

CREATE RANGE-RangePatch
	${range}=   Build IPRange Body    	${ipv4ranges}      175.175.175.0    		RangePatch	
	:For  ${x}  in  @{range}
	\   ${resp}=  fusion_api_create_ipv4_range   	${x}
	\   ${valDict} = 	Create Dictionary		status_code=${200}
	\   Validate Response	${resp}	${valDict}
	
CREATE NETWORK-NetworkPatch
	${resp} = 	Fusion Api Create Ethernet Network		body=${Ethernet_network_1[22]}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict} 
	
EG CREATE - enc_groups_patch
	${resp} = 	fusion_api_create_enclosure_group		${enc_groups_patch[0]}
	${valDict} = 	Create Dictionary	status_code=${201}
	Validate Response	${resp}	${valDict}
		
F258_API_ASSOCIATE_TC_24-ASSOCIATE A SUBNET TO THE NETWORK BY PATCH
	${subnets}=    Get Subnet        175.175.175.0
    ${uri}=         Get from Subnet         ${subnets}              uri
    ${etag} =	Get From Dictionary		${subnets}		eTag
	${body} =	 Create Patch Body For Network Add 		${patch_add[0]}		${etag}
	${resp} = 		fusion_api_patch_ipv4_subnet	${body}		uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${202}
	Validate Response	${resp}	${valDict} 
	
F258_API_ASSOCIATE_TC_25-VERIFY SUBNET SHOWS ASSICIATED NETWORK RESOURCE 
	${subnets}=			Get Subnet		175.175.175.0
	${uri}=			Get from Subnet				${subnets}			uri
    ${resp} =   fusion api get ipv4 subnet		uri=${uri}
    ${associated_resource} = 	Get From Dictionary 	${resp}		associatedResources
    ${resourceCategory} = 	Get From List	${associated_resource}		0
	${resource_name} = 		Get From Dictionary		${resourceCategory}		resourceName
	${val} = 	Get From Dictionary 	${patch_add[0]} 	operations
	${temp} = 	Get From List	${val}    0
	${rec} =	Get From Dictionary		${temp}		value
	${resourcename} =	Get From Dictionary		${rec}		resourceName
    Should Be Equal As Strings		${resource_name} 	${resourcename}

		
F258_API_ASSOCIATE_TC_26-REMOVE THE NETWORK RESOURCE FROM SUBNET USING PATCH 
	${subnets}=    Get Subnet        175.175.175.0
    ${uri}=         Get from Subnet         ${subnets}              uri
    ${etag} =	Get From Dictionary		${subnets}		eTag
    ${patch_body} = 	Remove Patch Operation		${patch_remove[0]}		${etag}
    ${resp} = 		fusion_api_patch_ipv4_subnet	${patch_body}		uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${202}
	Validate Response	${resp}	${valDict}
	
	
F258_API_ASSOCIATE_TC_27-ASSOCIATE A RANGE TO THE EG USING PATCH
	${subnets}=	Get Subnet		175.175.175.0
    ${uri}=			Get from Subnet				${subnets}			uri
    ${etag} =	Get From Dictionary		${subnets}		eTag
    ${resp} =   fusion api get ipv4 subnet		uri=${uri}
    ${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
    ${body} =	 Add EG Patch Body		${patch_add[1]}		${etag}
	${resp} = 		fusion_api_patch_ipv4_range 	${body}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${202}
	Validate Response	${resp}	${valDict} 

F258_API_ASSOCIATE_TC_28-VERIFY RANGE SHOWS ASSICIATED EG RESOURCE 
	${subnets}=			Get Subnet		175.175.175.0
	${uri}=			Get from Subnet				${subnets}			uri
    ${resp} =   fusion api get ipv4 subnet		uri=${uri}
    ${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
    ${resp}=	fusion api get ipv4 range	uri=${rangeuri[0]}
    ${associated_resource} = 	Get From Dictionary 	${resp}		associatedResources
    ${resourceCategory} = 	Get From List	${associated_resource}		0
	${resource_name} = 		Get From Dictionary		${resourceCategory}		resourceName
	${eg_name1}=		Get From List		${enc_groups_patch}		0
    Should Be Equal As Strings		${resource_name} 	${eg_name1['name']}

F258_API_ASSOCIATE_TC_29-REMOVE THE EG RESOURCE FROM RANGE USING PATCH  
	${subnets}=	Get Subnet		175.175.175.0
    ${uri}=			Get from Subnet				${subnets}			uri
    ${etag} =	Get From Dictionary		${subnets}		eTag
    ${resp} =   fusion api get ipv4 subnet		uri=${uri}
    ${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
    ${etag} =	Get From Dictionary		${subnets}		eTag
    ${patch_body} = 	Remove Patch Operation		${patch_remove[0]}		${etag}
	${resp} = 		fusion_api_patch_ipv4_range 	${patch_body}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${202}
	Validate Response	${resp}	${valDict} 

F258_API_ASSOCIATE_TC_23-PATCH-RANGE TO EG WITH EMPTY RESOURCE NAME- UNKNOWN
	${subnets}=	Get Subnet		175.175.175.0
    ${uri}=			Get from Subnet				${subnets}			uri
    ${etag} =	Get From Dictionary		${subnets}		eTag
    ${resp} =   fusion api get ipv4 subnet		uri=${uri}
    ${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	Set to dictionary	${patch_add[2]}		eTag=${etag}  
	${val} = 	Get From Dictionary 	${patch_add[2]}	operations
	${temp} = 	Get From List	${val}    0
	${rec} =	Get From Dictionary		${temp}		value
	${egUris} = 		Get Enclosure Group URI		enc_groups_patch
	Set to dictionary	${rec}		resourceUri=${egUris}
	${network_patch_body}=	Copy Dictionary 	${patch_add[2]}
	${resp} = 		fusion_api_patch_ipv4_range 	${network_patch_body}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${202}
	Validate Response	${resp}	${valDict}
	${subnets}=			Get Subnet		175.175.175.0
	${uri}=			Get from Subnet				${subnets}			uri
    ${resp} =   fusion api get ipv4 subnet		uri=${uri}
    ${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
    ${resp}=	fusion api get ipv4 range	uri=${rangeuri[0]}
    ${associated_resource} = 	Get From Dictionary 	${resp}		associatedResources
    ${resourceCategory} = 	Get From List	${associated_resource}		0
	${resource_name} = 		Get From Dictionary		${resourceCategory}		resourceName
    Should Be Equal As Strings		${resource_name} 	UNKNOWN
    
PATCH-REMOVE THE EG RESOURCE UNKNOWN FROM RANGE  
	${subnets}=	Get Subnet		175.175.175.0
    ${uri}=			Get from Subnet				${subnets}			uri
    ${etag} =	Get From Dictionary		${subnets}		eTag
    ${resp} =   fusion api get ipv4 subnet		uri=${uri}
    ${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
    ${etag} =	Get From Dictionary		${subnets}		eTag
    ${patch_body} = 	Remove Patch Operation		${patch_remove[0]}		${etag}
	${resp} = 		fusion_api_patch_ipv4_range 	${patch_body}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${202}
	Validate Response	${resp}	${valDict} 

F258_API_ASSOCIATE_TC_17- INVALID ETAG WHILE ASSOCIATE
	${subnets}=	Get Subnet		175.175.175.0
    ${uri}=			Get from Subnet				${subnets}			uri
    ${etag} =	Get From Dictionary		${subnets}		domain
    ${resp} =   fusion api get ipv4 subnet		uri=${uri}
    ${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
    ${body} =	 Add EG Patch Body		${patch_add[1]}		${etag}
	${resp} = 		fusion_api_patch_ipv4_range 	${body}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${412}
	...									errorCode=ETAG_CHECK_FAILED
	Validate Response	${resp}	${valDict}

F258_API_ASSOCIATE_TC_18-INVALID RESOURCE URI WHILE ASSOCIATE 
	${subnets}=	Get Subnet		175.175.175.0
    ${uri}=			Get from Subnet				${subnets}			uri
    ${etag} =	Get From Dictionary		${subnets}		eTag
    ${resp} =   fusion api get ipv4 subnet		uri=${uri}
    ${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp} = 		fusion_api_patch_ipv4_range 	${patch_add[6]}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=INVALID_RESOURCE_URI
	Validate Response	${resp}	${valDict}

F258_API_ASSOCIATE_TC_16- INVALID OP VALUE
	${subnets}=	Get Subnet		175.175.175.0
    ${uri}=			Get from Subnet				${subnets}			uri
    ${etag} =	Get From Dictionary		${subnets}		eTag
    ${resp} =   fusion api get ipv4 subnet		uri=${uri}
    ${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
    ${body} =	 Add EG Patch Body		${patch_add[5]}		${etag}
	${resp} = 		fusion_api_patch_ipv4_range 	${body}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=INVALID_JSON_TYPE
	Validate Response	${resp}	${valDict}

F258_API_ASSOCIATE_TC_15- VALUE OF OP MISSING
	${subnets}=	Get Subnet		175.175.175.0
    ${uri}=			Get from Subnet				${subnets}			uri
    ${etag} =	Get From Dictionary		${subnets}		eTag
    ${resp} =   fusion api get ipv4 subnet		uri=${uri}
    ${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
    ${body} =	 Add EG Patch Body		${patch_add[4]}		${etag}
	${resp} = 		fusion_api_patch_ipv4_range 	${body}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=INVALID_JSON_TYPE
	Validate Response	${resp}	${valDict}

F258_API_ASSOCIATE_TC_14 - OPERATION LIST EMPTY
	${subnets}=	Get Subnet		175.175.175.0
    ${uri}=			Get from Subnet				${subnets}			uri
    ${etag} =	Get From Dictionary		${subnets}		eTag
    ${resp} =   fusion api get ipv4 subnet		uri=${uri}
    ${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	Set to dictionary	${patch_add[3]}		eTag=${etag}  
	${resp} = 		fusion_api_patch_ipv4_range 	${patch_add[3]}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=INVALID_OPERATIONS
	Validate Response	${resp}	${valDict}

DELETE THE EG
	${encuri}=		Get Enclosure Group URI		enc_groups_patch
	${resp}=	Fusion Api Delete Enclosure Group	uri=${encuri}
	${valDict} = 	Create Dictionary	status_code=${204}
	Validate Response	${resp}	${valDict}

DELETE NETWORK 
	${neturi}=	Get Ethernet URI	NetworkPatch
	${resp}=	Fusion Api Delete Ethernet Network 		uri=${neturi}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict} 


DELETE THE RANGE
	${subnets}=	Get Subnet		175.175.175.0
    ${uri}=			Get from Subnet				${subnets}			uri
    ${resp} =   fusion api get ipv4 subnet		uri=${uri}
    ${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
    ${resp}=	fusion api delete ipv4 range	uri=${rangeuri[0]}	
	${valDict} = 	Create Dictionary	status_code=${204}
	Validate Response	${resp}	${valDict}
    
DELETE THE SUBNET
	${subnets}=   Get Subnet	175.175.175.0
	${uri}=    Get from Subnet		${subnets}			uri
	${resp} =       fusion_api_delete_ipv4_subnet   		 uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${204}
	Validate Response	${resp}	${valDict}  

#------------------------PATCH END

*** Keywords ***

Get Subnet
	[Arguments] 			${NETWORK_ID}
    ${resp} =   fusion api get ipv4 subnet	
    ${subnetcounts} =     Get From Dictionary     ${resp}    members
	${l} = 	Get Length	${subnetcounts}
	:FOR	${x}	IN RANGE	0	${l}
    \   ${subnet} =     Get From List   ${subnetcounts}    ${x}
    \	Exit For Loop If 	'${subnet['networkId']}' == '${NETWORK_ID}'
	[Return]    ${subnet}

Get from Subnet
    [Arguments]     ${subnet_list}   	${element}
    ${return} =     Get From Dictionary     ${subnet_list}			${element}  
    [Return]    ${return}

Build Network Body With Subnet Uri
	[Documentation]	Select the Subnet Uri and add in the Subnet Uri field of the Request Body to create a Network and assiciate the Subnet
	#[Aguments]			${Ethernet_network_1}		${NETWORK_ID}
	[Arguments]		${networks}		${networkname}	${NETWORK_ID}
	${subnets}=    Get Subnet        ${NETWORK_ID}
    ${uri}=         Get from Subnet         ${subnets}              uri
	Log		${uri}
	#Log		${networkname}
	Log to console and logfile  	Adding ETHERNET NETWORKS
	:FOR	${network1}	IN	@{networks}
	\		${networkname1} =	Get From Dictionary		${network1}		name
	\		Run Keyword If	'${networkname}'!='${networkname1}'		Continue For Loop
	\		Set to dictionary    		${network1}     		subnetUri=${uri}
	\		${network_body}=	Copy Dictionary 	${network1}
	[Return]	${network_body}
	

Build IPRange Body
	  [Documentation]    Build the  Range Body by adding the Subnet Uri 
      [Arguments]   	${ipv4ranges}   	${NETWORK_ID}    	${RANGE_NAME}	
      ${subnets}=    Get Subnet        ${NETWORK_ID}
      ${uri}=         Get from Subnet         ${subnets}              uri
      ${ipv4_1}=  Create List 
      :For  ${ipv4}  IN   @{ipv4ranges}
      \		${name} =   Get From Dictionary   ${ipv4}  name
      \		Exit For Loop If 	'${name}'=='${RANGE_NAME}'
      Set to dictionary    		${ipv4}     		subnetUri=${uri}
      Append to List    ${ipv4_1}    	${ipv4}
      [Return]   ${ipv4_1}

OA AUTH TOKEN
    [Documentation]    issues a CLI to get the Private AUTH token from the OA  
    [Arguments]          ${APPLIANCE_IP}		    
    Run Keyword If	    '${SSH_USER}' is ${null}      Set Suite variable  ${SSH_USER}     root
    Run Keyword If	    '${SSH_PASS}' is ${null}      Set Suite variable  ${SSH_PASS}     hpvse1
    Open Connection And Log In      ${APPLIANCE_IP}
    ${Pri_Key} =          Execute Command         psql -A -t --dbname=cidb --user=postgres -c "select session_id from session.session where username='erm' limit 1"
    Log 	${Pri_Key}
    [Return]   	${Pri_Key}


Add Network Sets from NetworkSet Name
	[Documentation]	Adds Network sets to an appliance from a variable which contains a list of dicts with the entire payload by passing Network Name and NetworkSet Name
	[Arguments]		${networks}		${networkset_name}	
	:FOR	${net}	IN	@{networks}
	\		${networksetname1} =	Get From Dictionary		${net}		name
	\		${networkUris} = 	Get Ethernet URIs	${net['networkUris']}
	\		Run Keyword If	'${networksetname1}'!='${networkset_name}'			Continue For Loop
	\		Set to dictionary	${net}	networkUris	${networkUris}
	\		${network_body}=	Copy Dictionary 	${net}
	[Return]	${network_body}


Create LIG TBird Payload
      [Arguments]       ${ligs}
      Set Log Level    Trace
      ${Potash}=   Get Interconnect Type URI     ${POTASH}
      ${Chloride}=     Get Interconnect Type URI    ${CHLORIDE20}
      ${Response}=   Get From Dictionary     ${ligs}    interconnectMapTemplate
      ${interconnectMapEntryTemplates}=    Create List
      ${interconnectMapEntryTemplates1}=    Get From Dictionary     ${Response}     interconnectMapEntryTemplates
      :For   ${item}   IN   @{interconnectMapEntryTemplates1}
      \     ${ICM}=    Get From Dictionary    ${item}   permittedInterconnectTypeUri
      \   Run keyword If   '${ICM}' == 'Virtual Connect SE 40Gb F8 Module for Synergy - 794502-B23'     Set to Dictionary     ${item}   permittedInterconnectTypeUri=${Potash}
      \   Run keyword If   '${ICM}' == '${CHLORIDE20}'     Set to Dictionary     ${item}   permittedInterconnectTypeUri=${Chloride}
      \   Append To List    ${interconnectMapEntryTemplates}     ${item}
      # Create LIG Body
      ${ls}=    Set to Dictionary     ${Response}   interconnectMapEntryTemplates=${interconnectMapEntryTemplates}
      Set to Dictionary   ${ligs}         interconnectMapTemplate=${Response}
      #log to console and logfile  ${ligs}
      [Return]   ${ligs}

Create EG Body with Associate Range 
	[Documentation]	Adds Enclosure Group to an appliance from a variable which contains a list of dicts with the entire payload and also Associate a Range
	[Arguments]		${enc_groups}		${enc_group_name}	${rangeuri}
	Log		${enc_group_name}
	Log		${enc_groups}
	Log		${rangeuri}
	Log to console and logfile  	Adding ENCLOSURE GROUP
	:FOR	${enc_group1}	IN	@{enc_groups}
	\		Log		${enc_group1}
	\		${enc_group_name1} =		Get From Dictionary		${enc_group1}		name
	\		Log 	${enc_group_name1}
	\		Run Keyword If	'${enc_group_name1}'!='${enc_group_name}'		Continue For Loop
	\		Set to dictionary    		${enc_group1}     		ipRangeUris=${rangeuri}
	\		${enc_group_body}=	Copy Dictionary 	${enc_group1}
	\		Log		${enc_group_body}
	Log to console and logfile  	EDITING LIG GROUP
	${l} = 	Get Length	${enc_group_body['interconnectBayMappings']}
	:FOR 	${x}	IN RANGE	0	${l}
	\	${liguri} = 	Get From Dictionary	${enc_group_body['interconnectBayMappings'][${x}]}	logicalInterconnectGroupUri
	\   Continue For Loop If    '${liguri}' == 'None'
	\	${liguri} = 	Common URI Lookup by name    ${liguri}
	\	Set to dictionary	${enc_group_body['interconnectBayMappings'][${x}]}	logicalInterconnectGroupUri		${liguri}
	[Return]	${enc_group_body}

Get IC By Name 
	[Arguments]		${ICM_NAME}
    ${resp} =   fusion api get interconnect
    ${ic_list} =    Create List
    ${ics} =     Get From Dictionary     ${resp}    members
    Log		${ics}
	${l} = 	Get Length	${ics}
	Log		${l}
	:FOR	${x}	IN RANGE	0	${l}
    \   ${ic} =     Get From List   ${ics}    ${x}
	\ 	Run Keyword If 	'${ic['productName']}' != '${ICM_NAME}'		Continue For Loop
	\   Append to list      ${ic_list}  ${ic}
	[Return]    ${ic_list}

IP CHECK FROM RANGE
	[Documentation]	This Function will check if the Allocated IP falls withing the Valid Range of the IP
	[Arguments]		${start_address}	${end_address}		${ip_to_check}
	${start_address}=	Remove String	${start_address}	.
	${end_address}=	Remove String	${end_address}	.
	${ip_to_check}=	Remove String	${ip_to_check}	.
	${check}= 		Evaluate 	${start_address}<=${ip_to_check}<=${end_address}
	[Return]	${check}


Get Logical Enclosure URI
	[Arguments]  ${name}
	${resp} = 	Fusion Api Get Logical Enclosure  param=?filter="'name' = '${name}'"
	${count} =  Get From Dictionary  ${resp}  count
	Return from keyword if  $count==0  '/bad_logical_enclosure_uri'
	${uri} = 	Get From Dictionary  ${resp['members'][0]}  uri
	[Return]	${uri}
	
Create Patch Body For Network Add 
	[Documentation]	Creates the Patch Request body for associating Subnet to Network.Requires network patch body and etag as data
	[Arguments]		${network_patch}		${etag}			
	Set to dictionary	${network_patch}		eTag=${etag}
	${val} = 	Get From Dictionary 	${network_patch}	operations
	Log		${val}
	${temp} = 	Get From List	${val}    0
	${rec} =	Get From Dictionary		${temp}		value
	${resourcename} =	Get From Dictionary		${rec}		resourceName
	${networkUris} = 	Get Ethernet URI	${resourcename}
	Set to dictionary	${rec}		resourceUri=${networkUris}
	${network_patch_body}=	Copy Dictionary 	${network_patch}
	[Return]	${network_patch_body}

Add EG Patch Body 
	[Documentation]	Creates the Patch Request body for associating Range to a EG.Requires patch body and etag as data
	[Arguments]		${network_patch}		${etag}			
	Set to dictionary	${network_patch}		eTag=${etag}
	${val} = 	Get From Dictionary 	${network_patch}	operations
	Log		${val}
	${temp} = 	Get From List	${val}    0
	${rec} =	Get From Dictionary		${temp}		value
	${resourcename} =	Get From Dictionary		${rec}		resourceName
	${egUris} = 		Get Enclosure Group URI		enc_groups_patch
	Set to dictionary	${rec}		resourceUri=${egUris}
	${network_patch_body}=	Copy Dictionary 	${network_patch}
	[Return]	${network_patch_body}

Remove Patch Operation
	[Documentation]	Creates the Patch Body for Remove operation by adding the etag 
	[Arguments]		${network_patch}		${etag}			
	Set to dictionary	${network_patch}		eTag=${etag}
	${network_patch_body}=	Copy Dictionary 	${network_patch}
	[Return]	${network_patch_body}

Verify Subnet Data 		
	[Documentation]	Verify the Data of the Subnet Page 
	[Arguments]		${subnet_datafile}		${subnet_runtime}
	${Data_NetworkId}=	Get From Dictionary		${subnet_datafile}	networkId
	${Data_Gateway}=	Get From Dictionary		${subnet_datafile}	gateway
	${Data_Domain}=	Get From Dictionary		${subnet_datafile}	domain
	${Data_Subnetmask}=	Get From Dictionary		${subnet_datafile}	subnetmask
	${dns}=	Get From Dictionary 	${subnet_datafile}		dnsServers
	${dns1}=	Get From List	${dns}	0
	${dns2}=	Get From List	${dns}	1
	${dns3}=	Get From List	${dns}	2
	${subnets}=			Get Subnet		${subnet_runtime}
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${valDict} = 	Create Dictionary	networkId=${Data_NetworkId}
	...									gateway=${Data_Gateway}
	...									subnetmask=${Data_Subnetmask}
	...									domain=${Data_Domain}
	Validate Response	${resp}	${valDict}
	${resp_dns}= 	Get From Dictionary 	${resp}		dnsServers
	${resp_dns1}= 	Get From List 	${resp_dns}		0
	${resp_dns2}= 	Get From List 	${resp_dns}		1
	${resp_dns3}= 	Get From List 	${resp_dns}		2
	Should Be Equal As Strings		${resp_dns1}	${dns1}
	Should Be Equal As Strings		${resp_dns2}	${dns3}
	Should Be Equal As Strings		${resp_dns3}	${dns2}

Verify Range Data
	[Documentation]	Verify the Data of the Range Page 
	[Arguments]		${range_datafile}		${range_runtime}
	${EndAddress}=	Get From Dictionary		${range_datafile}	endAddress
	${StartAddress}=	Get From Dictionary		${range_datafile}	startAddress
	${Name}=	Get From Dictionary		${range_datafile}	name
	${subnets}=			Get Subnet		${range_runtime}
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp}=	fusion api get ipv4 range	uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	endAddress=${EndAddress}
	...									name=${Name}
	...									startAddress=${StartAddress}
	...									category=id-range-IPV4
	Validate Response	${resp}	${valDict}  

Verify Range Data After Allocate
	[Documentation]	Verify the Data of the Range Page after IP's are allocated from that Range 
	[Arguments]		${range_datafile}		${range_name}	${range_runtime}
	${EndAddress}=	Get From Dictionary		${range_datafile}	endAddress
	${StartAddress}=	Get From Dictionary		${range_datafile}	startAddress
	${Name}=	Get From Dictionary		${range_name}	name
	${subnets}=			Get Subnet		${range_runtime}
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp}=	fusion api get ipv4 range	uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	endAddress=${EndAddress}
	...									name=${Name}
	...									startAddress=${StartAddress}
	...									category=id-range-IPV4
	Validate Response	${resp}	${valDict}


FTS
	Set Log Level	DEBUG
    Get VM IP   ${VM}
	First Time Setup					password=hpvse123

Test Specific Setup
	Set Log Level	TRACE
	${TEST_NAME} =      Set Variable    TEST-SPECIFIC SETUP
	Run Keyword and Ignore Error    Write To ciDebug Log
	Log to console and logfile	[TEST-SPECIFIC SETUP]
	Fusion Api Login Appliance 		${APPLIANCE_IP}		${admin_credentials}
	${users} =	Get Variable Value	${users}
	Run Keyword If	${users} is not ${null}    Add Users from variable				${users}
	${ethernet_networks} =	Get Variable Value    ${ethernet_networks}
	Run Keyword If	${ethernet_networks} is not ${null}    Add Ethernet Networks from variable	${ethernet_networks}
	${ethernet_ranges} =	Get Variable Value	${ethernet_ranges}
	Run Keyword If	${ethernet_ranges} is not ${null}		Run Keyword for List	${ethernet_ranges}	Create Ethernet Range
	${fc_networks} =	Get Variable Value	${fc_networks}
	Run Keyword If	${fc_networks} is not ${null}    Add FC Networks from variable		${fc_networks}
	${fcoe_networks} =	Get Variable Value	${fcoe_networks}
	Run Keyword If	${fcoe_networks} is not ${null}    Add FCoE Networks from variable		${fcoe_networks}
	${licenses} =	Get Variable Value	${licenses}
	Run Keyword If	${licenses} is not ${null}		Add Licenses from variable		${licenses}

    Login all users     ${users}

Run FTS and test-specific setup
	Set Log Level	TRACE
    FTS
    Test Specific Setup
