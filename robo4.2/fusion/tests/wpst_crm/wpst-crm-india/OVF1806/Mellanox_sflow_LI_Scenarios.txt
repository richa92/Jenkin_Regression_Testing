*** Settings ** *
Documentation        Feature Test:  OVF1806
...                  This set of test cases is to verify the sflow LI feature for Manganese(Mellanox) module
...
Variables              ./data_variables_li_mellanox.py
Library                ./data_variables_li_mellanox.py
Resource               ../../../../Resources/api/fusion_api_resource.txt
Resource               ./sflow_resources.txt
Library                Collections
Library                json
Library                OperatingSystem

Suite Setup            Run Keywords    Set Library Search Order    sflow_resources    AND    Fusion Api Login Appliance    ${APPLIANCE_IP}    ${admin_credentials}
Suite Teardown         Fusion Api Logout Appliance

*** Variables ** *
${APPLIANCE_IP}                     192.168.145.31
${li}                               ${LI_NAME_MELLANOX}
${LIG}                              ${LIG_NAME_MELLANOX}
${Inconsistent_State}               NOT_CONSISTENT
${consistent_State}                 CONSISTENT
${State_Configured}                 Configured
${ICM_1}                            SGH734VDHV, interconnect 1
${TRAP}                             True
${Def_Port}                         163
${SLEEP_TIME}                       30
${SLEEP_TIME}                       30
${SNMP_HOST}                        15.212.136.80
${SSH_USER}                         root
${SSH_PASS}                         12iso*help
${icmSnmpUser}                      netop
${icmSnmpPassword}                  netoppwd
${Nitro}                            Virtual Connect SE 100Gb F32 Module for Synergy
${Potash}                           Virtual Connect SE 40Gb F8 Module for Synergy
${Manganese}                        Mellanox SH2200 TAA Switch Module for Synergy
${State_Configured}                 Configured
${State_Power_Off}                  Maintenance
${State_Efuse_Off}                  Absent
${POWER_STATE_OFF}                  Off
${POWER_STATE_ON}                   On
${FUSION_SSH_USERNAME}              root
${FUSION_SSH_PASSWORD}              hpvse1
${FUSION PROMPT}                    \#
${FUSION_PROMPT}                    \#
${FUSION_TIMEOUT}                   30
${FUSION_NIC}                       bond0
${FUSION_IP}                        ${APPLIANCE_IP}

*** Test Cases ***
Do cleaning of the appliance
    [Tags]    Cleanup
    Run Keyword and Ignore Error    Delete sFlow Alert   ${sflowStaticIPMessage}
    Log to console and logfile     Cleaning Appliance
    Run Keyword and Ignore Error    Remove All Server Profiles
    Run Keyword and Ignore Error    Remove All Server Profile Templates
    Run Keyword and Ignore Error    Remove All LEs    force=${True}
    Run Keyword and Ignore Error    Remove All Enclosure Groups
    Run Keyword and Ignore Error    Remove All LIGs
    Run Keyword and Ignore Error    Remove All Ethernet Networks
    Run Keyword and Ignore Error    Remove All FC Networks
    Run Keyword and Ignore Error    Remove All FCoE Networks

Create LIG EG before starting tests
    [Tags]    Setup
    Log to console and log file     Create LIG EG before starting tests
    id_pools_ipv4_subnet.Create ID Pools IPV4 Subnet     ${subnet}
    id_pools_ipv4_ranges.Create ID Pools IPV4 Ranges      ${subnet_range}
    Add Ethernet Networks with subnet  ${eth_networks_subnet}
    Add Ethernet Networks   ${ethernet_networks}
    Create LIG    ${sflow_lig_static_redundant}
    Create LIG    ${sflow_lig_dhcp_potash}
    Create EG    ${sflow_eg_with_potash}

OVF6733_TC_75
    [Tags]    TC75
    Log    Create EG With IP Pool and Subnet    console=True
    Create EG    ${sflow_eg_ippool}
    ${resp}=    Add Logical Enclosure from variable    ${sflow_le_ippol}
    ${valDict} =    Create Dictionary   status_code=${400}
    ...                                 taskState=CRM_INVALID_SFLOW_COLLECTOR_DATAGRAM_SIZE
    ${actual_error} =    Create Dictionary   status_code=${resp['status_code']}
    ...                                 taskState=${resp1['errorCode']}
    Validate Response     ${actual_error}     ${valDict}
    [Teardown]    Run Keyword and Ignore Error    Remove All LEs    force=${True}

Create LE
    [Tags]    Setup-LE
    Create LE     ${sflow_le}
    Verify Interconnects In Configured State    ${Mellanox_ICM_list}
    [Teardown]    Run Keyword If Test Failed    Reapply LI Configuration

Create SP
    [Tags]    Setup-SP
    Create Server Profile    ${sflow_server1}
    Create Server Profile    ${sflow_server2}

OVF6733_TC_73_EDIT_LI_TO_CREATE_LI_INCONSISTENCY
    [Tags]    TC73
    Log to console    Edit LI
    ${resp1}=    Edit LI        ${li}   ${edit_li_for_inconsistency['sflowconfiguration']}
    ${task} =   Wait For Task   ${resp1}    300s    20s
    Run Keyword If  '${resp1['status_code']}' != '202'   Fail    ELSE    Log to Console  \n-LI  Edited successfully
    Wait Until Keyword Succeeds    300 s    10 s    Verify Interconnect State    ${ManganeseModule1}    ${State_Configured}
    Wait Until Keyword Succeeds    300 s    10 s    Verify Interconnect State    ${ManganeseModule1}    ${State_Configured}
    ${consistencyStatus}=     Get Logical Interconnect Status  ${li}
    Log     LI Consistency Status is: ${consistencyStatus}   console=True
    Logical Interconnect Consistency Status Should Be    ${li}    NOT_CONSISTENT

OVF6733_TC_73_01_EDIT_LI_TO_CREATE_LI_INCONSISTENCY
    [Tags]    TC73_01
    ${li_uri} =     Get LI URI   ${li}
    ${resp} =       Fusion Api Update From Group   uri=${li_uri}
    Wait For Task2   ${resp}    timeout=800    interval=10
    Wait Until Keyword Succeeds    300 s    10 s    Verify Interconnect State    ${ManganeseModule1}    ${State_Configured}
    Wait Until Keyword Succeeds    300 s    10 s    Verify Interconnect State    ${ManganeseModule1}    ${State_Configured}
    ${consistencyStatus}=     Get Logical Interconnect Status  ${li}
    Log     LI Consistency Status is: ${consistencyStatus}    console=True
    Logical Interconnect Consistency Status Should Be    ${li}    CONSISTENT

OVF1734_API_TC_05_EDIT_LI_WITH_DIFFERENT_COLLECTOR_IP
    [Tags]    TC05
    Log to console    Edit LI
    ${resp1}=    Edit LI        ${li}   ${edit_li_edit_collector_ip['sflowconfiguration']}
    ${task} =   Wait For Task   ${resp1}    300s    20s
    Run Keyword If  '${resp1['status_code']}' != '202'   Fail    ELSE    Log to Console  \n-LI  Edited successfully
    Verify Sflow Config In LI    ${edit_li_edit_collector_ip['sflowconfiguration']}
    Verify Interconnects In Configured State    ${Mellanox_ICM_list}

OVF1734_API_TC_08_EDIT_LI_WITH_MORE_UPLINKPORTS
    [Tags]    TC08
    Log to console    Edit LI
    ${resp1}=    Edit LI        ${li}   ${edit_li_add_more_uplinkports['sflowconfiguration']}
    ${task} =   Wait For Task   ${resp1}    300s    20s
    Run Keyword If  '${resp1['status_code']}' != '202'   Fail    ELSE    Log to Console  \n-LI  Edited successfully
    Verify Sflow Config In LI    ${edit_li_add_more_uplinkports['sflowconfiguration']}
    Verify Interconnects In Configured State    ${Mellanox_ICM_list}

OVF1734_API_TC_10_EDIT_LI_WITH_DISABLING_COLLECTOR
    [Tags]    TC10
    Log to console    Edit LI
    ${resp1}=    Edit LI        ${li}   ${edit_li_disable_collector['sflowconfiguration']}
    ${task} =   Wait For Task   ${resp1}    300s    20s
    Run Keyword If  '${resp1['status_code']}' != '202'   Fail    ELSE    Log to Console  \n-LI  Edited successfully
    Verify Sflow Config In LI    ${edit_li_disable_collector['sflowconfiguration']}
    Verify Interconnects In Configured State    ${Mellanox_ICM_list}

OVF1734_API_TC_13_EDIT_LI_WITH_ENABLING_COLLECTOR
    [Tags]    TC13
    Log to console    Edit LI
    ${resp1}=    Edit LI        ${li}   ${edit_li_enable_collector['sflowconfiguration']}
    ${task} =   Wait For Task   ${resp1}    600s    30s
    Run Keyword If  '${resp1['status_code']}' != '202'   Fail    ELSE    Log to Console  \n-LI  Edited successfully
    Verify Sflow Config In LI    ${edit_li_enable_collector['sflowconfiguration']}
    Verify Interconnects In Configured State    ${Mellanox_ICM_list}

OVF1734_API_TC_11_EDIT_LI_WITH_CHANGING_MAX_DATAGRAM_SIZE1
    [Tags]    TC11_01
    Log to console    Edit LI
    ${resp1}=    Edit LI        ${li}   ${edit_li_max_datagramsize1['sflowconfiguration']}
    ${task} =   Wait For Task   ${resp1}    600s    30s
    Run Keyword If  '${resp1['status_code']}' != '202'   Fail    ELSE    Log to Console  \n-LI  Edited successfully
    Verify Sflow Config In LI    ${edit_li_max_datagramsize1['sflowconfiguration']}
    Verify Interconnects In Configured State    ${Mellanox_ICM_list}

OVF1734_API_TC_11_EDIT_LI_WITH_CHANGING_MAX_DATAGRAM_SIZE2
    [Tags]    TC11_02
    Log to console    Edit LI
    ${resp1}=    Edit LI        ${li}   ${edit_li_max_datagramsize2['sflowconfiguration']}
    ${task} =   Wait For Task   ${resp1}    600s    30s
    Run Keyword If  '${resp1['status_code']}' != '202'   Fail    ELSE    Log to Console  \n-LI  Edited successfully
    Verify Sflow Config In LI    ${edit_li_max_datagramsize2['sflowconfiguration']}
    Verify Interconnects In Configured State    ${Mellanox_ICM_list}

OVF1734_API_TC_11_EDIT_LI_WITH_CHANGING_MAX_HEADER_SIZE1
    [Tags]    TC11_03
    Log to console    Edit LI
    ${resp1}=    Edit LI        ${li}   ${edit_li_max_headersize1['sflowconfiguration']}
    ${task} =   Wait For Task   ${resp1}    600s    30s
    Run Keyword If  '${resp1['status_code']}' != '202'   Fail    ELSE    Log to Console  \n-LI  Edited successfully
    Verify Sflow Config In LI    ${edit_li_max_headersize1['sflowconfiguration']}
    Verify Interconnects In Configured State    ${Mellanox_ICM_list}

OVF1734_API_TC_11_EDIT_LI_WITH_CHANGING_MAX_HEADER_SIZE2
    [Tags]    TC11_04
    Log to console    Edit LI
    ${resp1}=    Edit LI        ${li}   ${edit_li_max_headersize2['sflowconfiguration']}
    ${task} =   Wait For Task   ${resp1}    600s    30s
    Run Keyword If  '${resp1['status_code']}' != '202'   Fail    ELSE    Log to Console  \n-LI  Edited successfully
    Verify Sflow Config In LI    ${edit_li_max_headersize2['sflowconfiguration']}
    Verify Interconnects In Configured State    ${Mellanox_ICM_list}

OVF1734_API_TC_14_EDIT_LI_WITH_CONFIGURING_SAMPLING_COLLECTOR
    [Tags]    TC14
    Log to console    Edit LI
    ${resp1}=    Edit LI        ${li}   ${edit_li_sampling_collector['sflowconfiguration']}
    ${task} =   Wait For Task   ${resp1}    600s    30s
    Run Keyword If  '${resp1['status_code']}' != '202'   Fail    ELSE    Log to Console  \n-LI  Edited successfully
    Verify Sflow Config In LI    ${edit_li_sampling_collector['sflowconfiguration']}
    Verify Interconnects In Configured State    ${Mellanox_ICM_list}

OVF1734_API_TC_15_EDIT_LI_WITH_CHANGING_SAMPLING_TO_POLLING_COLLECTOR
    [Tags]    TC15
    Log to console    Edit LI
    ${resp1}=    Edit LI        ${li}   ${edit_li_polling_collector['sflowconfiguration']}
    ${task} =   Wait For Task   ${resp1}    600s    30s
    Run Keyword If  '${resp1['status_code']}' != '202'   Fail    ELSE    Log to Console  \n-LI  Edited successfully
    Verify Sflow Config In LI    ${edit_li_polling_collector['sflowconfiguration']}
    Verify Interconnects In Configured State    ${Mellanox_ICM_list}

OVF1734_API_TC_17_EDIT_LI_WITH_CONFIGURING_SAMPLING_COLLECTOR
    [Tags]    TC18
    Log to console    Edit LI
    ${resp1}=    Edit LI        ${li}   ${edit_li_sampling_collector['sflowconfiguration']}
    ${task} =   Wait For Task   ${resp1}    300s    20s
    Run Keyword If  '${resp1['status_code']}' != '202'   Fail    ELSE    Log to Console  \n-LI  Edited successfully
    Verify Sflow Config In LI    ${edit_li_sampling_collector['sflowconfiguration']}
    Verify Interconnects In Configured State    ${Mellanox_ICM_list}

OVF1734_API_TC_17_01_EDIT_LI_WITH_CHANGING_SAMPLING_TO_POLLING_CHANGING_IP_OF_COLLECTOR
    [Tags]    TC17_01
    Log to console    Edit LI
    ${resp1}=    Edit LI        ${li}   ${edit_li_polling_changing_ip_of_collector['sflowconfiguration']}
    ${task} =   Wait For Task   ${resp1}    600s    30s
    Run Keyword If  '${resp1['status_code']}' != '202'   Fail    ELSE    Log to Console  \n-LI  Edited successfully
    Verify Sflow Config In LI    ${edit_li_polling_changing_ip_of_collector['sflowconfiguration']}
    Verify Interconnects In Configured State    ${Mellanox_ICM_list}

OVF1734_API_TC_18_EDIT_LI_WITH_CONFIGURING_SAMPLING_COLLECTOR
    [Tags]    TC18
    Log to console    Edit LI
    ${resp1}=    Edit LI        ${li}   ${edit_li_sampling_collector['sflowconfiguration']}
    ${task} =   Wait For Task   ${resp1}    300s    20s
    Run Keyword If  '${resp1['status_code']}' != '202'   Fail    ELSE    Log to Console  \n-LI  Edited successfully
    Verify Sflow Config In LI    ${edit_li_sampling_collector['sflowconfiguration']}
    Verify Interconnects In Configured State    ${Mellanox_ICM_list}

OVF1734_API_TC_18_01_EDIT_LI_WITH_CONFIGURING_SAMPLING_CHANGING_IP_OF_COLLECTOR
    [Tags]    TC18_01
    Log to console    Edit LI
    ${resp1}=    Edit LI        ${li}   ${edit_li_sampling_changing_ip_of_collector['sflowconfiguration']}
    ${task} =   Wait For Task   ${resp1}    300s    20s
    Run Keyword If  '${resp1['status_code']}' != '202'   Fail    ELSE    Log to Console  \n-LI  Edited successfully
    Verify Sflow Config In LI    ${edit_li_sampling_changing_ip_of_collector['sflowconfiguration']}
    Verify Interconnects In Configured State    ${Mellanox_ICM_list}

OVF1734_API_TC_16_EDIT_LI_WITH_CONFIGURING_SAMPLING_CHANGING_PORT_OF_COLLECTOR
    [Tags]    TC16
    Log to console    Edit LI
    ${resp1}=    Edit LI        ${li}   ${edit_li_sampling_changing_port_of_collector['sflowconfiguration']}
    ${task} =   Wait For Task   ${resp1}    300s    20s
    Run Keyword If  '${resp1['status_code']}' != '202'   Fail    ELSE    Log to Console  \n-LI  Edited successfully
    Verify Sflow Config In LI    ${edit_li_sampling_changing_port_of_collector['sflowconfiguration']}
    Verify Interconnects In Configured State    ${Mellanox_ICM_list}

OVF1734_API_TC_20_EDIT_LI_ONLY_SAMPLING_INGRESS_PACKETS
    [Tags]    TC20
    Log to console    Edit LI
    ${resp1}=    Edit LI        ${li}   ${edit_li_only_ingress_packets['sflowconfiguration']}
    ${task} =   Wait For Task   ${resp1}    300s    20s
    Run Keyword If  '${resp1['status_code']}' != '202'   Fail    ELSE    Log to Console  \n-LI  Edited successfully
    Verify Sflow Config In LI    ${edit_li_only_ingress_packets['sflowconfiguration']}
    Verify Interconnects In Configured State    ${Mellanox_ICM_list}

OVF1734_API_TC_22_EDIT_LI_MODIFY_SAMPLING_INGRESS_RATE
    [Tags]    TC22
    Log to console    Edit LI
    ${resp1}=    Edit LI        ${li}   ${edit_li_modify_ingress_rate['sflowconfiguration']}
    ${task} =   Wait For Task   ${resp1}    300s    20s
    Run Keyword If  '${resp1['status_code']}' != '202'   Fail    ELSE    Log to Console  \n-LI  Edited successfully
    Verify Sflow Config In LI    ${edit_li_modify_ingress_rate['sflowconfiguration']}
    Verify Interconnects In Configured State    ${Mellanox_ICM_list}

OVF1734_API_TC_26_EDIT_LI_WITH_REMOVING_COLLECTOR
    [Tags]    TC26
    Log to console    Edit LI
    ${resp1}=    Edit LI        ${li}   ${edit_li_removing_collector['sflowconfiguration']}
    ${valDict} =    Create Dictionary   status_code=${400}
    ...                                 taskState=CRM_INVALID_SFLOW_PORTCONFIG_COLLECTOR_ID
    ${actual_error} =    Create Dictionary   status_code=${resp1['status_code']}
    ...                                 taskState=${resp1['errorCode']}
    Validate Response     ${actual_error}     ${valDict}
    Log to Console  \n-LI  Edit operation is successful

OVF6733_TC_25_01_EDIT_LI_NEW_ADD_NEW_NETWORK_SFLOW_CONFIGURATION
    [Tags]    TC25
    Log to console    Edit LI
    ${resp1}=    Edit LI        ${li}   ${edit_li_new_sflow_network['sflowconfiguration']}
    ${task} =   Wait For Task   ${resp1}    300s    20s
    Run Keyword If  '${resp1['status_code']}' != '202'   Fail    ELSE    Log to Console  \n-LI  Edited successfully
    Verify Sflow Config In LI    ${edit_li_new_sflow_network['sflowconfiguration']}
    Verify Interconnects In Configured State    ${Mellanox_ICM_list}

OVF6733_TC_25_01_DELETE_NETWORK_PART_OF_SFLOW_CONFIGURATION_IN_STATIC_MODE
    [Tags]    TC25_01
    ${uri}=   Get Ethernet URI    ${remove_staticmode_ethernet_name}
    ${resp} =   Fusion Api Delete Ethernet Network      uri=${uri}
    ${task} =   Wait For Task     ${resp}    240s  20s
    Run Keyword If  '${resp['status_code']}' != '202'   Fail    ELSE    Log to Console  \n-LI  Edited successfully
    Log  \nRemove Network: ${remove_staticmode_ethernet_name} is successful    console=True

OVF6733_TC_33_EDIT_LI_INVALID_MAXDATAGRAM_SIZE1
    [Tags]    TC33_01
    Log to console    Edit LI
    ${resp1}=    Edit LI        ${li}   ${edit_li_invalid_datagram_size1['sflowconfiguration']}
    ${valDict} =    Create Dictionary   status_code=${400}
    ...                                 taskState=CRM_INVALID_SFLOW_COLLECTOR_DATAGRAM_SIZE
    ${actual_error} =    Create Dictionary   status_code=${resp1['status_code']}
    ...                                 taskState=${resp1['errorCode']}
    Validate Response     ${actual_error}     ${valDict}
    Log  \nEdit LI With Invalid MAXDATAGRAM Size error validation Successful    console=True

OVF6733_TC_33_EDIT_LI_INVALID_MAXDATAGRAM_SIZE2
    [Tags]    TC33_02
    Log to console    Edit LI
    ${resp1}=    Edit LI        ${li}   ${edit_li_invalid_datagram_size2['sflowconfiguration']}
    ${valDict} =    Create Dictionary   status_code=${400}
    ...                                 taskState=CRM_INVALID_SFLOW_COLLECTOR_DATAGRAM_SIZE
    ${actual_error} =    Create Dictionary   status_code=${resp1['status_code']}
    ...                                 taskState=${resp1['errorCode']}
    Validate Response     ${actual_error}     ${valDict}
    Log  \nEdit LI With Invalid MAXDATAGRAM size error validation Successful    console=True

OVF6733_TC_31_EDIT_LI_INVALID_MAXHEADER_SIZE
    [Tags]    TC31
    Log to console    Edit LI
    ${resp1}=    Edit LI        ${li}   ${edit_li_invalid_maxheader_size['sflowconfiguration']}
    ${valDict} =    Create Dictionary   status_code=${400}
    ...                                 taskState=CRM_INVALID_SFLOW_COLLECTOR_HEADER_SIZE
    ${actual_error} =    Create Dictionary   status_code=${resp1['status_code']}
    ...                                 taskState=${resp1['errorCode']}
    Validate Response     ${actual_error}     ${valDict}
    Log  \nEdit LI With Invalid MAXDATAGRAM size error validation Successful    console=True

OVF6733_TC_34_EDIT_LI_MODIFY_POLLING_INTERVAL
    [Tags]    TC34
    Log to console    Edit LI
    ${resp}=    Edit LI        ${li}   ${edit_li_add_more_uplinkports['sflowconfiguration']}
    ${task} =   Wait For Task   ${resp}    300s    20s
    ${resp1}=    Edit LI        ${li}   ${edit_li_modify_polling_interval['sflowconfiguration']}
    ${task} =   Wait For Task   ${resp1}    300s    20s
    Run Keyword If  '${resp1['status_code']}' != '202'   Fail    ELSE    Log to Console  \n-LI  Edited successfully
    Log  \nEdit LI With modified pollig interval Successful    console=True
    Verify Sflow Config In LI    ${edit_li_modify_polling_interval['sflowconfiguration']}
    Verify Interconnects In Configured State    ${Mellanox_ICM_list}

OVF6733_TC_35_EDIT_LI_ADD_PORT_NOT_CONFIGURED_WITH_SFLOW_NETWORK
    [Tags]    TC35
    Log to console    Edit LI
    ${resp}=    Edit LI        ${li}   ${edit_li_add_more_uplinkports['sflowconfiguration']}
    ${task} =   Wait For Task   ${resp}    300s    20s
    Run Keyword If  '${resp['status_code']}' != '202'   Fail    ELSE    Log to Console  \n-LI  Edited successfully
    Log  \nEdit LI With port not configured with Sflow not Successful    console=True
    Verify Sflow Config In LI    ${edit_li_add_more_uplinkports['sflowconfiguration']}
    Verify Interconnects In Configured State    ${Mellanox_ICM_list}

OVF6733_TC_36_EDIT_LI_ADD_INVALID_PORT
    [Tags]    TC36
    Log to console    Edit LI
    ${resp1}=    Edit LI        ${li}   ${edit_li_invalid_port['sflowconfiguration']}
    ${valDict} =    Create Dictionary   status_code=${400}
    ...                                 taskState=CRM_INVALID_SFLOW_PORTCONFIG_PORT_NAME
    ${actual_error} =    Create Dictionary   status_code=${resp1['status_code']}
    ...                                 taskState=${resp1['errorCode']}
    Validate Response     ${actual_error}     ${valDict}
    Log  \nEdit LI With Invalid port name error validation Successful    console=True
    

OVF6733_TC_37_EDIT_LI_WITH_INVALID_COLLECTOR_IN_SFLOW_PORT
    [Tags]    TC37
    Log to console    Edit LI
    ${resp1}=    Edit LI        ${li}   ${edit_li_add_invalid_collector_id['sflowconfiguration']}
    ${valDict} =    Create Dictionary   status_code=${400}
    ...                                 taskState=CRM_INVALID_SFLOW_PORTCONFIG_COLLECTOR_ID
    ${actual_error} =    Create Dictionary   status_code=${resp1['status_code']}
    ...                                 taskState=${resp1['errorCode']}
    Validate Response     ${actual_error}     ${valDict}
    Log to Console  \n-LI  Edit operation is successful

OVF6733_TC_38_EDIT_LI_WITH_OPTION_MORETHAN_MAX_COLLECTORS
    [Tags]    TC38
    Log to console    Edit LI
    ${resp1}=    Edit LI        ${li}   ${edit_li_add_morethan_max_collector_ips['sflowconfiguration']}
    ${valDict} =    Create Dictionary   status_code=${400}
    ...                                 taskState=CRM_INVALID_SFLOW_NUMBER_OF_COLLECTORS
    ${actual_error} =    Create Dictionary   status_code=${resp1['status_code']}
    ...                                 taskState=${resp1['errorCode']}
    Validate Response     ${actual_error}     ${valDict}
    Log to Console  \n-LI  Edit operation is successful

OVF1734_API_TC_71_01_EDIT_LI_ADDING_TUNNEL_NETWORK
    [Tags]    TC71_01
    Log to console    Edit LI
    ${resp1}=    Edit LI        ${li}   ${edit_li_adding_tunnel_nw['sflowconfiguration']}
    ${valDict} =    Create Dictionary   status_code=${400}
    ...                                 taskState=CRM_INVALID_SFLOW_NETWORK
    ${actual_error} =    Create Dictionary   status_code=${resp1['status_code']}
    ...                                 taskState=${resp1['errorCode']}
    Validate Response     ${actual_error}     ${valDict}
    Log to Console  \n-LI  Edit operation is successful

OVF1734_API_TC_71_02_EDIT_LI_ADDING_UNTAGGED_NETWORK
    [Tags]    TC71_02
    Log to console    Edit LI
    ${resp1}=    Edit LI        ${li}   ${edit_li_adding_tunnel_nw['sflowconfiguration']}
    ${valDict} =    Create Dictionary   status_code=${400}
    ...                                 taskState=CRM_INVALID_SFLOW_NETWORK
    ${actual_error} =    Create Dictionary   status_code=${resp1['status_code']}
    ...                                 taskState=${resp1['errorCode']}
    Validate Response     ${actual_error}     ${valDict}
    Log to Console  \n-LI  Edit operation is successful

OVF6733_TC_39_EDIT_LI_ADDING_NON_ETHERNET_NETWORK
    [Tags]    TC39
    Log to console    Edit LI
    ${resp1}=    Edit LI        ${li}   ${edit_li_adding_fc_nw['sflowconfiguration']}
    ${valDict} =    Create Dictionary   status_code=${400}
    ...                                 taskState=CRM_INVALID_NETWORK_URI
    ${actual_error} =    Create Dictionary   status_code=${resp1['status_code']}
    ...                                 taskState=${resp1['errorCode']}
    Validate Response     ${actual_error}     ${valDict}
    Log to Console  \n-LI  Edit operation is successful

OVF1734_API_TC_60_EDIT_LI_CHANGING_MODE_OF_SFLOW
    [Tags]    TC60
    Log to console    Edit LI
    ${resp1}=    Edit LI        ${li}   ${edit_li_changing_mode_of_sflow['sflowconfiguration']}
    ${task} =   Wait For Task   ${resp1}    300s    20s
    Run Keyword If  '${resp1['status_code']}' != '202'   Fail    ELSE    Log to Console  \n-LI  Edited successfully
    Verify Sflow Config In LI    ${edit_li_changing_mode_of_sflow['sflowconfiguration']}
    Verify Interconnects In Configured State    ${Mellanox_ICM_list}

OVF1734_API_TC_55_EDIT_LI_WITHOUT_SAMPLING_INTERVAL_VALUES
    [Tags]    TC55
    Log to console    Edit LI
    ${resp1}=    Edit LI        ${li}   ${edit_li_without_sampling_interval['sflowconfiguration']}
    ${valDict} =    Create Dictionary   status_code=${400}
    ...                                 taskState=CRM_INVALID_SFLOW_CONFIGMODE_SAMPLING
    ${actual_error} =    Create Dictionary   status_code=${resp1['status_code']}
    ...                                 taskState=${resp1['errorCode']}
    Validate Response     ${actual_error}     ${valDict}
    Log to Console  \n-LI  Edit operation is successful

OVF1734_API_TC_46_EDIT_LI_WITHOUT_POLLING_INTERVAL_VALUES
    [Tags]    TC46
    Log to console    Edit LI
    ${resp1}=    Edit LI        ${li}   ${edit_li_without_polling_interval['sflowconfiguration']}
    ${valDict} =    Create Dictionary   status_code=${400}
    ...                                 taskState=CRM_INVALID_SFLOW_CONFIGMODE_POLLING
    ${actual_error} =    Create Dictionary   status_code=${resp1['status_code']}
    ...                                 taskState=${resp1['errorCode']}
    Validate Response     ${actual_error}     ${valDict}
    Log to Console  \n-LI  Edit operation is successful

OVF1734_API_TC_49_EDIT_LI_WITH_STATIC_INVALID_IP
    [Tags]    TC49
    Log to console    Edit LI
    ${resp1}=    Edit LI        ${li}   ${edit_li_invalid_static_ip['sflowconfiguration']}
    ${valDict} =    Create Dictionary   status_code=${400}
    ...                                 taskState=CRM_INVALID_SFLOW_MODULE_IP_CONFIGURATION
    ${actual_error} =    Create Dictionary   status_code=${resp1['status_code']}
    ...                                 taskState=${resp1['errorCode']}
    Validate Response     ${actual_error}     ${valDict}
    Log to Console  \n-LI  Edit operation is successful

OVF6733_TC_26_EDIT_LI_WITH_INVALID_COLLECTOR_NAME
    [Tags]    TC26_1
    Log to console    Edit LI
    ${resp1}=    Edit LI        ${li}   ${edit_li_invalid_collector_name['sflowconfiguration']}
    ${valDict} =    Create Dictionary   status_code=${400}
    ...                                 taskState=CRM_INVALID_SFLOW_COLLECTOR_NAME
    ${actual_error} =    Create Dictionary   status_code=${resp1['status_code']}
    ...                                 taskState=${resp1['errorCode']}
    Validate Response     ${actual_error}     ${valDict}
    Log to Console  \n-LI  Edit operation is successful

OVF6733_TC_29_EDIT_LI_WITH_INVALID_COLLECTOR_PORT
    [Tags]    TC29
    Log to console    Edit LI
    ${resp1}=    Edit LI        ${li}   ${edit_li_invalid_collector_port['sflowconfiguration']}
    ${valDict} =    Create Dictionary   status_code=${400}
    ...                                 taskState=CRM_INVALID_SFLOW_COLLECTOR_PORT_RANGE
    ${actual_error} =    Create Dictionary   status_code=${resp1['status_code']}
    ...                                 taskState=${resp1['errorCode']}
    Validate Response     ${actual_error}     ${valDict}
    Log to Console  \n-LI  Edit operation is successful

OVF1734_API_TC_44_EDIT_LI_WITH_INVALID_SAMPLING_INTERVAL_VALUES
    [Tags]    TC44
    Log to console    Edit LI
    ${resp1}=    Edit LI        ${li}   ${edit_li_invalid_sampling_interval['sflowconfiguration']}
    ${valDict} =    Create Dictionary   status_code=${400}
    ...                                 taskState=CRM_INVALID_SFLOW_CONFIGMODE_SAMPLING
    ${actual_error} =    Create Dictionary   status_code=${resp1['status_code']}
    ...                                 taskState=${resp1['errorCode']}
    Validate Response     ${actual_error}     ${valDict}
    Log to Console  \n-LI  Edit operation is successful

OVF1734_API_TC_44_01_EDIT_LI_WITH_INVALID_POLLING_INTERVAL_VALUES
    [Tags]    TC44_01
    Log to console    Edit LI
    ${resp1}=    Edit LI        ${li}   ${edit_li_invalid_polling_interval['sflowconfiguration']}
    ${valDict} =    Create Dictionary   status_code=${400}
    ...                                 taskState=CRM_INVALID_SFLOW_CONFIGMODE_POLLING
    ${actual_error} =    Create Dictionary   status_code=${resp1['status_code']}
    ...                                 taskState=${resp1['errorCode']}
    Validate Response     ${actual_error}     ${valDict}
    Log to Console  \n-LI  Edit operation is successful

#OVF_Update_Firmware_test_sflow
#    Validate sflow collector configuration    ${icmipv6}    ${icmSnmpUser}    ${icmSnmpPassword}
#    Validate sflow agent configuration     ${icmipv6}    ${icmSnmpUser}    ${icmSnmpPassword}
#    Validate sflow port configuration    ${icmipv6}    ${icmSnmpUser}    ${icmSnmpPassword}
#    Update LI Firmware    ${LI_fw_update_Hafnium}    ${LI}
#    Validate sflow collector configuration    ${icmipv6}    ${icmSnmpUser}    ${icmSnmpPassword}
#    Validate sflow agent configuration     ${icmipv6}    ${icmSnmpUser}    ${icmSnmpPassword}
#    Validate sflow port configuration    ${icmipv6}    ${icmSnmpUser}    ${icmSnmpPassword}

#OVF_Downgrade_Firmware_test_sflow
#    Validate sflow collector configuration    ${icmipv6}    ${icmSnmpUser}    ${icmSnmpPassword}
#    Validate sflow agent configuration     ${icmipv6}    ${icmSnmpUser}    ${icmSnmpPassword}
#    Validate sflow port configuration    ${icmipv6}    ${icmSnmpUser}    ${icmSnmpPassword}
#    Update LI Firmware    ${LI_fw_downgrade_Hafnium}    ${LI}
#    Validate sflow collector configuration    ${icmipv6}    ${icmSnmpUser}    ${icmSnmpPassword}
#    Validate sflow agent configuration     ${icmipv6}    ${icmSnmpUser}    ${icmSnmpPassword}
#    Validate sflow port configuration    ${icmipv6}    ${icmSnmpUser}    ${icmSnmpPassword}

OVF1734_API_TC_50_EDIT_LI_WITH_IP_POOL
    [Tags]    TC50
    Log to console    Edit LI
    #Create ID Pools IPV4 Subnet     ${ipv4_subnet}
    #Create ID Pools IPV4 Range      ${ipv4_range}
    Add Ethernet Networks with subnet  ${eth_networks_subnet_id}
    ${resp1}=    Edit LI        ${li}   ${edit_li_valid_ip_pool['sflowconfiguration']}
    ${task} =   Wait For Task   ${resp1}    300s    20s
    Run Keyword If  '${resp1['status_code']}' != '202'   Fail    ELSE    Log to Console  \n-LI  Edited successfully
    Verify Sflow Config In LI    ${edit_li_valid_ip_pool['sflowconfiguration']}
    Verify Interconnects In Configured State    ${Mellanox_ICM_list}

OVF6733_TC_56_DELETE_NETWORK_PART_OF_SFLOW_CONFIGURATION_IN_IP_POOL_MODE
    [Tags]    TC56
    ${uri} =   Get Ethernet URI    ${remove_ippoolmode_ethernet_name}
    ${resp1} =   Fusion Api Delete Ethernet Network      uri=${uri}
    ${valDict} =    Create Dictionary   status_code=${501}
    ...                                 taskState=CRM_NETWORK_DELETE_SUBNET_UPDATE_NOT_ALLOWED
    ${actual_error} =    Create Dictionary   status_code=${resp1['status_code']}
    ...                                 taskState=${resp1['errorCode']}
    Validate Response     ${actual_error}     ${valDict}
    Log to Console  \n-LI  Edit operation is successful

OVF6733_TC_57_EDIT_LI_WITH_DOWNLINK_PORTS_ONLY_IN_SFLOW_PORTS
    [Tags]    TC57
    Log to console    Edit LI
    ${resp1} =    Edit LI        ${li}   ${edit_li_downlink_ports_only['sflowconfiguration']}
    ${task} =   Wait For Task   ${resp1}    300s    20s
    Run Keyword If  '${resp1['status_code']}' != '202'   Fail    ELSE    Log to Console  \n-LI  Edited successfully
    Log to Console  \n-LI  Edit operation is successful
    Verify Sflow Config In LI    ${edit_li_downlink_ports_only['sflowconfiguration']}
    Verify Interconnects In Configured State    ${Mellanox_ICM_list}

OVF6733_TC_58_EDIT_LI_WITH_10GB_PORTS_ONLY_IN_SFLOW_PORTS
    [Tags]    TC58
    Log to console    Edit LI
    ${resp1}=    Edit LI        ${li}   ${edit_li_10gb_ports['sflowconfiguration']}
    ${task} =   Wait For Task   ${resp1}    300s    20s
    Run Keyword If  '${resp1['status_code']}' != '202'   Fail    ELSE    Log to Console  \n-LI  Edited successfully
    Log to Console  \n-LI  Edit operation is successful
    Verify Sflow Config In LI    ${edit_li_10gb_ports['sflowconfiguration']}

OVF6733_TC_58_01_EDIT_LI_WITH_40GB_PORTS_ONLY_IN_SFLOW_PORTS
    [Tags]    TC58_01
    Log to console    Edit LI
    ${resp1}=    Edit LI        ${li}   ${edit_li_40_gb_ports['sflowconfiguration']}
    ${task} =   Wait For Task   ${resp1}    300s    20s
    Run Keyword If  '${resp1['status_code']}' != '202'   Fail    ELSE    Log to Console  \n-LI  Edited successfully
    Verify Sflow Config In LI    ${edit_li_40_gb_ports['sflowconfiguration']}
    Verify Interconnects In Configured State    ${Mellanox_ICM_list}

OVF6733_TC_65_RESET_ICM_MODULE_BEING_CONFIGURED_FOR_SFLOW
    [Tags]    TC65
    Log to console    Reset ICM: ${ManganeseModule1}
    ${icm_1}=    Create Dictionary    name=${ManganeseModule1}
    ${resp}=    Run Keyword and Return Status    Patch Interconnect  ${icm_1}    op=replace  path=/deviceResetState  value=Reset  timeout=600  interval=10
    Run Keyword If     '${resp}' != 'None'    FAIL    msg=Reset ICM went through despite sFlow configuration

OVF6733_TC_66_POWER_CYCLE_MELLANOX_ICM
    [Tags]    TC66
    POWER OFF ICM    ${ManganeseModule1}
    Wait Until Keyword Succeeds    600 s    60 s    Verify Interconnect State     ${ManganeseModule1}    ${State_Power_Off}
    Sleep    90
    POWER ON ICM        ${ManganeseModule1}
    Sleep    60
    Wait Until Keyword Succeeds    600 s    60 s    Verify Interconnect State    ${ManganeseModule1}    ${State_Configured}

OVF6733_TC_67_Perform Efuse ON ManganeseModule1
    [Tags]    TC67-a
    [Documentation]    Perform Efuse on ICM
    ${enc_serial}    ${bay}=      Split String     ${ManganeseModule1}    , interconnect
    EFUSE ON ICM     ${ManganeseModule1}
    Sleep    60
    Wait Until Keyword Succeeds    600 s    60 s    Verify Interconnect State    ${ManganeseModule1}    ${State_Efuse_Off}

OVF6733_TC_67 Perform Efuse OFF ICM_MELLANOX_1
    [Documentation]    EFUSE_OFF interconnect
    [Tags]    TC67-b
    EFUSE OFF ICM    ${ManganeseModule1}
    Sleep   60
    Wait Until Keyword Succeeds    600 s    60 s    Verify Interconnect State    ${ManganeseModule1}    ${State_Configured}
