*** Settings ***
Documentation       Feature Test: These test cases intended to test Synergey 12000 frame Hafnium Interconnect Module - \
...                  firmware update validation - OVF730 feature\
...
Variables           ./data_variables_1.py
#Resource            ../../resources/resource.txt
#Resource            ./Generic_API_Resources.txt
#Resource            ../../../resource/fusion_api_all_resource_files.txt
Resource            ../../../../Resources/api/fusion_api_resource.txt
Library             Collections
Library             json
Library             BuiltIn
Library             OperatingSystem
Library             RoboGalaxyLibrary
Library             FusionLibrary

*** Variables ***
${APPLIANCE_IP}                     192.168.145.50
${SLEEP_TIME}                       30
${LI_NAME}                          LE-LIG_BAY_SET_3


*** Keywords ***
Build LIG body
    [Documentation]    builds LIG body
    [Arguments]     ${xlig}
    ${xlig} =   Copy Dictionary    ${xlig}
    ${uplinkSets} =     Copy List   ${xlig['uplinkSets']}
    ${l} =  Get Length  ${uplinkSets}

    :FOR    ${x}    IN RANGE    0   ${l}
    \   ${networkType} =    Get From Dictionary     ${uplinkSets[${x}]}    networkType
    \   ${networks} =       Get From Dictionary     ${uplinkSets[${x}]}    networkUris
    \   Run Keyword If  '${networkType}' == 'Ethernet'      Continue For Loop
    \   ${networkUris} =    Get FC Uris ${networks}
    \   Set to dictionary   ${uplinkSets[${x}]}    networkUris    ${networkUris}

    :FOR    ${x}    IN RANGE    0   ${l}
    \   ${networkType} =    Get From Dictionary     ${uplinkSets[${x}]}    networkType
    \   ${networks} =       Get From Dictionary     ${uplinkSets[${x}]}    networkUris
    \   Run Keyword If  '${networkType}' == 'FibreChannel'  Continue For Loop
    \   ${networkUris} =    Get FCoE Uris   ${networks}
    \   ${ethernetUris} =   Get Ethernet URIs   ${networks}
    \   ${networkUris} =    combine lists    ${networkUris}    ${ethernetUris}
    \   Set to dictionary   ${uplinkSets[${x}]}    networkUris    ${networkUris}

    ${sflowConfiguration}=   Get From Dictionary     ${xlig}    sflowConfiguration
    ${sflowNetwork}=   Get From Dictionary     ${sflowConfiguration}    sflowNetwork
    ${sflowNetworkName}=   Get From Dictionary     ${sflowNetwork}    name
    ${neturi}=    Get Ethernet URI    ${sflowNetworkName}
    ${netDict} =    Create Dictionary    name=${sflowNetworkName}
    ...                                  uri=${neturi}
    log to console and log file    ${netDict}
    Set to Dictionary    ${sflowConfiguration}     sflowNetwork=${netDict}
    log to console and log file    ${sflowConfiguration}

    ${name} =                       Get Variable Value  ${xlig['name']}
    ${enclosureIndexes} =           Get Variable Value  ${xlig['enclosureIndexes']}
    ${enclosureType} =              Get Variable Value  ${xlig['enclosureType']}
    ${ethernetSettings} =           Get Variable Value  ${xlig['ethernetSettings']}
    ${fcoeSettings} =               Get Variable Value  ${xlig['fcoeSettings']}
    ${interconnectBaySet} =         Get Variable Value  ${xlig['interconnectBaySet']}
    ${interconnectMapTemplate} =    Get Variable Value  ${xlig['interconnectMapTemplate']}
    ${redundancyType} =             Get Variable Value  ${xlig['redundancyType']}
    ${stackingMode} =               Get Variable Value  ${xlig['stackingMode']}
    ${telemetryConfiguration} =     Get Variable Value  ${xlig['telemetryConfiguration']}
    ${snmpConfiguration} =          Get Variable Value  ${xlig['snmpConfiguration']}
    ${enclosureIndexes} =           Get Variable Value  ${xlig['enclosureIndexes']}
    #${uplinkSets} =                 Get Variable Value  ${xlig['uplinkSets']}

    ${body} =   Fusion Api Create LIG Payload   name=${name}
    ...                                         enclosureIndexes=${enclosureIndexes}
    ...                                         enclosureType=${enclosureType}
    ...                                         ethernetSettings=${ethernetSettings}
    ...                                         fcoeSettings=${fcoeSettings}
    ...                                         interconnectBaySet=${interconnectBaySet}
    ...                                         interconnectMapTemplate=${interconnectMapTemplate}
    ...                                         redundancyType=${redundancyType}
    ...                                         stackingMode=${stackingMode}
    ...                                         telemetryConfiguration=${telemetryConfiguration}
    ...                                         snmpConfiguration=${snmpConfiguration}
    ...                                         uplinkSets=${uplinkSets}
    ...                                         sflowConfiguration=${sflowConfiguration}
    [Return]    ${body}

 Get LIG member
    [Documentation]    gets the lig member from the rest call
    [Arguments]     ${lig}
    ${resp} =       Fusion Api Get LIG      param=?filter="'name'=='${lig}'"
    ${member} =     Get From List       ${resp['members']}  0
    [Return]    ${member}

Get LIG URI
    [Documentation]    gets the lig uri from the rest call
    [Arguments]     ${lig}
    ${resp} =   Fusion Api Get LIG      param=?filter="'name'=='${lig}'"
    ${uri} =    Get From Dictionary     ${resp['members'][0]}   uri
    [Return]    ${uri}

Create LIG
    [Documentation]    Suite Setup Tasks
    [Arguments]        ${body1}
    Fusion Api Login Appliance    ${APPLIANCE_IP}    ${login_details}
    ${body}    Build LIG body    ${body1}
    Log to console and logfile    \n-Creating LIG ${body}
    ${resp}    Fusion Api Create LIG    ${body}
    ${task} =   Wait For Task   ${resp}    60s  2s
    [Return]    ${resp}

Edit LIG FOR NEGATIVE CASES
    [Documentation]    Edit lig for negative scenarios
    [Arguments]     ${lig}    ${valDict}
    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${login_details}
    ${body} =   Build LIG body      ${lig}
    Log to console and logfile    ${body}
    ${lig} =        Get LIG Member      ${LIG1}
    ${lig_uri} =    Get LIG Uri         ${LIG1}
    ${resp}    fusion_api_edit_lig    body=${body}    uri=${LIG_URI}
    ${task} =   Wait For Task   ${resp}     120s
    ${error} =    Get Variable Value  ${task['taskErrors']}
    ${err_Code} =    Get From Dictionary  ${Error[0]}       errorCode
    ${status_Code} =    Get Variable Value  ${task['status_code']}
    ${actual_error} =    Create Dictionary   status_code=${status_Code}
    ...                                 taskState=${err_Code}
    Log to console and logfile    ${actual_error}
    Validate Response     ${actual_error}     ${valDict}

Edit LIG
    [Documentation]    Edit LIG
    [Arguments]     ${lig}
    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${login_details}
    ${body} =   Build LIG body      ${lig}
    Log to console and logfile    ${body}
    ${lig} =        Get LIG Member      ${LIG1}
    ${lig_uri} =    Get LIG Uri         ${LIG1}
    ${resp}    fusion_api_edit_lig    body=${body}    uri=${LIG_URI}
    ${task} =   Wait For Task   ${resp}     120s
    ${valDict} =    Create Dictionary   status_code=${200}
    ...                                 taskState=Completed
    Validate Response     ${task}     ${valDict}

Add Ethernet Networks
    [Documentation]    Add ethernet networks
    [Arguments]     ${ethernet_networks}
    Fusion Api Login Appliance      ${APPLIANCE_IP}     ${login_details}
    Add Ethernet Networks from variable     ${ethernet_networks}

Build Network Body For Create
    [Documentation]    Select the Subnet Uri and add in the Subnet Uri field of the Request Body to create a Network and associate the Subnet
    [Arguments]     ${network_data}     ${subnet_id}
    ${subnet_uri}=  Get Subnet URI      ${subnet_id}
    Set to dictionary    ${network_data}    subnetUri=${subnet_uri}
    [Return]    ${network_data}

Build IPV4 Range Body
      [Documentation]    Build the  Range Body by adding the Subnet Uri in the Range Data
      [Arguments]       ${ipv4ranges}     ${NETWORK_ID}
      ${subnet_uri}=    Get Subnet URI    ${NETWORK_ID}
      Set to dictionary    ${ipv4ranges}     subnetUri=${subnet_uri}
      [Return]    ${ipv4ranges}

Get Subnet URI
    [Documentation]    to get subnet uri
    [Arguments]    ${NETWORK_ID}
    ${resp} =   fusion api get ipv4 subnet
    ${subnetcounts} =     Get From Dictionary     ${resp}    members
    ${l} =  Get Length  ${subnetcounts}
    :FOR    ${x}    IN RANGE    0   ${l}
    \   ${subnet} =     Get From List   ${subnetcounts}    ${x}
    \   Exit For Loop If    '${subnet['networkId']}' == '${NETWORK_ID}'
    ${subnet_uri} =     Get From Dictionary     ${subnet}   uri
    [Return]    ${subnet_uri}

 *** Test Cases ***

PRE_CONDITION_1
    Add Ethernet Networks   ${eth_networks}


PRE_CONDITION_2- CREATE RANGE WITH ALL DATA FOR A VALID SUBNET
      ${resp} =   Fusion Api Create Ipv4 Subnet    body=${subnet}
      ${range}=   Build IPV4 Range Body         ${range}      ${subnet['networkId']}
      ${resp}=    Fusion Api Create Ipv4 Range    ${range}
      ${valDict} =      Create Dictionary    status_code=${200}
      Validate Response    ${resp}     ${valDict}

PRE_CONDITION_3-CREATE NETWORK AND ASSOCIATE A SUBNET
      ${network_body}=  Build Network Body For Create    ${eth_networks_subnet}    ${subnet['networkId']}
      ${resp} =   Fusion Api Create Ethernet Network        body=${network_body}
      ${task} =    Wait For Task     ${resp}     120s
      ${valDict} =     Create Dictionary    status_code=${200}
      ...                                 taskState=Completed
       Validate Response    ${task}    ${valDict}

#--------------START CREATE LIG TEST CASES-------------------

OVF1734_API_TC_00_CREATE_LIG_FOR_LE
    Log to console    Create LIG group
    #LIG with Ethernet Modules
    Fusion Api Login Appliance     ${APPLIANCE_IP}   ${login_details}
    ${resp} =    Create LIG      ${sflow_lig_for_le}
    Log to console and logfile    \n\nLIG Created Successfully:${resp}

OVF1734_API_TC_01_CREATE_LIG_WITH_DHCP_OPTION
    Log to console    Create LIG group
    #LIG with Ethernet Modules
    Fusion Api Login Appliance     ${APPLIANCE_IP}   ${login_details}
    ${resp} =    Create LIG      ${sflow_lig_dhcp}
    Log to console and logfile    \n\nLIG Created Successfully:${resp}

OVF1734_API_TC_02_CREATE_LIG_WITH_STATIC_OPTION
    Log to console    Create LIG group
    #LIG with Ethernet Modules
    Fusion Api Login Appliance     ${APPLIANCE_IP}   ${login_details}
    ${resp} =    Create LIG      ${sflow_lig_static}
    Log to console and logfile    \n\nLIG Created Successfully:${resp}

OVF1734_API_TC_03_CREATE_LIG_WITH_IPPOOL_OPTION
    Log to console    Create LIG group
    #LIG with Ethernet Modules
    Fusion Api Login Appliance     ${APPLIANCE_IP}   ${login_details}
    ${resp} =    Create LIG      ${sflow_lig_ippool}
    Log to console and logfile    \n\nLIG Created Successfully:${resp}

OVF1734_API_TC_07_CREATE_LIG_WITH_DHCP_OPTION_3COLLECTORS
    Log to console    Create LIG group
    #LIG with Ethernet Modules
    Fusion Api Login Appliance     ${APPLIANCE_IP}   ${login_details}
    ${resp} =    Create LIG      ${sflow_lig_dhcp_3collectors}
    Log to console and logfile    \n\nLIG Created Successfully:${resp}

 OVF1734_API_TC_47_CREATE_LIG_WITH_DHCP_STATIC_OPTION
    Log to console    Create LIG group
    #LIG with Ethernet Modules
    Fusion Api Login Appliance     ${APPLIANCE_IP}   ${login_details}
    ${resp} =    Create LIG      ${sflow_lig_dhcp_static}
    Log to console and logfile    ${resp}
    Log to console and logfile    \n\nLIG Created Successfully:${resp}

OVF1734_API_TC_48_CREATE_LIG_WITHOUT_SFLOW_AGENT_IPMODE
    Log to console    Create LIG group
    #LIG with Ethernet Modules
    Fusion Api Login Appliance     ${APPLIANCE_IP}   ${login_details}
    ${resp} =    Create LIG      ${sflow_lig_without_sflowagentipmode}
    Log to console and logfile    ${resp}
    Log to console and logfile    \n\nLIG Created Successfully:${resp}

OVF1734_API_TC_54_CREATE_LIG_WITH_WRONG_COLLECTOR_ID
    Log to console    Create LIG group
    #LIG with Ethernet Modules
    Fusion Api Login Appliance     ${APPLIANCE_IP}   ${login_details}
    ${body}    Build LIG body    ${sflow_lig_nonexistant_receiver}
    Log to console and logfile    \n-Creating LIG ${body}
    ${resp}    Fusion Api Create LIG    ${body}
    Log to console and logfile    ${resp}
    ${err_Code} =    Get Variable Value  ${resp['errorCode']}
    ${status_Code} =    Get Variable Value  ${resp['status_code']}
    ${actual_error} =    Create Dictionary   status_code=${status_Code}
    ...                                 taskState=${err_Code}
    Log to console and logfile    ${actual_error}
    ${valDict} =    Create Dictionary   status_code=${400}
    ...                                 taskState=CRM_INVALID_SFLOW_PORTCONFIG_COLLECTOR_ID
    Validate Response     ${actual_error}     ${valDict}
    Log to console and logfile    \n\nLIG Created Successfully:${resp}

#--------------END CREATE LIG TEST CASES-------------------

#--------------START EDIT LIG TEST CASES-------------------
OVF1734_API_TC_08_AND_41_EDIT_LIG_WITH_MORE_UPLINKPORTS_SAME_COLLECTOR
    Log to console    Edit LIG group
    #LIG with Ethernet Modules
    Fusion Api Login Appliance     ${APPLIANCE_IP}   ${login_details}
    ${resp} =    Edit LIG    ${sflow_editlig_more_uplinkports}
    Log to console and logfile    \n\nLIG edited operation Successfully:${resp}

OVF1734_API_TC_09_EDIT_LIG_WITH_CHANGING_COLLECTOR
    Log to console    Edit LIG group
    #LIG with Ethernet Modules
    Fusion Api Login Appliance     ${APPLIANCE_IP}   ${login_details}
    ${resp} =    Edit LIG    ${sflow_edit_lig_change_collectorid}
    Log to console and logfile    \n\nLIG edited operation Successfully:${resp}

OVF1734_API_TC_10_EDIT_LIG_WITH_DISABLING_COLLECTOR
    Log to console    Edit LIG group
    #LIG with Ethernet Modules
    Fusion Api Login Appliance     ${APPLIANCE_IP}   ${login_details}
    ${resp} =    Edit LIG    ${sflow_edit_lig_disable_collector}
    Log to console and logfile    \n\nLIG edited operation Successfully:${resp}

OVF1734_API_TC_11_EDIT_LIG_WITH_CHANGING_MAX_DATAGRAM_SIZE
    Log to console    Edit LIG group
    #LIG with Ethernet Modules
    Fusion Api Login Appliance     ${APPLIANCE_IP}   ${login_details}
    ${resp} =    Edit LIG    ${sflow_edit_lig_max_datagramsize}
    Log to console and logfile    \n\nLIG edited operation Successfully:${resp}

OVF1734_API_TC_11_EDIT_LIG_WITH_CHANGING_MAX_HEADER_SIZE
    Log to console    Edit LIG group
    #LIG with Ethernet Modules
    Fusion Api Login Appliance     ${APPLIANCE_IP}   ${login_details}
    ${resp} =    Edit LIG    ${sflow_edit_lig_max_headersize}
    Log to console and logfile    \n\nLIG edited operation Successfully:${resp}

OVF1734_API_TC_13_EDIT_LIG_WITH_CHANGINGDISABLE_ALL_COLLECTORS
    Log to console    Edit LIG group
    #LIG with Ethernet Modules
    Fusion Api Login Appliance     ${APPLIANCE_IP}   ${login_details}
    ${resp} =    Edit LIG    ${sflow_edit_lig_disabled_collectors}
    Log to console and logfile    \n\nLIG edited operation Successfully:${resp}

OVF1734_API_TC_13_EDIT_LIG_WITH_ENABLING_ONE_COLLECTOR
    Log to console    Edit LIG group
    #LIG with Ethernet Modules
    Fusion Api Login Appliance     ${APPLIANCE_IP}   ${login_details}
    ${resp} =    Edit LIG    ${sflow_edit_lig_enable_one_collector}
    Log to console and logfile    \n\nLIG edited operation Successfully:${resp}

OVF1734_API_TC_14_EDIT_LIG_WITH_CONFIGURING_SAMPLING_COLLECTOR
    Log to console    Edit LIG group
    #LIG with Ethernet Modules
    Fusion Api Login Appliance     ${APPLIANCE_IP}   ${login_details}
    ${resp} =    Edit LIG    ${sflow_edit_lig_sampling_collector}
    Log to console and logfile    \n\nLIG edited operation Successfully:${resp}

OVF1734_API_TC_15_EDIT_LIG_WITH_CHANGING_SAMPLING_TO_POLLING_COLLECTOR
    Log to console    Edit LIG group
    #LIG with Ethernet Modules
    Fusion Api Login Appliance     ${APPLIANCE_IP}   ${login_details}
    ${resp} =    Edit LIG    ${sflow_edit_lig_polling_collector}
    Log to console and logfile    \n\nLIG edited operation Successfully:${resp}

OVF1734_API_TC_17_EDIT_LIG_WITH_CHANGING_SAMPLING_TO_POLLING_CHANGING_IP_OF_COLLECTOR
    Log to console    Edit LIG group
    #LIG with Ethernet Modules
    Fusion Api Login Appliance     ${APPLIANCE_IP}   ${login_details}
    ${resp} =    Edit LIG    ${sflow_edit_lig_polling_changing_ip_of_collector}
    Log to console and logfile    \n\nLIG edited operation Successfully:${resp}

OVF1734_API_TC_18_EDIT_LIG_WITH_CONFIGURING_SAMPLING_COLLECTOR
    Log to console    Edit LIG group
    #LIG with Ethernet Modules
    Fusion Api Login Appliance     ${APPLIANCE_IP}   ${login_details}
    ${resp} =    Edit LIG    ${sflow_edit_lig_sampling_collector}
    Log to console and logfile    \n\nLIG edited operation Successfully:${resp}

OVF1734_API_TC_18_01_EDIT_LIG_WITH_CONFIGURING_SAMPLING_CHANGING_IP_OF_OLLECTOR
    Log to console    Edit LIG group
    #LIG with Ethernet Modules
    Fusion Api Login Appliance     ${APPLIANCE_IP}   ${login_details}
    ${resp} =    Edit LIG    ${sflow_edit_lig_sampling_changing_ip_of_collector}
    Log to console and logfile    \n\nLIG edited operation Successfully:${resp}

OVF1734_API_TC_16_EDIT_LIG_WITH_CONFIGURING_SAMPLING_CHANGING_PORT_OF_OLLECTOR
    Log to console    Edit LIG group
    #LIG with Ethernet Modules
    Fusion Api Login Appliance     ${APPLIANCE_IP}   ${login_details}
    ${resp} =    Edit LIG    ${sflow_edit_lig_sampling_changing_port_of_collector}
    Log to console and logfile    \n\nLIG edited operation Successfully:${resp}

#--------------END EDIT LIG TEST CASES-------------------
#--------------START EDIT LIG NEGATIVE TEST CASES-------------------

OVF1734_API_TC_39_EDIT_LIG_WITH_CONFIGURING_SAMPLING_CHANGING_INVALIDPORT_OF_OLLECTOR
    Log to console    Edit LIG group
    #LIG with Ethernet Modules
    Fusion Api Login Appliance     ${APPLIANCE_IP}   ${login_details}
    ${valDict} =    Create Dictionary   status_code=${200}
    ...                                 taskState=CRM_INVALID_SFLOW_COLLECTOR_PORT_RANGE
    ${resp} =    Edit LIG FOR NEGATIVE CASES    ${sflow_edit_lig_sampling_changing_invalidport_of_collector}    ${valDict}
    Log to console and logfile    \n\nLIG edited operation Successfully:${resp}

OVF1734_API_TC_26_EDIT_LIG_WITH_REMOVING_COLLECTOR
    Log to console    Edit LIG group
    #LIG with Ethernet Modules
    Fusion Api Login Appliance     ${APPLIANCE_IP}   ${login_details}
    ${valDict} =    Create Dictionary   status_code=${200}
    ...                                 taskState=CRM_INVALID_SFLOW_PORTCONFIG_COLLECTOR_ID
    ${resp} =    Edit LIG FOR NEGATIVE CASES    ${sflow_edit_lig_removing_collector}    ${valDict}
    Log to console and logfile    \n\nLIG edited operation Successfully:${resp}

OVF1734_API_TC_36_EDIT_LIG_WITH_CHANGING_INVALID_MAX_DATAGRAM_SIZE
    Log to console    Edit LIG group
    #LIG with Ethernet Modules
    Fusion Api Login Appliance     ${APPLIANCE_IP}   ${login_details}
    ${valDict} =    Create Dictionary   status_code=${200}
    ...                                 taskState=CRM_INVALID_SFLOW_COLLECTOR_DATAGRAM_SIZE
    ${resp} =    Edit LIG FOR NEGATIVE CASES    ${sflow_edit_lig_invalid_max_datagramsize}    ${valDict}
    Log to console and logfile    \n\nLIG edited operation Successfully:${resp}

OVF1734_API_TC_34_EDIT_LIG_WITH_CHANGING_INVALID_MAX_HEADER_SIZE
    Log to console    Edit LIG group
    #LIG with Ethernet Modules
    Fusion Api Login Appliance     ${APPLIANCE_IP}   ${login_details}
    ${valDict} =    Create Dictionary   status_code=${200}
    ...                                 taskState=CRM_INVALID_SFLOW_COLLECTOR_HEADER_SIZE
    ${resp} =    Edit LIG FOR NEGATIVE CASES    ${sflow_edit_lig_invalid_max_headersize}    ${valDict}
    Log to console and logfile    \n\nLIG edited operation Successfully:${resp}

OVF1734_API_TC_30_EDIT_LIG_WITH_DUPLICATE_COLLECTOR_NAME
    Log to console    Edit LIG group
    #LIG with Ethernet Modules
    Fusion Api Login Appliance     ${APPLIANCE_IP}   ${login_details}
    ${valDict} =    Create Dictionary   status_code=${200}
    ...                                 taskState=CRM_INVALID_SFLOW_COLLECTOR_DUPLICATE
    ${resp} =    Edit LIG FOR NEGATIVE CASES    ${sflow_edit_lig_duplicate_collectorname}    ${valDict}
    Log to console and logfile    \n\nLIG edited operation Successfully:${resp}

OVF1734_API_TC_40_EDIT_LIG_WITH_INVALID_COLLECTOR_ID_FOR_PORT
    Log to console    Edit LIG group
    #LIG with Ethernet Modules
    Fusion Api Login Appliance     ${APPLIANCE_IP}   ${login_details}
    ${valDict} =    Create Dictionary   status_code=${200}
    ...                                 taskState=CRM_INVALID_SFLOW_PORTCONFIG_COLLECTOR_ID
    ${resp} =    Edit LIG FOR NEGATIVE CASES    ${sflow_edit_lig_wrong_collectorid_for_port}    ${valDict}
    Log to console and logfile    \n\nLIG edited operation Successfully:${resp}

OVF1734_API_TC_11_EDIT_LIG_WITH_CHANGING_INVALID_COLLECTOR_ID
    Log to console    Edit LIG group
    #LIG with Ethernet Modules
    Fusion Api Login Appliance     ${APPLIANCE_IP}   ${login_details}
    ${valDict} =    Create Dictionary   status_code=${200}
    ...                                 taskState=CRM_INVALID_SFLOW_COLLECTOR_ID
    ${resp} =    Edit LIG FOR NEGATIVE CASES    ${sflow_edit_lig_wrong_collectorid}    ${valDict}
    Log to console and logfile    \n\nLIG edited operation Successfully:${resp}

OVF1734_API_TC_55_EDIT_LIG_WITHOUT_SAMPLING_INTERVAL_VALUES
    Log to console    Edit LIG group
    Fusion Api Login Appliance     ${APPLIANCE_IP}   ${login_details}
    ${valDict} =    Create Dictionary   status_code=${200}
    ...                                 taskState=CRM_INVALID_SFLOW_CONFIGMODE_SAMPLING
    ${resp} =    Edit LIG FOR NEGATIVE CASES    ${sflow_edit_lig_without_sampling_interval}    ${valDict}
    Log to console and logfile    \n\nLIG edited operation Successfully:${resp}

OVF1734_API_TC_55_01_EDIT_LIG_WITHOUT_POLLING_INTERVAL_VALUES
    Log to console    Edit LIG group
    Fusion Api Login Appliance     ${APPLIANCE_IP}   ${login_details}
    ${valDict} =    Create Dictionary   status_code=${200}
    ...                                 taskState=CRM_INVALID_SFLOW_CONFIGMODE_POLLING
    ${resp} =    Edit LIG FOR NEGATIVE CASES    ${sflow_edit_lig_without_polling_interval}    ${valDict}
    Log to console and logfile    \n\nLIG edited operation Successfully:${resp}

OVF1734_API_TC_44_EDIT_LIG_INVALID_SAMPLING_INTERVAL_VALUES
    Log to console    Edit LIG group
    Fusion Api Login Appliance     ${APPLIANCE_IP}   ${login_details}
    ${valDict} =    Create Dictionary   status_code=${200}
    ...                                 taskState=CRM_INVALID_SFLOW_CONFIGMODE_SAMPLING
    ${resp} =    Edit LIG FOR NEGATIVE CASES    ${sflow_edit_lig_invalid_sampling_rate}    ${valDict}
    Log to console and logfile    \n\nLIG edited operation Successfully:${resp}

OVF1734_API_TC_44_01_EDIT_LIG_WITHOUT_POLLING_INTERVAL_VALUES
    Log to console    Edit LIG group
    Fusion Api Login Appliance     ${APPLIANCE_IP}   ${login_details}
    ${valDict} =    Create Dictionary   status_code=${200}
    ...                                 taskState=CRM_INVALID_SFLOW_CONFIGMODE_POLLING
    ${resp} =    Edit LIG FOR NEGATIVE CASES    ${sflow_edit_lig_invalid_polling_rate}    ${valDict}
    Log to console and logfile    \n\nLIG edited operation Successfully:${resp}


#--------------END EDIT LIG NEGATIVE TEST CASES-------------------

