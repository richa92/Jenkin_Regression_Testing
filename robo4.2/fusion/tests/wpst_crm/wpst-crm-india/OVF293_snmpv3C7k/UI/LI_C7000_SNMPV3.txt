*** Settings ***
Documentation    LI SCRIPTS
Resource    SNMPV3-CONFIG.txt

Force Tags    Buildup
Suite Setup    Load Test Data and Open Browser
Suite Teardown    Logout And Close All Browsers
Library    Dialogs
Library    String


*** Variables ** *
${SSH_PASS}                     hpvse1
${DataFile}         ./LI-C7K.xml

*** Test Cases ***

00 Log into fusion as Administrator
    [Documentation]    Log into Appliance as Administrator
    Log To Console    *********Log into Appliance as Administrator****************
    ${user} =    Get Data By Property    ${TestData.users}    name    Administrator
    fusion_ui_login_to_appliance    ${user[0].name}
    Log to Console    Successfully logged in as Administrator

OVF293_UI_TC_01 AddsnmpUser DefaultAttributes_NOAUTHNOPRIV
    [Documentation]    EDIT LI
    Log To Console    ******EDIT LI WITH SNMP USER HAVING DEFAULT SECURITY LEVELS**********
    ${Status}=    fusion_ui_edit_logical_interconnects    @{TestData.li_addsnmp_1}
    Run Keyword And Continue On Failure   Should Be Equal    '${Status}'    'True'    ${Status}

OVF293_UI_TC_02 AddsnmpUser_NoUserNameSpecified
   [Documentation]     EDIT LI
    Log To Console    ******CREATE LI WITH SNMPV3 USER WITHOUT PASSING A USERNAME**********
    ${Status}=    fusion_ui_edit_logical_interconnects    @{TestData.li_add1_nouname}
    Run Keyword And Continue On Failure   Should Be Equal    '${Status}'    'True'    ${Status}

OVF293_UI_TC_03 AddsnmpUser_SecLevel_Authentication_AuthNprotocolMD5
    [Documentation]     EDIT LI
    Log To Console    ******EDIT LIG BY ADDING A SNMPV3 USER HAVIMG MD5 AUTH PROTOCAL**********
    ${Status}=    fusion_ui_edit_logical_interconnects    @{TestData.li_addmd5}
    Run Keyword And Continue On Failure   Should Be Equal    '${Status}'    'True'    ${Status}

OVF293_UI_TC_04 AddsnmpUser_SecLevel_Authentication_AuthNprotocolSHA1
    [Documentation]     EDIT LI
    Log To Console    ******EDIT LI BY ADDING A SNMPV3 USER HAVIMG SHA1 AUTH PROTOCAL**********
    ${Status}=    fusion_ui_edit_logical_interconnects    @{TestData.li_addsha}
    Run Keyword And Continue On Failure   Should Be Equal    '${Status}'    'True'    ${Status}


OVF293_UI_TC_06 AddsnmpUser_SecLevel_AuthPriv_Authentication MD5 And Privacy DES
    [Documentation]     EDIT LI
    Log To Console    ******EDIT LI BY ADDING A SNMPV3 USER HAVIMG MD5 AUTH  AND DES PRIV PROTOCALS**********
    ${Status}=    fusion_ui_edit_logical_interconnects    @{TestData.li_priv1}
    Run Keyword And Continue On Failure   Should Be Equal    '${Status}'    'True'    ${Status}

OVF293_UI_TC_07 AddsnmpUser_SecLevel_AuthPriv_Authentication MD5 And Privacy AES128
    [Documentation]     EDIT LI
    Log To Console    ******EDIT LI BY ADDING A SNMPV3 USER HAVIMG MD5 AUTH  AND AES128 PRIV PROTOCALS**********
    ${Status}=    fusion_ui_edit_logical_interconnects    @{TestData.li_priv2}
    Run Keyword And Continue On Failure   Should Be Equal    '${Status}'    'True'    ${Status}

    Log To Console    ******VERIFY LI**********
    ${Status}=    fusion_ui_verify_logical_interconnects    @{TestData.li_verify1}
    Run Keyword And Continue On Failure   Should Be Equal    '${Status}'    'True'    ${Status}


    Log To Console    ******EDIT LI TO REMOVE USERS**********
    ${Status}=    fusion_ui_edit_logical_interconnects    @{TestData.li_remove1}
    Run Keyword And Continue On Failure   Should Be Equal    '${Status}'    'True'    ${Status}


OVF293_UI_TC_10 AddsnmpUser_SecLevel_AuthPriv_Authentication SHA1 And Privacy DES
    [Documentation]    EDIT LI
    Log To Console    ******EDIT LI BY ADDING A SNMPV3 USER HAVIMG SHA1 AUTH  AND DES PRIV PROTOCALS**********
    ${Status}=    fusion_ui_edit_logical_interconnects    @{TestData.li_priv5}
    Run Keyword And Continue On Failure   Should Be Equal    '${Status}'    'True'    ${Status}

OVF293_UI_TC_11 AddsnmpUser_SecLevel_AuthPriv_Authentication SHA1 And Privacy AES128
    [Documentation]    EDIT LI
    Log To Console    ******EDIT LI BY ADDING A SNMPV3 USER HAVIMG SHA1 AUTH  AND AES128 PRIV PROTOCALS**********
    ${Status}=    fusion_ui_edit_logical_interconnects    @{TestData.li_priv6}
    Run Keyword And Continue On Failure   Should Be Equal    '${Status}'    'True'    ${Status}

    Log To Console    ******VERIFY LI**********
    ${Status}=    fusion_ui_verify_logical_interconnects    @{TestData.li_verify2}
    Run Keyword And Continue On Failure   Should Be Equal    '${Status}'    'True'    ${Status}


    Log To Console    ******EDIT LI TO REMOVE USER**********
    ${Status}=    fusion_ui_edit_logical_interconnects    @{TestData.li_removeb}
    Run Keyword And Continue On Failure   Should Be Equal    '${Status}'    'True'    ${Status}

OVF293_UI_TC_14 AddsnmpUser_DuplicateNamesNotAllowed

    [Documentation]    EDIT LI
    Log To Console    ****** EDIT LI WITH SNMV3 USER HAVING DUPLICATE USERNAME**********
    ${Status}=    fusion_ui_edit_logical_interconnects    @{TestData.li_add_duplicate_name}
    Run Keyword And Continue On Failure   Should Be Equal    '${Status}'    'True'    ${Status}


    Log To Console    ******EDIT LI TO REMOVE USER**********
    ${Status}=    fusion_ui_edit_logical_interconnects    @{TestData.li_removeduplicate}
    Run Keyword And Continue On Failure   Should Be Equal    '${Status}'    'True'    ${Status}

OVF293_UI_TC_15 AddsnmpUser_Invalidvalues_UserName
    [Documentation]     EDIT LI
    Log To Console    ****** EDIT LI WITH SNMV3 USER HAVING INVALID USERNAME**********
    ${Status}=    fusion_ui_edit_logical_interconnects    @{TestData.li_add1_invaliduser}
    Run Keyword And Continue On Failure   Should Be Equal    '${Status}'    'True'    ${Status}

OVF293_UI_TC_16 AddsnmpUser_Invalidvalues_AuthPassPhrase
    [Documentation]     EDIT LI
    Log To Console    ****** EDIT LI WITH SNMV3 USER HAVING INVALID AUTH PROTOCAL PASSWORD**********
    ${Status}=    fusion_ui_edit_logical_interconnects    @{TestData.li_add1_invalidauthpassword}
    Run Keyword And Continue On Failure   Should Be Equal    '${Status}'    'True'    ${Status}

OVF293_UI_TC_17 AddsnmpUser_Invalidvalues_PrivPassPhrase
    [Documentation]     EDIT LI
    Log To Console    ****** EDIT LI WITH SNMV3 USER HAVING INVALID PRIVACY PROTOCAL PASSWORD**********
    ${Status}=    fusion_ui_edit_logical_interconnects    @{TestData.li_add1_invalidprivpassword}
    Run Keyword And Continue On Failure   Should Be Equal    '${Status}'    'True'    ${Status}

OVF293_UI_TC_18 AddsnmpUser_MandatoryAttributeCheck_Name
    [Documentation]     EDIT LI
    Log To Console    ****** EDIT LI AND CHECK IF THE MANDATORY PARAMETER USERNAME IS PASSED TO CREATE USER**********
    ${Status}=    fusion_ui_edit_logical_interconnects    @{TestData.li_add1_nouname}
    Run Keyword And Continue On Failure   Should Be Equal    '${Status}'    'True'    ${Status}

OVF293_UI_TC_19 AddsnmpUser_MandatoryAttributeCheck_AuthAlgo
    [Documentation]     EDIT LI
    Log To Console    ****** EDIT LI WITH SNMV3 USER HAVING NO AUTH PROTOCAL**********
    ${Status}=    fusion_ui_edit_logical_interconnects    @{TestData.li_add1_noauth}
    Run Keyword And Continue On Failure   Should Be Equal    '${Status}'    'True'    ${Status}


OVF293_UI_TC_20 AddsnmpUser_MandatoryAttributeCheck_AuthPassPhrase
    [Documentation]     EDIT LI
    Log To Console    ****** EDIT LI WITH SNMV3 USER HAVING NO AUTH PASSWORD**********
    ${Status}=    fusion_ui_edit_logical_interconnects    @{TestData.li_add1_noauthpass}
    Run Keyword And Continue On Failure   Should Be Equal    '${Status}'    'True'    ${Status}

OVF293_UI_TC_21 AddsnmpUser_MandatoryAttributeCheck_PrivAlgorithm
    [Documentation]     EDIT LI
    Log To Console    ****** EDIT LI WITH SNMV3 USER HAVING NO PRIV PROTOCAL**********
    ${Status}=    fusion_ui_edit_logical_interconnects    @{TestData.li_add1_nopriv}
    Run Keyword And Continue On Failure   Should Be Equal    '${Status}'    'True'    ${Status}

OVF293_UI_TC_22 AddsnmpUser_Passphrase_LengthCheck
    [Documentation]     EDIT LI
    Log To Console    ****** EDIT LI WITH SNMV3 USER HAVING INVALID PASSWORD LENGTH**********
    ${Status}=    fusion_ui_edit_logical_interconnects    @{TestData.li_add1_passlength}
    Run Keyword And Continue On Failure   Should Be Equal    '${Status}'    'True'    ${Status}

OVF293_UI_TC_23 AddsnmpUser_MaximumSnmpUsersAllowedToBeAdded
    [Documentation]     EDIT LI TO ADD MAXIMUM ALLOWABLE USERS
    Log To Console    ****** EDIT LI HAVING MORE THAN 6 SNMP USERS **********
    ${Status}=    fusion_ui_edit_logical_interconnects    @{TestData.li_maxlength}
    Run Keyword And Continue On Failure   Should Be Equal    '${Status}'    'True'    ${Status}

    Log To Console    ******VERIFY LI**********
    ${Status}=    fusion_ui_verify_logical_interconnects    @{TestData.verify_maxlength}
    Run Keyword And Continue On Failure   Should Be Equal    '${Status}'    'True'    ${Status}

    Log To Console    ******EDIT LI TO REMOVE USER**********
    ${Status}=    fusion_ui_edit_logical_interconnects    @{TestData.li_removemax}
    Run Keyword And Continue On Failure   Should Be Equal    '${Status}'    'True'    ${Status}


OVF293_UI_TC_24 Modify snmp User_ Auth and Privacy details
    [Documentation]    CREATE SNMP USERS
    Log To Console    ******EDIT LI**********
    Log To Console    **This LI has the below users:\n Authentication MD5 And Privacy AES192 \nAuthentication MD5
    ${Status}=    fusion_ui_edit_logical_interconnects    @{TestData.li_addmod}
    Run Keyword And Continue On Failure   Should Be Equal    '${Status}'    'True'    ${Status}

    Log To Console    ******EDIT LI**********
    ${Status}=    fusion_ui_edit_logical_interconnects    @{TestData.li_edit_1}
    Run Keyword And Continue On Failure   Should Be Equal    '${Status}'    'True'    ${Status}

OVF293_UI_TC_26 Modify snmp User_ Security levels Auth to AuthPriv

    [Documentation]    EDIT LI
    Log To Console    ******EDIT LI**********
    ${Status}=    fusion_ui_edit_logical_interconnects    @{TestData.li_edit_2}
    Run Keyword And Continue On Failure   Should Be Equal    '${Status}'    'True'    ${Status}


    Log To Console    ******VERIFY LI**********
    ${Status}=    fusion_ui_verify_logical_interconnects    @{TestData.li_verify3}
    Run Keyword And Continue On Failure   Should Be Equal    '${Status}'    'True'    ${Status}

OVF293_UI_TC_28 Modify snmp User_invalid Auth Pass Phrase
    [Documentation]    EDIT LI
    Log To Console    ******EDIT LI**********
    ${Status}=    fusion_ui_edit_logical_interconnects    @{TestData.li_edit_3}
    Run Keyword And Continue On Failure   Should Be Equal    '${Status}'    'True'    ${Status}

OVF293_UI_TC_29 Modify snmp User_Authentication Algorithm empty
    [Documentation]    EDIT LI
    Log To Console    ******EDIT LI**********
    ${Status}=    fusion_ui_edit_logical_interconnects    @{TestData.li_edit_4}
    Run Keyword And Continue On Failure   Should Be Equal    '${Status}'    'True'    ${Status}

OVF293_UI_TC_30 Modify snmp User_Authentication Passphrase empty
    [Documentation]    EDIT LI
    Log To Console    ******EDIT LIG**********
    ${Status}=    fusion_ui_edit_logical_interconnects    @{TestData.li_edit_5}
    Run Keyword And Continue On Failure   Should Be Equal    '${Status}'    'True'    ${Status}

OVF293_UI_TC_31 Modify snmp User_Privacy Algorithm empty
    [Documentation]    EDIT LI
    Log To Console    ******EDIT LI**********
    ${Status}=    fusion_ui_edit_logical_interconnects    @{TestData.li_edit_6}
    Run Keyword And Continue On Failure   Should Be Equal    '${Status}'    'True'    ${Status}

OVF293_UI_TC_32 Remove SNMP user with traps associated
    [Documentation]    EDIT LI
    Log To Console    ******EDIT LI TO ADD TRAP**********
    ${Status}=    fusion_ui_edit_logical_interconnects    @{TestData.li_addtrap_1}
    Run Keyword And Continue On Failure   Should Be Equal    '${Status}'    'True'    ${Status}

    Log To Console    ******EDIT LI TO REMOVE USER**********
    ${Status}=    fusion_ui_edit_logical_interconnects    @{TestData.li_edit_8}
    Run Keyword And Continue On Failure   Should Be Equal    '${Status}'    'True'    ${Status}

    Log To Console    ******EDIT LI TO REMOVE TRAP**********
    ${Status}=    fusion_ui_edit_logical_interconnects    @{TestData.li_removetrap}
    Run Keyword And Continue On Failure   Should Be Equal    '${Status}'    'True'    ${Status}

    [Documentation]    EDIT LI
    Log To Console    ******EDIT LI TO REMOVE USER**********
    ${Status}=    fusion_ui_edit_logical_interconnects    @{TestData.li_remove3}
    Run Keyword And Continue On Failure   Should Be Equal    '${Status}'    'True'    ${Status}


OVF293_UI_TC_33 add Trap destination When no snmp users are available
    [Documentation]    EDIT LI
    Log To Console    ******EDIT LI TO ADD TRAP WITHOUT SNMPV3 USER**********
    ${Status}=    fusion_ui_edit_logical_interconnects    @{TestData.li_add3}
    Run Keyword And Continue On Failure   Should Be Equal    '${Status}'    'True'    ${Status}

OVF293_UI_TC_34 Add Trap Inform messages disabled Trap Type As Trap
    [Documentation]    EDIT LI
    Log To Console    ******EDIT LI WITH SNMP USER HAVING DEFAULT SECURITY LEVELS**********
    ${Status}=    fusion_ui_edit_logical_interconnects    @{TestData.li_addsnmp_trap}
    Run Keyword And Continue On Failure   Should Be Equal    '${Status}'    'True'    ${Status}

    [Documentation]    EDIT LI
    Log To Console    ******EDIT LI TO ADD TRAP**********
    ${Status}=    fusion_ui_edit_logical_interconnects    @{TestData.li_add4}
    Run Keyword And Continue On Failure   Should Be Equal    '${Status}'    'True'    ${Status}

OVF293_UI_TC_35 Add Inform Toggle Trap Type to Inform No EngineId specified
    [Documentation]    EDIT LI
    Log To Console    ******EDIT LI TO ADD TRAP WITHOUT PROVIDING ENGINE ID WHEN TOGGLED TO INFORM**********
    ${Status}=    fusion_ui_edit_logical_interconnects    @{TestData.li_add5}
    Run Keyword And Continue On Failure   Should Be Equal    '${Status}'    'True'    ${Status}

OVF293_UI_TC_36 Add Inform Trap Type Inform Engine Id specified
    [Documentation]    EDIT LI
    Log To Console    ******EDIT LI TO ADD TRAP WHEN TOGGLED TO INFORM**********
    ${Status}=    fusion_ui_edit_logical_interconnects    @{TestData.li_add6}
    Run Keyword And Continue On Failure   Should Be Equal    '${Status}'    'True'    ${Status}

OVF293_UI_TC_37 Add Trap Non default port
    [Documentation]    EDIT LI
    Log To Console    ******EDIT LI TO ADD TRAP WITHOUT DEFAULT PORT**********
    ${Status}=    fusion_ui_edit_logical_interconnects    @{TestData.li_add7}
    Run Keyword And Continue On Failure   Should Be Equal    '${Status}'    'True'    ${Status}

OVF293_UI_TC_38 Add Trap Invalid port
    [Documentation]    EDIT LI
    Log To Console    ******EDIT LI TO ADD TRAP WITH INVALID PORT**********
    ${Status}=    fusion_ui_edit_logical_interconnects    @{TestData.li_add8}
    Run Keyword And Continue On Failure   Should Be Equal    '${Status}'    'True'    ${Status}

OVF293_UI_TC_39 Add Trap Invalid Engine Id
    [Documentation]    EDIT LI
    Log To Console    ******EDIT LI TO ADD TRAP WITH INVALID ENGINE ID**********
    ${Status}=    fusion_ui_edit_logical_interconnects    @{TestData.li_add9}
    Run Keyword And Continue On Failure   Should Be Equal    '${Status}'    'True'    ${Status}

OVF293_UI_TC_40 Add Trap Verify users listed
    [Documentation]    EDIT LI
    Log To Console    ******EDIT LI TO ADD TRAP AND VERIFY WETHER USERS ARE LISTED**********
    ${Status}=    fusion_ui_edit_logical_interconnects    @{TestData.li_add10}
    Run Keyword And Continue On Failure   Should Be Equal    '${Status}'    'True'    ${Status}

OVF293_UI_TC_60 Add Trap Verify users listed
    [Documentation]    EDIT LI
    Log To Console    ******EDIT LI TO ADD TRAP AND VERIFY WETHER USERS ARE LISTED**********
    ${Status}=    fusion_ui_edit_logical_interconnects    @{TestData.li_add11}
    Run Keyword And Continue On Failure   Should Be Equal    '${Status}'    'True'    ${Status}

OVF293_UI_TC_61 Add Trap or Inform Maximum number validation
    [Documentation]    EDIT LI
    Log To Console    ******EDIT LI TO ADD MORE THAN 6 TRAPS**********
    ${Status}=    fusion_ui_edit_logical_interconnects    @{TestData.li_addmaxtrap}
    Run Keyword And Continue On Failure   Should Be Equal    '${Status}'    'True'    ${Status}

    Log To Console    ******VERIFY LI**********
    ${Status}=    fusion_ui_verify_logical_interconnects    @{TestData.li_verify4}
    Run Keyword And Continue On Failure   Should Be Equal    '${Status}'    'True'    ${Status}



OVF293_UI_TC_42 Modify snmp Trap Trap address
    [Documentation]    EDIT LI
    Log To Console    ******EDIT LG TO EDIT TRAP ADDRESS**********
    ${Status}=    fusion_ui_edit_logical_interconnects    @{TestData.li_edittrap1}
    Run Keyword And Continue On Failure   Should Be Equal    '${Status}'    'True'    ${Status}

    Log To Console    ******VERIFY LI**********
    ${Status}=    fusion_ui_verify_logical_interconnects    @{TestData.li_verify5}
    Run Keyword And Continue On Failure   Should Be Equal    '${Status}'    'True'    ${Status}

OVF293_UI_TC_42 Modify snmp Trap Inform
    [Documentation]    EDIT LI
    Log To Console    ******EDIT LI TO MODIFY NOTIFICATION TYPE IN TRAP DESTINATION FROM TRAP TO INFORM**********
    ${Status}=    fusion_ui_edit_logical_interconnects    @{TestData.li_edittrap2}
    Run Keyword And Continue On Failure   Should Be Equal    '${Status}'    'True'    ${Status}


OVF293_UI_TC_43 Modify snmp Trap Modify Port
    [Documentation]    EDIT LI
    Log To Console    ******EDIT LI TO MODIFY PORT IN TRAP DESTINATION**********
    ${Status}=    fusion_ui_edit_logical_interconnects    @{TestData.li_edittrap3}
    Run Keyword And Continue On Failure   Should Be Equal    '${Status}'    'True'    ${Status}

    Log To Console    ******VERIFY LI**********
    ${Status}=    fusion_ui_verify_logical_interconnects    @{TestData.li_verify6}
    Run Keyword And Continue On Failure   Should Be Equal    '${Status}'    'True'    ${Status}

OVF293_UI_TC_44 Modify snmp Trap Modify User Name
    [Documentation]    EDIT LI
    Log To Console    ******EDIT LI TO MODIFY USERNAME IN TRAP DESTINATION**********
    ${Status}=    fusion_ui_edit_logical_interconnects    @{TestData.li_edittrap4}
    Run Keyword And Continue On Failure   Should Be Equal    '${Status}'    'True'    ${Status}

    Log To Console    ******VERIFY LI**********
    ${Status}=    fusion_ui_verify_logical_interconnects    @{TestData.li_verify7}
    Run Keyword And Continue On Failure   Should Be Equal    '${Status}'    'True'    ${Status}

OVF293_UI_TC_45 Modify snmp Trap With invalid port
    [Documentation]    EDIT LI
    Log To Console    ******EDIT LI TO MODIFY INVALID PORT IN TRAP DESTINATION**********
    ${Status}=    fusion_ui_edit_logical_interconnects    @{TestData.li_edittrap5}
    Run Keyword And Continue On Failure   Should Be Equal    '${Status}'    'True'    ${Status}

OVF293_UI_TC_46 Modify snmp Trap With invalid EngineId
    [Documentation]    EDIT LI
    Log To Console    ******EDIT LI TO MODIFY INVALID ENGINE ID IN TRAP DESTINATION**********
    ${Status}=    fusion_ui_edit_logical_interconnects    @{TestData.li_edittrap6}
    Run Keyword And Continue On Failure   Should Be Equal    '${Status}'    'True'    ${Status}



OVF293_UI_TC_47 Remove snmp trap entries


    [Documentation]    EDIT LI
    Log To Console    ******EDIT LI TO REMOVE TRAP DESTINATION**********
    ${Status}=    fusion_ui_edit_logical_interconnects    @{TestData.li_removetrap1}
    Run Keyword And Continue On Failure   Should Be Equal    '${Status}'    'True'    ${Status}

    Log To Console    ******EDIT LI TO REMOVE USER**********
    ${Status}=    fusion_ui_edit_logical_interconnects    @{TestData.li_removeuserexist}
    Run Keyword And Continue On Failure   Should Be Equal    '${Status}'    'True'    ${Status}

OVF293_UI_TC_48 Modify snmp TrapV1V2 To V3 trap With no snmpuser
    [Documentation]    EDIT LI
    Log To Console    ******CREATE SNMPV2 TRAP  **********
    ${Status}=    fusion_ui_edit_logical_interconnects    @{TestData.li_createsnmpv2trap}
    Run Keyword And Continue On Failure   Should Be Equal    '${Status}'    'True'    ${Status}


    Log To Console    ******MODIFY SNMPV1/V2TO SNMPV3 **********
    ${Status}=    fusion_ui_edit_logical_interconnects    @{TestData.li_edittrap7}
    Run Keyword And Continue On Failure   Should Be Equal    '${Status}'    'True'    ${Status}

OVF293_UI_TC_49 Modify snmp Trap V1V2 To V3 trap
    [Documentation]   EDIT LI
    Log To Console    ******CREATE SNMPV3 WITH USER AND EDIT TRAP DESTINATION TO V3**********
    ${Status}=    fusion_ui_edit_logical_interconnects    @{TestData.li_edittrapv3}
    Run Keyword And Continue On Failure   Should Be Equal    '${Status}'    'True'    ${Status}


OVF293_UI_TC_50 Modify snmp Trap V3 To V1/V2 trap
    [Documentation]   EDIT LI
    Log To Console    ******CREATE SNMPV3 WITH USER AND TRAP DESTINATION **********
    ${Status}=    fusion_ui_edit_logical_interconnects    @{TestData.li_createsnmpv3trap}
    Run Keyword And Continue On Failure   Should Be Equal    '${Status}'    'True'    ${Status}

    [Documentation]   EDIT LI
    Log To Console    ******MODIFY SNMPV1/V2 TO SNMPV3 **********
    ${Status}=    fusion_ui_edit_logical_interconnects    @{TestData.li_edittrap8}
    Run Keyword And Continue On Failure   Should Be Equal    '${Status}'    'True'    ${Status}


OVF293_UI_TC_51 Modify snmp Trap V13 To V1/v2 trap
    [Documentation]   EDIT LI
    Log To Console    ******CREATE SNMPV3 WITH USER AND TRAP DESTINATION **********
    ${Status}=    fusion_ui_edit_logical_interconnects    @{TestData.li_createsnmpv3trap2}
    Run Keyword And Continue On Failure   Should Be Equal    '${Status}'    'True'    ${Status}

    [Documentation]   EDIT LI
    Log To Console    ******MODIFY SNMPV1/V2TO SNMPV3 **********
    ${Status}=    fusion_ui_edit_logical_interconnects    @{TestData.li_edittrap9}
    Run Keyword And Continue On Failure   Should Be Equal    '${Status}'    'True'    ${Status}
