*** Settings ***
Documentation		Feature Test: Hellfire API IP POOLS
...                 This Test Suite includes Add/Delete/Edit/Positive/Negative Scenarios of Subnet and Range Page.
...					It also Includes Associate/Disassociate/Allocate/Collect of Subnet and Ranges.
Variables 		    data_variables.py				

#Suite Setup   		Run FTS and test-specific setup
#Suite Teardown		Suite Teardown


Resource            ../../../resource/fusion_api_all_resource_files.txt

Library				Collections
Library             json
Library				OperatingSystem
Library		        Selenium2Library 
Library				BuiltIn

*** Variables ***
${SSH_PASS}                	hpvse1
${APPLIANCE_IP} 			15.212.136.117
${SSH_USER}					root
${VAL_DELETE}				<Response [204]>
${POTASH}					Virtual Connect SE 40Gb F8 Module for Synergy
${CHLORIDE20}				Synergy 20Gb Interconnect Link Module
${timeout}					1200
${interval}					30
${IP_CHECK_FALSE}			False
${IP_CHECK}					True
${PUBLICPRIVATE}
#${Empty}					\"null\"			 

*** Test Cases ***

#Test Specific Setup

Login to Appliance
	${resp}=	Fusion Api Login Appliance 		${APPLIANCE_IP}		${admin_credentials}

CLEAN-UP BEFORE START
	#DELETE THE EG
	${resp}=	Remove ALL Enclosure Groups
    #REMOVE ALL NETWORKS
	${resp}=	Remove All Ethernet Networks
	${resp1}=	Remove All FC Networks
	${resp2}=	Remove All FCoE Networks
    #REMOVE ALL SUBNET
	${resp}= 	Remove All Subnets
	#All users
	${resp}= 	Remove ALL Users

#-----------------SUBNET STARTS------------------
OVF511_API_SUBNET_TC_01 - CREATE A SUBNET WITH ALL DATA FIELDS
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_Subnet[0]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}

OVF511_API_SUBNET_TC_02 - CREATE A SUBNET ONLY WITH MANDATORY DATA FIELDS
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_Subnet[1]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}

OVF511_API_SUBNET_TC_03 - CREATE A SUBNET ONLY EXCPT DOMAIN AND GATEWAY
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_Subnet[2]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}

OVF511_API_SUBNET_TC_04 - CREATE A SUBNET WITH ALL DATA EXCEPT GATEWAY
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_Subnet[3]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}

OVF511_API_SUBNET_TC_05 - CREATE A SUBNET WITH ALL DATA EXCEPT DOMAIN
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_Subnet[4]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}

OVF511_API_SUBNET_TC_06 - CREATE A SUBNET WITH ALL DATA EXCEPT SUBNET ID
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_Subnet[5]}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=ADDRESS_FORMAT_IPV4
	Validate Response	${resp}	${valDict}

OVF511_API_SUBNET_TC_07 - CREATE A SUBNET WITH ALL DATA EXCEPT SUBNET MASK
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_Subnet[6]}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=ADDRESS_FORMAT_IPV4
	Validate Response	${resp}	${valDict}
	
OVF511_API_SUBNET_TC_50 - CREATE A SUBNET WITH ALL THE 3 DNS HAVING SAME IP
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_Subnet[7]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	
OVF511_API_SUBNET_TC_11 - CREATE A SUBNET WITH ALL DATA EXCEPT DNS1,DNS2,DNS3
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_Subnet[8]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}

OVF511_API_SUBNET_TC_12 - CREATE SUBNET WITH SUBNET ID 127.0.0.1
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_Subnet[9]}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=IPV4_LOOPBACK
	Validate Response	${resp}	${valDict}

OVF511_API_SUBNET_TC_13 - CREATE SUBNET WITH SUBNET MASK 127.0.0.1
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_Subnet[11]}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=INVALID_SUBNET_MASK
	Validate Response	${resp}	${valDict}

OVF511_API_SUBNET_TC_14 - CREATE SUBNET WITH GATEWAY IP 127.0.0.1
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_Subnet[10]}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=INVALID_GATEWAY
	Validate Response	${resp}	${valDict}

OVF511_API_SUBNET_TC_15 - CREATE SUBNET WITH DNS IP 127.0.0.1
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_Subnet[12]}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=IPV4_LOOPBACK
	Validate Response	${resp}	${valDict}

OVF511_API_SUBNET_TC_16 - CREATE SUBNET WITH SUBNET ID 224.0.0.0
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_Subnet[13]}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=IPV4_MULTICAST
	Validate Response	${resp}	${valDict}
	
OVF511_API_SUBNET_TC_17 - CREATE SUBNET WITH SUBNET MASK 224.0.0.0
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_Subnet[14]}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=INVALID_SUBNET_ID
	Validate Response	${resp}	${valDict}

OVF511_API_SUBNET_TC_18 - CREATE SUBNET WITH GATEWAY IP 224.0.0.0
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_Subnet[15]}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=INVALID_GATEWAY
	Validate Response	${resp}	${valDict}
	
OVF511_API_SUBNET_TC_19 - CREATE SUBNET WITH DNS IP 224.0.0.0
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_Subnet[16]}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=IPV4_MULTICAST
	Validate Response	${resp}	${valDict}

OVF511_API_SUBNET_TC_20 - CREATE SUBNET WITH INVALID SUBNET ID A.10. .#
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_Subnet[17]}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=ADDRESS_FORMAT_IPV4
	Validate Response	${resp}	${valDict}

OVF511_API_SUBNET_TC_21 - CREATE SUBNET WITH INVALID SUBNET ID 100.200.300.400
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_Subnet[18]}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=ADDRESS_FORMAT_IPV4
	Validate Response	${resp}	${valDict}

OVF511_API_SUBNET_TC_22 - CREATE SUBNET WITH INVALID GATEWAY A.10. .#
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_Subnet[19]}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=GATEWAY_IPV4_FORMAT
	Validate Response	${resp}	${valDict}

OVF511_API_SUBNET_TC_23 - CREATE SUBNET WITH INVALID GATEWAY 100.200.300.400
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_Subnet[20]}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=GATEWAY_IPV4_FORMAT
	Validate Response	${resp}	${valDict}

OVF511_API_SUBNET_TC_24 - CREATE SUBNET WITH INVALID SUBNET MASK ID A.10. .#
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_Subnet[21]}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=ADDRESS_FORMAT_IPV4
	Validate Response	${resp}	${valDict}

OVF511_API_SUBNET_TC_25 - CREATE SUBNET WITH INVALID SUBNET MASK ID 100.200.300.400
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_Subnet[22]}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=ADDRESS_FORMAT_IPV4
	Validate Response	${resp}	${valDict}

OVF511_API_SUBNET_TC_26 - CREATE SUBNET WITH INVALID DNS ID A.10. .#
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_Subnet[23]}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=INVALID_DNS_SERVER
	Validate Response	${resp}	${valDict}

OVF511_API_SUBNET_TC_27 - CREATE SUBNET WITH INVALID DNS ID 100.200.300.400
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_Subnet[24]}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=INVALID_DNS_SERVER
	Validate Response	${resp}	${valDict}

OVF511_API_SUBNET_TC_28 - CREATE A SUBNET WITH INVALID DOMAIN NAME ABCD.2
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_Subnet[25]}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=INVALID_DOMAIN_NAME
	Validate Response	${resp}	${valDict}
	
OVF511_API_SUBNET_TC_29 - CREATE A SUBNET WITH INVALID DOMAIN NAME ABCD.C
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_Subnet[26]}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=INVALID_DOMAIN_NAME
	Validate Response	${resp}	${valDict}
	
OVF511_API_SUBNET_TC_30 - CREATE A SUBNET WITH INVALID DOMAIN NAME OF SPL CHARACTERS
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_Subnet[27]}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=INVALID_DOMAIN_NAME
	Validate Response	${resp}	${valDict}
	
OVF511_API_SUBNET_TC_31 - DOMAIN NAME ALLOWS ONLY . AND - AS SPECIAL CHARACTERS
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_Subnet[28]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}

OVF511_API_SUBNET_TC_51 - CREATE A SUBNET WITH DOMAIN NAME HAVING SUB DOMAIN FROM 2 TO 6 CHARACTERS
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_Subnet[29]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}

OVF511_API_SUBNET_TC_52 - CREATE A SUBNET WITH DOMAIN NAME HAVING SUB DOMAIN OF 7 CHARACTERS
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_Subnet[30]}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=INVALID_DOMAIN_NAME
	Validate Response	${resp}	${valDict}

OVF511_API_SUBNET_TC_32 - CREATE DOMAIN WITH 253 CHARACTERS
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_Subnet[31]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}

OVF511_API_SUBNET_TC_33 - CREATE DOMAIN WITH 255 CHARACTERS
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_Subnet[32]}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=INVALID_DOMAIN_NAME
	Validate Response	${resp}	${valDict}

OVF511_API_SUBNET_TC_54 - CREATE A SUBNET WITH DOMAIN NAME OF 64 CHARACTERS
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_Subnet[34]}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=INVALID_DOMAIN_NAME
	Validate Response	${resp}	${valDict}

OVF511_API_SUBNET_TC_53 - CREATE A SUBNET WITH DOMAIN NAME OF 63 CHARACTERS
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_Subnet[33]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}

OVF511_API_SUBNET_TC_55 - CREATE A SUBNET WITH DOMAIN NAME STARTING WITH A -
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_Subnet[35]}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=INVALID_DOMAIN_NAME
	Validate Response	${resp}	${valDict}


OVF511_API_SUBNET_TC_34 - EDIT SUBNET AND ADD DOMAIN AND GATEWAY DATA
	${uri} =	Get Subnet URI	${Testdata_Subnet[2]['networkId']}
	${resp} =	Fusion Api Edit Ipv4 Subnet		${Testdata_Subnet_Edit[0]}	uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${Verify_return}=	Verify Subnet Data 		${Testdata_Subnet_Edit[0]}		${Testdata_Subnet[2]['networkId']}
	Log		${Verify_return}

OVF511_API_SUBNET_TC_35 - EDIT SUBNET WITHOUT GATEWAY AND DOMAIN AND ADD DOMAIN DATA
	${uri} =	Get Subnet URI	${Testdata_Subnet[1]['networkId']}
	${resp} =	Fusion Api Edit Ipv4 Subnet		${Testdata_Subnet_Edit[1]}	uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${Verify_return}=	Verify Subnet Data 		${Testdata_Subnet_Edit[1]}		${Testdata_Subnet[1]['networkId']}
	Log		${Verify_return}

OVF511_API_SUBNET_TC_36 - EDIT SUBNET HAVING GATEWAY AND ADD DOMAIN DATA
	${uri} =	Get Subnet URI	${Testdata_Subnet[4]['networkId']}
	${resp} =	Fusion Api Edit Ipv4 Subnet		${Testdata_Subnet_Edit[2]}	uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${Verify_return}=	Verify Subnet Data 		${Testdata_Subnet_Edit[2]}		${Testdata_Subnet[4]['networkId']}
	Log		${Verify_return}

OVF511_API_SUBNET_TC_37 - EDIT SUBNET WITHOUT DOMAIN AND ADD GATEWAY DATA
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_Subnet[36]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${uri} =	Get Subnet URI	${Testdata_Subnet[35]['networkId']}
	${resp} =	Fusion Api Edit Ipv4 Subnet		${Testdata_Subnet_Edit[3]}	uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${Verify_return}=	Verify Subnet Data 		${Testdata_Subnet_Edit[3]}		${Testdata_Subnet[35]['networkId']}
	Log		${Verify_return}

OVF511_API_SUBNET_TC_38 - EDIT SUBNET WITH DOMAIN AND NO GATEWAY AND ADD GATEWAY DATA
	${uri} =	Get Subnet URI	${Testdata_Subnet[3]['networkId']}
	${resp} =	Fusion Api Edit Ipv4 Subnet		${Testdata_Subnet_Edit[4]}	uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${Verify_return}=	Verify Subnet Data 		${Testdata_Subnet_Edit[4]}		${Testdata_Subnet[3]['networkId']}
	Log		${Verify_return}

OVF511_API_SUBNET_TC_39 - EDIT SUBNET AND DELETE DOMAIN AND GATEWAY DATA
	${uri} =	Get Subnet URI	${Testdata_Subnet[0]['networkId']}
	${resp} =	Fusion Api Edit Ipv4 Subnet		${Testdata_Subnet_Edit[5]}	uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${Verify_return}=	Verify Subnet Data 		${Testdata_Subnet_Edit[5]}		${Testdata_Subnet[0]['networkId']}
	Log		${Verify_return}

OVF511_API_SUBNET_TC_40 - EDIT SUBNET AND DELETE DOMAIN DATA
	${uri} =	Get Subnet URI	${Testdata_Subnet[2]['networkId']}
	${resp} =	Fusion Api Edit Ipv4 Subnet		${Testdata_Subnet_Edit[6]}	uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${Verify_return}=	Verify Subnet Data 		${Testdata_Subnet_Edit[6]}		${Testdata_Subnet[2]['networkId']}
	Log		${Verify_return}

OVF511_API_SUBNET_TC_41 - EDIT SUBNET WITHOUT GATEWAY AND DELETE DOMAIN DATA
	${uri} =	Get Subnet URI	${Testdata_Subnet[1]['networkId']}
	${resp} =	Fusion Api Edit Ipv4 Subnet		${Testdata_Subnet_Edit[7]}	uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${Verify_return}=	Verify Subnet Data 		${Testdata_Subnet_Edit[7]}		${Testdata_Subnet[1]['networkId']}
	Log		${Verify_return}

OVF511_API_SUBNET_TC_42 - EDIT SUBNET HAVING DOMAIN AND GATEWAY AND DELETE GATEWAY DATA
	${uri} =	Get Subnet URI	${Testdata_Subnet[3]['networkId']}
	${resp} =	Fusion Api Edit Ipv4 Subnet		${Testdata_Subnet_Edit[8]}	uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${Verify_return}=	Verify Subnet Data 		${Testdata_Subnet_Edit[8]}		${Testdata_Subnet[3]['networkId']}
	Log		${Verify_return}

OVF511_API_SUBNET_TC_43 - EDIT SUBNET WITHOUT DOMAIN AND DELETE GATEWAY DATA
	${uri} =	Get Subnet URI	${Testdata_Subnet[2]['networkId']}
	${resp} =	Fusion Api Edit Ipv4 Subnet		${Testdata_Subnet_Edit[9]}	uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${Verify_return}=	Verify Subnet Data 		${Testdata_Subnet_Edit[9]}		${Testdata_Subnet[2]['networkId']}
	Log		${Verify_return}

OVF511_API_SUBNET_TC_44 - EDIT GATEWAY DATA 
	${uri} =	Get Subnet URI	${Testdata_Subnet[4]['networkId']}
	${resp} =	Fusion Api Edit Ipv4 Subnet		${Testdata_Subnet_Edit[10]}	uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${Verify_return}=	Verify Subnet Data 		${Testdata_Subnet_Edit[10]}		${Testdata_Subnet[4]['networkId']}
	Log		${Verify_return}

OVF511_API_SUBNET_TC_45 - EDIT DOMAIN DATA 
	${uri} =	Get Subnet URI	${Testdata_Subnet[4]['networkId']}
	${resp} =	Fusion Api Edit Ipv4 Subnet		${Testdata_Subnet_Edit[11]}	uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${Verify_return}=	Verify Subnet Data 		${Testdata_Subnet_Edit[11]}		${Testdata_Subnet[4]['networkId']}
	Log		${Verify_return}

OVF511_API_SUBNET_TC_46 - EDIT GATEWAY DATA OF A SUBNET WITHOUT DOMAIN
	${uri} =	Get Subnet URI	${Testdata_Subnet[35]['networkId']}
	${resp} =	Fusion Api Edit Ipv4 Subnet		${Testdata_Subnet_Edit[12]}	uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${Verify_return}=	Verify Subnet Data 		${Testdata_Subnet_Edit[12]}		${Testdata_Subnet[35]['networkId']}
	Log		${Verify_return}

OVF511_API_SUBNET_TC_47 - EDIT DOMAIN DATA OF A SUBNET WITHOUT GATEWAY
	${uri} =	Get Subnet URI	${Testdata_Subnet[3]['networkId']}
	${resp} =	Fusion Api Edit Ipv4 Subnet		${Testdata_Subnet_Edit[13]}	uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${Verify_return}=	Verify Subnet Data 		${Testdata_Subnet_Edit[13]}		${Testdata_Subnet[3]['networkId']}
	Log		${Verify_return}

OVF511_API_SUBNET_TC_48 - EDIT GATEWAY DATA WITH INVALID DATA
	${uri} =	Get Subnet URI	${Testdata_Subnet[4]['networkId']}
	${resp} =	Fusion Api Edit Ipv4 Subnet		${Testdata_Subnet_Edit[14]}	uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=GATEWAY_IPV4_FORMAT
	Validate Response	${resp}	${valDict}
	${Verify_return}=	Verify Subnet Data 		${Testdata_Subnet_Edit[11]}		${Testdata_Subnet[4]['networkId']}
	Log		${Verify_return}

OVF511_API_SUBNET_TC_49 - EDIT DOMAIN DATA WITH AN INVALID DATA
	${uri} =	Get Subnet URI	${Testdata_Subnet[4]['networkId']}
	${resp} =	Fusion Api Edit Ipv4 Subnet		${Testdata_Subnet_Edit[15]}	uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=INVALID_DOMAIN_NAME
	Validate Response	${resp}	${valDict}
	${Verify_return}=	Verify Subnet Data 		${Testdata_Subnet_Edit[11]}		${Testdata_Subnet[4]['networkId']}
	Log		${Verify_return}

REMOVE ALL SUBNET
	${resp}= 	Remove All Subnets

#-----------------SUBNET STOPS------------------	

#---------------------RANGE STARTS-----------
OVF511_API_RANGE_TC_1 - CREATE RANGE WITH ALL DATA FOR A VALID SUBNET
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_Subnet[0]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${range}=   Build IPV4 Range Body    	${Testdata_Range[0]}      ${Testdata_Subnet[0]['networkId']}
	${resp}=	Fusion Api Create Ipv4 Range	${range}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	Verify Range Data	${Testdata_Range[0]}	${Testdata_Subnet[0]['networkId']}

OVF511_API_RANGE_TC_2 - CREATE RANGE FOR A SUBNET WHICH DO NOT HAVE A DOMAIN NAME
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_Subnet[4]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${range}=   Build IPV4 Range Body    	${Testdata_Range[2]}      ${Testdata_Subnet[4]['networkId']}
	${resp}=	Fusion Api Create Ipv4 Range	${range}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	Verify Range Data	${Testdata_Range[2]}	${Testdata_Subnet[4]['networkId']}

OVF511_API_RANGE_TC_3 - CREATE RANGE FOR A SUBNET WHICH DO NOT HAVE A GATEWAY IP
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_Subnet[3]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${range}=   Build IPV4 Range Body    	${Testdata_Range[3]}      ${Testdata_Subnet[3]['networkId']}
	${resp}=	Fusion Api Create Ipv4 Range	${range}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	Verify Range Data	${Testdata_Range[3]}	${Testdata_Subnet[3]['networkId']}

OVF511_API_RANGE_TC_4 - CREATE RANGE FOR A SUBNET WHICH DO NOT HAVE A GATEWAY IP AND DOMAIN NAME
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_Subnet[1]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${range}=   Build IPV4 Range Body    	${Testdata_Range[1]}      ${Testdata_Subnet[1]['networkId']}
	${resp}=	Fusion Api Create Ipv4 Range	${range}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	Verify Range Data	${Testdata_Range[1]}	${Testdata_Subnet[1]['networkId']}

OVF511_API_RANGE_TC_5 - DELETE DOMAIN NAME FROM A SUBNET ALREADY HAVING A RANGE
	${uri} =	Get Subnet URI	${Testdata_Subnet[0]['networkId']}
	${resp} =	Fusion Api Edit Ipv4 Subnet		${Testdata_SubnetEdit_For_Range[0]}		uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${Verify_return}=	Verify Subnet Data 		${Testdata_SubnetEdit_For_Range[0]}		${Testdata_Subnet[0]['networkId']}
	Log		${Verify_return}

OVF511_API_RANGE_TC_6 - DELETE GATEWAY IP FROM A SUBNET ALREADY HAVING A RANGE
	${uri} =	Get Subnet URI	${Testdata_Subnet[0]['networkId']}
	${resp} =	Fusion Api Edit Ipv4 Subnet		${Testdata_SubnetEdit_For_Range[1]}		uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${Verify_return}=	Verify Subnet Data 		${Testdata_SubnetEdit_For_Range[1]}		${Testdata_Subnet[0]['networkId']}

OVF511_API_RANGE_TC_36 - ADD GATEWAY IP AND DOMAN NAME FROM A SUBNET ALREADY HAVING A RANGE
	${uri} =	Get Subnet URI	${Testdata_Subnet[0]['networkId']}
	${resp} =	Fusion Api Edit Ipv4 Subnet		${Testdata_SubnetEdit_For_Range[2]}		uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${Verify_return}=	Verify Subnet Data 		${Testdata_SubnetEdit_For_Range[2]}		${Testdata_Subnet[0]['networkId']}

OVF511_API_RANGE_TC_7 - DELETE GATEWAY IP AND DOMAN NAME FROM A SUBNET ALREADY HAVING A RANGE
	${uri} =	Get Subnet URI	${Testdata_Subnet[0]['networkId']}
	${resp} =	Fusion Api Edit Ipv4 Subnet		${Testdata_SubnetEdit_For_Range[1]}		uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${Verify_return}=	Verify Subnet Data 		${Testdata_SubnetEdit_For_Range[1]}		${Testdata_Subnet[0]['networkId']}

	
OVF511_API_RANGE_TC_8 - DISABLE A RANGE AND CREATE ANOTHER DUPLICATE RANGE
	${uri} =	Get Subnet URI	${Testdata_Subnet[1]['networkId']}
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp} = 	Fusion Api Edit Ipv4 Range	 	body=${range_disable[0]}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${200}
	${range}=   Build IPV4 Range Body    	${Testdata_Range[1]}      ${Testdata_Subnet[1]['networkId']}
	${resp}=	Fusion Api Create Ipv4 Range	${range}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=OVERLAPPING_RANGE_NAME
	Validate Response	${resp}	${valDict}
	Verify Range Data	${Testdata_Range[1]}	${Testdata_Subnet[1]['networkId']}

OVF511_API_RANGE_TC_15 - CREATE RANGE WITH DUPLICATE START AND LAST IP ADDRESS FOR A DISABLE RANGE
	${range}=   Build IPV4 Range Body    	${Testdata_Range[4]}      ${Testdata_Subnet[1]['networkId']}
	${resp}=	Fusion Api Create Ipv4 Range	${range}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=OVERLAPPING_POOLRANGE
	Validate Response	${resp}	${valDict}
	Verify Range Data	${Testdata_Range[1]}	${Testdata_Subnet[1]['networkId']}
	
OVF511_API_RANGE_TC_9 - EDIT A DISABLE RANGE
	${range}=   Build IPV4 Range Body    	${Testdata_Range[5]}      ${Testdata_Subnet[1]['networkId']} 	
	${uri} =	Get Subnet URI	${Testdata_Subnet[1]['networkId']}
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp} = 	Fusion Api Edit Ipv4 Range	body=${range}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	Verify Range Data	${Testdata_Range[5]}	${Testdata_Subnet[1]['networkId']}
	
OVF511_API_RANGE_TC_10 - DISABLE A RANGE AND CREATE ANOTHER RANGE WITH SAME NAME
	${range}=   Build IPV4 Range Body    	${Testdata_Range[6]}      ${Testdata_Subnet[1]['networkId']}
	${resp}=	Fusion Api Create Ipv4 Range	${range}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=OVERLAPPING_RANGE_NAME
	...									message=Range name RangeForSubnet21_1_Edited already exists.
	Validate Response	${resp}	${valDict}
	Verify Range Data	${Testdata_Range[5]}	${Testdata_Subnet[1]['networkId']}

ENABLE THE RANGE
	${uri} =	Get Subnet URI	${Testdata_Subnet[1]['networkId']}
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp} = 		Fusion Api Edit Ipv4 Range	 	body=${range_enable[0]}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${200}

OVF511_API_RANGE_TC_11 - CREATE RANGE START ADDRESS -127.0.0.1
	${range}=   Build IPV4 Range Body    	${Testdata_Range[7]}      ${Testdata_Subnet[1]['networkId']}
	${resp}=	Fusion Api Create Ipv4 Range	${range}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=INVALID_POOLRANGE
	Validate Response	${resp}	${valDict}
	Verify Range Data	${Testdata_Range[5]}	${Testdata_Subnet[1]['networkId']}

OVF511_API_RANGE_TC_12 - CREATE RANGE LAST IP ADDRESS- 127.0.0.1
	${range}=   Build IPV4 Range Body    	${Testdata_Range[8]}      ${Testdata_Subnet[1]['networkId']}
	${resp}=	Fusion Api Create Ipv4 Range	${range}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=INVALID_IP_RANGE
	Validate Response	${resp}	${valDict}
	Verify Range Data	${Testdata_Range[5]}	${Testdata_Subnet[1]['networkId']}

OVF511_API_RANGE_TC_13 - RANGE START ADDRESS-224.0.0.0
	${range}=   Build IPV4 Range Body    	${Testdata_Range[9]}      ${Testdata_Subnet[1]['networkId']}
	${resp}=	Fusion Api Create Ipv4 Range	${range}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=INVALID_POOLRANGE
	Validate Response	${resp}	${valDict}
	Verify Range Data	${Testdata_Range[5]}	${Testdata_Subnet[1]['networkId']}

OVF511_API_RANGE_TC_14 - RANGE LAST IP 224.0.0.0
	${range}=   Build IPV4 Range Body    	${Testdata_Range[10]}      ${Testdata_Subnet[1]['networkId']}
	${resp}=	Fusion Api Create Ipv4 Range	${range}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=INVALID_IP_RANGE
	Validate Response	${resp}	${valDict}
	Verify Range Data	${Testdata_Range[5]}	${Testdata_Subnet[1]['networkId']}

OVF511_API_RANGE_TC_16 - CREATE DUPLICATE RANGE WITH SAME NAME BUT DIFFERENT IP ADDRESS
	${range}=   Build IPV4 Range Body    	${Testdata_Range[6]}      ${Testdata_Subnet[1]['networkId']}
	${resp}=	Fusion Api Create Ipv4 Range	${range}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=OVERLAPPING_RANGE_NAME
	...									message=Range name RangeForSubnet21_1_Edited already exists.
	Validate Response	${resp}	${valDict}
	Verify Range Data	${Testdata_Range[5]}	${Testdata_Subnet[1]['networkId']}

OVF511_API_RANGE_TC_20 - CREATE RANGE WITH SAME FIRST AND LAST IP FOR A ENABLE RANGE
	${range}=   Build IPV4 Range Body    	${Testdata_Range[11]}      ${Testdata_Subnet[1]['networkId']}
	${resp}=	Fusion Api Create Ipv4 Range	${range}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=OVERLAPPING_POOLRANGE
	Validate Response	${resp}	${valDict}
	Verify Range Data	${Testdata_Range[5]}	${Testdata_Subnet[1]['networkId']}
	
OVF511_API_RANGE_TC_18 - DELETION OF DISABLED RANGE
	${uri} =	Get Subnet URI	${Testdata_Subnet[1]['networkId']}
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp} = 		Fusion Api Edit Ipv4 Range	 	body=${range_disable[0]}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${200}
	${resp} = 		Fusion Api Delete Ipv4 Range	 	uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${204}
	Validate Response	${resp}	${valDict}
	
OVF511_API_RANGE_TC_19 - DELETE AN NON_EXISTING RANGE
	${uri} =	Get Subnet URI	${Testdata_Subnet[0]['networkId']}
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp1} = 		Fusion Api Delete Ipv4 Range	 	uri=${rangeuri[0]}
	${resp} = 		Fusion Api Delete Ipv4 Range	 	uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	errorCode=RESOURCE_NOT_FOUND
	Validate Response	${resp}	${valDict}

OVF511_API_RANGE_TC_23 - DELETE RANGE AND REASSIGN THE IP TO NEW RANGE
	${range}=   Build IPV4 Range Body    	${Testdata_Range[0]}      ${Testdata_Subnet[0]['networkId']}
	${resp}=	Fusion Api Create Ipv4 Range	${range}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	Verify Range Data	${Testdata_Range[0]}	${Testdata_Subnet[0]['networkId']}

OVF511_API_RANGE_TC_37 - DELETE A SUBNET HAVING RANGE
	${uri} =	Get Subnet URI		${Testdata_Subnet[3]['networkId']}
	${resp} =       Fusion Api Delete Ipv4 Range   		 uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${204}
	Validate Response	${resp}	${valDict}

OVF511_API_RANGE_TC_21 - CREATE MULTIPLE RANGE RANGES
	${range}=   Build IPV4 Range Body    	${Testdata_Range[12]}      ${Testdata_Subnet[4]['networkId']}
	${resp}=	Fusion Api Create Ipv4 Range	${range}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}

OVF511_API_RANGE_TC_24 - DELETE A RANGE AND ASSIGN IP TO EXISTING RANGE
	${uri} =	Get Subnet URI		${Testdata_Subnet[4]['networkId']}
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp} = 		Fusion Api Delete Ipv4 Range	 	uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${204}
	Validate Response	${resp}	${valDict}
	${range}=   Build IPV4 Range Body    	${Testdata_Range[13]}      ${Testdata_Subnet[4]['networkId']} 	
	${uri} =	Get Subnet URI	${Testdata_Subnet[4]['networkId']}
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp} = 			Fusion Api Edit Ipv4 Range	body=${range}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	Verify Range Data	${Testdata_Range[13]}	${Testdata_Subnet[4]['networkId']}

OVF511_API_RANGE_TC_25 - CREATE RANGE OUTSIDE THE SCOPE OF SUBNET
	${range}=   Build IPV4 Range Body    	${Testdata_Range[14]}      ${Testdata_Subnet[1]['networkId']}
	${resp}=	Fusion Api Create Ipv4 Range	${range}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=INVALID_IP_RANGE
	Validate Response	${resp}	${valDict}

OVF511_API_RANGE_TC_26 - OVERLAPPING 2ND RANGE
	${range}=   Build IPV4 Range Body    	${Testdata_Range[15]}      ${Testdata_Subnet[4]['networkId']}
	${resp}=	Fusion Api Create Ipv4 Range	${range}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=OVERLAPPING_POOLRANGE
	Validate Response	${resp}	${valDict}
	Verify Range Data	${Testdata_Range[13]}	${Testdata_Subnet[4]['networkId']}
	Validate Response	${resp}	${valDict}
	
OVF511_API_RANGE_TC_27 - CREATE RANGE WITH EMPTY URI
	${resp}=	Fusion Api Create Ipv4 Range	${Testdata_Range[16]}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=INVALID_SUBNET_URI
	Validate Response	${resp}	${valDict}

OVF511_API_RANGE_TC_29 - CREATE RANGE EMPTY ADDRESSES
	${range}=   Build IPV4 Range Body    	${Testdata_Range[17]}      ${Testdata_Subnet[4]['networkId']}
	${resp}=	Fusion Api Create Ipv4 Range	${range}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=ADDRESS_FORMAT_IPV4
	Validate Response	${resp}	${valDict}

OVF511_API_RANGE_TC_30 - CREATE RANGE INVALID START AND END IP ADDRESS
	${range}=   Build IPV4 Range Body    	${Testdata_Range[18]}      ${Testdata_Subnet[4]['networkId']}
	${resp}=	Fusion Api Create Ipv4 Range	${range}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=ADDRESS_FORMAT_IPV4
	Validate Response	${resp}	${valDict}
	
OVF511_API_RANGE_TC_31 - CREATE RANGE START ID SAME AS SUBNET ID
	${range}=   Build IPV4 Range Body    	${Testdata_Range[19]}      ${Testdata_Subnet[4]['networkId']}
	${resp}=	Fusion Api Create Ipv4 Range	${range}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=INVALID_IP_RANGE
	Validate Response	${resp}	${valDict}

OVF511_API_RANGE_TC_32 - CREATE RANGE LAST IP GREATER THAN THE FIRST IP
	${range}=   Build IPV4 Range Body    	${Testdata_Range[20]}      ${Testdata_Subnet[4]['networkId']}
	${resp}=	Fusion Api Create Ipv4 Range	${range}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=INVALID_POOLRANGE
	Validate Response	${resp}	${valDict}

OVF511_API_RANGE_TC_33 - RANGE WITH SAME START AND END IP
	${range}=   Build IPV4 Range Body    	${Testdata_Range[23]}      ${Testdata_Subnet[4]['networkId']}
	${resp}=	Fusion Api Create Ipv4 Range	${range}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}

OVF511_API_RANGE_TC_34 - CREATE RANGE NAME WITH 33 CHARACTERS
	${range}=   Build IPV4 Range Body    	${Testdata_Range[21]}      ${Testdata_Subnet[4]['networkId']}
	${resp}=	Fusion Api Create Ipv4 Range	${range}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=INVALID_RANGE_NAME
	Validate Response	${resp}	${valDict}
	
OVF511_API_RANGE_TC_35 - CREATE RANGE NAME WITH 32 CHARACTERS
	${range}=   Build IPV4 Range Body    	${Testdata_Range[22]}      ${Testdata_Subnet[4]['networkId']}
	${resp}=	Fusion Api Create Ipv4 Range	${range}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}

OVF511_API_RANGE_TC_28 - EDIT SUBNET HAVING RANGE ADD DNS, CHANGE NAME AND SUBNET MASK
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_SubnetEdit_For_Range[3]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${range}=   Build IPV4 Range Body    	${Testdata_Range[24]}	${Testdata_SubnetEdit_For_Range[3]['networkId']}
	${resp}=	Fusion Api Create Ipv4 Range	${range}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	Verify Range Data	${Testdata_Range[24]}	${Testdata_SubnetEdit_For_Range[3]['networkId']}
	${uri} =	Get Subnet URI	${Testdata_SubnetEdit_For_Range[3]['networkId']}
	${resp} =	Fusion Api Edit Ipv4 Subnet		${Testdata_SubnetEdit_For_Range[4]}		uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${Verify_return}=	Verify Subnet Data 		${Testdata_SubnetEdit_For_Range[4]}		${Testdata_SubnetEdit_For_Range[3]['networkId']}


REMOVE ALL SUBNET
	${resp}= 	Remove All Subnets
	
#---------------------RANGE STOPS-----------

#------------------NETWORK STARTS--------------


REMOVE ALL NETWORKS
	${resp}=	Remove All Ethernet Networks
	${resp1}=	Remove All FC Networks
	${resp2}=	Remove All FCoE Networks

REMOVE ALL SUBNET
	${resp}= 	Remove All Subnets


PRE-CONDITION CREATE SUBNETS AND RANGES FOR NETWORKS
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_Subnet_For_Network[0]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_Subnet_For_Network[1]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_Subnet_For_Network[2]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_Subnet_For_Network[3]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_Subnet_For_Network[4]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${range}=   Build IPV4 Range Body    	${Testdata_Range_For_Network[0]}      ${Testdata_Subnet_For_Network[4]['networkId']}
	${resp}=	Fusion Api Create Ipv4 Range	${range}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	Verify Range Data	${Testdata_Range_For_Network[0]}	${Testdata_Subnet_For_Network[4]['networkId']}
	${range}=   Build IPV4 Range Body    	${Testdata_Range_For_Network[1]}      ${Testdata_Subnet_For_Network[3]['networkId']}
	${resp}=	Fusion Api Create Ipv4 Range	${range}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	Verify Range Data	${Testdata_Range_For_Network[1]}	${Testdata_Subnet_For_Network[3]['networkId']}


OVF511_API_NETWORK_TC_01 - CREATE NETWORK AND ASSOCIATE A SUBNET
	${network_body}=	Build Network Body For Create	${Testdata_Network[0]}	${Testdata_Subnet_For_Network[0]['networkId']}
	${resp} = 	Fusion Api Create Ethernet Network		body=${network_body}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}

OVF511_API_NETWORK_TC_02 - CREATE NETWORK AND ASSOCIATE A SUBNET FROM MULTIPLE SUBNETS
	${network_body}=	Build Network Body For Create	${Testdata_Network[1]}	${Testdata_Subnet_For_Network[1]['networkId']}
	${resp} = 	Fusion Api Create Ethernet Network		body=${network_body}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}
	
OVF511_API_NETWORK_TC_03 - EDIT THE SUBNET ASSOCIATED WITH THE NETWORK
	${network_body}=	Build Network Body For Edit		${Testdata_Network[1]}	${Testdata_Subnet_For_Network[2]['networkId']}
	${neturi}=	Get Ethernet URI	${Testdata_Network[1]['name']}
	${resp} = 	Fusion Api Edit Ethernet Network		body=${network_body}	uri=${neturi}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}

OVF511_API_NETWORK_TC_04 - CREATE NETWORK AND ASSOCIATE A SUBNET WHICH HAVE A RANGE
	${network_body}=	Build Network Body For Create	${Testdata_Network[3]}	${Testdata_Subnet_For_Network[3]['networkId']}
	${resp} = 	Fusion Api Create Ethernet Network		body=${network_body}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}

OVF511_API_NETWORK_TC_06 - EDIT THE SUBNET ASSOCIATED WITH THE NETWORK AND ADD A DIFFERENT SUBNET WHICH HAS RANGE
  	${network_body}=	Build Network Body For Edit		${Testdata_Network[3]}	${Testdata_Subnet_For_Network[4]['networkId']}
	${neturi}=	Get Ethernet URI	${Testdata_Network[3]['name']}
	${resp} = 	Fusion Api Edit Ethernet Network		body=${network_body}	uri=${neturi}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}
    
OVF511_API_NETWORK_TC_07 - EDIT THE SUBNET[NO RANGE] ASSOCIATED WITH THE NETWORK AND ADD A DIFFERENT SUBNET WHICH HAS RANGE.
  	${network_body}=	Build Network Body For Edit		${Testdata_Network[0]}	${Testdata_Subnet_For_Network[3]['networkId']}
	${neturi}=	Get Ethernet URI	${Testdata_Network[0]['name']}
	${resp} = 	Fusion Api Edit Ethernet Network		body=${network_body}	uri=${neturi}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}

OVF511_API_NETWORK_TC_08 - EDIT THE SUBNET[WITH RANGE] ASSOCIATED WITH THE NETWORK AND ADD A DIFFERENT SUBNET[NO RANGE.
  	${network_body}=	Build Network Body For Edit		${Testdata_Network[0]}	${Testdata_Subnet_For_Network[0]['networkId']}
	${neturi}=	Get Ethernet URI	${Testdata_Network[0]['name']}
	${resp} = 	Fusion Api Edit Ethernet Network		body=${network_body}	uri=${neturi}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}
   
OVF511_API_NETWORK_TC_09 - EDIT NETWORK AND DELETE THE ASSOCIATED SUBNET
	${network_body}=	Build Network Body To Disassociate		${Testdata_Network[1]}
	${neturi}=	Get Ethernet URI	${Testdata_Network[1]['name']}
	${resp} = 	Fusion Api Edit Ethernet Network		body=${network_body}	uri=${neturi}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}

OVF511_API_NETWORK_TC_11 - CREATE A NETWORK WITH NO NAME
	${resp} = 	Fusion Api Create Ethernet Network		body=${Testdata_Network[5]}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=CRM_MISSING_NAME
	...									message=name is required.
	Validate Response	${resp}	${valDict}

OVF511_API_NETWORK_TC_12 - CREATE BULK NETWORK WITH NO ASSOCIATION
	${resp} = 	Fusion Api Create Ethernet Bulk Networks		${bulk_networks_dict}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict} 
  
OVF511_API_NETWORK_TC_13 - DELETE NETWORK HAVING SUBNET ASSOCIATED
	${neturi}=	Get Ethernet URI	${Testdata_Network[3]['name']}
	${resp}=	Fusion Api Delete Ethernet Network 		uri=${neturi}
	${task} =    Wait For Task     ${resp}     120s    
	${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}  
    
OVF511_API_NETWORK_TC_14 - DELETE NETWORK WITH NO SUBNET ASSOCIATED
	${network_body}=	Build Network Body To Disassociate		${Testdata_Network[1]}
	${neturi}=	Get Ethernet URI	${Testdata_Network[1]['name']}
	${resp} = 	Fusion Api Edit Ethernet Network		body=${network_body}	uri=${neturi}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}
    ${neturi}=	Get Ethernet URI	${Testdata_Network[1]['name']}
	${resp}=	Fusion Api Delete Ethernet Network 		uri=${neturi}
	${task} =    Wait For Task     ${resp}     120s    
	${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}
 
OVF511_API_NETWORK_TC_15 - CREATE UNTAGGED NETWORK AND ASSOCIATE WITH SUBNET
	${network_body}=	Build Network Body For Create	${Testdata_Network[6]}	${Testdata_Subnet_For_Network[4]['networkId']}
	${resp} = 	Fusion Api Create Ethernet Network		body=${network_body}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}
    ${valDict} = 	Create Dictionary	status_code=${202}
	Validate Response	${resp}	${valDict}

OVF511_API_NETWORK_TC_16 - CREATE A NETWORK WITH EMPTY SUBNET URI
	${resp} = 	Fusion Api Create Ethernet Network		body=${Testdata_Network[7]}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=CRM_BADLY_FORMED_URI
	Validate Response	${resp}	${valDict}

OVF511_API_NETWORK_TC_19 - EDIT SUBNET CHANGE GATEWAY OF ASSOCIATED SUBNET
	${uri} =	Get Subnet URI	${Testdata_Subnet_For_Network[1]['networkId']}
	${resp} =	Fusion Api Edit Ipv4 Subnet		${Testdata_Subnet_For_Network[5]}	uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}

OVF511_API_NETWORK_TC_20 - DELETE A SUBNET WHICH IS ASSOCIATED WITH A NETWORK
	${uri} =	Get Subnet URI		${Testdata_Subnet_For_Network[0]['networkId']}
	${resp} =       Fusion Api Delete Ipv4 Range   		 uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=SUBNET_DELETE_NOT_ALLOWED
	Validate Response	${resp}	${valDict}

OVF511_API_NETWORK_TC_21 - ADD RANGE TO A SUBNET ASSOCIATED WITH A NETWORK
	${range}=   Build IPV4 Range Body    	${Testdata_Range_For_Network[2]}      ${Testdata_Subnet_For_Network[1]['networkId']}
	${resp}=	Fusion Api Create Ipv4 Range	${range}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	Verify Range Data	${Testdata_Range_For_Network[2]}	${Testdata_Subnet_For_Network[1]['networkId']}

   
OVF511_API_NETWORK_TC_22 - ASSOCIATE AN ALREADY ASSOCIATED SUBNET WHILE NETWORK CREATION
	${network_body}=	Build Network Body For Create	${Testdata_Network[8]}	${Testdata_Subnet_For_Network[0]['networkId']}
	${resp} = 	Fusion Api Create Ethernet Network		body=${network_body}
	${valDict} = 	Create Dictionary	status_code=${501}
	...									errorCode=CRM_SUBNET_ALREADY_ASSOCIATED
	Validate Response	${resp}	${valDict}

OVF511_API_NETWORK_TC_23 - CREATE A NETWORK AND ASSOCIATE A SUBNET WHICH HAVE DISABLED RANGE.
	${uri} =	Get Subnet URI	${Testdata_Subnet_For_Network[3]['networkId']}
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp} = 		Fusion Api Edit Ipv4 Range	 	body=${range_disable[0]}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${200}
	${network_body}=	Build Network Body For Create	${Testdata_Network[9]}	${Testdata_Subnet_For_Network[3]['networkId']}
	${resp} = 	Fusion Api Create Ethernet Network		body=${network_body}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}
    ${valDict} = 	Create Dictionary	status_code=${202}
	Validate Response	${resp}	${valDict}

OVF511_API_NETWORK_TC_17 - CREATE A FIBRE CHANNEL NETWORK
	${resp} = 	Fusion Api Create Fc Network		body=${Testdata_Network[10]}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}

OVF511_API_NETWORK_TC_18 - CREATE A FCOE NETWORK
	${resp} = 	Fusion Api Create Fcoe Network		body=${Testdata_Network[11]}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}

OVF511_API_NETWORK_TC_24 - CREATE A NETWORK WITH TUNNEL
	${resp} = 	Fusion Api Create Ethernet Network		body=${Testdata_Network[12]}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}

REMOVE ALL NETWORKS
	${resp}=	Remove All Ethernet Networks
	${resp1}=	Remove All FC Networks
	${resp2}=	Remove All FCoE Networks

REMOVE ALL SUBNET
	${resp}= 	Remove All Subnets
 
#OVF511_API_NETWORK_TC_10 - EDIT THE NETWORK NAME AFTER ASSOCIATING WITH A SUBNET
#  	${network_body1}=	Build Network Body For Create	${Testdata_Network[4]}	${Testdata_Subnet_For_Network[0]['networkId']}
#  	${network_body}=	Build Network Body For Edit		${network_body1}	${Testdata_Subnet_For_Network[0]['networkId']}
#	${neturi}=	Get Ethernet URI	${Testdata_Network[0]['name']}
#	${resp} = 	Fusion Api Edit Ethernet Network		body=${network_body}	uri=${neturi}
#	${task} =    Wait For Task     ${resp}     120s    
#   ${valDict} =     Create Dictionary    status_code=${200}
#    ...                                 taskState=Completed
#    Validate Response    ${task}    ${valDict}
	
 
#------------------NETWORK ENDS--------------

#-----------------NETWORKSET STARTS------------------
REMOVE ALL NETWORKS
	${resp}=	Remove All Ethernet Networks
	${resp1}=	Remove All FC Networks
	${resp2}=	Remove All FCoE Networks

REMOVE ALL SUBNET
	${resp}= 	Remove All Subnets

PRECONDITION - CREATE SUBNET,RANGE AND NETWORK FOR VALIDATING NETWORKSET
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_Subnet_For_Network[4]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${range}=   Build IPV4 Range Body    	${Testdata_Range_For_Network[0]}      ${Testdata_Subnet_For_Network[4]['networkId']}
	${resp}=	Fusion Api Create Ipv4 Range	${range}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_Subnet_For_Network[3]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${network_body}=	Build Network Body For Create	${Testdata_Network[15]}	${Testdata_Subnet_For_Network[4]['networkId']}
	${resp} = 	Fusion Api Create Ethernet Network		body=${network_body}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}
	${resp} = 	Fusion Api Create Ethernet Network		body=${Testdata_Network[14]}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}

OVF511_API_NETWORKSET_TC_01 - CREATE NETWORK SET HAVING ASSOCIATED AND NOT ASSOCIATED NETWORKS
	${network_body} = 		Add Network Sets from NetworkSet Name	${Testdata_NetworkSet}		${Testdata_NetworkSet[0]['name']}	
	${resp} = 	Fusion Api Create Network Set		body=${network_body}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}

OVF511_API_NETWORKSET_TC_02 - DELETE THE CREATED A NETWORKSET NETSET15 HAVING ASSOCIATED NETWORK
	${resp} = 	Fusion Api Delete Network Set		name=${Testdata_NetworkSet[0]['name']}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}

OVF511_API_NETWORKSET_TC_03 - ADD RANGE TO SUBNET ALREADY IN NETWORK SET
	${network_body}=	Build Network Body For Create	${Testdata_Network[16]}	${Testdata_Subnet_For_Network[3]['networkId']}
	${resp} = 	Fusion Api Create Ethernet Network		body=${network_body}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}
	${network_body} = 		Add Network Sets from NetworkSet Name	${Testdata_NetworkSet}		${Testdata_NetworkSet[1]['name']}	
	${resp} = 	Fusion Api Create Network Set		body=${network_body}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}
	${range}=   Build IPV4 Range Body    	${Testdata_Range_For_Network[1]}      ${Testdata_Subnet_For_Network[3]['networkId']}
	${resp}=	Fusion Api Create Ipv4 Range	${range}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	
OVF511_API_NETWORKSET_TC_06 - DELETE A RANGE WHICH IS ASSOCIATED WITH A NETWORKSET
	${uri} =	Get Subnet URI		${Testdata_Subnet_For_Network[3]['networkId']}
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp} = 		Fusion Api Delete Ipv4 Range	 	uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${204}
	Validate Response	${resp}	${valDict}
	
OVF511_API_NETWORKSET_TC_07 - EDIT THE ASSOCIATED SUBNET IN A NETWORK WHICH IS ADDED IN A NETWORK SET.
	${uri} =	Get Subnet URI	${Testdata_Subnet_For_Network[4]['networkId']}
	${resp} =	Fusion Api Edit Ipv4 Subnet		body=${Testdata_Subnet_For_Network[7]} 	uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}

OVF511_API_NETWORKSET_TC_04 - DELETE NETWORKSET HAVING ASSOCIATED SUBNET
	${resp} = 	Fusion Api Delete Network Set		name=${Testdata_NetworkSet[1]['name']}
	${task} =    Wait For Task     ${resp}     120s    
   	${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}
    
OVF511_API_NETWORKSET_TC_05 - DELETE NETWORKSET HAVING NO ASSOCIATED SUBNET
	${network_body} = 		Add Network Sets from NetworkSet Name	${Testdata_NetworkSet}		${Testdata_NetworkSet[2]['name']}	
	${resp} = 	Fusion Api Create Network Set		body=${network_body}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}
    ${resp} = 	Fusion Api Delete Network Set		name=${Testdata_NetworkSet[2]['name']}
	${task} =    Wait For Task     ${resp}     120s    
   	${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}

REMOVE ALL NETWORKS
	${resp}=	Remove All Ethernet Networks
	${resp1}=	Remove All FC Networks
	${resp2}=	Remove All FCoE Networks

REMOVE ALL SUBNET
	${resp}= 	Remove All Subnets


	
#-----------------NETWORKSET STOP------------------

CREATE VLSM SUBNETS-vlsm1,vlsm2,vlsm3,vlsm4
	#CREATE SUBNET-vlsm1
	${resp} = 	Fusion Api Create Ipv4 Subnet	 body=${Testdata_Vlsm[0]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	#CREATE SUBNET-vlsm2
	${resp} = 	Fusion Api Create Ipv4 Subnet	 body=${Testdata_Vlsm[1]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	#CREATE SUBNET-vlsm3
	${resp} = 	Fusion Api Create Ipv4 Subnet	 body=${Testdata_Vlsm[2]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	#CREATE SUBNET-vlsm4
	${resp} = 	Fusion Api Create Ipv4 Subnet	 body=${Testdata_Vlsm[3]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	#CREATE RANGE-RangeVlsm1
	${range}=   Build IPV4 Range Body    	${Testdata_Vlsm[4]}      ${Testdata_Vlsm[0]['networkId']}
	${resp}=	Fusion Api Create Ipv4 Range	${range}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	#CREATE RANGE-RangeVlsm2
	${range}=   Build IPV4 Range Body    	${Testdata_Vlsm[5]}      ${Testdata_Vlsm[1]['networkId']}
	${resp}=	Fusion Api Create Ipv4 Range	${range}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	#CREATE RANGE-RangeVlsm3
	${range}=   Build IPV4 Range Body    	${Testdata_Vlsm[6]}      ${Testdata_Vlsm[2]['networkId']}
	${resp}=	Fusion Api Create Ipv4 Range	${range}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	#CREATE RANGE-RangeVlsm4
	${range}=   Build IPV4 Range Body    	${Testdata_Vlsm[7]}      ${Testdata_Vlsm[3]['networkId']}
	${resp}=	Fusion Api Create Ipv4 Range	${range}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	

REMOVE ALL SUBNET
	${resp}= 	Remove All Subnets

#----------------USERS STARTS--------------

REMOVE ALL NETWORKS
	${resp}=	Remove All Ethernet Networks
	${resp1}=	Remove All FC Networks
	${resp2}=	Remove All FCoE Networks

REMOVE ALL SUBNET
	${resp}= 	Remove All Subnets

PRECONDITION - CREATE SUBNET,RANGE AND NETWORK FOR VALIDATING USERS VIEW PRIVILEGE
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_Subnet_For_Network[4]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${range}=   Build IPV4 Range Body    	${Testdata_Range_For_Network[0]}      ${Testdata_Subnet_For_Network[4]['networkId']}
	${resp}=	Fusion Api Create Ipv4 Range	${range}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}

OVF511_API_USERS_TC_1 - CREATE ALL THE USERS
	${users} =	Get Variable Value	${users}
	Run Keyword If	${users} is not ${null}    Add Users from variable				${users} 

#----------------------------SERVER USER START------------------	

OVF511_API_USERS_TC_2 - LOGIN SERVER USER 
	${resp}= 	Fusion Api Login Appliance 		${APPLIANCE_IP}		${server_admin}  

OVF511_API_USERS_TC_3 - VALIDATE SERVER USER CANNOT ADD
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_Subnet_For_Network[6]}
	${valDict} = 	Create Dictionary	status_code=${401}
	...									errorCode=AUTHORIZATION
	Validate Response	${resp}	${valDict}

OVF511_API_USERS_TC_4 - VALIDATE SERVER USER CANNOT DELETE
	${uri} =	Get Subnet URI		${Testdata_Subnet_For_Network[4]['networkId']}
	${resp} =       Fusion Api Delete Ipv4 Subnet    	uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${401}
	...									errorCode=AUTHORIZATION
	Validate Response	${resp}	${valDict}

OVF511_API_USERS_TC_5 - EDIT SUBNET FOR SERVER USER
	${uri} =	Get Subnet URI	${Testdata_Subnet_For_Network[4]['networkId']}
	${resp} =	Fusion Api Edit Ipv4 Subnet		body=${Testdata_Subnet_For_Network[7]} 	uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}

OVF511_API_USERS_TC_6 - VALIDATE SERVER USER CAN VIEW
	${uri} =	Get Subnet URI	${Testdata_Subnet_For_Network[7]['networkId']}
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${valDict} = 	Create Dictionary	networkId=104.104.104.0
	Validate Response	${resp}	${valDict}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp}=	Fusion Api Get Ipv4 Range 	uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary		name=RangeForSubnet104_0
	Validate Response	${resp}	${valDict}

#----------------------------SERVER USER STOP------------------

#----------------------------STORAGE USER START------------------	

OVF511_API_USERS_TC_7 - LOGIN STORAGE USER 
	${resp}= 	Fusion Api Login Appliance 		${APPLIANCE_IP}		${storage_admin}  

OVF511_API_USERS_TC_8 - VALIDATE STORAGE USER CANNOT ADD
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_Subnet_For_Network[6]}
	${valDict} = 	Create Dictionary	status_code=${401}
	...									errorCode=AUTHORIZATION
	Validate Response	${resp}	${valDict}

OVF511_API_USERS_TC_9 - VALIDATE STORAGE USER CANNOT DELETE
	${uri} =	Get Subnet URI		${Testdata_Subnet_For_Network[4]['networkId']}
	${resp} =       Fusion Api Delete Ipv4 Subnet    	uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${401}
	...									errorCode=AUTHORIZATION
	Validate Response	${resp}	${valDict}

OVF511_API_USERS_TC_10 - EDIT SUBNET FOR STORAGE USER
	${uri} =	Get Subnet URI	${Testdata_Subnet_For_Network[7]['networkId']}
	${resp} =	Fusion Api Edit Ipv4 Subnet		body=${Testdata_Subnet_For_Network[4]} 	uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${401}
	...									errorCode=AUTHORIZATION
	Validate Response	${resp}	${valDict}

OVF511_API_USERS_TC_11 - VALIDATE STORAGE USER CAN VIEW
	${uri} =	Get Subnet URI	${Testdata_Subnet_For_Network[4]['networkId']}
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${valDict} = 	Create Dictionary	networkId=104.104.104.0
	Validate Response	${resp}	${valDict}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp}=	Fusion Api Get Ipv4 Range 	uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary		name=RangeForSubnet104_0
	Validate Response	${resp}	${valDict}

#----------------------------STORAGE USER STOP------------------

#----------------------------READONLY USER STARTS------------------

OVF511_API_USERS_TC_12 - LOGIN READONLY USER
	${resp}= 	Fusion Api Login Appliance 		${APPLIANCE_IP}		${readonly_admin} 
	
OVF511_API_USERS_TC_13 - VALIDATE READONLY USER CANNOT ADD
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_Subnet_For_Network[6]}
	${valDict} = 	Create Dictionary	status_code=${401}
	...									errorCode=AUTHORIZATION
	Validate Response	${resp}	${valDict}
	
OVF511_API_USERS_TC_14 - VALIDATE READONLY USER CANNOT DELETE
	${uri} =	Get Subnet URI		${Testdata_Subnet_For_Network[4]['networkId']}
	${resp} =       Fusion Api Delete Ipv4 Subnet    	uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${401}
	...									errorCode=AUTHORIZATION
	Validate Response	${resp}	${valDict}
	
OVF511_API_USERS_TC_15 - EDIT SUBNET FOR READONLY USER
	${uri} =	Get Subnet URI	${Testdata_Subnet_For_Network[4]['networkId']}
	${resp} =	Fusion Api Edit Ipv4 Subnet		body=${Testdata_Subnet_For_Network[7]} 	uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${401}
	...									errorCode=AUTHORIZATION
	Validate Response	${resp}	${valDict}

OVF511_API_USERS_TC_16 - VALIDATE READONLY USER CAN VIEW
	${uri} =	Get Subnet URI	${Testdata_Subnet_For_Network[4]['networkId']}
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${valDict} = 	Create Dictionary	networkId=104.104.104.0
	...									gateway=104.104.104.4
	Validate Response	${resp}	${valDict}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp}=	Fusion Api Get Ipv4 Range 	uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary		name=RangeForSubnet104_0
	...										startAddress=104.104.104.5
	Validate Response	${resp}	${valDict}

#----------------------------READONLY USER STOP------------------

#----------------------------BACKUP USER START------------------

OVF511_API_USERS_TC_17 - LOGIN BACKUP USER
	${resp}= 	Fusion Api Login Appliance 		${APPLIANCE_IP}		${backup_admin}
	
OVF511_API_USERS_TC_18 - VALIDATE BACKUP USER CANNOT ADD
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_Subnet_For_Network[6]}
	${valDict} = 	Create Dictionary	status_code=${401}
	...									errorCode=AUTHORIZATION
	Validate Response	${resp}	${valDict}
	
OVF511_API_USERS_TC_19 - VALIDATE BACKUP USER CANNOT DELETE
	${uri} =	Get Subnet URI		${Testdata_Subnet_For_Network[4]['networkId']}
	${resp} =       Fusion Api Delete Ipv4 Subnet    	uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${401}
	...									errorCode=AUTHORIZATION
	Validate Response	${resp}	${valDict} 
	
OVF511_API_USERS_TC_20 - EDIT SUBNET FOR BACKUP USER
	${uri} =	Get Subnet URI	${Testdata_Subnet_For_Network[4]['networkId']}
	${resp} =	Fusion Api Edit Ipv4 Subnet		body=${Testdata_Subnet_For_Network[7]} 	uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${401}
	...									errorCode=AUTHORIZATION
	Validate Response	${resp}	${valDict}
	
OVF511_API_USERS_TC_21 - VALIDATE BACKUP USER CAN VIEW
	${uri} =	Get Subnet URI	${Testdata_Subnet_For_Network[4]['networkId']}
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${valDict} = 	Create Dictionary	networkId=104.104.104.0
	...									gateway=104.104.104.4
	Validate Response	${resp}	${valDict}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp}=	Fusion Api Get Ipv4 Range 	uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary		name=RangeForSubnet104_0
	...										startAddress=104.104.104.5
	Validate Response	${resp}	${valDict}

#----------------------------BACKUP USER STOP------------------

#----------------------------NETWORK USER STARTS------------------

OVF511_API_USERS_TC_22 - LOGIN NETWORK USER
	${resp}= 	Fusion Api Login Appliance 		${APPLIANCE_IP}		${network_admin}
	
OVF511_API_USERS_TC_23 - VALIDATE NETWORK USER CAN ADD
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_Subnet_For_Network[6]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${range}=   Build IPV4 Range Body    	${Testdata_Range_For_Network[3]}      ${Testdata_Subnet_For_Network[6]['networkId']}
	${resp}=	Fusion Api Create Ipv4 Range	${range}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}

OVF511_API_USERS_TC_25 - VALIDATE NETWORK USER CAN EDIT SUBNET
	${uri} =	Get Subnet URI	${Testdata_Subnet_For_Network[7]['networkId']}
	${resp} =	Fusion Api Edit Ipv4 Subnet		body=${Testdata_Subnet_For_Network[4]} 	uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}

OVF511_API_USERS_TC_26 - VALIDATE NETWORK USER CAN VIEW
	${uri} =	Get Subnet URI	${Testdata_Subnet_For_Network[4]['networkId']}
	${resp} =   Fusion Api Get Ipv4 Subnet		uri=${uri}
	${valDict} = 	Create Dictionary	networkId=104.104.104.0
	...									gateway=104.104.104.1
	Validate Response	${resp}	${valDict}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp}=	Fusion Api Get Ipv4 Range 	uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary		name=RangeForSubnet104_0
	...										startAddress=104.104.104.5
	Validate Response	${resp}	${valDict}

OVF511_API_USERS_TC_24 - VALIDATE NETWORK USER CAN DELETE
	${uri} =	Get Subnet URI		${Testdata_Subnet_For_Network[4]['networkId']}
	${resp} =       Fusion Api Delete Ipv4 Subnet    	uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${204}
	Validate Response	${resp}	${valDict}

#----------------------------NETWORK USER STOP------------------

REMOVE ALL SUBNET
	${resp}= 	Remove All Subnets

#----------------USERS STOPS--------------

#------------------ALLOCATE STARTS---------------

CREATE PRE CONDITION DATA
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_Allocate[0]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${range}=   Build IPV4 Range Body    	${Testdata_Allocate[1]}      ${Testdata_Allocate[0]['networkId']}
	${resp}=	Fusion Api Create Ipv4 Range	${range}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_Allocate[2]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${range}=   Build IPV4 Range Body    	${Testdata_Allocate[3]}      ${Testdata_Allocate[2]['networkId']}
	${resp}=	Fusion Api Create Ipv4 Range	${range}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${network_body}=	Build Network Body For Create	${Testdata_Allocate[4]}		${Testdata_Allocate[0]['networkId']}
	${resp} = 	Fusion Api Create Ethernet Network		body=${network_body}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}
	${network_body}=	Build Network Body For Create	${Testdata_Allocate[5]}		${Testdata_Allocate[2]['networkId']}
	${resp} = 	Fusion Api Create Ethernet Network		body=${network_body}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}    

OVF511_API_ALLOCATE_TC_01 - ALLOCATE NON EXISTING IP
	${uri} =	Get Subnet URI	${Testdata_Allocate[0]['networkId']}
	${resp} = 	Fusion Api Allocate Ipv4 Subnet		${Testdata_ip_allocate[0]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${400}
	...										errorCode=OUT_OF_RANGE
	Validate Response	${resp}	${valDict}
	
OVF511_API_ALLOCATE_TC_02 - VERIFY IT ALLOCATED THE REQUESTED IP
	${uri} =	Get Subnet URI	${Testdata_Allocate[2]['networkId']}
	${resp} = 	Fusion Api Allocate Ipv4 Subnet		${Testdata_ip_allocate[0]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	Validate Response	${resp}	${valDict}
	${uri} =	Get Subnet URI	${Testdata_Allocate[2]['networkId']}
	${resp} =   Fusion Api Get Ipv4 Subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp}=	Fusion Api Get Ipv4 Range 	uri=${rangeuri[0]}		
	${range_allocated_uri} =     Get From Dictionary     ${resp}    allocatedFragmentUri
	${resp}=	Fusion Api Get Ipv4 Range 	uri=${range_allocated_uri}	
	${members1} =     Get From Dictionary     ${resp}    members
	${member_list} = 	Get From List	${members1}		0
	${val_member} = 	Get From Dictionary		${member_list} 		startAddress
	Should Be Equal As Strings		${val_member}	201.201.201.5

OVF511_API_ALLOCATE_TC_04 - FRAGMENT TYPE OF ALLOCATED IP SHOWS AS -IN USE
	${uri} =	Get Subnet URI	${Testdata_Allocate[2]['networkId']}
	${resp} =   Fusion Api Get Ipv4 Subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp}=	Fusion Api Get Ipv4 Range 	uri=${rangeuri[0]}		
	${range_allocated_uri} =     Get From Dictionary     ${resp}    allocatedFragmentUri
	${resp}=	Fusion Api Get Ipv4 Range 	uri=${range_allocated_uri}	
	${members1} =     Get From Dictionary     ${resp}    members
	${member_list} = 	Get From List	${members1}		0
	${val_member} = 	Get From Dictionary		${member_list} 		fragmentType
	Should Be Equal As Strings		${val_member}	IN_USE

OVF511_API_ALLOCATE_TC_05 - ALLOCATE SET OF IP WHERE 1 IP IS IN USE
	${uri} =	Get Subnet URI	${Testdata_Allocate[2]['networkId']}
	${resp} = 	Fusion Api Allocate Ipv4 Subnet		${Testdata_ip_allocate[2]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${400}
	...										errorCode=SUBNET_EXHAUSTED
	Validate Response	${resp}	${valDict}

OVF511_API_ALLOCATE_TC_03 - ALLOCATE MORE IP THAN AVAILABLE IP ADDRESS IN RANGE
	${uri} =	Get Subnet URI	${Testdata_Allocate[2]['networkId']}
	${resp} = 	Fusion Api Allocate Ipv4 Subnet		${Testdata_ip_allocate[1]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${400}
	...										errorCode=SUBNET_EXHAUSTED
	Validate Response	${resp}	${valDict}

OVF511_API_ALLOCATE_TC_06 - ALLOCATE IP BY COUNT WHEN NOT ALL IPS ARE AVALIABLE
	${uri} =	Get Subnet URI	${Testdata_Allocate[2]['networkId']}
	${resp} = 	Fusion Api Allocate Ipv4 Subnet		${Testdata_ip_allocate[3]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	Validate Response	${resp}	${valDict}
	
OVF511_API_ALLOCATE_TC_10 - ALLOCATE ALREADY ALLOCTED IP
	${uri} =	Get Subnet URI	${Testdata_Allocate[2]['networkId']}
	${resp} = 	Fusion Api Allocate Ipv4 Subnet		${Testdata_ip_allocate[0]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${400}
	...										errorCode=ID_ALLOCATION_VALIDATION_FAILURE
	Validate Response	${resp}	${valDict}

Collect All the IP 
	${uri} =	Get Subnet URI	${Testdata_Allocate[2]['networkId']}
	${resp} = 	Fusion Api Collect Ipv4 Subnet		${Testdata_ip_allocate[2]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	${uri} =	Get Subnet URI	${Testdata_Allocate[0]['networkId']}
	${resp} = 	Fusion Api Collect Ipv4 Subnet		${Testdata_ip_allocate[4]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	Validate Response	${resp}	${valDict}

OVF511_API_ALLOCATE_TC_11 - ALLOCATE GATEWAY IP
	${uri} =	Get Subnet URI	${Testdata_Allocate[0]['networkId']}
	${resp} = 	Fusion Api Allocate Ipv4 Subnet		${Testdata_ip_allocate[5]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${400}
	...										errorCode=OUT_OF_RANGE
	Validate Response	${resp}	${valDict}

OVF511_API_ALLOCATE_TC_12 - ALLOCATE DNS IP
	${uri} =	Get Subnet URI	${Testdata_Allocate[0]['networkId']}
	${resp} = 	Fusion Api Allocate Ipv4 Subnet		${Testdata_ip_allocate[6]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${400}
	...										errorCode=OUT_OF_RANGE
	Validate Response	${resp}	${valDict}

OVF511_API_ALLOCATE_TC_17 - EDIT RANGE EXPAND FIRST IP
	${range}=   Build IPV4 Range Body    	${Testdata_Allocate[6]}      ${Testdata_Allocate[2]['networkId']} 	
	${uri} =	Get Subnet URI		${Testdata_Allocate[2]['networkId']}
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp} = 		Fusion Api Edit Ipv4 Range	body=${range}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	Verify Range Data	${Testdata_Allocate[6]}		${Testdata_Allocate[2]['networkId']}

OVF511_API_ALLOCATE_TC_18 - EDIT RANGE EXPAND LAST IP
	${range}=   Build IPV4 Range Body    	${Testdata_Allocate[7]}      ${Testdata_Allocate[2]['networkId']} 	
	${uri} =	Get Subnet URI		${Testdata_Allocate[2]['networkId']}
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp} = 		Fusion Api Edit Ipv4 Range	body=${range}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	Verify Range Data	${Testdata_Allocate[7]}		${Testdata_Allocate[2]['networkId']}
	
OVF511_API_ALLOCATE_TC_19 - EDIT RANGE EXPAND FIRST AND LAST IP
	${range}=   Build IPV4 Range Body    	${Testdata_Allocate[8]}      ${Testdata_Allocate[2]['networkId']} 	
	${uri} =	Get Subnet URI		${Testdata_Allocate[2]['networkId']}
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp} = 		Fusion Api Edit Ipv4 Range	body=${range}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	Verify Range Data	${Testdata_Allocate[8]}		${Testdata_Allocate[2]['networkId']}
	
OVF511_API_ALLOCATE_TC_20 - EDIT RANGE SHRINK FIRST IP
	${range}=   Build IPV4 Range Body    	${Testdata_Allocate[9]}      ${Testdata_Allocate[2]['networkId']} 	
	${uri} =	Get Subnet URI		${Testdata_Allocate[2]['networkId']}
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp} = 		Fusion Api Edit Ipv4 Range	body=${range}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	Verify Range Data	${Testdata_Allocate[9]}		${Testdata_Allocate[2]['networkId']}
	
OVF511_API_ALLOCATE_TC_21 - EDIT RANGE SHRINK LAST IP
	${range}=   Build IPV4 Range Body    	${Testdata_Allocate[10]}      ${Testdata_Allocate[2]['networkId']} 	
	${uri} =	Get Subnet URI		${Testdata_Allocate[2]['networkId']}
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp} = 		Fusion Api Edit Ipv4 Range	body=${range}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	Verify Range Data	${Testdata_Allocate[10]}		${Testdata_Allocate[2]['networkId']}

OVF511_API_ALLOCATE_TC_22 - EDIT RANGE SHRINK FIRST AND LAST IP
	${range}=   Build IPV4 Range Body    	${Testdata_Allocate[3]}      ${Testdata_Allocate[2]['networkId']} 	
	${uri} =	Get Subnet URI		${Testdata_Allocate[2]['networkId']}
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp} = 		Fusion Api Edit Ipv4 Range	body=${range}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	Verify Range Data	${Testdata_Allocate[3]}		${Testdata_Allocate[2]['networkId']}
	
OVF511_API_ALLOCATE_TC_23 - EDIT RANGE SHRINK FIRST AND EXPAND LAST IP
	${range}=   Build IPV4 Range Body    	${Testdata_Allocate[11]}      ${Testdata_Allocate[2]['networkId']} 	
	${uri} =	Get Subnet URI		${Testdata_Allocate[2]['networkId']}
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp} = 		Fusion Api Edit Ipv4 Range	body=${range}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	Verify Range Data	${Testdata_Allocate[11]}		${Testdata_Allocate[2]['networkId']}
	
RESET TO ORIGINAL RANGE DATA
	${range}=   Build IPV4 Range Body    	${Testdata_Allocate[3]}      ${Testdata_Allocate[2]['networkId']} 	
	${uri} =	Get Subnet URI		${Testdata_Allocate[2]['networkId']}
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp} = 		Fusion Api Edit Ipv4 Range	body=${range}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	Verify Range Data	${Testdata_Allocate[3]}		${Testdata_Allocate[2]['networkId']}

OVF511_API_ALLOCATE_TC_24 - EDIT RANGE AND EXPAND FIRST IP AFTER ALLOCATION
	${uri} =	Get Subnet URI	${Testdata_Allocate[2]['networkId']}
	${resp} = 	Fusion Api Allocate Ipv4 Subnet		${Testdata_ip_allocate[3]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	Validate Response	${resp}	${valDict}
	${range}=   Build IPV4 Range Body    	${Testdata_Allocate[6]}      ${Testdata_Allocate[2]['networkId']} 	
	${uri} =	Get Subnet URI		${Testdata_Allocate[2]['networkId']}
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp} = 		Fusion Api Edit Ipv4 Range	body=${range}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=EDIT_NOT_ALLOWED
	Validate Response	${resp}	${valDict}
	Verify Range Data	${Testdata_Allocate[3]}		${Testdata_Allocate[2]['networkId']}

OVF511_API_ALLOCATE_TC_25 - EDIT RANGE AND EXPAND LAST IP AFTER ALLOCATION
	${range}=   Build IPV4 Range Body    	${Testdata_Allocate[12]}      ${Testdata_Allocate[2]['networkId']} 	
	${uri} =	Get Subnet URI		${Testdata_Allocate[2]['networkId']}
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp} = 		Fusion Api Edit Ipv4 Range	body=${range}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	Verify Range Data	${Testdata_Allocate[12]}		${Testdata_Allocate[2]['networkId']}

OVF511_API_ALLOCATE_TC_26 - EDIT RANGE AND SHRINK FIRST IP AFTER ALLOCATION
	${range}=   Build IPV4 Range Body    	${Testdata_Allocate[11]}      ${Testdata_Allocate[2]['networkId']} 	
	${uri} =	Get Subnet URI		${Testdata_Allocate[2]['networkId']}
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp} = 		Fusion Api Edit Ipv4 Range	body=${range}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=EDIT_NOT_ALLOWED
	Validate Response	${resp}	${valDict}
	Verify Range Data	${Testdata_Allocate[12]}		${Testdata_Allocate[2]['networkId']}

OVF511_API_ALLOCATE_TC_27 - EDIT RANGE AND SHRINK LAST IP AFTER ALLOCATION
	${range}=   Build IPV4 Range Body    	${Testdata_Allocate[3]}      ${Testdata_Allocate[2]['networkId']} 	
	${uri} =	Get Subnet URI		${Testdata_Allocate[2]['networkId']}
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp} = 		Fusion Api Edit Ipv4 Range	body=${range}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=EDIT_NOT_ALLOWED
	Validate Response	${resp}	${valDict}
	Verify Range Data	${Testdata_Allocate[12]}		${Testdata_Allocate[2]['networkId']}

OVF511_API_ALLOCATE_TC_28 - EDIT RANGE SHRINK FIRST AND EXPAND LAST IP AFTER ALLOCATION
	${range}=   Build IPV4 Range Body    	${Testdata_Allocate[11]}      ${Testdata_Allocate[2]['networkId']} 	
	${uri} =	Get Subnet URI		${Testdata_Allocate[2]['networkId']}
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp} = 		Fusion Api Edit Ipv4 Range	body=${range}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=EDIT_NOT_ALLOWED
	Validate Response	${resp}	${valDict}
	Verify Range Data	${Testdata_Allocate[12]}	${Testdata_Allocate[2]['networkId']}

OVF511_API_ALLOCATE_TC_60 - ALLOCATE 254 IP'S IN A SINGLE REQUEST
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_Allocate[13]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${range}=   Build IPV4 Range Body    	${Testdata_Allocate[14]}      ${Testdata_Allocate[13]['networkId']}
	${resp}=	Fusion Api Create Ipv4 Range	${range}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${network_body}=	Build Network Body For Create	${Testdata_Allocate[15]}		${Testdata_Allocate[13]['networkId']}
	${resp} = 	Fusion Api Create Ethernet Network		body=${network_body}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}
    ${uri} =	Get Subnet URI	${Testdata_Allocate[13]['networkId']}
	${resp} = 	Fusion Api Allocate Ipv4 Subnet		${Testdata_ip_allocate[8]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	Validate Response	${resp}	${valDict}
    
OVF511_API_COLLECT_TC_11 - COLLECT 254 IP'S SINGLE REQUEST
	${uri} =	Get Subnet URI	${Testdata_Allocate[13]['networkId']}
	${resp} = 	Fusion Api Collect Ipv4 Subnet		${Testdata_ip_allocate[8]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	
OVF511_API_ALLOCATE_TC_61 - ALLOCATE 254 IP'S SINGLE REQUEST USING COUNT
    ${uri} =	Get Subnet URI	${Testdata_Allocate[13]['networkId']}
	${resp} = 	Fusion Api Allocate Ipv4 Subnet		${Testdata_ip_allocate[7]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	Validate Response	${resp}	${valDict}

OVF511_API_ALLOCATE_TC_14 - ALLOCATE 1 IP AFTER ALL THE IP'S ARE ALLOCATED
    ${uri} =	Get Subnet URI	${Testdata_Allocate[13]['networkId']}
	${resp} = 	Fusion Api Allocate Ipv4 Subnet		${Testdata_ip_allocate[9]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${400}
	...										errorCode=SUBNET_EXHAUSTED
	Validate Response	${resp}	${valDict}
	
OVF511_API_ALLOCATE_TC_16 - DISABLE A RANGE AFTER IP ARE ALLOCATED
	${uri} =	Get Subnet URI	${Testdata_Allocate[13]['networkId']}
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp} = 			Fusion Api Edit Ipv4 Range	 	body=${range_disable[0]}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${200}

OVF511_API_ALLOCATE_TC_29 - DELETE A DISABLED AND ALLOCATED RANGE
	${uri} =	Get Subnet URI		${Testdata_Allocate[13]['networkId']}
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp} = 		Fusion Api Delete Ipv4 Range	 	uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=HAS_IPS_IN_USE
	Validate Response	${resp}	${valDict}

OVF511_API_ALLOCATE_TC_39 - DISABLE THE RANGE WITH ALLOCATED IP AND THEN DELETE THE NETWORK WHERE THE SUBNET IS ASSOCIATED
    ${neturi}=	Get Ethernet URI	${Testdata_Allocate[15]['name']}
	${resp}=	Fusion Api Delete Ethernet Network 		uri=${neturi}
	#${task} =    Wait For Task     ${resp}     120s    
	${valDict} =     Create Dictionary	status_code=${501}
    ...                                 errorCode=CRM_NETWORK_DELETE_SUBNET_UPDATE_NOT_ALLOWED
    Validate Response    ${resp}    ${valDict}

OVF511_API_ALLOCATE_TC_30 - RETURN IP'S TO DISABLE RANGE 
	${uri} =	Get Subnet URI	${Testdata_Allocate[13]['networkId']}
	${resp} = 	Fusion Api Collect Ipv4 Subnet		${Testdata_ip_allocate[8]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}

ENABLE THE RANGE
	${uri} =	Get Subnet URI	${Testdata_Allocate[13]['networkId']}
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp1} = 			Fusion Api Get Ipv4 Range	 	uri=${rangeuri[0]}
	Log		${resp1}
	${resp} = 			Fusion Api Edit Ipv4 Range	 	body=${range_enable[0]}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${200}

OVF511_API_ALLOCATE_TC_13 - ALLOCATE IP BY COUNT ON A RANGE HAVING DISTRIBUTED ALLOCATION
    ${uri} =	Get Subnet URI	${Testdata_Allocate[13]['networkId']}
	${resp} = 	Fusion Api Allocate Ipv4 Subnet		${Testdata_ip_allocate[10]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	Validate Response	${resp}	${valDict}
	${uri} =	Get Subnet URI	${Testdata_Allocate[13]['networkId']}
	${resp} = 	Fusion Api Allocate Ipv4 Subnet		${Testdata_ip_allocate[3]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	Validate Response	${resp}	${valDict}

OVF511_API_ALLOCATE_TC_15 - ALLOCATED + FREE IP EQUALS TOTAL IP COUNT
	${uri}=		Get Subnet URI	${Testdata_Allocate[13]['networkId']}
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp} = 			fusion Api Get Ipv4 Range	 	uri=${rangeuri[0]}
	${freeId_count} =     Get From Dictionary     ${resp}    freeIdCount
	${freed}= 	set variable	${freeId_count}
	${allocatedId_count} =     Get From Dictionary     ${resp}    allocatedIdCount
	${allocate}=	set variable	${allocatedId_count}
	${total} = 	Evaluate	${freed}+${allocate}
	Log		${total}
	${valDict} = 	Create Dictionary	totalCount=${total}
	Validate Response	${resp}	${valDict}

OVF511_API_ALLOCATE_TC_09 - ALLOCATE FROM A DISABLE RANGE
	${uri} =	Get Subnet URI	${Testdata_Allocate[13]['networkId']}
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp} = 		Fusion Api Edit Ipv4 Range	 	body=${range_disable[0]}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${200}
	${uri} =	Get Subnet URI	${Testdata_Allocate[13]['networkId']}
	${resp} = 	Fusion Api Allocate Ipv4 Subnet		${Testdata_ip_allocate[3]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${400}
	...										errorCode=SUBNET_EXHAUSTED
	Validate Response	${resp}	${valDict}

OVF511_API_ALLOCATE_TC_51 - ENABLE THE DISBLED RANGE WHICH IS ALREADY ALLOCATED
	${uri} =	Get Subnet URI	${Testdata_Allocate[13]['networkId']}
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp} = 			Fusion Api Edit Ipv4 Range	 	body=${range_enable[0]}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${200}

CLEAR ALL THE PRECONDITION DATA
	#COLLECT ALL THE IP'S TO THE RANGE 
	${uri} =	Get Subnet URI	${Testdata_Allocate[2]['networkId']}
	${resp} = 	Fusion Api Collect Ipv4 Subnet		${Testdata_ip_allocate[2]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	${uri} =	Get Subnet URI	${Testdata_Allocate[0]['networkId']}
	${resp} = 	Fusion Api Collect Ipv4 Subnet		${Testdata_ip_allocate[4]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	Validate Response	${resp}	${valDict}
	${uri} =	Get Subnet URI	${Testdata_Allocate[13]['networkId']}
	${resp} = 	Fusion Api Collect Ipv4 Subnet		${Testdata_ip_allocate[8]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	#REMOVE ALL NETWORKS
	${resp}=	Remove All Ethernet Networks
	${resp1}=	Remove All FC Networks
	${resp2}=	Remove All FCoE Networks
	#REMOVE ALL SUBNET
	${resp}= 	Remove All Subnets	

CREATE PRE CONDITION DATA
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_Allocate[0]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${range}=   Build IPV4 Range Body    	${Testdata_Allocate[1]}      ${Testdata_Allocate[0]['networkId']}
	${resp}=	Fusion Api Create Ipv4 Range	${range}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_Allocate[2]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${range}=   Build IPV4 Range Body    	${Testdata_Allocate[3]}      ${Testdata_Allocate[2]['networkId']}
	${resp}=	Fusion Api Create Ipv4 Range	${range}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${network_body}=	Build Network Body For Create	${Testdata_Allocate[4]}		${Testdata_Allocate[0]['networkId']}
	${resp} = 	Fusion Api Create Ethernet Network		body=${network_body}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}
	${network_body}=	Build Network Body For Create	${Testdata_Allocate[5]}		${Testdata_Allocate[2]['networkId']}
	${resp} = 	Fusion Api Create Ethernet Network		body=${network_body}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}
    #ALLOCATE SOME IP'S
    ${uri} =	Get Subnet URI	${Testdata_Allocate[2]['networkId']}
	${resp} = 	Fusion Api Allocate Ipv4 Subnet		${Testdata_ip_allocate[0]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	Validate Response	${resp}	${valDict}    
    
OVF511_API_ALLOCATE_TC_31 - EDIT AND EXPAND LAST IP OF A ALLOCATED AND DISABLED RANGE
	${uri} =	Get Subnet URI	${Testdata_Allocate[2]['networkId']}
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp} = 		Fusion Api Edit Ipv4 Range	 	body=${range_disable[0]}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${range}=   Build IPV4 Range Body    	${Testdata_Allocate[16]}      ${Testdata_Allocate[2]['networkId']}
	${resp} = 			Fusion Api Edit Ipv4 Range	body=${range}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	Verify Range Data	${Testdata_Allocate[16]}		${Testdata_Allocate[2]['networkId']}

OVF511_API_ALLOCATE_TC_32 - DELETE NETWORK WHICH IS ASSOCIATED WITH A SUBNET WHOSE 1 IP IS ALLOCATED
	${uri} =	Get Subnet URI	${Testdata_Allocate[2]['networkId']}
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp} = 		Fusion Api Edit Ipv4 Range	 	body=${range_enable[0]}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
    ${neturi}=	Get Ethernet URI	${Testdata_Allocate[5]['name']}
	${resp}=	Fusion Api Delete Ethernet Network 		uri=${neturi}	
	${valDict} =     Create Dictionary    status_code=${501}
	...									errorCode=CRM_NETWORK_DELETE_SUBNET_UPDATE_NOT_ALLOWED
    Validate Response    ${resp}    ${valDict}

OVF511_API_ALLOCATE_TC_33 - DELETE NETWORK WITH FORCE WHICH IS ASSOCIATED WITH A SUBNET WHOSE 1 IP IS ALLOCATED
    ${neturi}=	Get Ethernet URI	${Testdata_Allocate[5]['name']}
	${resp}=	Fusion Api Delete Ethernet Network 		uri=${neturi}	param=?force=True
	${task} =    Wait For Task     ${resp}     120s    
	${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}

OVF511_API_ALLOCATE_TC_34 - DELETE NETWORK WITH FORCE WHICH IS ASSOCIATED WITH A SUBNET WHOSE 1 IP IS ALLOCATED.VERIFY THE IP IS FREED.
	${uri}=		Get Subnet URI	${Testdata_Allocate[2]['networkId']}
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp} = 			fusion Api Get Ipv4 Range	 	uri=${rangeuri[0]}
	${freeId_count} =     Get From Dictionary     ${resp}    freeIdCount
	${total_count}=		Get From Dictionary	${resp}		totalCount
	${freed}= 	set variable	${freeId_count}
	${tot}=		set variable	${total_count}
	Should Be Equal As Strings		${freeId_count} 	${tot}

OVF511_API_ALLOCATE_TC_35 - DELETE NETWORK WITH FORCE WHICH IS ASSOCIATED WITH A SUBNET WHOSE MULTIPLE IP'S IS ALLOCATED
    ${uri} =	Get Subnet URI	${Testdata_Allocate[0]['networkId']}
	${resp} = 	Fusion Api Allocate Ipv4 Subnet		${Testdata_ip_allocate[4]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	Validate Response	${resp}	${valDict}
	${neturi}=	Get Ethernet URI	${Testdata_Allocate[4]['name']}
	${resp}=	Fusion Api Delete Ethernet Network 		uri=${neturi}	param=?force=True
	${task} =    Wait For Task     ${resp}     120s    
	${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}    

OVF511_API_ALLOCATE_TC_36 - DELETE NETWORK WITH FORCE WHICH IS ASSOCIATED WITH A SUBNET WHOSE MULTIPLE IP'S IS ALLOCATED.VERIFY THE IP IS FREED.
	${uri}=		Get Subnet URI	${Testdata_Allocate[0]['networkId']}
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp} = 			fusion Api Get Ipv4 Range	 	uri=${rangeuri[0]}
	${freeId_count} =     Get From Dictionary     ${resp}    freeIdCount
	${total_count}=		Get From Dictionary	${resp}		totalCount
	${freed}= 	set variable	${freeId_count}
	${tot}=		set variable	${total_count}
	Should Be Equal As Strings		${freeId_count} 	${tot}

COLLECT IP
	${uri} =	Get Subnet URI	${Testdata_Allocate[2]['networkId']}
	${resp} = 	Fusion Api Collect Ipv4 Subnet		${Testdata_ip_allocate[0]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	Validate Response	${resp}	${valDict}
    ${uri} =	Get Subnet URI	${Testdata_Allocate[0]['networkId']}
	${resp} = 	Fusion Api Collect Ipv4 Subnet		${Testdata_ip_allocate[4]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	Validate Response	${resp}	${valDict}

OVF511_API_ALLOCATE_TC_37 - DELETE THE NETWORK WITH FORCE WHICH IS NOT ASSOCIATED WITH ANY SUBNET
	${resp} = 	Fusion Api Create Ethernet Network		body=${Testdata_Allocate[17]}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}
    ${neturi}=	Get Ethernet URI	${Testdata_Allocate[17]['name']}
	${resp}=	Fusion Api Delete Ethernet Network 		uri=${neturi}	param=?force=True
	${task} =    Wait For Task     ${resp}     120s    
	${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}  

OVF511_API_ALLOCATE_TC_38 - DELETE THE NETWORK WITH FORCE WHICH IS ASSOCIATED WITH ANY SUBNET BUT NO IP ALLOCATED.
	${network_body}=	Build Network Body For Create	${Testdata_Allocate[5]}		${Testdata_Allocate[2]['networkId']}
	${resp} = 	Fusion Api Create Ethernet Network		body=${network_body}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}
    ${neturi}=	Get Ethernet URI	${Testdata_Allocate[5]['name']}
	${resp}=	Fusion Api Delete Ethernet Network 		uri=${neturi}	param=?force=True
	${task} =    Wait For Task     ${resp}     120s    
	${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}  

OVF511_API_ALLOCATE_TC_40 - DISABLE THE RANGE WITH ALLOCATED IP AND THEN DELETE THE NETWORK WITH FORCE WHERE THE SUBNET IS ASSOCIATED.
	${network_body}=	Build Network Body For Create	${Testdata_Allocate[5]}		${Testdata_Allocate[2]['networkId']}
	${resp} = 	Fusion Api Create Ethernet Network		body=${network_body}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}
    ${uri} =	Get Subnet URI	${Testdata_Allocate[2]['networkId']}
	${resp} = 	Fusion Api Allocate Ipv4 Subnet		${Testdata_ip_allocate[0]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	Validate Response	${resp}	${valDict}
	${uri} =	Get Subnet URI	${Testdata_Allocate[2]['networkId']}
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp} = 		Fusion Api Edit Ipv4 Range	 	body=${range_disable[0]}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${neturi}=	Get Ethernet URI	${Testdata_Allocate[5]['name']}
	${resp}=	Fusion Api Delete Ethernet Network 		uri=${neturi}	param=?force=True
	${task} =    Wait For Task     ${resp}     120s    
	${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}  

OVF511_API_ALLOCATE_TC_41 - DISABLE THE RANGE WITH ALLOCATED IP AND THEN DELETE THE NETWORK WITH FORCE WHERE THE SUBNET IS ASSOCIATED.VERIFY THE IP IS FREED
	${uri}=		Get Subnet URI	${Testdata_Allocate[2]['networkId']}
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp} = 			fusion Api Get Ipv4 Range	 	uri=${rangeuri[0]}
	${allocatedId_count} =     Get From Dictionary     ${resp}    allocatedIdCount
	${check} = 	Evaluate	${allocatedId_count}==0
	Should Be Equal As Strings		${check} 	True

CLEAR ALL THE PRECONDITION DATA
	#COLLECT ALL THE IP'S TO THE RANGE 
	${uri} =	Get Subnet URI	${Testdata_Allocate[2]['networkId']}
	${resp} = 	Fusion Api Collect Ipv4 Subnet		${Testdata_ip_allocate[2]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	${uri} =	Get Subnet URI	${Testdata_Allocate[0]['networkId']}
	${resp} = 	Fusion Api Collect Ipv4 Subnet		${Testdata_ip_allocate[4]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	Validate Response	${resp}	${valDict}
	${uri} =	Get Subnet URI	${Testdata_Allocate[13]['networkId']}
	${resp} = 	Fusion Api Collect Ipv4 Subnet		${Testdata_ip_allocate[8]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	#REMOVE ALL NETWORKS
	${resp}=	Remove All Ethernet Networks
	${resp1}=	Remove All FC Networks
	${resp2}=	Remove All FCoE Networks
	#REMOVE ALL SUBNET
	${resp}= 	Remove All Subnets	

#------------------ALLOCATE STOPS---------------

#-------------ALLOCATE 2 STARTS-----------------

CLEAN-UP BEFORE START
	#DELETE THE EG
	${resp}=	Remove ALL Enclosure Groups
    #REMOVE ALL NETWORKS
	${resp}=	Remove All Ethernet Networks
	${resp1}=	Remove All FC Networks
	${resp2}=	Remove All FCoE Networks
    #REMOVE ALL SUBNET
	${resp}= 	Remove All Subnets

CREATE PRE CONDITION DATA FOR ALLOCATE SET2
	#CREATE SUBNET AND RANGE
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_ALLOCATE_2[0]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${range}=   Build IPV4 Range Body    	${Testdata_ALLOCATE_2[1]}      ${Testdata_ALLOCATE_2[0]['networkId']}
	${resp}=	Fusion Api Create Ipv4 Range	${range}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	#create Network with Association
	${network_body}=	Build Network Body For Create	${Testdata_ALLOCATE_2[2]}	${Testdata_ALLOCATE_2[0]['networkId']}
	${resp} = 	Fusion Api Create Ethernet Network		body=${network_body}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}
	${network_body}=	Build Network Body For Create	${Testdata_ALLOCATE_2[3]}	${Testdata_ALLOCATE_2[0]['networkId']}
	${resp} = 	Fusion Api Create Ethernet Network		body=${network_body}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}


OVF511_API_ALLOCATE_TC_66 - DELETE 2ND NETWORK OF 2 NETWORKS WITH SAME VLAN AND ASSOCIATED SUBNET
	${neturi}=	Get Ethernet URI	${Testdata_ALLOCATE_2[3]['name']}
	${resp}=	Fusion Api Delete Ethernet Network 		uri=${neturi}
	${task} =    Wait For Task     ${resp}     120s    
	${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}

DELETE THE OTHER NETWORK
	${neturi}=	Get Ethernet URI	${Testdata_ALLOCATE_2[2]['name']}
	${resp}=	Fusion Api Delete Ethernet Network 		uri=${neturi}
	${task} =    Wait For Task     ${resp}     120s    
	${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}
    
    
OVF511_API_ALLOCATE_TC_67 - DELETE 2ND NETWORK WITHOUT FORCE OF 2 NETWORKS WITH SAME VLAN AND ALLOCATED IP
	#Create the Associated Network
	${network_body}=	Build Network Body For Create	${Testdata_ALLOCATE_2[2]}	${Testdata_ALLOCATE_2[0]['networkId']}
	${resp} = 	Fusion Api Create Ethernet Network		body=${network_body}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}
	${network_body}=	Build Network Body For Create	${Testdata_ALLOCATE_2[3]}	${Testdata_ALLOCATE_2[0]['networkId']}
	${resp} = 	Fusion Api Create Ethernet Network		body=${network_body}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}
	#Allocate the IP
	${uri} =	Get Subnet URI	${Testdata_ALLOCATE_2[0]['networkId']}
	${resp} = 	Fusion Api Allocate Ipv4 Subnet		${Testdata_ALLOCATE_2[4]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	Validate Response	${resp}	${valDict}
	#Delete the 2nd Network without Force
	${neturi}=	Get Ethernet URI	${Testdata_ALLOCATE_2[3]['name']}
	${resp}=	Fusion Api Delete Ethernet Network 		uri=${neturi}
	${task} =    Wait For Task     ${resp}     120s    
	${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}
   
OVF511_API_ALLOCATE_TC_76 - DELETE 2ND NETWORK WITHOUT FORCE OF 2 NETWORKS WITH SAME VLAN AND ALLOCATED IP AND VERIFY IP NOT FREED
	${uri} =	Get Subnet URI	${Testdata_ALLOCATE_2[0]['networkId']}
	${resp} =   Fusion Api Get Ipv4 Subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp}=	Fusion Api Get Ipv4 Range 	uri=${rangeuri[0]}		
	${range_allocated_uri} =     Get From Dictionary     ${resp}    allocatedFragmentUri
	${resp}=	Fusion Api Get Ipv4 Range 	uri=${range_allocated_uri}	
	${members1} =     Get From Dictionary     ${resp}    members
	${member_list} = 	Get From List	${members1}		0
	${val_member} = 	Get From Dictionary		${member_list} 		startAddress
	${ip_check}=	Remove String	${Testdata_ALLOCATE_2[4]['idList']}
	Should Be Equal As Strings		${val_member}	${ip_check[0]}

OVF511_API_ALLOCATE_TC_68 - DELETE THE 1ST NETWORK AFTER DELETING 2ND WITH ALLOCATED IP
	${neturi}=	Get Ethernet URI	${Testdata_ALLOCATE_2[2]['name']}
	${resp}=	Fusion Api Delete Ethernet Network 		uri=${neturi}	param=?force=True
	${task} =    Wait For Task     ${resp}     120s    
	${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}

OVF511_API_ALLOCATE_TC_69 - VERIFY IP IS FREED AFTER ALL THE NETWORK DELETED 
	${uri} =	Get Subnet URI	${Testdata_ALLOCATE_2[0]['networkId']}
	${resp} =   Fusion Api Get Ipv4 Subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp}=	Fusion Api Get Ipv4 Range 	uri=${rangeuri[0]}		
	${freeId_count} =     Get From Dictionary     ${resp}    freeIdCount
	${freed}= 	set variable	${freeId_count}
	${allocatedId_count} =     Get From Dictionary     ${resp}    allocatedIdCount
	${allocate}=	set variable	${allocatedId_count}
	${check} = 	Evaluate	${allocatedId_count}==0

OVF511_API_ALLOCATE_TC_70 - DELETE 1ST NETWORK OF 2 NETWORKS WITH SAME VLAN AND ASSOCIATED SUBNET
	#create Network with Association
	${network_body}=	Build Network Body For Create	${Testdata_ALLOCATE_2[2]}	${Testdata_ALLOCATE_2[0]['networkId']}
	${resp} = 	Fusion Api Create Ethernet Network		body=${network_body}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}
	${network_body}=	Build Network Body For Create	${Testdata_ALLOCATE_2[3]}	${Testdata_ALLOCATE_2[0]['networkId']}
	${resp} = 	Fusion Api Create Ethernet Network		body=${network_body}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}
	#Delete the 1st Network
	${neturi}=	Get Ethernet URI	${Testdata_ALLOCATE_2[2]['name']}
	${resp}=	Fusion Api Delete Ethernet Network 		uri=${neturi}	param=?force=True
	${task} =    Wait For Task     ${resp}     120s    
	${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}

DELETE THE OTHER NETWORK
	${neturi}=	Get Ethernet URI	${Testdata_ALLOCATE_2[3]['name']}
	${resp}=	Fusion Api Delete Ethernet Network 		uri=${neturi}
	${task} =    Wait For Task     ${resp}     120s    
	${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}

OVF511_API_ALLOCATE_TC_71 - DELETE 1ST NETWORK OF 2 NETWORKS WITHOUT FORCE WITH SAME VLAN AND ALLOCATED IP
	#Create the Associated Network
	${network_body}=	Build Network Body For Create	${Testdata_ALLOCATE_2[2]}	${Testdata_ALLOCATE_2[0]['networkId']}
	${resp} = 	Fusion Api Create Ethernet Network		body=${network_body}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}
	${network_body}=	Build Network Body For Create	${Testdata_ALLOCATE_2[3]}	${Testdata_ALLOCATE_2[0]['networkId']}
	${resp} = 	Fusion Api Create Ethernet Network		body=${network_body}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}
	#Allocate the IP
	${uri} =	Get Subnet URI	${Testdata_ALLOCATE_2[0]['networkId']}
	${resp} = 	Fusion Api Allocate Ipv4 Subnet		${Testdata_ALLOCATE_2[4]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	Validate Response	${resp}	${valDict}
	#Delete the 1st Network without Force
	${neturi}=	Get Ethernet URI	${Testdata_ALLOCATE_2[2]['name']}
	${resp}=	Fusion Api Delete Ethernet Network 		uri=${neturi}
	${task} =    Wait For Task     ${resp}     120s    
	${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}

OVF511_API_ALLOCATE_TC_77 - VERIFY IPs ARE NOT FREED
	${uri} =	Get Subnet URI	${Testdata_ALLOCATE_2[0]['networkId']}
	${resp} =   Fusion Api Get Ipv4 Subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp}=	Fusion Api Get Ipv4 Range 	uri=${rangeuri[0]}		
	${range_allocated_uri} =     Get From Dictionary     ${resp}    allocatedFragmentUri
	${resp}=	Fusion Api Get Ipv4 Range 	uri=${range_allocated_uri}	
	${members1} =     Get From Dictionary     ${resp}    members
	${member_list} = 	Get From List	${members1}		0
	${val_member} = 	Get From Dictionary		${member_list} 		startAddress
	${ip_check}=	Remove String	${Testdata_ALLOCATE_2[4]['idList']}
	Should Be Equal As Strings		${val_member}	${ip_check[0]}
	
OVF511_API_ALLOCATE_TC_72 - DELETE 2ND NETWORK AND VERIFY FORCE IS NEEDED
	${neturi}=	Get Ethernet URI	${Testdata_ALLOCATE_2[3]['name']}
	${resp}=	Fusion Api Delete Ethernet Network 		uri=${neturi}	param=?force=True
	${task} =    Wait For Task     ${resp}     120s    
	${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}

OVF511_API_ALLOCATE_TC_73 - VERIFY IP IS FREED AFTER ALL THE NETWORK DELETED
	${uri} =	Get Subnet URI	${Testdata_ALLOCATE_2[0]['networkId']}
	${resp} =   Fusion Api Get Ipv4 Subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp}=	Fusion Api Get Ipv4 Range 	uri=${rangeuri[0]}		
	${freeId_count} =     Get From Dictionary     ${resp}    freeIdCount
	${freed}= 	set variable	${freeId_count}
	${allocatedId_count} =     Get From Dictionary     ${resp}    allocatedIdCount
	${allocate}=	set variable	${allocatedId_count}
	${check} = 	Evaluate	${allocatedId_count}==0

OVF511_API_ALLOCATE_TC_74 - DISASSOCIATE A SUBNET WHERE IP IS ALLOCATED
	#Create a Network, Associate a Subnet, Allocate an IP	
	${network_body}=	Build Network Body For Create	${Testdata_ALLOCATE_2[2]}	${Testdata_ALLOCATE_2[0]['networkId']}
	${resp} = 	Fusion Api Create Ethernet Network		body=${network_body}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}
    ${uri} =	Get Subnet URI	${Testdata_ALLOCATE_2[0]['networkId']}
	${resp} = 	Fusion Api Allocate Ipv4 Subnet		${Testdata_ALLOCATE_2[4]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	Validate Response	${resp}	${valDict}
	${network_body}=	Build Network Body To Disassociate		${Testdata_ALLOCATE_2[2]}
	${neturi}=	Get Ethernet URI	${Testdata_ALLOCATE_2[2]['name']}
	${resp} = 	Fusion Api Edit Ethernet Network		body=${network_body}	uri=${neturi}
	${valDict} = 	Create Dictionary	status_code=${501}
	...									errorCode=CRM_NETWORK_SUBNET_UPDATE_NOT_ALLOWED
	Validate Response	${resp}	${valDict}

DELETE THE NETWORK 
	${neturi}=	Get Ethernet URI	${Testdata_ALLOCATE_2[2]['name']}
	${resp}=	Fusion Api Delete Ethernet Network 		uri=${neturi}	param=?force=True
	${task} =    Wait For Task     ${resp}     120s    
	${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}

CLEAN-UP BEFORE EXIT
	#DELETE THE EG
	${resp}=	Remove ALL Enclosure Groups
    #REMOVE ALL NETWORKS
	${resp}=	Remove All Ethernet Networks
	${resp1}=	Remove All FC Networks
	${resp2}=	Remove All FCoE Networks
    #REMOVE ALL SUBNET
	${resp}= 	Remove All Subnets  


#-------------ALLOCATE 2 ENDS-----------------

#------------------COLLECT STARTS---------------

CLEAN-UP    
    #REMOVE ALL NETWORKS
	${resp}=	Remove All Ethernet Networks
	${resp1}=	Remove All FC Networks
	${resp2}=	Remove All FCoE Networks
    #REMOVE ALL SUBNET
	${resp}= 	Remove All Subnets

CREATE PRE CONDITION DATA
	#CREATE SUBNET AND RANGE
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_Collect[0]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${range}=   Build IPV4 Range Body    	${Testdata_Collect[1]}      ${Testdata_Collect[0]['networkId']}
	${resp}=	Fusion Api Create Ipv4 Range	${range}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${range}=   Build IPV4 Range Body    	${Testdata_Collect[2]}      ${Testdata_Collect[0]['networkId']}
	${resp}=	Fusion Api Create Ipv4 Range	${range}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_Collect[3]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${range}=   Build IPV4 Range Body    	${Testdata_Collect[4]}      ${Testdata_Collect[3]['networkId']}
	${resp}=	Fusion Api Create Ipv4 Range	${range}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	#CREATE NETWORK AND ASSOCIATE THE SUBNETS
	${network_body}=	Build Network Body For Create	${Testdata_Collect[5]}		${Testdata_Collect[0]['networkId']}
	${resp} = 	Fusion Api Create Ethernet Network		body=${network_body}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}
	${network_body}=	Build Network Body For Create	${Testdata_Collect[6]}		${Testdata_Collect[3]['networkId']}
	${resp} = 	Fusion Api Create Ethernet Network		body=${network_body}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}    
	#ALLOCATE IP
	${uri} =	Get Subnet URI	${Testdata_Collect[3]['networkId']}
	${resp} = 	Fusion Api Allocate Ipv4 Subnet		${Testdata_ip_collect[0]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	Validate Response	${resp}	${valDict}
	${uri} =	Get Subnet URI	${Testdata_Collect[0]['networkId']}
	${resp} = 	Fusion Api Allocate Ipv4 Subnet		${Testdata_ip_collect[1]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	Validate Response	${resp}	${valDict}

OVF511_API_COLLECT_TC_1 - COLLECTS IP FROM SPECIFIED RANGE
	${uri} =	Get Subnet URI	${Testdata_Collect[3]['networkId']}
	${resp} = 	Fusion Api Collect Ipv4 Subnet		${Testdata_ip_collect[0]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	Validate Response	${resp}	${valDict}

OVF511_API_COLLECT_TC_2 - COLLECTS IP FROM MORE THAN 1 POOLS
	${uri} =	Get Subnet URI	${Testdata_Collect[0]['networkId']}
	${resp} = 	Fusion Api Collect Ipv4 Subnet		${Testdata_ip_collect[1]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	Validate Response	${resp}	${valDict}

OVF511_API_COLLECT_TC_3 - COLLECTOR FRAGMENTS MARKED FREE
	${uri} =	Get Subnet URI	${Testdata_Collect[3]['networkId']}
    ${resp} =   fusion api get ipv4 subnet		uri=${uri}
    ${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
    ${resp}=	fusion api get ipv4 range	uri=${rangeuri[0]}		param=free-fragments
    ${members1} =     Get From Dictionary     ${resp}    members
    ${member_list} = 	Get From List	${members1}		0
	${get_fragmentType} = 	Get From Dictionary		${member_list} 		fragmentType
	Should Be Equal		${get_fragmentType}	   FREE

OVF511_API_COLLECT_TC_4 - GIVES AVAILABLE FREE FRAGMENT INFORMATION
	${uri} =	Get Subnet URI	${Testdata_Collect[3]['networkId']}
    ${resp} =   fusion api get ipv4 subnet		uri=${uri}
    ${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
    ${resp}=	fusion api get ipv4 range	uri=${rangeuri[0]}		param=free-fragments
    ${members1} =     Get From Dictionary     ${resp}    members
    ${member_list} = 	Get From List	${members1}		0
    ${start_address} = 	Get From Dictionary		${member_list} 		startAddress
	${end_address} = 	Get From Dictionary		${member_list} 		endAddress
	${start_address}=	Remove String	${start_address}	.
	${end_address}=	Remove String	${end_address}	.
	${check}= 		Evaluate 	${start_address}<=${end_address}
	Should Be Equal As Strings		${check} 	${IP_CHECK}

OVF511_API_COLLECT_TC_5 - COLLECT MULTIPLE IP WITH ONE WRONG IP'S SPECIFIED
	${uri} =	Get Subnet URI	${Testdata_Collect[3]['networkId']}
	${resp} = 	Fusion Api Allocate Ipv4 Subnet		${Testdata_ip_collect[2]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	Validate Response	${resp}	${valDict}
	${uri} =	Get Subnet URI	${Testdata_Collect[3]['networkId']}
	${resp} = 	Fusion Api Collect Ipv4 Subnet		${Testdata_ip_collect[3]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${400}
	...										errorCode=OUT_OF_RANGE
	Validate Response	${resp}	${valDict}

OVF511_API_COLLECT_TC_10 - INVALID COLLECTOR IP
	${uri} =	Get Subnet URI	${Testdata_Collect[3]['networkId']}
	${resp} = 	Fusion Api Collect Ipv4 Subnet		${Testdata_ip_collect[4]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${400}
	...										errorCode=ADDRESS_FORMAT_IPV4
	Validate Response	${resp}	${valDict}

OVF511_API_COLLECT_TC_6 - COLLECT MULTIPLE IP WITH CORRECT IP'S SPECIFIED
	${uri} =	Get Subnet URI	${Testdata_Collect[3]['networkId']}
	${resp} = 	Fusion Api Collect Ipv4 Subnet		${Testdata_ip_collect[2]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	Validate Response	${resp}	${valDict}

OVF511_API_COLLECT_TC_7 - COLLECTING AN ALREADY COLLECTED IP
	${uri} =	Get Subnet URI	${Testdata_Collect[3]['networkId']}
	${resp} = 	Fusion Api Collect Ipv4 Subnet		${Testdata_ip_collect[2]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	Validate Response	${resp}	${valDict}

OVF511_API_COLLECT_TC_10 - COLLECT IP FROM A DISABLED RANGE
	${uri} =	Get Subnet URI	${Testdata_Collect[3]['networkId']}
	${resp} = 	Fusion Api Allocate Ipv4 Subnet		${Testdata_ip_collect[0]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	Validate Response	${resp}	${valDict}
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp} = 		Fusion Api Edit Ipv4 Range	 	body=${range_disable[0]}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${resp} = 	Fusion Api Collect Ipv4 Subnet		${Testdata_ip_collect[0]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	Validate Response	${resp}	${valDict}	

OVF511_API_COLLECT_TC_13 - DELETE NETWORK AND VERIFY IP'S ARE COLLECTED TO RESPESTIVE RANGES
	${uri} =	Get Subnet URI	${Testdata_Collect[0]['networkId']}
	${resp} = 	Fusion Api Allocate Ipv4 Subnet		${Testdata_ip_collect[1]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	Validate Response	${resp}	${valDict}
	${neturi}=	Get Ethernet URI	${Testdata_Collect[5]['name']}
	${resp}=	Fusion Api Delete Ethernet Network 		uri=${neturi}	param=?force=True
	${task} =    Wait For Task     ${resp}     120s    
	${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}
   	${uri} =	Get Subnet URI	${Testdata_Collect[0]['networkId']}
   	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp} = 			fusion Api Get Ipv4 Range	 	uri=${rangeuri[0]}
	${freeId_count} =     Get From Dictionary     ${resp}    freeIdCount
	${freed}= 	set variable	${freeId_count}
	${allocatedId_count} =     Get From Dictionary     ${resp}    allocatedIdCount
	${allocate}=	set variable	${allocatedId_count}
	${check} = 	Evaluate	${allocatedId_count}==0
	Should Be Equal As Strings		${check} 	True
   	${uri} =	Get Subnet URI	${Testdata_Collect[0]['networkId']}
   	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp} = 			fusion Api Get Ipv4 Range	 	uri=${rangeuri[1]}
	${freeId_count} =     Get From Dictionary     ${resp}    freeIdCount
	${freed}= 	set variable	${freeId_count}
	${allocatedId_count} =     Get From Dictionary     ${resp}    allocatedIdCount
	${allocate}=	set variable	${allocatedId_count}
	${check} = 	Evaluate	${allocatedId_count}==0
	Should Be Equal As Strings		${check} 	True

OVF511_API_COLLECT_TC_12 - DELETE NETWORK AFTER EDITING AND ADDING SUBNET AND ALLOCATING THEM.
	${resp} = 	Fusion Api Create Ethernet Network		body=${Testdata_Collect[7]}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}
    #Associate a Subnet
    ${network_body}=	Build Network Body For Edit		${Testdata_Collect[5]}	${Testdata_Collect[0]['networkId']}
	${neturi}=	Get Ethernet URI	${Testdata_Collect[7]['name']}
	${resp} = 	Fusion Api Edit Ethernet Network		body=${network_body}	uri=${neturi}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}
    #Allocate IP from the ranges
    ${uri} =	Get Subnet URI	${Testdata_Collect[0]['networkId']}
	${resp} = 	Fusion Api Allocate Ipv4 Subnet		${Testdata_ip_collect[1]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	Validate Response	${resp}	${valDict}
	#Delete Network
	${neturi}=	Get Ethernet URI	${Testdata_Collect[5]['name']}
	${resp}=	Fusion Api Delete Ethernet Network 		uri=${neturi}	param=?force=True
	${task} =    Wait For Task     ${resp}     120s    
	${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}

OVF511_API_COLLECT_TC_8 - IP RETURNED TO THE SPECIFIED RANGE
	${uri} =	Get Subnet URI	${Testdata_Collect[3]['networkId']}
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp} = 		Fusion Api Edit Ipv4 Range	 	body=${range_enable[0]}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	#Allocate 1 IP
    ${uri} =	Get Subnet URI	${Testdata_Collect[3]['networkId']}
	${resp} = 	Fusion Api Allocate Ipv4 Subnet		${Testdata_ip_collect[0]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	Validate Response	${resp}	${valDict}
	#Check Allocated Count after Allocation
	${uri} =	Get Subnet URI	${Testdata_Collect[3]['networkId']}
   	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp} = 			fusion Api Get Ipv4 Range	 	uri=${rangeuri[0]}
	${freeId_count} =     Get From Dictionary     ${resp}    freeIdCount
	${freed}= 	set variable	${freeId_count}
	${allocatedId_count} =     Get From Dictionary     ${resp}    allocatedIdCount
	${allocate}=	set variable	${allocatedId_count}
	${check} = 	Evaluate	${allocatedId_count}==1
	Should Be Equal As Strings		${check} 	True
	#Collect the IP 
	${uri} =	Get Subnet URI	${Testdata_Collect[3]['networkId']}
	${resp} = 	Fusion Api Collect Ipv4 Subnet		${Testdata_ip_collect[0]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	Validate Response	${resp}	${valDict}
	#Check Allocated Count after Allocation
	${uri} =	Get Subnet URI	${Testdata_Collect[3]['networkId']}
   	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp} = 			fusion Api Get Ipv4 Range	 	uri=${rangeuri[0]}
	${freeId_count} =     Get From Dictionary     ${resp}    freeIdCount
	${freed}= 	set variable	${freeId_count}
	${allocatedId_count} =     Get From Dictionary     ${resp}    allocatedIdCount
	${allocate}=	set variable	${allocatedId_count}
	${check} = 	Evaluate	${allocatedId_count}==0
	Should Be Equal As Strings		${check} 	True
	
	
CLEANUP
	#Delete Network
	${neturi}=	Get Ethernet URI	${Testdata_Collect[6]['name']}
	${resp}=	Fusion Api Delete Ethernet Network 		uri=${neturi}	param=?force=True
	${task} =    Wait For Task     ${resp}     120s    
	${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}
    #REMOVE ALL NETWORKS
	${resp}=	Remove All Ethernet Networks
	${resp1}=	Remove All FC Networks
	${resp2}=	Remove All FCoE Networks
    #REMOVE ALL SUBNET
	${resp}= 	Remove All Subnets

  
#------------------COLLECT STOPS---------------


#-------------------PATCH START---------

LOGOUT
	${resp}=	Fusion Api Logout Appliance

Login to Appliance
	${resp}=	Fusion Api Login Appliance 		${APPLIANCE_IP}		${admin_credentials}
	
CLEAN-UP BEFORE EXIT
	#DELETE THE EG
	${resp}=	Remove ALL Enclosure Groups
    #REMOVE ALL NETWORKS
	${resp}=	Remove All Ethernet Networks
	${resp1}=	Remove All FC Networks
	${resp2}=	Remove All FCoE Networks
    #REMOVE ALL SUBNET
	${resp}= 	Remove All Subnets

Login to Appliance with Private Key
	${resp}=	Fusion Api Login Appliance 		${APPLIANCE_IP}		${admin_credentials}
	${privateauth}=		OA AUTH TOKEN	${APPLIANCE_IP}
	${con1}=	catenate	:${privateauth}
	Set Global Variable		${PUBLICPRIVATE}
	${PUBLICPRIVATE}= 	catenate   ${resp[1]}${con1}
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_Patch[0]}		sessionID=${PUBLICPRIVATE}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${resp}= 	Remove All Subnets

CREATE PRE CONDITION DATA FOR PATCH
	#CREATE SUBNET AND RANGE
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_Patch[0]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${range}=   Build IPV4 Range Body    	${Testdata_Patch[1]}      ${Testdata_Patch[0]['networkId']}
	${resp}=	Fusion Api Create Ipv4 Range	${range}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	#create Network
	${resp} = 	Fusion Api Create Ethernet Network		body=${Testdata_Patch[2]}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}

OVF511_API_PATCH_TC_02 - ASSOCIATE A SUBNET TO THE NETWORK BY PATCH
	${uri} =	Get Subnet URI	 ${Testdata_Patch[0]['networkId']}
    ${resp} =   fusion api get ipv4 subnet		uri=${uri}
    ${etag} =	Get From Dictionary		${resp}		eTag
	${body} =	 Create Patch Body For Network Add 		${Testdata_Patch[4]}		${etag}
	${resp} = 		Fusion Api Patch Ipv4 Subnet	${body}		uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${202}
	Validate Response	${resp}	${valDict}

OVF511_API_PATCH_TC_03 - VERIFY SUBNET SHOWS ASSICIATED NETWORK RESOURCE
	${uri}=		Get Subnet URI	${Testdata_Patch[0]['networkId']}
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${associated_resource} = 	Get From Dictionary 	${resp}		associatedResources
    ${resourceCategory} = 	Get From List	${associated_resource}		0
	${resource_name} = 		Get From Dictionary		${resourceCategory}		resourceName
	${val} = 	Get From Dictionary 	${Testdata_Patch[4]} 	operations
	${temp} = 	Get From List	${val}    0
	${rec} =	Get From Dictionary		${temp}		value
	${resourcename} =	Get From Dictionary		${rec}		resourceName
    Should Be Equal As Strings		${resource_name} 	${resourcename}

OVF511_API_PATCH_TC_04 - REMOVE THE NETWORK RESOURCE FROM SUBNET USING PATCH WITHOUT FORCE
	${uri} =	Get Subnet URI	 ${Testdata_Patch[0]['networkId']}
    ${resp} =   fusion api get ipv4 subnet		uri=${uri}
    ${etag} =	Get From Dictionary		${resp}		eTag
    ${patch_body} = 	Remove Patch Operation		${Testdata_Patch[5]}		${etag}
    ${resp} = 		Fusion Api Patch Ipv4 Subnet	${patch_body}		uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${202}
	Validate Response	${resp}	${valDict}

OVF511_API_PATCH_TC_05 - REMOVE THE NETWORK RESOURCE FROM SUBNET USING PATCH WITH FORCE
	${uri} =	Get Subnet URI	 ${Testdata_Patch[0]['networkId']}
    ${resp} =   fusion api get ipv4 subnet		uri=${uri}
    ${etag} =	Get From Dictionary		${resp}		eTag
	${body} =	 Create Patch Body For Network Add 		${Testdata_Patch[4]}		${etag}
	${resp} = 		Fusion Api Patch Ipv4 Subnet	${body}		uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${202}
	Validate Response	${resp}	${valDict}
	#Remove using Patch Force
	${uri} =	Get Subnet URI	 ${Testdata_Patch[0]['networkId']}
    ${resp} =   fusion api get ipv4 subnet		uri=${uri}
    ${etag} =	Get From Dictionary		${resp}		eTag
    ${patch_body} = 	Remove Patch Operation		${Testdata_Patch[5]}		${etag}
    ${resp} = 		Fusion Api Patch Ipv4 Subnet	${patch_body}		uri=${uri}		param=?force=True
	${valDict} = 	Create Dictionary	status_code=${202}
	Validate Response	${resp}	${valDict}

OVF511_API_PATCH_TC_06 - REMOVE THE NETWORK RESOURCE FROM SUBNET USING PATCH WHOSE IP IS ALREADY ALLOCATED 
	#Associate the Subnet to Network using PATCH
	${uri} =	Get Subnet URI	 ${Testdata_Patch[0]['networkId']}
    ${resp} =   fusion api get ipv4 subnet		uri=${uri}
    ${etag} =	Get From Dictionary		${resp}		eTag
	${body} =	 Create Patch Body For Network Add 		${Testdata_Patch[4]}		${etag}
	${resp} = 		Fusion Api Patch Ipv4 Subnet	${body}		uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${202}
	Validate Response	${resp}	${valDict}
	#Allocate IP from the Associated Subnet
	${uri} =	Get Subnet URI	${Testdata_Patch[0]['networkId']}
	${resp} = 	Fusion Api Allocate Ipv4 Subnet		${Testdata_Patch[6]}		${uri}
	${valDict} = 	Create Dictionary		status_code=${200}
	Validate Response	${resp}	${valDict}
	#DELETE WITHOUT FORCE
	${uri} =	Get Subnet URI	 ${Testdata_Patch[0]['networkId']}
    ${resp} =   fusion api get ipv4 subnet		uri=${uri}
    ${etag} =	Get From Dictionary		${resp}		eTag
    ${patch_body} = 	Remove Patch Operation		${Testdata_Patch[5]}		${etag}
    ${resp} = 		Fusion Api Patch Ipv4 Subnet	${patch_body}		uri=${uri}
	${valDict} = 	Create Dictionary		status_code=${400}
	...										errorCode=DISSOCIATION_NOT_ALLOWED
	Validate Response	${resp}	${valDict}

OVF511_API_PATCH_TC_07 - REMOVE THE NETWORK RESOURCE FROM SUBNET USING PATCH WHOSE IP IS ALREADY ALLOCATED USING FORCE
	${uri} =	Get Subnet URI	 ${Testdata_Patch[0]['networkId']}
    ${resp} =   fusion api get ipv4 subnet		uri=${uri}
    ${etag} =	Get From Dictionary		${resp}		eTag
    ${patch_body} = 	Remove Patch Operation		${Testdata_Patch[5]}		${etag}
    ${resp} = 		Fusion Api Patch Ipv4 Subnet	${patch_body}		uri=${uri}		param=?force=True
	${valDict} = 	Create Dictionary	status_code=${202}
	Validate Response	${resp}	${valDict}

OVF511_API_PATCH_TC_08 - ASSOCIATE A RANGE TO THE EG USING PATCH
	#Create a EG
	${resp} = 	Fusion Api Create Enclosure Group		${Testdata_Patch[3]}
	${valDict} = 	Create Dictionary	status_code=${201}
	Validate Response	${resp}	${valDict}
	#Associate Range to Patch
	${uri} =	Get Subnet URI	 ${Testdata_Patch[0]['networkId']}
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
    ${etag} =	Get From Dictionary		${resp}		eTag
    #${resp} =   fusion api get ipv4 subnet		uri=${uri}
    ${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
    ${body} =	 Add EG Patch Body		${Testdata_Patch[7]}		${etag}
	${resp} = 		Fusion Api Patch Ipv4 Subnet 	${body}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${202}
	Validate Response	${resp}	${valDict} 
    
OVF511_API_PATCH_TC_09 - VERIFY RANGE SHOWS ASSICIATED EG RESOURCE
	${uri} =	Get Subnet URI	 ${Testdata_Patch[0]['networkId']}
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
    ${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
    ${resp}=	fusion api get ipv4 range	uri=${rangeuri[0]}
    ${associated_resource} = 	Get From Dictionary 	${resp}		associatedResources
    ${resourceCategory} = 	Get From List	${associated_resource}		0
	${resource_name} = 		Get From Dictionary		${resourceCategory}		resourceName
	${eg_name1}=		Get From Dictionary		${Testdata_Patch[3]}	name
    Should Be Equal As Strings		${resource_name} 	${eg_name1}
	
OVF511_API_PATCH_TC_10 - REMOVE THE EG RESOURCE FROM RANGE USING PATCH
	${uri} =	Get Subnet URI	 ${Testdata_Patch[0]['networkId']}
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
    ${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
    ${resp}=	fusion api get ipv4 range	uri=${rangeuri[0]}
    ${etag} =	Get From Dictionary		${resp}		eTag
    ${patch_body} = 	Remove Patch Operation		${Testdata_Patch[5]}		${etag}
	${resp} = 		Fusion Api Patch Ipv4 Range 	${patch_body}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${202}
	Validate Response	${resp}	${valDict} 

OVF511_API_PATCH_TC_11 - REMOVE THE EG RESOURCE FROM RANGE USING PATCH WITH FORCE
	#Associate Range to Patch
	${uri} =	Get Subnet URI	 ${Testdata_Patch[0]['networkId']}
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
    ${etag} =	Get From Dictionary		${resp}		eTag
    #${resp} =   fusion api get ipv4 subnet		uri=${uri}
    ${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
    ${body} =	 Add EG Patch Body		${Testdata_Patch[7]}		${etag}
	${resp} = 		Fusion Api Patch Ipv4 Subnet 	${body}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${202}
	Validate Response	${resp}	${valDict}
	#Remove using Force 
	${uri} =	Get Subnet URI	 ${Testdata_Patch[0]['networkId']}
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
    ${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
    ${resp}=	fusion api get ipv4 range	uri=${rangeuri[0]}
    ${etag} =	Get From Dictionary		${resp}		eTag
    ${patch_body} = 	Remove Patch Operation		${Testdata_Patch[5]}		${etag}
	${resp} = 		Fusion Api Patch Ipv4 Range 	${patch_body}		uri=${rangeuri[0]}	param=?force=True
	${valDict} = 	Create Dictionary	status_code=${202}
	Validate Response	${resp}	${valDict} 
	
OVF511_API_PATCH_TC_12 - REMOVE THE EG RESOURCE FROM RANGE WHOSE IP IS ALLOCATED USING PATCH
	#Associate Range to Patch
	${uri} =	Get Subnet URI	 ${Testdata_Patch[0]['networkId']}
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
    ${etag} =	Get From Dictionary		${resp}		eTag
    ${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
    ${body} =	 Add EG Patch Body		${Testdata_Patch[7]}		${etag}
	${resp} = 		Fusion Api Patch Ipv4 Subnet 	${body}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${202}
	Validate Response	${resp}	${valDict}
	#Allocate IP from the Associated Subnet
	${uri} =	Get Subnet URI	${Testdata_Patch[0]['networkId']}
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
    ${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp} = 	Fusion Api Allocate Ipv4 Range		${Testdata_Patch[6]}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary		status_code=${200}
	Validate Response	${resp}	${valDict}
	${uri} =	Get Subnet URI	 ${Testdata_Patch[0]['networkId']}
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
    ${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
    ${resp}=	fusion api get ipv4 range	uri=${rangeuri[0]}
    ${etag} =	Get From Dictionary		${resp}		eTag
    ${patch_body} = 	Remove Patch Operation		${Testdata_Patch[5]}		${etag}
	${resp} = 		Fusion Api Patch Ipv4 Range 	${patch_body}		uri=${rangeuri[0]}	
	${valDict} = 	Create Dictionary		status_code=${400}
	...										errorCode=DISSOCIATION_NOT_ALLOWED
	Validate Response	${resp}	${valDict}

OVF511_API_PATCH_TC_13 - REMOVE THE EG RESOURCE FROM RANGE WHOSE IP IS ALLOCATED USING PATCH WITH FORCE
	${uri} =	Get Subnet URI	 ${Testdata_Patch[0]['networkId']}
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
    ${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
    ${resp}=	fusion api get ipv4 range	uri=${rangeuri[0]}
    ${etag} =	Get From Dictionary		${resp}		eTag
    ${patch_body} = 	Remove Patch Operation		${Testdata_Patch[5]}		${etag}
	${resp} = 		Fusion Api Patch Ipv4 Range 	${patch_body}		uri=${rangeuri[0]}	param=?force=True
	${valDict} = 	Create Dictionary	status_code=${202}
	Validate Response	${resp}	${valDict} 

OVF511_API_PATCH_TC_01 - PATCH A RANGE TO EG WITH EMPTY RESOURCE NAME- UNKNOWN
	${uri} =	Get Subnet URI	 ${Testdata_Patch[0]['networkId']}
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
    ${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
    ${resp}=	fusion api get ipv4 range	uri=${rangeuri[0]}
    ${etag} =	Get From Dictionary		${resp}		eTag
    ${val} = 	Get From Dictionary 	${Testdata_Patch[8]}	operations
	${temp} = 	Get From List	${val}    0
	${rec} =	Get From Dictionary		${temp}		value
    ${egUris} = 		Get Enclosure Group URI		enc_groups_patch
	Set to dictionary	${rec}		resourceUri=${egUris}
	${resp} = 		Fusion Api Patch Ipv4 Range 	${Testdata_Patch[8]}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${202}
	Validate Response	${resp}	${valDict}
	${uri} =	Get Subnet URI	 ${Testdata_Patch[0]['networkId']}
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
    ${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
    ${resp}=	fusion api get ipv4 range	uri=${rangeuri[0]}
    ${associated_resource} = 	Get From Dictionary 	${resp}		associatedResources
    ${resourceCategory} = 	Get From List	${associated_resource}		0
	${resource_name} = 		Get From Dictionary		${resourceCategory}		resourceName
    Should Be Equal As Strings		${resource_name} 	UNKNOWN
    
OVF511_API_PATCH_TC_14 - REMOVE THE EG RESOURCE UNKNOWN FROM RANGE
	#Delete the UNKNOWN eg that is created
	${uri} =	Get Subnet URI	 ${Testdata_Patch[0]['networkId']}
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
    ${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
    ${resp}=	fusion api get ipv4 range	uri=${rangeuri[0]}
    ${etag} =	Get From Dictionary		${resp}		eTag
    ${patch_body} = 	Remove Patch Operation		${Testdata_Patch[5]}		${etag}
	${resp} = 		Fusion Api Patch Ipv4 Range 	${patch_body}		uri=${rangeuri[0]}	param=?force=True
	${valDict} = 	Create Dictionary	status_code=${202}
	Validate Response	${resp}	${valDict} 

OVF511_API_PATCH_TC_15 - INVALID OP VALUE
	${uri} =	Get Subnet URI	 ${Testdata_Patch[0]['networkId']}
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
    ${etag} =	Get From Dictionary		${resp}		eTag
    ${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
    ${body} =	 Add EG Patch Body		${Testdata_Patch[9]}		${etag}
	${resp} = 		Fusion Api Patch Ipv4 Subnet 	${body}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=INVALID_JSON_TYPE
	Validate Response	${resp}	${valDict}

OVF511_API_PATCH_TC_16 - VALUE OF OP MISSING
	${uri} =	Get Subnet URI	 ${Testdata_Patch[0]['networkId']}
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
    ${etag} =	Get From Dictionary		${resp}		eTag
    ${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
    ${body} =	 Add EG Patch Body		${Testdata_Patch[10]}		${etag}
	${resp} = 		Fusion Api Patch Ipv4 Subnet 	${body}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=INVALID_JSON_TYPE
	Validate Response	${resp}	${valDict}

OVF511_API_PATCH_TC_17 - PATCH OPERATION LIST EMPTY
	${uri} =	Get Subnet URI	 ${Testdata_Patch[0]['networkId']}
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
    ${etag} =	Get From Dictionary		${resp}		eTag
    ${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
    Set to dictionary	${Testdata_Patch[11]}		eTag=${etag} 
	${resp} = 		Fusion Api Patch Ipv4 Subnet 	${Testdata_Patch[11]}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=INVALID_OPERATIONS
	Validate Response	${resp}	${valDict}

OVF511_API_PATCH_TC_18 - INVALID ETAG WHILE ASSOCIATE
	${uri} =	Get Subnet URI	 ${Testdata_Patch[0]['networkId']}
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
    ${etag} =	Get From Dictionary		${resp}		domain
    ${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
    ${body} =	 Add EG Patch Body		${Testdata_Patch[4]}		${etag}
	${resp} = 		Fusion Api Patch Ipv4 Range 	${body}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${412}
	...									errorCode=ETAG_CHECK_FAILED
	Validate Response	${resp}	${valDict}

OVF511_API_PATCH_TC_19 - INVALID RESOURCE URI WHILE ASSOCIATE
	${uri} =	Get Subnet URI	 ${Testdata_Patch[0]['networkId']}
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
    ${etag} =	Get From Dictionary		${resp}		eTag
    ${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp} = 		Fusion Api Patch Ipv4 Subnet 	${Testdata_Patch[12]}	uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=INVALID_RESOURCE_URI
	Validate Response	${resp}	${valDict}

CLEAN-UP BEFORE EXIT
	#DELETE THE EG
	${resp}=	Remove ALL Enclosure Groups
    #REMOVE ALL NETWORKS
	${resp}=	Remove All Ethernet Networks
	${resp1}=	Remove All FC Networks
	${resp2}=	Remove All FCoE Networks
    #REMOVE ALL SUBNET
	${resp}= 	Remove All Subnets

LOGOUT
	${resp}=	Fusion Api Logout Appliance

#-------------------PATCH ENDS-----


#---------------------LE STARTS-----------
Login to Appliance
	${resp}=	Fusion Api Login Appliance 		${APPLIANCE_IP}		${admin_credentials}



CLEAN-UP BEFORE START
	#DELETE THE EG
	${resp}=	Remove ALL Enclosure Groups
    #REMOVE ALL NETWORKS
	${resp}=	Remove All Ethernet Networks
	${resp1}=	Remove All FC Networks
	${resp2}=	Remove All FCoE Networks
    #REMOVE ALL SUBNET
	${resp}= 	Remove All Subnets

CREATE PRE CONDITION DATA FOR LE TEST CASES
	Log to Console	CREATE PRE CONDITION DATA FOR LE TEST CASES
	#CREATE SUBNET AND RANGE
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_LE[0]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_LE[3]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${range}=   Build IPV4 Range Body    	${Testdata_LE[1]}      ${Testdata_LE[0]['networkId']}
	${resp}=	Fusion Api Create Ipv4 Range	${range}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${range}=   Build IPV4 Range Body    	${Testdata_LE[4]}      ${Testdata_LE[3]['networkId']}
	${resp}=	Fusion Api Create Ipv4 Range	${range}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	#Create LIG
	Log to console    Create Logical Interconnect group - LIG_2_ENCL_DCS
	${ligs}=  Create LIG TBird Payload   ${Testdata_LE[6]}
    Log to Console and logfile    CreateLIG2 ${ligs['name']} 
    ${resp}=  fusion api create lig     ${ligs}
    ${task}=  Wait For Task       ${resp}     300s  30s


OVF511_API_ALLOCATE_TC_42 - CREATE AN EG WITH AN DISABLED RANGE
	# Disable Range
	${uri} =	Get Subnet URI	${Testdata_LE[0]['networkId']}
	${resp} =   Fusion Api Get Ipv4 Subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp} = 		Fusion Api Edit Ipv4 Range	 	body=${range_disable[0]}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	#Create EG
 	${enc_body} =	Create EG Body with Associate Range Hellfire 	${Testdata_LE[7]}	EG_2_ENCL_DCS	 ${rangeuri}
	${resp} =		Fusion Api Create Enclosure Group	${enc_body}
	${valDict} = 	Create Dictionary	status_code=${201}
	Validate Response	${resp}	${valDict}

OVF511_API_ALLOCATE_TC_43 - ENABLE THE RANGE WHICH IS ASSOCIATED WITH AN EG
	${uri} =	Get Subnet URI	${Testdata_LE[0]['networkId']}
	${resp} =   Fusion Api Get Ipv4 Subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp} = 		Fusion Api Edit Ipv4 Range	 	body=${range_enable[0]}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}

OVF511_API_ALLOCATE_TC_45 - ASSOCIATE A RANGE TO MULTIPLE EG
	${uri} =	Get Subnet URI	${Testdata_LE[0]['networkId']}
	${resp} =   Fusion Api Get Ipv4 Subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
 	${enc_body} =	Create EG Body with Associate Range Hellfire 	${Testdata_LE[8]}	EG_2_ENCL_DCS_2	 ${rangeuri}
	${resp} =		Fusion Api Create Enclosure Group	${enc_body}
	${valDict} = 	Create Dictionary	status_code=${201}
	Validate Response	${resp}	${valDict}

OVF511_API_ALLOCATE_TC_44 - DELETE THE EG ASSOCIATED WITH A RANGE
	${encuri}=		Get Enclosure Group URI		EG_2_ENCL_DCS_2
	${resp}=	Fusion Api Delete Enclosure Group	uri=${encuri}
	${valDict} = 	Create Dictionary	status_code=${204}
	Validate Response	${resp}	${valDict}

OVF511_API_ALLOCATE_TC_48 - DELETE THE RANGE WHICH IS ASSOCIATED WITH THE EG
	${uri} =	Get Subnet URI	${Testdata_LE[0]['networkId']}
	${resp} =   Fusion Api Get Ipv4 Subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp} = 			Fusion Api Delete Ipv4 Range	 	uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=HAS_ASSOCIATED_RESOURCES
	Validate Response	${resp}	${valDict}

OVF511_API_ALLOCATE_TC_49 - DELETE THE SUBNET WHOSE RANGE IS ASSOCIATED WITH THE EG
	${uri} =	Get Subnet URI	${Testdata_LE[0]['networkId']}
	${resp} =   Fusion Api Get Ipv4 Subnet		uri=${uri}
	${resp} =       Fusion Api Delete Ipv4 Subnet   		 uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=HAS_ASSOCIATED_RESOURCES
	Validate Response	${resp}	${valDict}  
	
OVF511_API_ALLOCATE_TC_46 - ASSOCIATE MULTIPLE RANGE FROM A MULTIPLE SUBNET TO A SINGLE EG
	${uri} =	Get Subnet URI	${Testdata_LE[0]['networkId']}
	${resp} =   Fusion Api Get Ipv4 Subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${uri2} =	Get Subnet URI	${Testdata_LE[3]['networkId']}
	${resp2} =   Fusion Api Get Ipv4 Subnet		uri=${uri2}
	${rangeuri2} =     Get From Dictionary     ${resp2}    rangeUris
	${range_uri_list} =	 Create List
	Append to List	${range_uri_list}	${rangeuri[0]}
	Append to List	${range_uri_list}	${rangeuri2[0]}
 	${enc_body} =	Create EG Body with Associate Range Hellfire 	${Testdata_LE[9]}	EG_2_subnet_2_Range	 ${range_uri_list}
	${resp} =		Fusion Api Create Enclosure Group	${enc_body}
	${valDict} = 	Create Dictionary	status_code=${201}
	Validate Response	${resp}	${valDict}

OVF511_API_ALLOCATE_TC_47 - ASSOCIATE MULTIPLE RANGE FROM SINGLE SUBNET TO A SINGLE EG
	#create the 2nd range
	${range}=   Build IPV4 Range Body    	${Testdata_LE[2]}      ${Testdata_LE[0]['networkId']}
	${resp}=	Fusion Api Create Ipv4 Range	${range}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${uri} =	Get Subnet URI	${Testdata_LE[0]['networkId']}
	${resp} =   Fusion Api Get Ipv4 Subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${range_uri_list} =	 Create List
	Append to List	${range_uri_list}	${rangeuri[1]}
	Append to List	${range_uri_list}	${rangeuri[0]}
 	${enc_body} =	Create EG Body with Associate Range Hellfire 	${Testdata_LE[10]}	EG_1_Subnet_2_Range	 ${range_uri_list}
	${resp} =		Fusion Api Create Enclosure Group	${enc_body}
	${valDict} = 	Create Dictionary	status_code=${201}
	Validate Response	${resp}	${valDict}
	
PRE-CONDITION BEFORE LE
	#Remove all the EG
	${resp}=	Remove ALL Enclosure Groups
	#Remove all the Subnets
	${resp}= 	Remove All Subnets
	#CREATE SUBNET AND RANGE
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_LE[0]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${range}=   Build IPV4 Range Body    	${Testdata_LE[1]}      ${Testdata_LE[0]['networkId']}
	${resp}=	Fusion Api Create Ipv4 Range	${range}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	#Create a EG and Associate the Range
	${uri} =	Get Subnet URI	${Testdata_LE[0]['networkId']}
	${resp} =   Fusion Api Get Ipv4 Subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${enc_body} =	Create EG Body with Associate Range Hellfire 	${Testdata_LE[7]}	EG_2_ENCL_DCS	 ${rangeuri}
	${resp} =		Fusion Api Create Enclosure Group	${enc_body}
	${valDict} = 	Create Dictionary	status_code=${201}
	Validate Response	${resp}	${valDict}


CREATE LE LE_2_ENCL_DCS          
  	${le}=  Fusion Api Get Logical Enclosure
    ${resp}=	 Add Logical Enclosure from variable       ${Testdata_LE[11]}
	${status}  ${task_uri} =  Run Keyword and Ignore Error  Get From Dictionary  ${resp['headers']}  location

OVF511_API_ALLOCATE_TC_52 - DELETE THE RANGE WHOSE IP'S ARE ALLOCATED AFTER LE CREATION
	${uri} =	Get Subnet URI	${Testdata_LE[0]['networkId']}
	${resp} =   Fusion Api Get Ipv4 Subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp} = 			Fusion Api Delete Ipv4 Range	 	uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=HAS_IPS_IN_USE
	Validate Response	${resp}	${valDict}

OVF511_API_ALLOCATE_TC_53 - DELETE THE SUBNET WHOSE IP'S ARE ALLOCATED AFTER LE CREATION
	${uri} =	Get Subnet URI	${Testdata_LE[0]['networkId']}
	${resp} =   Fusion Api Get Ipv4 Subnet		uri=${uri}
	${resp} =       Fusion Api Delete Ipv4 Subnet   		 uri=${uri}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=SUBNET_DELETE_NOT_ALLOWED
	Validate Response	${resp}	${valDict} 

OVF511_API_ALLOCATE_TC_54 - VERIFY THAT SERVER GETS ILO IP'S FROM THE ASSOCIATED RANGE
	${uri} =	Get Subnet URI	${Testdata_LE[0]['networkId']}
	${resp} =   Fusion Api Get Ipv4 Subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
   	${resp}=	fusion api get ipv4 range	uri=${rangeuri[0]}		param=allocated-fragments
    ${members1} =     Get From Dictionary     ${resp}    members
	${member_list} = 	Get From List	${members1}		0
	${start_address} = 	Get From Dictionary		${member_list} 		startAddress
	${end_address} = 	Get From Dictionary		${member_list} 		endAddress
	${resp} = 	Fusion Api Get Server Hardware
	${member_count}=	Get From Dictionary		${resp}   count
	${members}=		Get From Dictionary		${resp}   members
	:FOR	${x}	IN RANGE	0	${member_count}
	\	${temp}=	Get From List	${members}		${x}
	\	${mem_name}= 	Get From Dictionary		${temp}   name
	\	${server_host_info}=	 Get From Dictionary     ${temp}    mpHostInfo
	\	${temp1}=		Get From Dictionary		${server_host_info}	  mpIpAddresses
	\	${temp2}=	Get From List	${temp1}		1
	\	${server_ipv4}=		Get From Dictionary		${temp2}	 address
	\	Log		${server_ipv4}
	\	${ip_check}=	IP CHECK FROM RANGE		${start_address}	${end_address}		${server_ipv4}
	\	Log to console 		${mem_name} ${server_ipv4} ${ip_check}
	\	Should Be Equal As Strings		${ip_check} 	${IP_CHECK}

OVF511_API_ALLOCATE_TC_55 - VERIFY THAT ICM GETS ILO IP'S FROM THE ASSOCIATED RANGE
	${uri} =	Get Subnet URI	${Testdata_LE[0]['networkId']}
	${resp} =   Fusion Api Get Ipv4 Subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
    ${resp}=	fusion api get ipv4 range	uri=${rangeuri[0]}		param=allocated-fragments
    ${members1} =     Get From Dictionary     ${resp}    members
	${member_list} = 	Get From List	${members1}		0
	${start_address} = 	Get From Dictionary		${member_list} 		startAddress
	${end_address} = 	Get From Dictionary		${member_list} 		endAddress
	${resp}=	Get IC By Name     Virtual Connect SE 40Gb F8 Module for Synergy
	${l} = 	Get Length	${resp}
	:FOR	${x}	IN RANGE	0	${l}
    \   ${resp1}=		Get From List		${resp}		${x}
    \	${ipAddressList_1}=		Get From Dictionary		${resp1}		ipAddressList
    #\	Log		${ipAddressList_1}
    \	${get_l}=		Get From List		${ipAddressList_1}		0
    #\	Log			${get_l}
    \	${interconnect_ip}=		Get From Dictionary		${get_l}		ipAddress
    \	Log		${interconnect_ip}
    #\	${interconnect_ip}=		Get From Dictionary		${resp1}		interconnectIP
    \	${interconnect_name}=	 Get From Dictionary	${resp1}		name
    \	Log		${interconnect_name}
    \	${ip_check}=	IP CHECK FROM RANGE		${start_address}	${end_address}		${interconnect_ip}
    \	Log to console 	   ${interconnect_name} ${interconnect_ip} ${ip_check}
	\	Should Be Equal As Strings		${ip_check} 	${IP_CHECK}

OVF511_API_ALLOCATE_TC_56 - VERIFY THAT THE RANGE SHOWS THE ASSOCIATED EG AND LE NAMES
	${uri} =	Get Subnet URI	${Testdata_LE[0]['networkId']}
	${resp} =   Fusion Api Get Ipv4 Subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
    ${resp1}=	fusion api get ipv4 range	uri=${rangeuri[0]}	
    ${resources_associated}=	Get From Dictionary     ${resp1}    associatedResources
    ${resources_associated_LE}=	Get From List	${resources_associated}		1
	${resources_name_LE}=	Get From Dictionary     ${resources_associated_LE}    resourceName
    ${resources_associated_EG}=	Get From List	${resources_associated}		0
	${resources_name_EG}=	Get From Dictionary     ${resources_associated_EG}    resourceName
	${resource_list} =	 Create List
	Append to List	${resource_list}	${resources_name_EG}
	Append to List	${resource_list}	${resources_name_LE}
	Should contain   ${resource_list}	${Testdata_LE[11]['name']}
	Should contain   ${resource_list}	${Testdata_LE[7]['name']}

OVF511_API_ALLOCATE_TC_57 - DELETE THE LE AND VERIFY THAT THE SERVER ILO IP'S ARE FREED WHICH ARE ALLOCATED FROM THE DEFINED RANGE
	Log to Console 	DELETING LE_2_ENCL_DCS 
	${leuri}=   	Get Logical Enclosure URI	 LE_2_ENCL_DCS
	${resp}=	Fusion Api Delete Logical Enclosure		uri=${leuri}	param=?force=True
	${status}  ${task_uri} =  Run Keyword and Ignore Error  Get From Dictionary  ${resp['headers']}  location
	${task} =    Wait For Task     ${resp}     timeout=${timeout}  interval=${interval}  
	${uri} =	Get Subnet URI	${Testdata_LE[0]['networkId']}
	${resp} =   Fusion Api Get Ipv4 Subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
    ${resp}=	fusion api get ipv4 range	uri=${rangeuri[0]}
    Log		${resp}
	${start_address} = 	Get From Dictionary		${resp} 		startAddress
	${end_address} = 	Get From Dictionary		${resp} 		endAddress
	${resp} = 	Fusion Api Get Server Hardware
	${member_count}=	Get From Dictionary		${resp}   count
	${members}=		Get From Dictionary		${resp}   members
	:FOR	${x}	IN RANGE	0	${member_count}
	\	${temp}=	Get From List	${members}		${x}
	\	${mem_name}= 	Get From Dictionary		${temp}   name
	\	${server_host_info}=	 Get From Dictionary     ${temp}    mpHostInfo
	\	${temp1}=		Get From Dictionary		${server_host_info}	  mpIpAddresses
	\	${temp2}=	Get From List	${temp1}		1
	\	${server_ipv4}=		Get From Dictionary		${temp2}	 address
	\	Log		${server_ipv4}
	\	${ip_check}=	IP CHECK FROM RANGE		${start_address}	${end_address}		${server_ipv4}
	\	Log		${ip_check}
	\	Log to console 		${mem_name} ${server_ipv4} ${ip_check}
	\	Should Be Equal As Strings		${ip_check} 	${IP_CHECK_FALSE}

OVF511_API_ALLOCATE_TC_58 - DELETE THE LE AND VERIFY THAT THE ICM ILO IP'S ARE FREED WHICH ARE ALLOCATED FROM THE DEFINED RANGE
	${uri} =	Get Subnet URI	${Testdata_LE[0]['networkId']}
	${resp} =   Fusion Api Get Ipv4 Subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
    ${resp}=	fusion api get ipv4 range	uri=${rangeuri[0]}
    Log		${resp}
	${start_address} = 	Get From Dictionary		${resp} 		startAddress
	${end_address} = 	Get From Dictionary		${resp} 		endAddress
	${resp}=	Get IC By Name     Virtual Connect SE 40Gb F8 Module for Synergy
	${l} = 	Get Length	${resp}
	:FOR	${x}	IN RANGE	0	${l}
    \   ${resp1}=		Get From List		${resp}		${x}
    \	${ipAddressList_1}=		Get From Dictionary		${resp1}		ipAddressList
    #\	Log		${ipAddressList_1}
    \	${get_l}=		Get From List		${ipAddressList_1}		0
    #\	Log			${get_l}
    \	${interconnect_ip}=		Get From Dictionary		${get_l}		ipAddress
    \	Log		${interconnect_ip}
    #\	${interconnect_ip}=		Get From Dictionary		${resp1}		interconnectIP
    \	${interconnect_name}=	 Get From Dictionary	${resp1}		name
    \	Log		${interconnect_name}
    \	${ip_check}=	IP CHECK FROM RANGE		${start_address}	${end_address}		${interconnect_ip}
    \	Log to console 	   ${interconnect_name} ${interconnect_ip} ${ip_check}
	\	Should Be Equal As Strings		${ip_check} 	${IP_CHECK_FALSE} 

OVF511_API_ALLOCATE_TC_59 - VERIFY THAT THE RANGE HAS ALL THE IP'S FREE AFTER THE LE IS DELETED
	${uri} =	Get Subnet URI	${Testdata_LE[0]['networkId']}
	${resp} =   Fusion Api Get Ipv4 Subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp} = 	Fusion Api Get Ipv4 Range	 	uri=${rangeuri[0]}
	${freeId_count} =     Get From Dictionary     ${resp}    freeIdCount
	${freed}= 	set variable	${freeId_count}
	${total_count} =     Get From Dictionary     ${resp}    totalCount
	${total}=	set variable	${totalCount}
	${check} = 	Evaluate	${total}==${freed}
	Should Be Equal As Strings		${check} 	True

CLEAN-UP 
	#DELETE THE EG
	${resp}=	Remove ALL Enclosure Groups
	#DELETE THE LIG
	${resp}= 	Remove ALL LIGs
    #REMOVE ALL NETWORKS
	${resp}=	Remove All Ethernet Networks
	${resp1}=	Remove All FC Networks
	${resp2}=	Remove All FCoE Networks
    #REMOVE ALL SUBNET
	${resp}= 	Remove All Subnets
	#All users
	${resp}= 	Remove ALL Users
		
		
PRE-CONDITION SETUP
	#CREATE SUBNET AND RANGE
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_LE[0]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${range}=   Build IPV4 Range Body    	${Testdata_LE[1]}      ${Testdata_LE[0]['networkId']}
	${resp}=	Fusion Api Create Ipv4 Range	${range}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	#Create LIG
	Log to console    Create Logical Interconnect group - LIG_2_ENCL_DCS
	${ligs}=  Create LIG TBird Payload   ${Testdata_LE[6]}
    Log to Console and logfile    CreateLIG2 ${ligs['name']} 
    ${resp}=  fusion api create lig     ${ligs}
    ${task}=  Wait For Task       ${resp}     300s  30s
	#Create a EG and Associate the Range
	${uri} =	Get Subnet URI	${Testdata_LE[0]['networkId']}
	${resp} =   Fusion Api Get Ipv4 Subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${enc_body} =	Create EG Body with Associate Range Hellfire 	${Testdata_LE[7]}	EG_2_ENCL_DCS	 ${rangeuri}
	${resp} =		Fusion Api Create Enclosure Group	${enc_body}
	${valDict} = 	Create Dictionary	status_code=${201}
	Validate Response	${resp}	${valDict}

OVF511_API_ALLOCATE_TC_62 - ASSOCIATE A SUBNET OF AN ASSOCIATED RANGE
	${network_body}=	Build Network Body For Create	${Testdata_LE[12]}	${Testdata_LE[0]['networkId']}
	${resp} = 	Fusion Api Create Ethernet Network		body=${network_body}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=CRM_NETWORK_TO_SUBNET_ASSOCIATION_FAILED_RANGES_ALREADY_ASSOCIATED
	Validate Response	${resp}	${valDict}

OVF511_API_ALLOCATE_TC_63 - ASSOCIATE A SUBNET OF AN ALLOCATED RANGE
	#Allocate 1 IP from the Associated Range
	${uri} =	Get Subnet URI	${Testdata_LE[0]['networkId']}
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
    ${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp} = 	Fusion Api Allocate Ipv4 Range		${Testdata_LE[5]}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary		status_code=${200}
	Validate Response	${resp}	${valDict}
	#Associate a Subnet
	${network_body}=	Build Network Body For Create	${Testdata_LE[12]}	${Testdata_LE[0]['networkId']}
	${resp} = 	Fusion Api Create Ethernet Network		body=${network_body}
	${valDict} = 	Create Dictionary	status_code=${400}
	...									errorCode=CRM_NETWORK_TO_SUBNET_ASSOCIATION_FAILED_RANGES_ALREADY_ASSOCIATED
	Validate Response	${resp}	${valDict}


#OVF511_API_ALLOCATE_TC_64 - ASSOCIATE A RANGE WHOSE SUBNET ALREADY ASSOCIATED - BLOCKED -(OVD3659)
#OVF511_API_ALLOCATE_TC_65 - ASSOCIATE A RANGE WHOSE SUBNET'S IP IS ALREADY ALLOCATED - BLOCKED -(OVD3659) 

CLEAN-UP 
	#COLLECT THE IP
	${uri} =	Get Subnet URI	${Testdata_LE[0]['networkId']}
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
    ${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp} = 	Fusion Api Collect Ipv4 Range		${Testdata_LE[5]}		uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary		status_code=${200}
	Validate Response	${resp}	${valDict}
	#DELETE THE EG
	${resp}=	Remove ALL Enclosure Groups
	#DELETE THE LIG
	${resp}= 	Remove ALL LIGs
    #REMOVE ALL NETWORKS
	${resp}=	Remove All Ethernet Networks
	${resp1}=	Remove All FC Networks
	${resp2}=	Remove All FCoE Networks
    #REMOVE ALL SUBNET
	${resp}= 	Remove All Subnets
	#All users
	${resp}= 	Remove ALL Users

PRE-CONDT FOR TEST CASE
	#CREATE SUBNET AND RANGE
	${resp} =	Fusion Api Create Ipv4 Subnet	 body=${Testdata_LE[0]}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${range}=   Build IPV4 Range Body    	${Testdata_LE[1]}      ${Testdata_LE[0]['networkId']}
	${resp}=	Fusion Api Create Ipv4 Range	${range}
	${valDict} = 	Create Dictionary	status_code=${200}
	Validate Response	${resp}	${valDict}
	${network_body}=	Build Network Body For Create	${Testdata_LE[12]}	${Testdata_LE[0]['networkId']}
	${resp} = 	Fusion Api Create Ethernet Network		body=${network_body}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}

OVF511_API_NETWORK_TC_10 - EDIT THE NETWORK NAME AFTER ASSOCIATING WITH A SUBNET
	${net_body} 	Copy Dictionary 	${Testdata_LE[12]}
	${name1}	Get From Dictionary	${Testdata_LE[13]}	name
	Set to dictionary	${net_body}		name=${name1[0]} 
	${neturi}=	Get Ethernet URI	${Testdata_LE[12]['name']}
	${resp1} =	Fusion Api Get Ethernet Networks		uri=${neturi}
	${connection_temp}=		Get From Dictionary		 ${resp1}	connectionTemplateUri
	Set to dictionary	${net_body}		connectionTemplateUri=${connection_temp}
	${neturi}=	Get Ethernet URI	${Testdata_LE[12]['name']}
	${resp} = 	Fusion Api Edit Ethernet Network		body=${net_body}	uri=${neturi}
	${task} =    Wait For Task     ${resp}     120s    
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}
	
CLEAN UP AND EXIT 
    #REMOVE ALL NETWORKS
	${resp}=	Remove All Ethernet Networks
	${resp1}=	Remove All FC Networks
	${resp2}=	Remove All FCoE Networks
    #REMOVE ALL SUBNET
	${resp}= 	Remove All Subnets
	#All users
	${resp}= 	Remove ALL Users
	
#---------------------LE ENDS-----------

*** Keywords ***

Remove All Subnets
	[Documentation] 		Delete all the existing Subnets in the Appliance
    ${resp} =   fusion api get ipv4 subnet	
    ${subnetcounts} =     Get From Dictionary     ${resp}    members
	${l} = 	Get Length	${subnetcounts}
	:FOR	${x}	IN RANGE	0	${l}
    \   ${subnet} =     Get From List   ${subnetcounts}    ${x}
    \	${subnet_uri} =     Get From Dictionary     ${subnet}	uri
    \	${resp} =       Fusion Api Delete Ipv4 Range   		 uri=${subnet_uri}
    [Return]
 
Get Subnet URI
	[Arguments] 			${NETWORK_ID}
    ${resp} =   fusion api get ipv4 subnet	
    ${subnetcounts} =     Get From Dictionary     ${resp}    members
	${l} = 	Get Length	${subnetcounts}
	:FOR	${x}	IN RANGE	0	${l}
    \   ${subnet} =     Get From List   ${subnetcounts}    ${x}
    \	Exit For Loop If 	'${subnet['networkId']}' == '${NETWORK_ID}'
    ${subnet_uri} =     Get From Dictionary     ${subnet}	uri
	[Return]    ${subnet_uri} 

Build Network Body For Create
	[Documentation]	Select the Subnet Uri and add in the Subnet Uri field of the Request Body to create a Network and associate the Subnet
	[Arguments]		${network_data}		${subnet_id}
	${subnet_uri}=	Get Subnet URI		${subnet_id}
	Set to dictionary	${network_data}		subnetUri=${subnet_uri}
	[Return]	${network_data}

Build Network Body For Edit
	[Documentation]	Select the Subnet Uri and Connection Template abd add in the Request Body to Edit a Network and associate the Subnet
	[Arguments]		${network_data}		${subnet_id}
	${subnet_uri}=	Get Subnet URI		${subnet_id}
	Set to dictionary	${network_data}		subnetUri=${subnet_uri}
	${neturi}=	Get Ethernet URI	${network_data['name']}
	${resp1} =	Fusion Api Get Ethernet Networks		uri=${neturi}
	${connection_temp}=		Get From Dictionary		 ${resp1}	connectionTemplateUri
	Set to dictionary	${network_data}		connectionTemplateUri=${connection_temp}
	[Return]	${network_data}

Build Network Body To Disassociate 
	[Documentation]	Clear the Subnet Uri and Connection Template abd add in the Request Body to Edit a Network and associate the Subnet
	[Arguments]		${network_data}
#	${subnet_uri}=	Get Subnet URI		${subnet_id}
	Set to dictionary	${network_data}		subnetUri=${Network_Subnet_Empty}
	${neturi}=	Get Ethernet URI	${network_data['name']}
	${resp1} =	Fusion Api Get Ethernet Networks		uri=${neturi}
	${connection_temp}=		Get From Dictionary		 ${resp1}	connectionTemplateUri
	Set to dictionary	${network_data}		connectionTemplateUri=${connection_temp}
	[Return]	${network_data}

Build IPV4 Range Body 
	[Documentation]    Build the  Range Body by adding the Subnet Uri in the Range Data
	[Arguments]   	${ipv4ranges}   	${NETWORK_ID}
	${subnet_uri}=	Get Subnet URI	${NETWORK_ID}
	Set to dictionary	${ipv4ranges}	subnetUri=${subnet_uri}
	[Return]	${ipv4ranges}
  
OA AUTH TOKEN
    [Documentation]    issues a CLI to get the Private AUTH token from the OA  
    [Arguments]          ${APPLIANCE_IP}		    
    Run Keyword If	    '${SSH_USER}' is ${null}      Set Suite variable  ${SSH_USER}     root
    Run Keyword If	    '${SSH_PASS}' is ${null}      Set Suite variable  ${SSH_PASS}     hpvse1
    Open Connection And Log In      ${APPLIANCE_IP}
    ${Pri_Key} =          Execute Command         psql -A -t --dbname=cidb --user=postgres -c "select session_id from session.session where username='erm' limit 1"
    Log 	${Pri_Key}
    [Return]   	${Pri_Key}


Add Network Sets from NetworkSet Name
	[Documentation]	Adds Network sets to an appliance from a variable which contains a list of dicts with the entire payload by passing Network Name and NetworkSet Name
	[Arguments]		${networks}		${networkset_name}	
	:FOR	${net}	IN	@{networks}
	\		${networksetname1} =	Get From Dictionary		${net}		name
	\		${networkUris} = 	Get Ethernet URIs	${net['networkUris']}
	\		Run Keyword If	'${networksetname1}'!='${networkset_name}'			Continue For Loop
	\		Set to dictionary	${net}	networkUris	${networkUris}
	\		${network_body}=	Copy Dictionary 	${net}
	[Return]	${network_body}


Create LIG TBird Payload
      [Arguments]       ${ligs}
      Set Log Level    Trace
      ${Potash}=   Get Interconnect Type URI     ${POTASH}
      ${Chloride}=     Get Interconnect Type URI    ${CHLORIDE20}
      ${Response}=   Get From Dictionary     ${ligs}    interconnectMapTemplate
      ${interconnectMapEntryTemplates}=    Create List
      ${interconnectMapEntryTemplates1}=    Get From Dictionary     ${Response}     interconnectMapEntryTemplates
      :For   ${item}   IN   @{interconnectMapEntryTemplates1}
      \     ${ICM}=    Get From Dictionary    ${item}   permittedInterconnectTypeUri
      \   Run keyword If   '${ICM}' == 'Virtual Connect SE 40Gb F8 Module for Synergy'     Set to Dictionary     ${item}   permittedInterconnectTypeUri=${Potash}
      \   Run keyword If   '${ICM}' == '${CHLORIDE20}'     Set to Dictionary     ${item}   permittedInterconnectTypeUri=${Chloride}
      \   Append To List    ${interconnectMapEntryTemplates}     ${item}
      # Create LIG Body
      ${ls}=    Set to Dictionary     ${Response}   interconnectMapEntryTemplates=${interconnectMapEntryTemplates}
      Set to Dictionary   ${ligs}         interconnectMapTemplate=${Response}
      #log to console and logfile  ${ligs}
      [Return]   ${ligs}

Create EG Body with Associate Range 
	[Documentation]	Adds Enclosure Group to an appliance from a variable which contains a list of dicts with the entire payload and also Associate a Range
	[Arguments]		${enc_groups}		${enc_group_name}	${rangeuri}
	Log		${enc_group_name}
	Log		${enc_groups}
	Log		${rangeuri}
	Log to console and logfile  	Adding ENCLOSURE GROUP
	:FOR	${enc_group1}	IN	@{enc_groups}
	\		Log		${enc_group1}
	\		${enc_group_name1} =		Get From Dictionary		${enc_group1}		name
	\		Log 	${enc_group_name1}
	\		Run Keyword If	'${enc_group_name1}'!='${enc_group_name}'		Continue For Loop
	\		Set to dictionary    		${enc_group1}     		ipRangeUris=${rangeuri}
	\		${enc_group_body}=	Copy Dictionary 	${enc_group1}
	\		Log		${enc_group_body}
	Log to console and logfile  	EDITING LIG GROUP
	${l} = 	Get Length	${enc_group_body['interconnectBayMappings']}
	:FOR 	${x}	IN RANGE	0	${l}
	\	${liguri} = 	Get From Dictionary	${enc_group_body['interconnectBayMappings'][${x}]}	logicalInterconnectGroupUri
	\   Continue For Loop If    '${liguri}' == 'None'
	\	${liguri} = 	Common URI Lookup by name    ${liguri}
	\	Set to dictionary	${enc_group_body['interconnectBayMappings'][${x}]}	logicalInterconnectGroupUri		${liguri}
	[Return]	${enc_group_body}

Create EG Body with Associate Range Hellfire
	[Documentation]	Adds Enclosure Group to an appliance from a variable which contains a list of dicts with the entire payload and also Associate a Range
	[Arguments]		${enc_groups}		${enc_group_name}	${rangeuri}
	Log to console and logfile  	Adding ENCLOSURE GROUP
	Set to dictionary    		${enc_groups}     		ipRangeUris=${rangeuri}
	${enc_group_body}=	Copy Dictionary 	${enc_groups}
	#Log		${enc_group_body}
	Log to console and logfile  	EDITING LIG GROUP
	${l} = 	Get Length	${enc_group_body['interconnectBayMappings']}
	:FOR 	${x}	IN RANGE	0	${l}
	\	${liguri} = 	Get From Dictionary	${enc_group_body['interconnectBayMappings'][${x}]}	logicalInterconnectGroupUri
	\   Continue For Loop If    '${liguri}' == 'None'
	\	${liguri} = 	Common URI Lookup by name    ${liguri}
	\	Set to dictionary	${enc_group_body['interconnectBayMappings'][${x}]}	logicalInterconnectGroupUri		${liguri}
	[Return]	${enc_group_body}


Get IC By Name 
	[Arguments]		${ICM_NAME}
    ${resp} =   fusion api get interconnect
    ${ic_list} =    Create List
    ${ics} =     Get From Dictionary     ${resp}    members
    Log		${ics}
	${l} = 	Get Length	${ics}
	Log		${l}
	:FOR	${x}	IN RANGE	0	${l}
    \   ${ic} =     Get From List   ${ics}    ${x}
	\ 	Run Keyword If 	'${ic['productName']}' != '${ICM_NAME}'		Continue For Loop
	\   Append to list      ${ic_list}  ${ic}
	[Return]    ${ic_list}

IP CHECK FROM RANGE
	[Documentation]	This Function will check if the Allocated IP falls withing the Valid Range of the IP
	[Arguments]		${start_address}	${end_address}		${ip_to_check}
	${start_address}=	Remove String	${start_address}	.
	${end_address}=	Remove String	${end_address}	.
	${ip_to_check}=	Remove String	${ip_to_check}	.
	${check}= 		Evaluate 	${start_address}<=${ip_to_check}<=${end_address}
	[Return]	${check}


Get Logical Enclosure URI
	[Arguments]  ${name}
	${resp} = 	Fusion Api Get Logical Enclosure  param=?filter="'name' = '${name}'"
	${count} =  Get From Dictionary  ${resp}  count
	Return from keyword if  $count==0  '/bad_logical_enclosure_uri'
	${uri} = 	Get From Dictionary  ${resp['members'][0]}  uri
	[Return]	${uri}
	
Create Patch Body For Network Add 
	[Documentation]	Creates the Patch Request body for associating Subnet to Network.Requires network patch body and etag as data
	[Arguments]		${network_patch}		${etag}			
	Set to dictionary	${network_patch}		eTag=${etag}
	${val} = 	Get From Dictionary 	${network_patch}	operations
	Log		${val}
	${temp} = 	Get From List	${val}    0
	${rec} =	Get From Dictionary		${temp}		value
	${resourcename} =	Get From Dictionary		${rec}		resourceName
	${networkUris} = 	Get Ethernet URI	${resourcename}
	Set to dictionary	${rec}		resourceUri=${networkUris}
	${network_patch_body}=	Copy Dictionary 	${network_patch}
	[Return]	${network_patch_body}

Add EG Patch Body 
	[Documentation]	Creates the Patch Request body for associating Range to a EG.Requires patch body and etag as data
	[Arguments]		${network_patch}		${etag}			
	Set to dictionary	${network_patch}		eTag=${etag}
	${val} = 	Get From Dictionary 	${network_patch}	operations
	Log		${val}
	${temp} = 	Get From List	${val}    0
	${rec} =	Get From Dictionary		${temp}		value
	${resourcename} =	Get From Dictionary		${rec}		resourceName
	${egUris} = 		Get Enclosure Group URI		enc_groups_patch
	Set to dictionary	${rec}		resourceUri=${egUris}
	${network_patch_body}=	Copy Dictionary 	${network_patch}
	[Return]	${network_patch_body}

Remove Patch Operation
	[Documentation]	Creates the Patch Body for Remove operation by adding the etag 
	[Arguments]		${network_patch}		${etag}			
	Set to dictionary	${network_patch}		eTag=${etag}
	${network_patch_body}=	Copy Dictionary 	${network_patch}
	[Return]	${network_patch_body}

Verify Subnet Data 		
	[Documentation]	Verify the Data of the Subnet Page 
	[Arguments]		${subnet_datafile}		${subnet_runtime}
	${Data_NetworkId}=	Get From Dictionary		${subnet_datafile}	networkId
	${Data_Gateway}=	Get From Dictionary		${subnet_datafile}	gateway
	${Data_Domain}=	Get From Dictionary		${subnet_datafile}	domain
	${Data_Subnetmask}=	Get From Dictionary		${subnet_datafile}	subnetmask
	${dns}=	Get From Dictionary 	${subnet_datafile}		dnsServers
	${dns1}=	Get From List	${dns}	0
	${dns2}=	Get From List	${dns}	1
	${dns3}=	Get From List	${dns}	2
	${uri}=		Get Subnet URI		${subnet_runtime}
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${valDict} = 	Create Dictionary	networkId=${Data_NetworkId}
	...									gateway=${Data_Gateway}
	...									subnetmask=${Data_Subnetmask}
	...									domain=${Data_Domain}
	Validate Response	${resp}	${valDict}
	${resp_dns}= 	Get From Dictionary 	${resp}		dnsServers
	${dns_list} =	 Create List
	${resp_dns1}= 	Get From List 	${resp_dns}		0
	Append to List	${dns_list}	${resp_dns1}
	${resp_dns2}= 	Get From List 	${resp_dns}		1
	Append to List	${dns_list}	${resp_dns2}
	${resp_dns3}= 	Get From List 	${resp_dns}		2
	Append to List	${dns_list}	${resp_dns3}
	Should contain   ${dns_list}	${dns1}    
	Should contain   ${dns_list} 	${dns2}    
	Should contain   ${dns_list}	${dns3}    


Verify Range Data
	[Documentation]	Verify the Data of the Range Page 
	[Arguments]		${range_datafile}		${range_runtime}
	${EndAddress}=	Get From Dictionary		${range_datafile}	endAddress
	${StartAddress}=	Get From Dictionary		${range_datafile}	startAddress
	${Name}=	Get From Dictionary		${range_datafile}	name
	#${subnets}=			Get Subnet		${range_runtime}
	${uri}=		Get Subnet URI		${range_runtime}
	#${uri}=			Get from Subnet				${subnets}			uri
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp}=	fusion api get ipv4 range	uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	endAddress=${EndAddress}
	...									name=${Name}
	...									startAddress=${StartAddress}
	...									category=id-range-IPV4
	Validate Response	${resp}	${valDict}  

Verify Range Data After Allocate
	[Documentation]	Verify the Data of the Range Page after IP's are allocated from that Range 
	[Arguments]		${range_datafile}		${range_name}	${range_runtime}
	${EndAddress}=	Get From Dictionary		${range_datafile}	endAddress
	${StartAddress}=	Get From Dictionary		${range_datafile}	startAddress
	${Name}=	Get From Dictionary		${range_name}	name
	${subnets}=			Get Subnet		${range_runtime}
	${uri}=			Get from Subnet				${subnets}			uri
	${resp} =   fusion api get ipv4 subnet		uri=${uri}
	${rangeuri} =     Get From Dictionary     ${resp}    rangeUris
	${resp}=	fusion api get ipv4 range	uri=${rangeuri[0]}
	${valDict} = 	Create Dictionary	endAddress=${EndAddress}
	...									name=${Name}
	...									startAddress=${StartAddress}
	...									category=id-range-IPV4
	Validate Response	${resp}	${valDict} 


FTS	
	Set Log Level	DEBUG
    Get VM IP   ${VM}
	First Time Setup					password=hpvse123

Test Specific Setup
	Set Log Level	TRACE
	${TEST_NAME} =      Set Variable    TEST-SPECIFIC SETUP
	Run Keyword and Ignore Error    Write To ciDebug Log
	Log to console and logfile	[TEST-SPECIFIC SETUP]
	Fusion Api Login Appliance 		${APPLIANCE_IP}		${admin_credentials}
	${users} =	Get Variable Value	${users}
	Run Keyword If	${users} is not ${null}    Add Users from variable				${users}
	${ethernet_networks} =	Get Variable Value    ${ethernet_networks}
	Run Keyword If	${ethernet_networks} is not ${null}    Add Ethernet Networks from variable	${ethernet_networks}
	${ethernet_ranges} =	Get Variable Value	${ethernet_ranges}
	Run Keyword If	${ethernet_ranges} is not ${null}		Run Keyword for List	${ethernet_ranges}	Create Ethernet Range
	${fc_networks} =	Get Variable Value	${fc_networks}
	Run Keyword If	${fc_networks} is not ${null}    Add FC Networks from variable		${fc_networks}
	${fcoe_networks} =	Get Variable Value	${fcoe_networks}
	Run Keyword If	${fcoe_networks} is not ${null}    Add FCoE Networks from variable		${fcoe_networks}
	${licenses} =	Get Variable Value	${licenses}
	Run Keyword If	${licenses} is not ${null}		Add Licenses from variable		${licenses}

    Login all users     ${users}

Run FTS and test-specific setup
	Set Log Level	TRACE
    FTS
    Test Specific Setup
