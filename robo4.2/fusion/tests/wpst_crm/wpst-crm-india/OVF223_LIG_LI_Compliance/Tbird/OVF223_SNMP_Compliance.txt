*** Settings ***
Documentation        Feature Test:  OVF223
...                  This set of test cases is to verify the feature OVF223 related to Multi_Compliance alert
...
Variables              data_variables.py
Library                data_variables
Resource               ../../../../resource/fusion_api_all_resource_files.txt
Library                Collections
Library                json
Library                OperatingSystem
Library                SSHLibrary
Library                Selenium2Library
Library                Telnet
Library                Dialogs
Library                FusionLibrary
Library                RoboGalaxyLibrary
Library                String
Variables              Expected_messages.py
Library                Multialert.py


*** Variables ***
${APPLIANCE_IP}                 15.212.136.133

*** Test Cases***
Initial Setup

    [Documentation]    Edit LIG-Disable US-Check for alert message in LI
    Set Log Level    TRACE
    Fusion Api Login Appliance         ${APPLIANCE_IP}        ${admin_credentials}

    Remove All Logical Enclosures
    Remove ALL Enclosure Groups
    Remove ALL LIGs
    Remove All Network Sets
    Remove ALL Ethernet Networks
    Remove ALL FC Networks
    Remove ALL FCoE Networks

    :For    ${Enet}    IN    @{Ethernet}
    \    ${Enet1_resp}    Fusion Api Create Ethernet Network    ${Enet}
    \    Run keyword unless    ${Enet1_resp['status_code']}== 202    Fail    "Unable to Create network"

    ${body} =   Build LIG body      ${LIGS_TBird}
    Log to console and logfile    ${body}
    ${lig_resp}    Fusion Api Create LIG    ${body}
    ${task} =   Wait For Task    ${lig_resp}    400s    2s
    Run Keyword If  '${lig_resp['status_code']}' != '202'   fail    ELSE    Log to Console  \n-LIG  created successfully

    ${eg_resp}    Add Enclosure Group from variable    ${enc_group_Tbird}
    Run Keyword If  '${eg_resp['status_code']}' != '201'  Fail    ELSE  log to console   \n-EG created successfully

    ${le_resp}    Add Logical Enclosure from variable    ${Logiacl_Enclosure_Tbird}
    Run Keyword If  '${le_resp['status_code']}' != '200'  Fail    ELSE  log to console   \n-LE created successfully

    ${li_uri} =     Get LI URI   ${LE}-${LIG_1}
    Set Global Variable    ${LIURI}    ${li_uri}

OVF223_TC_1_2_3_26 Enable SNMPv1,v2 LIG_Compliance_Verify update from group in LI
    [Documentation]    Edit LIG-Check for the Compliance alerts and events in LI

    ${Get_lig}    Fusion Api Get Lig    param=?filter="'name'=='${LIGS_TB['name']}'"
    ${Get_lig_body}    Copy Dictionary    ${Get_lig['members']}
    Should Be Equal as Strings      ${Get_lig_body[0]['snmpConfiguration']['enabled']}       ${Snmp_False}       msg=SNMPv1,v2 is enabled.
    ${Edit_lig_body}    ${lig_uri}    Build Edit LIG Body    ${LIGS_TB}    ${Edit_Lig_Snmpv1_v2}
    ${Edit_snmp}    Build SNMP body    ${Edit_lig_body}    ${Snmp_True}
    Set To Dictionary    ${Edit_snmp['snmpConfiguration']}    readCommunity    None
    Set To Dictionary    ${Edit_snmp['snmpConfiguration']}    enabled    ${Snmp_True}

    ${Snmp_edit}    Fusion Api Edit Lig    ${Edit_snmp}    ${lig_uri}
    ${task} =   Wait For Task    ${Snmp_edit}    400s    2s

    Verify LI/LIG Consistent Status    ${Expected_Non_Consistency_Status}    ${LE}-${LIG_1}

    ${lig_uri} =     Get LIG URI   ${LIG_1}
    ${getresp} =    Fusion Api Get Lig   ${lig_uri}
    ${snmp_config} =     Get From Dictionary     ${getresp}  snmpConfiguration
    Log to console and logfile    ${snmp_config}
    ${Comm_string} =    Get From Dictionary     ${snmp_config}   readCommunity
    ${Comm_string1}    Convert To String    ${Comm_string}

    ${Alert_SNMP_ReadCommunity}    Replace String Using Regexp   ${SNMP_V1_V2_ENABLE_WITH_READ_COMMUNITY}    XXX    ${Comm_string1}

    ${SNMP_lig_compliance_alert}    Built the Alert list    ${Alert_SNMP_ReadCommunity}

    ${Alert_message}    Get Alert and Compliance Message    ${SNMP_lig_compliance_alert}

    Perform an LI Update From Group    ${LIURI}

    :For    ${x}    INRANGE    1    3
    \    Wait Until Keyword Succeeds    650s   35 s    Verify Interconnect State    ${Interconnect_${x}}    ${IC_Configured}

    Verify LI/LIG Consistent Status    ${Expected_Consistency_Status}    ${LE}-${LIG_1}

OVF223_TC_4_25 Disable SNMPv1,v2 LIG_Compliance_Edit LI and verify the Alerts are cleared
    [Documentation]    Edit LIG-Check for the Compliance alerts and events in LI
    ${Edit_lig_body}    ${lig_uri}    Build Edit LIG Body    ${LIGS_TB}    ${Edit_Lig_Snmpv1_v2}
    ${Edit_snmp}    Build SNMP body    ${Edit_lig_body}    ${Snmp_False}
    Set To Dictionary    ${Edit_snmp['snmpConfiguration']}    enabled    ${Snmp_False}
    Set To Dictionary    ${Edit_snmp['snmpConfiguration']}    readCommunity    ${Public}

    ${Snmp_edit}    Fusion Api Edit Lig    ${Edit_snmp}    ${lig_uri}
    ${task} =   Wait For Task    ${Snmp_edit}    400s    2s

    Verify LI/LIG Consistent Status    ${Expected_Non_Consistency_Status}    ${LE}-${LIG_1}

    ${SNMP_lig_compliance_alert}    Built the Alert list    ${SNMP_V1_V2_DISABLE}

    ${Alert_message}    Get Alert and Compliance Message    ${SNMP_lig_compliance_alert}

    ${Edit_snmp}    Build SNMP LI body    ${SNMP_Config}    ${Snmp_False}
    ${Edit_snmp_li}    Fusion Api Update snmp configuration    ${Edit_snmp}    ${LIURI}
    ${task} =   Wait For Task    ${Edit_snmp_li}    400s    2s

    :For    ${x}    INRANGE    1    3
    \    Wait Until Keyword Succeeds    650s   35 s    Verify Interconnect State    ${Interconnect_${x}}    ${IC_Configured}

    Verify LI/LIG Consistent Status    ${Expected_Consistency_Status}    ${LE}-${LIG_1}

OVF223_TC_5 Disable SNMPv3 LIG_Compliance
    [Documentation]    Edit LIG-Check for the Compliance alerts and events in LI
    ${Edit_lig_body}    ${lig_uri}    Build Edit LIG Body    ${LIGS_TB}    ${Edit_Lig_Snmpv1_v2}
    ${Edit_snmp}    Build SNMP body    ${Edit_lig_body}    ${Snmp_False}
    Set To Dictionary    ${Edit_snmp['snmpConfiguration']}    v3Enabled    ${Snmp_False}


    ${Snmp_edit}    Fusion Api Edit Lig    ${Edit_snmp}    ${lig_uri}
    ${task} =   Wait For Task    ${Snmp_edit}    400s    2s

    Verify LI/LIG Consistent Status    ${Expected_Non_Consistency_Status}    ${LE}-${LIG_1}

    ${SNMP_lig_compliance_alert}    Built the Alert list    ${SNMP_V3_DISABLE}

    ${Alert_message}    Get Alert and Compliance Message    ${SNMP_lig_compliance_alert}

    Perform an LI Update From Group    ${LIURI}

    :For    ${x}    INRANGE    1    3
    \    Wait Until Keyword Succeeds    650s   35 s    Verify Interconnect State    ${Interconnect_${x}}    ${IC_Configured}

    Verify LI/LIG Consistent Status    ${Expected_Consistency_Status}    ${LE}-${LIG_1}

OVF223_TC_6 Enable SNMPv3 LIG_Compliance
    [Documentation]    Edit LIG-Check for the Compliance alerts and events in LI
    ${Edit_lig_body}    ${lig_uri}    Build Edit LIG Body    ${LIGS_TB}    ${Edit_Lig_Snmpv1_v2}
    ${Edit_snmp}    Build SNMP body    ${Edit_lig_body}    ${Snmp_False}
    Set To Dictionary    ${Edit_snmp['snmpConfiguration']}    v3Enabled    ${Snmp_False}

    ${Snmp_edit}    Fusion Api Edit Lig    ${Edit_snmp}    ${lig_uri}
    ${task} =   Wait For Task    ${Snmp_edit}    400s    2s

    Verify LI/LIG Consistent Status    ${Expected_Non_Consistency_Status}    ${LE}-${LIG_1}

    ${SNMP_lig_compliance_alert}    Built the Alert list    ${SNMP_V3_ENABLE}

    ${Alert_message}    Get Alert and Compliance Message    ${SNMP_lig_compliance_alert}

    Perform an LI Update From Group    ${LIURI}

    :For    ${x}    INRANGE    1    3
    \    Wait Until Keyword Succeeds    650s   35 s    Verify Interconnect State    ${Interconnect_${x}}    ${IC_Configured}

    Verify LI/LIG Consistent Status    ${Expected_Consistency_Status}    ${LE}-${LIG_1}

OVF223_TC_24 Add System contact LIG_Compliance
    [Documentation]    Edit LIG-Check for the Compliance alerts and events in LI
    ${Edit_lig_body}    ${lig_uri}    Build Edit LIG Body    ${LIGS_TB}    ${Edit_Lig_Snmpv1_v2}
    ${Edit_snmp}    Build SNMP body    ${Edit_lig_body}    ${Snmp_False}
    Set To Dictionary    ${Edit_snmp['snmpConfiguration']}    systemContact    ${System_Contact}

    ${Snmp_edit}    Fusion Api Edit Lig    ${Edit_snmp}    ${lig_uri}
    ${task} =   Wait For Task    ${Snmp_edit}    400s    2s

    Verify LI/LIG Consistent Status    ${Expected_Non_Consistency_Status}    ${LE}-${LIG_1}

    ${lig_uri} =     Get LIG URI   ${LIG_1}
    ${getresp} =    Fusion Api Get Lig   ${lig_uri}
    ${snmp_config} =     Get From Dictionary     ${getresp}  snmpConfiguration
    Log to console and logfile    ${snmp_config}
    ${sys_contact} =    Get From Dictionary     ${snmp_config}   systemContact
    ${sys_contact1}    Convert To String    ${sys_contact}

    ${Alert_SNMP_Syscontact}    Replace String Using Regexp   ${SNMP_SYSTEM_CONTACT_CHANGED}    XXX    ${sys_contact1}

    ${SNMP_lig_compliance_alert}    Built the Alert list    ${Alert_SNMP_Syscontact}

    ${Alert_message}    Get Alert and Compliance Message    ${SNMP_lig_compliance_alert}

    Perform an LI Update From Group    ${LIURI}

    :For    ${x}    INRANGE    1    3
    \    Wait Until Keyword Succeeds    650s   35 s    Verify Interconnect State    ${Interconnect_${x}}    ${IC_Configured}

    Verify LI/LIG Consistent Status    ${Expected_Consistency_Status}    ${LE}-${LIG_1}

OVF223_TC_7 Add SNMPv3 user LIG_Compliance
    [Documentation]    Edit LIG-Check for the Compliance alerts and events in LI

    ${Edit_lig_body}    ${lig_uri}    Build Edit LIG Body    ${LIGS_TB}    ${Edit_Lig_Snmpv1_v2}
    #${Edit_snmp}    Build SNMP body    ${Edit_lig_body}    ${Snmp_False}
    Set To Dictionary    ${Edit_lig_body['snmpConfiguration']}    snmpUsers    ${Snmpuser_add_1}

    ${Snmp_edit}    Fusion Api Edit Lig    ${Edit_lig_body}    ${lig_uri}
    ${task} =   Wait For Task    ${Snmp_edit}    400s    2s

    Verify LI/LIG Consistent Status    ${Expected_Non_Consistency_Status}    ${LE}-${LIG_1}

    ${lig_uri} =     Get LIG URI   ${LIG_1}
    ${getresp} =    Fusion Api Get Lig   ${lig_uri}
    ${snmp_config} =     Get From Dictionary     ${getresp}  snmpConfiguration
    Log to console and logfile    ${snmp_config}
    ${snmp_users} =    Get From Dictionary     ${snmp_config}   snmpUsers
    Log to console    \nUser name :${snmp_users}
    ${snmp_user_list}    Create List
    ${User_count}    Get Length    ${snmp_users}
    :For    ${x}    INRANGE    0    ${User_count}
    \    ${snmp_user_name} =    Get From Dictionary     ${snmp_users[${x}]}   snmpV3UserName
    \     Append to List    ${snmp_user_list}    ${snmp_user_name}
    Set Global Variable    ${snmp_user_list}
    ${snmp_user_name1} =    Get From Dictionary     ${Snmpuser_add_1[0]}   snmpV3UserName
    List Should Contain Value    ${snmp_user_list}    ${snmp_user_name1}
    ${snmp_user1}    Convert To String    ${snmp_user_name}

    # Alert Verification with replace string
    ${Alert_SNMP_Add_User}    Replace String Using Regexp   ${SNMP_V3_USERS_ADDED}    XXX    ${snmp_user1}
    ${SNMP_lig_compliance_alert}    Built the Alert list    ${Alert_SNMP_Add_User}
    ${Alert_message}    Get Alert and Compliance Message    ${SNMP_lig_compliance_alert}

    Perform an LI Update From Group    ${LIURI}

    :For    ${x}    INRANGE    1    3
    \    Wait Until Keyword Succeeds    650s   35 s    Verify Interconnect State    ${Interconnect_${x}}    ${IC_Configured}

    Verify LI/LIG Consistent Status    ${Expected_Consistency_Status}    ${LE}-${LIG_1}

OVF223_TC_8 Add Trap Destination LIG_Compliance

    [Documentation]    Edit LIG-Check for the Compliance alerts and events in LI
    ${Get_lig}    Fusion Api Get Lig    param=?filter="'name'=='${LIGS_TB['name']}'"
    ${Get_lig_body}    Copy Dictionary    ${Get_lig['members']}
    ${Edit_lig_body}    ${lig_uri}    Build Edit LIG Body    ${LIGS_TB}    ${Edit_Lig_Snmpv1_v2}
    Set To Dictionary    ${Edit_lig_body['snmpConfiguration']}    trapDestinations    ${TrapDestinations_1}
    Set To Dictionary    ${Edit_lig_body['snmpConfiguration']}    snmpUsers    ${Get_lig_body[0]['snmpConfiguration']['snmpUsers']}

    ${Snmp_edit}    Fusion Api Edit Lig    ${Edit_lig_body}    ${lig_uri}
    ${task} =   Wait For Task    ${Snmp_edit}    400s    2s

    Verify LI/LIG Consistent Status    ${Expected_Non_Consistency_Status}    ${LE}-${LIG_1}

    ${lig_uri} =     Get LIG URI   ${LIG_1}
    ${getresp} =    Fusion Api Get Lig   ${lig_uri}
    ${snmp_config} =     Get From Dictionary     ${getresp}  snmpConfiguration
    Log to console and logfile    ${snmp_config}
    ${snmp_trap} =    Get From Dictionary     ${snmp_config}   trapDestinations
    ${snmp_trap_ip} =    Get From Dictionary     ${snmp_trap[0]}   trapDestination
    ${snmp_trap1}    Convert To String    ${snmp_trap_ip}

    # Alert Verification with replace string
    ${Alert_SNMP_Add_Trap}    Replace String Using Regexp   ${SNMP_TRAP_DESTINATIONS_ADDED}    XXX    ${snmp_trap1}

    ${SNMP_lig_compliance_alert}    Built the Alert list    ${Alert_SNMP_Add_Trap}

    ${Alert_message}    Get Alert and Compliance Message    ${SNMP_lig_compliance_alert}

    ${li_uri} =     Get LI URI   ${LE}-${LIG_1}
    Set Global Variable    ${LIURI}    ${li_uri}
    Perform an LI Update From Group    ${LIURI}

    #${Get_li}    Fusion Api Get Li
    #${Get_li_body}    Copy Dictionary    ${Get_li['members']}
    #${Edit_snmp}    Build SNMP LI body    ${SNMP_Config}    ${Snmp_False}
    #Set To Dictionary    ${Edit_snmp}    trapDestinations    ${TrapDestinations_1}
    #Set To Dictionary    ${Edit_snmp    snmpUsers    ${Get_li_body[0]['snmpConfiguration']['snmpUsers']}
    #${Edit_snmp_li}    Fusion Api Update snmp configuration    ${Edit_snmp}    ${LIURI}
    #${task} =   Wait For Task    ${Edit_snmp_li}    1100s    2s

    :For    ${x}    INRANGE    1    3
    \    Wait Until Keyword Succeeds    650s   35 s    Verify Interconnect State    ${Interconnect_${x}}    ${IC_Configured}

    Verify LI/LIG Consistent Status    ${Expected_Consistency_Status}    ${LE}-${LIG_1}


OVF223_TC_9 Add User_2 SNMPv3 LIG_Compliance
    [Documentation]    Edit LIG-Check for the Compliance alerts and events in LI
    ${Snmp_user_2}    Create List
    ${Get_lig}    Fusion Api Get Lig    param=?filter="'name'=='${LIGS_TB['name']}'"
    ${Get_lig_body}    Copy Dictionary    ${Get_lig['members']}
    Append to List    ${Snmp_user_2}    ${Get_lig_body[0]['snmpConfiguration']['snmpUsers'][0]}
    Append to List    ${Snmp_user_2}    ${Snmpuser_add_2[0]}
    Log to console and logfile    ${Snmp_user_2}
    ${Edit_lig_body}    ${lig_uri}    Build Edit LIG Body    ${LIGS_TB}    ${Edit_Lig_Snmpv1_v2}
    Set To Dictionary    ${Edit_lig_body['snmpConfiguration']}    trapDestinations    ${Get_lig_body[0]['snmpConfiguration']['trapDestinations']}
    Set To Dictionary    ${Edit_lig_body['snmpConfiguration']}    snmpUsers    ${Snmp_user_2}

    ${Snmp_edit}    Fusion Api Edit Lig    ${Edit_lig_body}    ${lig_uri}
    ${task} =   Wait For Task    ${Snmp_edit}    400s    2s

    Verify LI/LIG Consistent Status    ${Expected_Non_Consistency_Status}    ${LE}-${LIG_1}

    ${lig_uri} =     Get LIG URI   ${LIG_1}
    ${getresp} =    Fusion Api Get Lig   ${lig_uri}
    ${snmp_config} =     Get From Dictionary     ${getresp}  snmpConfiguration
    Log to console and logfile    ${snmp_config}
    ${snmp_users} =    Get From Dictionary     ${snmp_config}   snmpUsers
    Log to console    \nUser name :${snmp_users}
    ${snmp_user_list}    Create List
    ${User_count}    Get Length    ${snmp_users}
    :For    ${x}    INRANGE    0    ${User_count}
    \    ${snmp_user_name} =    Get From Dictionary     ${snmp_users[${x}]}   snmpV3UserName
    \     Append to List    ${snmp_user_list}    ${snmp_user_name}
    Log to console    \n\n\nUser List :${snmp_user_list}
    Set Global Variable    ${snmp_user_list}
    ${snmp_user_name1} =    Get From Dictionary     ${Snmpuser_add_2[0]}   snmpV3UserName
    Log to console    \n\n\nBefore User name :${snmp_user_name1}
    List Should Contain Value    ${snmp_user_list}    ${snmp_user_name1}
    ${snmp_user2}    Convert To String    ${snmp_user_name1}
    Log to console    \n\n\nafter User name :${snmp_user2}

    # Alert Verification with replace string
    ${Alert_SNMP_Add_User}    Replace String Using Regexp   ${SNMP_V3_USERS_ADDED}    XXX    ${snmp_user2}
    ${SNMP_lig_compliance_alert}    Built the Alert list    ${Alert_SNMP_Add_User}
    ${Alert_message}    Get Alert and Compliance Message    ${SNMP_lig_compliance_alert}

    Perform an LI Update From Group    ${LIURI}

    :For    ${x}    INRANGE    1    3
    \    Wait Until Keyword Succeeds    650s   35 s    Verify Interconnect State    ${Interconnect_${x}}    ${IC_Configured}

    Verify LI/LIG Consistent Status    ${Expected_Consistency_Status}    ${LE}-${LIG_1}

OVF223_TC_10 Add Trap Destination LIG_Compliance
    [Documentation]    Edit LIG-Check for the Compliance alerts and events in LI
    ${Trap_user_2}    Create List
    ${Get_lig}    Fusion Api Get Lig    param=?filter="'name'=='${LIGS_TB['name']}'"
    ${Get_lig_body}    Copy Dictionary    ${Get_lig['members']}
    Append to List    ${Trap_user_2}    ${Get_lig_body[0]['snmpConfiguration']['trapDestinations'][0]}
    Append to List    ${Trap_user_2}    ${TrapDestinations_2[0]}
    Log to console and logfile    ${Trap_user_2}
    ${Edit_lig_body}    ${lig_uri}    Build Edit LIG Body    ${LIGS_TB}    ${Edit_Lig_Snmpv1_v2}
    Set To Dictionary    ${Edit_lig_body['snmpConfiguration']}    snmpUsers    ${Get_lig_body[0]['snmpConfiguration']['snmpUsers']}
    Set To Dictionary    ${Edit_lig_body['snmpConfiguration']}    trapDestinations    ${Trap_user_2}

    ${Snmp_edit}    Fusion Api Edit Lig    ${Edit_lig_body}    ${lig_uri}
    ${task} =   Wait For Task    ${Snmp_edit}    400s    2s

    Verify LI/LIG Consistent Status    ${Expected_Non_Consistency_Status}    ${LE}-${LIG_1}

    ${lig_uri} =     Get LIG URI   ${LIG_1}
    ${getresp} =    Fusion Api Get Lig   ${lig_uri}
    ${snmp_config} =     Get From Dictionary     ${getresp}  snmpConfiguration
    Log to console and logfile    ${snmp_config}
    ${snmp_trap} =    Get From Dictionary     ${snmp_config}   trapDestinations

    ${snmp_trap_list}    Create List
    ${Trap_count}    Get Length    ${snmp_trap}
    :For    ${x}    INRANGE    0    ${Trap_count}
    \    ${snmp_trap_ip} =    Get From Dictionary     ${snmp_trap[${x}]}   trapDestination
    \     Append to List    ${snmp_trap_list}    ${snmp_trap_ip}


    ${snmp_trap_ip} =    Get From Dictionary     ${TrapDestinations_2[0]}   trapDestination
    Log to console    \n\n\nBefore Trap IP :${snmp_trap_ip}
    List Should Contain Value    ${snmp_trap_list}    ${snmp_trap_ip}
    ${snmp_trap2}    Convert To String    ${snmp_trap_ip}
    Log to console    \n\n\nafter User name :${snmp_trap2}

    # Alert Verification with replace string
    ${Alert_SNMP_Add_Trap}    Replace String Using Regexp   ${SNMP_TRAP_DESTINATIONS_ADDED}    XXX    ${snmp_trap2}
    ${SNMP_lig_compliance_alert}    Built the Alert list    ${Alert_SNMP_Add_Trap}
    ${Alert_message}    Get Alert and Compliance Message    ${SNMP_lig_compliance_alert}

    ${li_uri} =     Get LI URI   ${LE}-${LIG_1}
    Set Global Variable    ${LIURI}    ${li_uri}

    Perform an LI Update From Group    ${LIURI}

    :For    ${x}    INRANGE    1    3
    \    Wait Until Keyword Succeeds    650s   35 s    Verify Interconnect State    ${Interconnect_${x}}    ${IC_Configured}

    Verify LI/LIG Consistent Status    ${Expected_Consistency_Status}    ${LE}-${LIG_1}

OVF223_TC_11 Delete Trap Destination LIG_Compliance
    [Documentation]    Edit LIG-Check for the Compliance alerts and events in LI
    ${Delete_Trap}    Create List
    ${Trap_ips}    Create List
    ${Get_lig}    Fusion Api Get Lig    param=?filter="'name'=='${LIGS_TB['name']}'"
    ${Get_lig_body}    Copy Dictionary    ${Get_lig['members']}
    Append to List    ${Delete_Trap}    ${Get_lig_body[0]['snmpConfiguration']['trapDestinations']}
    Log to console    \n Traps are:${Delete_Trap}
    Set Global Variable    ${Delete_Trap}
    Log to console    \n Traps are in Index 0:${Delete_Trap[0]}

    ${Get_lig}    Fusion Api Get Lig    param=?filter="'name'=='${LIGS_TB['name']}'"
    ${Get_lig_body}    Copy Dictionary    ${Get_lig['members']}
    ${snmp_config} =     Get From Dictionary     ${Get_lig_body}  snmpConfiguration
    Log to console    \n\nConfig is: ${snmp_config}

    ${snmp_trap_dest} =    Get From Dictionary     ${snmp_config}   trapDestinations
    Log to console    \nTRap Details are :${snmp_trap_dest}

    ${Actual_snmp_trap_list}    Create List
    ${Trap_count_1}    Get Length    ${Delete_Trap}
    Log to console    \n Length:${Trap_count_1}

    :For    ${x}    INRANGE    0    ${Trap_count_1}

    \    ${Actual_snmp_trap_ips} =    Get From Dictionary     ${Delete_Trap[${x}]}   trapDestination
    \     Append to List    ${Actual_snmp_trap_list}    ${Actual_snmp_trap_ips}
    Log to console    \n\n\nTrap List :${Actual_snmp_trap_ips}

    ${Edit_lig_body}    ${lig_uri}    Build Edit LIG Body    ${LIGS_TB}    ${Edit_Lig_Snmpv1_v2}
    Set To Dictionary    ${Edit_lig_body['snmpConfiguration']}    snmpUsers    ${Get_lig_body[0]['snmpConfiguration']['snmpUsers']}
    Set To Dictionary    ${Edit_lig_body['snmpConfiguration']}    trapDestinations    ${Delete_Trap[0]}
    Log to console    \n Edit LIG after Build LIG Body:${Edit_lig_body}

    ${Snmp_edit}    Fusion Api Edit Lig    ${Edit_lig_body}    ${lig_uri}
    ${task} =   Wait For Task    ${Snmp_edit}    400s    2s

    Verify LI/LIG Consistent Status    ${Expected_Non_Consistency_Status}    ${LE}-${LIG_1}

    ${lig_uri} =     Get LIG URI   ${LIG_1}
    ${getresp} =    Fusion Api Get Lig   ${lig_uri}
    ${snmp_config} =     Get From Dictionary     ${getresp}  snmpConfiguration
    Log to console and logfile    ${snmp_config}
    ${snmp_trap} =    Get From Dictionary     ${snmp_config}   trapDestinations

    ${snmp_trap_list}    Create List
    ${Trap_count}    Get Length    ${snmp_trap}
    :For    ${x}    INRANGE    0    ${Trap_count}
    \    ${snmp_trap_ip} =    Get From Dictionary     ${snmp_trap[${x}]}   trapDestination
    \     Append to List    ${snmp_trap_list}    ${snmp_trap_ip}
    Log to console    \n\n\nTrap List :${snmp_trap_list}

    ${Expected_snmp_trap_ip} =    Get From Dictionary     ${TrapDestinations_2[0]}   trapDestination
    Log to console    \n\n\nBefore Trap IP :${Expected_snmp_trap_ip}
    List Should Not Contain Value    ${snmp_trap_list}    ${Expected_snmp_trap_ip}
    ${snmp_trap2}    Convert To String    ${Expected_snmp_trap_ip}
    Log to console    \n\n\nAfter trap name :${snmp_trap2}

    # Alert Verification with replace string
    ${Alert_SNMP_Add_Trap}    Replace String Using Regexp   ${SNMP_TRAP_DESTINATIONS_REMOVED}    XXX    ${snmp_trap2}
    ${SNMP_lig_compliance_alert}    Built the Alert list    ${Alert_SNMP_Add_Trap}
    ${Alert_message}    Get Alert and Compliance Message    ${SNMP_lig_compliance_alert}

    ${li_uri} =     Get LI URI   ${LE}-${LIG_1}
    Set Global Variable    ${LIURI}    ${li_uri}

    Perform an LI Update From Group    ${LIURI}

    :For    ${x}    INRANGE    1    3
    \    Wait Until Keyword Succeeds    650s   35 s    Verify Interconnect State    ${Interconnect_${x}}    ${IC_Configured}

    Verify LI/LIG Consistent Status    ${Expected_Consistency_Status}    ${LE}-${LIG_1}

OVF223_TC_12 Delete User LIG_Compliance
    [Documentation]    Edit LIG-Check for the Compliance alerts and events in LI

    ${Delete_user}    Create List
    ${Get_lig}    Fusion Api Get Lig    param=?filter="'name'=='${LIGS_TB['name']}'"
    ${Get_lig_body}    Copy Dictionary    ${Get_lig['members']}
    ${Trap_User_name}    Get From Dictionary    ${Get_lig_body[0]['snmpConfiguration']['trapDestinations'][0]}    userName
    ${User_count}    Get Length    ${Get_lig_body[0]['snmpConfiguration']['snmpUsers']}
    :For    ${x}    INRANGE    0    ${User_count}
    \    ${User_name}    Get From Dictionary    ${Get_lig_body[0]['snmpConfiguration']['snmpUsers'][${x}]}    snmpV3UserName
    \    Run Keyword If    '${Trap_User_name}' != '${User_name}'    Continue For Loop
    \    Append to List    ${Delete_user}    ${Get_lig_body[0]['snmpConfiguration']['snmpUsers'][${x}]}

    :For    ${x}    INRANGE    0    ${User_count}
    \    Run Keyword If    '${Trap_User_name}' == '${User_name}'    Continue For Loop
    \    Set Global Variable    ${Trap_To_be_removed_1}    ${Trap_User_name}
    Log to console and logfile    ${Delete_user}
    ${Edit_lig_body}    ${lig_uri}    Build Edit LIG Body    ${LIGS_TB}    ${Edit_Lig_Snmpv1_v2}
    ${Edit_snmp}    Build SNMP body    ${Edit_lig_body}    ${Snmp_False}
    Set To Dictionary    ${Edit_snmp['snmpConfiguration']}    trapDestinations    ${Get_lig_body[0]['snmpConfiguration']['trapDestinations']}
    Set To Dictionary    ${Edit_snmp['snmpConfiguration']}    snmpUsers    ${Delete_user}

    ${Snmp_edit}    Fusion Api Edit Lig    ${Edit_snmp}    ${lig_uri}
    ${task} =   Wait For Task    ${Snmp_edit}    400s    2s

    Verify LI/LIG Consistent Status    ${Expected_Non_Consistency_Status}    ${LE}-${LIG_1}

    ${Alert_SNMP_Add_Trap}    Replace String Using Regexp   ${SNMP_V3_USERS_REMOVED}    XXX    ${Trap_To_be_removed_1}
    ${SNMP_lig_compliance_alert}    Built the Alert list    ${Alert_SNMP_Add_Trap}
    ${Alert_message}    Get Alert and Compliance Message    ${SNMP_lig_compliance_alert}

    Perform an LI Update From Group    ${LIURI}

    :For    ${x}    INRANGE    1    3
    \    Wait Until Keyword Succeeds    650s   35 s    Verify Interconnect State    ${Interconnect_${x}}    ${IC_Configured}

    Verify LI/LIG Consistent Status    ${Expected_Consistency_Status}    ${LE}-${LIG_1}

OVF223_TC_27 Add SNMP user and Trap Destination LIG_Compliance
    [Documentation]    Edit LIG-Check for the Compliance alerts and events in LI

    ${Snmp_user_3}    Create List
    ${Trap_user_3}    Create List
    ${Get_lig}    Fusion Api Get Lig    param=?filter="'name'=='${LIGS_TB['name']}'"
    ${Get_lig_body}    Copy Dictionary    ${Get_lig['members']}
    Append to List    ${Snmp_user_3}    ${Get_lig_body[0]['snmpConfiguration']['snmpUsers'][0]}
    Append to List    ${Trap_user_3}    ${Get_lig_body[0]['snmpConfiguration']['trapDestinations'][0]}
    Append to List    ${Snmp_user_3}    ${Snmpuser_add_3[0]}
    Append to List    ${Trap_user_3}    ${TrapDestinations_3[0]}

    ${Edit_lig_body}    ${lig_uri}    Build Edit LIG Body    ${LIGS_TB}    ${Edit_Lig_Snmpv1_v2}
    ${Edit_snmp}    Build SNMP body    ${Edit_lig_body}    ${Snmp_False}
    Set To Dictionary    ${Edit_snmp['snmpConfiguration']}    trapDestinations    ${Trap_user_3}
    Set To Dictionary    ${Edit_snmp['snmpConfiguration']}    snmpUsers    ${Snmp_user_2}

    ${Snmp_edit}    Fusion Api Edit Lig    ${Edit_snmp}    ${lig_uri}
    ${task} =   Wait For Task    ${Snmp_edit}    400s    2s

    Verify LI/LIG Consistent Status    ${Expected_Non_Consistency_Status}    ${LE}-${LIG_1}

    ${SNMP_lig_compliance_alert}    Built the Alert list    ${SNMPv3_add_user_trap}

    ${Alert_message}    Get Alert and Compliance Message    ${SNMP_lig_compliance_alert}

    Perform an LI Update From Group    ${LIURI}

    :For    ${x}    INRANGE    1    3
    \    Wait Until Keyword Succeeds    650s   35 s    Verify Interconnect State    ${Interconnect_${x}}    ${IC_Configured}

    Verify LI/LIG Consistent Status    ${Expected_Consistency_Status}    ${LE}-${LIG_1}

OVF223_TC_28 Edit password LIG_Compliance
    [Documentation]    Edit LIG-Check for the Compliance alerts and events in LI
    ${Get_lig}    Fusion Api Get Lig    param=?filter="'name'=='${LIGS_TB['name']}'"
    ${Get_lig_body}    Copy Dictionary    ${Get_lig['members'][0]['snmpConfiguration']}
    Set To Dictionary    ${Get_lig_body['snmpUsers'][0]['userCredentials'][0]}    value    password1234

    ${Edit_lig_body}    ${lig_uri}    Build Edit LIG Body    ${LIGS_TB}    ${Edit_Lig_Snmpv1_v2}
    Set To Dictionary    ${Edit_snmp}    snmpConfiguration    ${Get_lig_body}

    ${Snmp_edit}    Fusion Api Edit Lig    ${Edit_snmp}    ${lig_uri}
    ${task} =   Wait For Task    ${Snmp_edit}    400s    2s

    Verify LI/LIG Consistent Status    ${Expected_Non_Consistency_Status}    ${LE}-${LIG_1}

    ${SNMP_lig_compliance_alert}    Built the Alert list    ${SNMPv3_edit_password}

    ${Alert_message}    Get Alert and Compliance Message    ${SNMP_lig_compliance_alert}

    Perform an LI Update From Group    ${LIURI}

    :For    ${x}    INRANGE    1    3
    \    Wait Until Keyword Succeeds    650s   35 s    Verify Interconnect State    ${Interconnect_${x}}    ${IC_Configured}

    Verify LI/LIG Consistent Status    ${Expected_Consistency_Status}    ${LE}-${LIG_1}


# Back to normal LIG/LI should contains default details , remove all users and trap destinations here like preconditions
OVF223_TC_13_14 Enable SNMPv1,v2 LI_Compliance
    [Documentation]    Edit LI-Check for the Compliance alerts and events in LI
    ${Edit_lig_body}    ${lig_uri}    Build Edit LIG Body    ${LIGS_TB}    ${Edit_Lig_Snmpv1_v2}
    Set To Dictionary    ${Edit_lig_body}    snmpConfiguration    ${Snmp_V1_V2}

    ${Snmp_edit}    Fusion Api Edit Lig    ${Edit_lig_body}    ${lig_uri}
    ${task} =   Wait For Task    ${Snmp_edit}    400s    2s

    ${li_uri} =     Get LI URI   ${LE}-${LIG_1}
    Set Global Variable    ${LIURI}    ${li_uri}
    Perform an LI Update From Group    ${LIURI}

    ${li_uri} =     Get LI URI   ${LE}-${LIG_1}
    log to console    LI URI is ${li_uri}
    ${resp} =    Fusion Api Get Li    ${li_uri}
    log to console  Editing Li with snmp ${resp}
    ${respl} =    Fusion Api Update snmp configuration    body=${edit_Li_snmpv1_v2_Enabled_tbird['snmpConfiguration']}    uri=${li_uri}
    log to console  Editing Li with snmp ${respl}
    ${task} =   Wait For Task    ${respl}    400s    2s

    Verify LI/LIG Consistent Status    ${Expected_Non_Consistency_Status}    ${LE}-${LIG_1}

    ${SNMP_lig_compliance_alert}    Built the Alert list    ${SNMP_V1_V2_DISABLE}

    ${Alert_message}    Get Alert and Compliance Message    ${SNMP_lig_compliance_alert}

    ${lig_uri} =     Get LIG URI   ${LIG_1}
    ${getresp} =    Fusion Api Get Lig   ${lig_uri}


    ${Edit_lig_body}    ${lig_uri}    Build Edit LIG Body    ${LIGS_TB}    ${Edit_Lig_Snmpv1_v2}
    ${Edit_snmp}    Build SNMP body    ${Edit_lig_body}    ${Snmp_True}
    Set To Dictionary    ${Edit_snmp['snmpConfiguration']}    readCommunity    None
    Set To Dictionary    ${Edit_snmp['snmpConfiguration']}    trapDestinations    ${TrapDestinations}
    Log to console    \nresponse :${Edit_snmp}


    ${Snmp_edit}    Fusion Api Edit Lig    ${Edit_snmp}    ${lig_uri}
    ${task} =   Wait For Task    ${Snmp_edit}    400s    2s

    :For    ${x}    INRANGE    1    3
    \    Wait Until Keyword Succeeds    650s   35 s    Verify Interconnect State    ${Interconnect_${x}}    ${IC_Configured}

    Verify LI/LIG Consistent Status    ${Expected_Consistency_Status}    ${LE}-${LIG_1}

OVF223_TC_15 Disable SNMPv1,v2 LI_Compliance

    [Documentation]    Edit LI-Check for the Compliance alerts and events in LI
    ${li_uri} =     Get LI URI   ${LE}-${LIG_1}
    log to console    LI URI is ${li_uri}
    ${resp} =    Fusion Api Get Li    ${li_uri}
    log to console  Editing Li with snmp ${resp}
    ${respl} =    Fusion Api Update snmp configuration    body=${edit_Li_snmpv1_v2_Disabled_tbird['snmpConfiguration']}    uri=${li_uri}
    log to console  Editing Li with snmp ${respl}
    ${task} =   Wait For Task    ${respl}    400s    2s

    Verify LI/LIG Consistent Status    ${Expected_Non_Consistency_Status}    ${LE}-${LIG_1}

    ${lig_uri} =     Get LIG URI   ${LIG_1}
    ${getresp} =    Fusion Api Get Lig   ${lig_uri}
    ${snmp_config_LIG} =     Get From Dictionary     ${getresp}  snmpConfiguration
    Log to console and logfile    ${snmp_config_LIG}
    ${Comm_string} =    Get From Dictionary     ${snmp_config_LIG}   readCommunity
    ${Comm_string1}    Convert To String    ${Comm_string}

    ${Alert_SNMP_ReadCommunity}    Replace String Using Regexp   ${SNMP_V1_V2_ENABLE_WITH_READ_COMMUNITY}    XXX    ${Comm_string1}
    ${SNMP_lig_compliance_alert}    Built the Alert list    ${Alert_SNMP_ReadCommunity}

    ${Alert_message}    Get Alert and Compliance Message    ${SNMP_lig_compliance_alert}

    ${Edit_lig_body}    ${lig_uri}    Build Edit LIG Body    ${LIGS_TB}    ${Edit_Lig_Snmpv1_v2}
    ${Edit_snmp}    Build SNMP body    ${Edit_lig_body}    ${Snmp_False}
    #Set To Dictionary    ${Edit_snmp['snmpConfiguration']}    trapDestinations    ${TrapDestinations}
    Log to console    \nresponse :${Edit_snmp}

    ${Snmp_edit}    Fusion Api Edit Lig    ${Edit_snmp}    ${lig_uri}
    ${task} =   Wait For Task    ${Snmp_edit}    400s    2s

    :For    ${x}    INRANGE    1    3
    \    Wait Until Keyword Succeeds    650s   35 s    Verify Interconnect State    ${Interconnect_${x}}    ${IC_Configured}

    Verify LI/LIG Consistent Status    ${Expected_Consistency_Status}    ${LE}-${LIG_1}

OVF223_TC_18 Add SNMPv3 user LI_Compliance
    [Documentation]    Edit LI-Check for the Compliance alerts and events in LI
    ${Edit_snmp}    Build SNMP LI body    ${edit_Li_snmp_config}    ${Snmp_False}
    Set To Dictionary    ${Edit_snmp}    snmpUsers    ${Snmpuser_add_1}

    ${li_uri} =     Get LI URI   ${LE}-${LIG_1}
    log to console    LI URI is ${li_uri}

    ${respl} =    Fusion Api Update snmp configuration    body=${Edit_snmp}    uri=${li_uri}
    log to console    \n\nLI Resp is ${respl}
    ${task} =   Wait For Task    ${respl}    1100s    2s
    log to console    \n\nLI Task is ${task}

    Verify LI/LIG Consistent Status    ${Expected_Non_Consistency_Status}    ${LE}-${LIG_1}

    ${resp} =    Fusion Api Get Li    ${li_uri}
    log to console  Editing Li with snmp ${resp}

    ${snmp_config_LIG} =     Get From Dictionary     ${resp}  snmpConfiguration
    Log to console and logfile    ${snmp_config_LIG}
    ${User_LI} =    Get From Dictionary     ${snmp_config_LIG}   snmpUsers
    Log to console    \n\nConfig Details:${snmp_config_LIG}
    ${User_Name_LI} =    Get From Dictionary     ${User_LI[0]}   snmpV3UserName
    Log to console    \n\nConfig Details:${User_Name_LI}
    ${snmp_user1}    Convert To String    ${User_Name_LI}

    # Alert Verification with replace string
    ${Alert_SNMP_Add_User}    Replace String Using Regexp   ${SNMP_V3_USERS_REMOVED}    XXX    ${snmp_user1}
    ${SNMP_lig_compliance_alert}    Built the Alert list    ${Alert_SNMP_Add_User}
    ${Alert_message}    Get Alert and Compliance Message    ${SNMP_lig_compliance_alert}

    ${Edit_lig_body}    ${lig_uri}    Build Edit LIG Body    ${LIGS_TB}    ${Edit_Lig_Snmpv1_v2}
    ${Edit_snmp}    Build SNMP body    ${Edit_lig_body}    ${Snmp_False}
    Set To Dictionary    ${Edit_snmp['snmpConfiguration']}    snmpUsers    ${Snmpuser_add_1}

    ${Snmp_edit}    Fusion Api Edit Lig    ${Edit_snmp}    ${lig_uri}
    ${task} =   Wait For Task    ${Snmp_edit}    1100s    2s

    :For    ${x}    INRANGE    1    3
    \    Wait Until Keyword Succeeds    1100s   35 s    Verify Interconnect State    ${Interconnect_${x}}    ${IC_Configured}

    Verify LI/LIG Consistent Status    ${Expected_Consistency_Status}    ${LE}-${LIG_1}

OVF223_TC_19 Add Trap Destination LI_Compliance

    [Documentation]    Edit LI-Check for the Compliance alerts and events in LI
    ${Get_li}    Fusion Api Get Li
    ${Get_li_body}    Copy Dictionary    ${Get_li['members']}
    ${Edit_snmp}    Build SNMP LI body    ${edit_Li_snmp_config}    ${Snmp_False}
    Set To Dictionary    ${Edit_snmp}    trapDestinations    ${TrapDestinations_1}
    Set To Dictionary    ${Edit_snmp}    snmpUsers    ${Get_li_body[0]['snmpConfiguration']['snmpUsers']}

    ${li_uri} =     Get LI URI   ${LE}-${LIG_1}
    log to console    LI URI is ${li_uri}
    ${Edit_snmp_li}    Fusion Api Update snmp configuration    ${Edit_snmp}    ${li_uri}
    ${task} =   Wait For Task    ${Edit_snmp_li}    1100s    2s

    Verify LI/LIG Consistent Status    ${Expected_Non_Consistency_Status}    ${LE}-${LIG_1}

    ${li_uri} =     Get LI URI   ${LE}-${LIG_1}
    log to console    LI URI is ${li_uri}
    ${resp} =    Fusion Api Get Li    ${li_uri}
    log to console  Editing Li with snmp ${resp}
    ${snmp_config} =     Get From Dictionary     ${resp}  snmpConfiguration
    Log to console and logfile    ${snmp_config}
    ${snmp_trap} =    Get From Dictionary     ${snmp_config}   trapDestinations
    ${snmp_trap_ip} =    Get From Dictionary     ${snmp_trap[0]}   trapDestination
    ${snmp_trap1}    Convert To String    ${snmp_trap_ip}

    # Alert Verification with replace string
    ${Alert_SNMP_Add_Trap}    Replace String Using Regexp   ${SNMP_TRAP_DESTINATIONS_REMOVED}    XXX    ${snmp_trap1}
    ${SNMP_lig_compliance_alert}    Built the Alert list    ${Alert_SNMP_Add_Trap}
    ${Alert_message}    Get Alert and Compliance Message    ${SNMP_lig_compliance_alert}

    ${Get_lig}    Fusion Api Get Lig    param=?filter="'name'=='${LIGS_TB['name']}'"
    ${Get_lig_body}    Copy Dictionary    ${Get_lig['members']}
    ${Edit_lig_body}    ${lig_uri}    Build Edit LIG Body    ${LIGS_TB}    ${Edit_Lig_Snmpv1_v2}
    ${Edit_snmp}    Build SNMP body    ${Edit_lig_body}    ${Snmp_False}
    Set To Dictionary    ${Edit_snmp['snmpConfiguration']}    trapDestinations    ${TrapDestinations_1}
    Set To Dictionary    ${Edit_snmp['snmpConfiguration']}    snmpUsers    ${Get_lig_body[0]['snmpConfiguration']['snmpUsers']}

    ${Snmp_edit}    Fusion Api Edit Lig    ${Edit_snmp}    ${lig_uri}
    ${task} =   Wait For Task    ${Snmp_edit}    1100s    2s

    :For    ${x}    INRANGE    1    3
    \    Wait Until Keyword Succeeds    650s   35 s    Verify Interconnect State    ${Interconnect_${x}}    ${IC_Configured}

    Verify LI/LIG Consistent Status    ${Expected_Consistency_Status}    ${LE}-${LIG_1}

OVF223_TC_20 Add SNMPv3 user_2 LI_Compliance
    [Documentation]    Edit LI-Check for the Compliance alerts and events in LI
    ${Snmp_user_2}    Create List
    ${Get_li}    Fusion Api Get Li
    ${Get_li_body}    Copy Dictionary    ${Get_li['members']}
    Append to List    ${Snmp_user_2}    ${Get_li_body[0]['snmpConfiguration']['snmpUsers'][0]}
    Append to List    ${Snmp_user_2}    ${Snmpuser_add_2[0]}
    Log to console and logfile    ${Snmp_user_2}

    ${li_uri} =     Get LI URI   ${LE}-${LIG_1}
    Set Global Variable    ${LIURI}    ${li_uri}
    ${Edit_snmp}    Build SNMP LI body    ${edit_Li_snmp_config}    ${Snmp_False}
    Set To Dictionary    ${Edit_snmp}    trapDestinations    ${Get_li_body[0]['snmpConfiguration']['trapDestinations']}
    Set To Dictionary    ${Edit_snmp}    snmpUsers    ${Snmp_user_2}
    ${Edit_snmp_li}    Fusion Api Update snmp configuration    ${Edit_snmp}    ${LIURI}
    ${task} =   Wait For Task    ${Edit_snmp_li}    1100s    2s

    Verify LI/LIG Consistent Status    ${Expected_Non_Consistency_Status}    ${LE}-${LIG_1}

    ${li_uri} =     Get LI URI   ${LE}-${LIG_1}
    log to console    LI URI is ${li_uri}
    ${resp} =    Fusion Api Get Li    ${li_uri}
    log to console  Editing Li with snmp ${resp}
    ${snmp_config} =     Get From Dictionary     ${resp}  snmpConfiguration
    Log to console and logfile    ${snmp_config}
    ${snmp_users} =    Get From Dictionary     ${snmp_config}   snmpUsers
    Log to console    \nUser name :${snmp_users}
    ${snmp_user_list}    Create List
    ${User_count}    Get Length    ${snmp_users}
    :For    ${x}    INRANGE    0    ${User_count}
    \    ${snmp_user_name} =    Get From Dictionary     ${snmp_users[${x}]}   snmpV3UserName
    \     Append to List    ${snmp_user_list}    ${snmp_user_name}
    Log to console    \n\n\nUser List :${snmp_user_list}
    Set Global Variable    ${snmp_user_list}
    ${snmp_user_name1} =    Get From Dictionary     ${Snmpuser_add_2[0]}   snmpV3UserName
    Log to console    \n\n\nBefore User name :${snmp_user_name1}
    List Should Contain Value    ${snmp_user_list}    ${snmp_user_name1}
    ${snmp_user2}    Convert To String    ${snmp_user_name1}
    Log to console    \n\n\nafter User name :${snmp_user2}

    # Alert Verification with replace string
    ${Alert_SNMP_Add_User}    Replace String Using Regexp   ${SNMP_V3_USERS_REMOVED}    XXX    ${snmp_user2}
    ${SNMP_lig_compliance_alert}    Built the Alert list    ${Alert_SNMP_Add_User}
    ${Alert_message}    Get Alert and Compliance Message    ${SNMP_lig_compliance_alert}

    ${snmp_users_1}    Create List
    ${lig_uri} =     Get LIG URI   ${LIG_1}
    ${getresp} =    Fusion Api Get Lig   ${lig_uri}
    ${snmp_config} =     Get From Dictionary     ${getresp}  snmpConfiguration
    Log to console and logfile    ${snmp_config}
    ${snmp_users_1} =    Get From Dictionary     ${snmp_config}   snmpUsers
    Log to console    \nUser name :${snmp_users_1}
    ${snmp_user_list}    Create List
    ${User_count}    Get Length    ${snmp_users_1}
    :For    ${x}    INRANGE    0    ${User_count}
    \    ${snmp_user_name} =    Get From Dictionary     ${snmp_users_1[${x}]}   snmpV3UserName
    \     Append to List    ${snmp_user_list}    ${snmp_user_name}
    Set Global Variable    ${snmp_user_list}
    ${snmp_user_name1} =    Get From Dictionary     ${Snmpuser_add_2[0]}   snmpV3UserName
    List Should Not Contain Value    ${snmp_user_list}    ${snmp_user_name1}
    ${snmp_user1}    Convert To String    ${snmp_user_name}
    Log to console    \nUser name from LIG :${snmp_user1}



    Log to Console    \n\nExected User1:${snmp_users_1}

    Append to List    ${snmp_users_1}    ${Snmpuser_add_2[0]}
    Log to Console    \n\nExected User:${snmp_users_1}


    ${Get_lig}    Fusion Api Get Lig    param=?filter="'name'=='${LIGS_TB['name']}'"
    ${Get_lig_body}    Copy Dictionary    ${Get_lig['members']}
    ${Edit_lig_body}    ${lig_uri}    Build Edit LIG Body    ${LIGS_TB}    ${Edit_Lig_Snmpv1_v2}
    ${Edit_snmp}    Build SNMP body    ${Edit_lig_body}    ${Snmp_False}
    Set To Dictionary    ${Edit_snmp['snmpConfiguration']}    snmpUsers    ${snmp_users_1}
    Set To Dictionary    ${Edit_snmp['snmpConfiguration']}    trapDestinations    ${Get_lig_body[0]['snmpConfiguration']['trapDestinations']}

    Log to Console    \n\nExected request:${Edit_snmp}
    ${Snmp_edit}    Fusion Api Edit Lig    ${Edit_snmp}    ${lig_uri}
    Log to Console    \n\nExected response:${Snmp_edit}
    ${task} =   Wait For Task    ${Snmp_edit}    1100s    2s
    Log to Console    \n\nExected task:${task}

    :For    ${x}    INRANGE    1    3
    \    Wait Until Keyword Succeeds    650s   35 s    Verify Interconnect State    ${Interconnect_${x}}    ${IC_Configured}

    Verify LI/LIG Consistent Status    ${Expected_Consistency_Status}    ${LE}-${LIG_1}

OVF223_TC_21 Add Trap Destination LI_Compliance
    [Documentation]    Edit LI-Check for the Compliance alerts and events in LI
    ${Trap_user_2}    Create List
    ${Get_li}    Fusion Api Get Li
    ${Get_li_body}    Copy Dictionary    ${Get_li['members']}
    Append to List    ${Trap_user_2}    ${Get_li_body[0]['snmpConfiguration']['trapDestinations'][0]}
    Append to List    ${Trap_user_2}    ${TrapDestinations_2[0]}
    Log to console and logfile    ${Trap_user_2}

    ${li_uri} =     Get LI URI   ${LE}-${LIG_1}
    Set Global Variable    ${LIURI}    ${li_uri}
    ${Edit_snmp}    Build SNMP LI body    ${SNMP_Config}    ${Snmp_False}
    Set To Dictionary    ${Edit_snmp}    snmpUsers    ${Get_li_body[0]['snmpConfiguration']['snmpUsers']}
    Set To Dictionary    ${Edit_snmp}    trapDestinations    ${Trap_user_2}
    ${Edit_snmp_li}    Fusion Api Update snmp configuration    ${Edit_snmp}    ${LIURI}
    ${task} =   Wait For Task    ${Edit_snmp_li}    1100s    2s

    Verify LI/LIG Consistent Status    ${Expected_Non_Consistency_Status}    ${LE}-${LIG_1}

    ${li_uri} =     Get LI URI   ${LE}-${LIG_1}
    log to console    LI URI is ${li_uri}
    ${resp} =    Fusion Api Get Li    ${li_uri}
    log to console  Editing Li with snmp ${resp}
    ${snmp_config} =     Get From Dictionary     ${resp}  snmpConfiguration
    Log to console and logfile    ${snmp_config}
    ${snmp_trap_dest} =    Get From Dictionary     ${snmp_config}   trapDestinations
    Log to console    \nTRap Details are :${snmp_trap_dest}
    ${snmp_trap_list}    Create List
    ${User_count}    Get Length    ${snmp_trap_dest}
    :For    ${x}    INRANGE    0    ${User_count}
    \    ${snmp_trap_IPs} =    Get From Dictionary     ${snmp_trap_dest[${x}]}   trapDestination
    \     Append to List    ${snmp_trap_list}    ${snmp_trap_IPs}
    Log to console    \n\n\nUser List :${snmp_trap_list}
    Set Global Variable    ${snmp_trap_list}
    ${snmp_trap_name1} =    Get From Dictionary     ${TrapDestinations_2[0]}   trapDestination
    Log to console    \n\n\nBefore Trap name :${snmp_trap_name1}
    List Should Contain Value    ${snmp_trap_list}    ${snmp_trap_name1}
    ${snmp_trap2}    Convert To String    ${snmp_trap_name1}
    Log to console    \n\n\nafter trap name :${snmp_trap2}

    # Alert Verification with replace string
    ${Alert_SNMP_Add_Trap}    Replace String Using Regexp   ${SNMP_TRAP_DESTINATIONS_REMOVED}    XXX    ${snmp_trap2}
    ${SNMP_lig_compliance_alert}    Built the Alert list    ${Alert_SNMP_Add_Trap}
    ${Alert_message}    Get Alert and Compliance Message    ${SNMP_lig_compliance_alert}

    ${Edit_lig_body}    ${lig_uri}    Build Edit LIG Body    ${LIGS_TB}    ${Edit_Lig_Snmpv1_v2}
    ${Edit_snmp}    Build SNMP body    ${Edit_lig_body}    ${Snmp_False}
    Set To Dictionary    ${Edit_snmp['snmpConfiguration']}    snmpUsers    ${Get_li_body[0]['snmpConfiguration']['snmpUsers']}
    Set To Dictionary    ${Edit_snmp['snmpConfiguration']}    trapDestinations    ${Trap_user_2}

    ${Snmp_edit}    Fusion Api Edit Lig    ${Edit_snmp}    ${lig_uri}
    ${task} =   Wait For Task    ${Snmp_edit}    1100s    2s

    :For    ${x}    INRANGE    1    3
    \    Wait Until Keyword Succeeds    650s   35 s    Verify Interconnect State    ${Interconnect_${x}}    ${IC_Configured}

    Verify LI/LIG Consistent Status    ${Expected_Consistency_Status}    ${LE}-${LIG_1}

OVF223_TC_22 Delete Trap Destination LI_Compliance
    [Documentation]    Edit LI-Check for the Compliance alerts and events in LI
    ${Delete_Trap}    Create List
    ${Get_li}    Fusion Api Get Li
    ${Get_li_body}    Copy Dictionary    ${Get_li['members']}
    ${Trap_Destination}    Get From Dictionary    ${Get_li_body[0]['snmpConfiguration']['trapDestinations'][1]}    trapDestination
    ${Trap_User_name}    Get From Dictionary    ${Get_li_body[0]['snmpConfiguration']['trapDestinations'][1]}    userName
    Set Global Variable    ${Trap_User}    ${Trap_User_name}
    Log to console and logfile    ${Trap_Destination}
    Append to List    ${Delete_Trap}    ${Get_li_body[0]['snmpConfiguration']['trapDestinations'][0]}
    Log to console    \n\nTrap Details are:${Delete_Trap}

    ${li_uri} =     Get LI URI   ${LE}-${LIG_1}
    log to console    LI URI is ${li_uri}
    ${resp} =    Fusion Api Get Li    ${li_uri}
    log to console  Editing Li with snmp ${resp}
    ${snmp_config} =     Get From Dictionary     ${resp}  snmpConfiguration
    Log to console and logfile    ${snmp_config}
    ${snmp_trap_dest} =    Get From Dictionary     ${snmp_config}   trapDestinations
    Log to console    \nTRap Details are :${snmp_trap_dest}
    ${snmp_trap_list}    Create List
    ${User_count}    Get Length    ${snmp_trap_dest}
    :For    ${x}    INRANGE    0    ${User_count}
    \    ${snmp_trap_IPs} =    Get From Dictionary     ${snmp_trap_dest[${x}]}   trapDestination
    \     Append to List    ${snmp_trap_list}    ${snmp_trap_IPs}
    Log to console    \n\n\nUser List :${snmp_trap_list}
    Set Global Variable    ${snmp_trap_list}
    ${snmp_trap_name1} =    Get From Dictionary     ${TrapDestinations_1[0]}   trapDestination
    Log to console    \n\n\nBefore Trap name :${snmp_trap_name1}
    List Should Contain Value    ${snmp_trap_list}    ${snmp_trap_name1}
    ${snmp_trap2}    Convert To String    ${snmp_trap_name1}
    Log to console    \n\n\nafter trap name :${snmp_trap_list[1]}

    ${li_uri} =     Get LI URI   ${LE}-${LIG_1}
    Set Global Variable    ${LIURI}    ${li_uri}
    ${Edit_snmp}    Build SNMP LI body    ${edit_Li_snmp_config}    ${Snmp_False}
    Set To Dictionary    ${Edit_snmp}    snmpUsers    ${Get_li_body[0]['snmpConfiguration']['snmpUsers']}
    Set To Dictionary    ${Edit_snmp}    trapDestinations    ${Delete_Trap}
    ${Edit_snmp_li}    Fusion Api Update snmp configuration    ${Edit_snmp}    ${LIURI}
    ${task} =   Wait For Task    ${Edit_snmp_li}    1100s    2s

    Verify LI/LIG Consistent Status    ${Expected_Non_Consistency_Status}    ${LE}-${LIG_1}

    # Alert Verification with replace string
    ${Alert_SNMP_Add_Trap}    Replace String Using Regexp   ${SNMP_TRAP_DESTINATIONS_ADDED}    XXX    ${snmp_trap_list[1]}
    ${SNMP_lig_compliance_alert}    Built the Alert list    ${Alert_SNMP_Add_Trap}
    ${Alert_message}    Get Alert and Compliance Message    ${SNMP_lig_compliance_alert}

    ${Get_lig}    Fusion Api Get Lig    param=?filter="'name'=='${LIGS_TB['name']}'"
    ${Get_lig_body}    Copy Dictionary    ${Get_lig['members']}
    ${Edit_lig_body}    ${lig_uri}    Build Edit LIG Body    ${LIGS_TB}    ${Edit_Lig_Snmpv1_v2}
    ${Edit_snmp}    Build SNMP body    ${Edit_lig_body}    ${Snmp_False}
    Set To Dictionary    ${Edit_snmp['snmpConfiguration']}    snmpUsers    ${Get_lig_body[0]['snmpConfiguration']['snmpUsers']}
    Set To Dictionary    ${Edit_snmp['snmpConfiguration']}    trapDestinations    ${Delete_Trap}

    ${Snmp_edit}    Fusion Api Edit Lig    ${Edit_snmp}    ${lig_uri}
    ${task} =   Wait For Task    ${Snmp_edit}    1100s    2s

    Verify LI/LIG Consistent Status    ${Expected_Consistency_Status}    ${LE}-${LIG_1}

OVF223_TC_23 Delete SNMPv3 user LI_Compliance
    [Documentation]    Edit LI-Check for the Compliance alerts and events in LI
    ${li_uri} =     Get LI URI   ${LE}-${LIG_1}
    log to console    LI URI is ${li_uri}

    ${Edit_snmp_li}    Fusion Api Update snmp configuration    ${Delete_Li_snmp_user}    ${li_uri}
    ${task} =   Wait For Task    ${Edit_snmp_li}    1100s    2s

    ${resp} =    Fusion Api Get Li    ${li_uri}
    log to console  Editing Li with snmp ${resp}
    ${snmp_config} =     Get From Dictionary     ${resp}  snmpConfiguration
    Log to console and logfile    ${snmp_config}
    ${snmp_User_LI} =    Get From Dictionary     ${snmp_config}   snmpUsers
    Log to console    \nUser Details are :${snmp_User_LI}
    ${snmp_User_List}    Create List
    ${User_count}    Get Length    ${snmp_User_LI}
    :For    ${x}    INRANGE    0    ${User_count}
    \    ${Snmp_User_Names} =    Get From Dictionary     ${snmp_User_LI[${x}]}   snmpV3UserName
    \     Append to List    ${snmp_User_List}    ${Snmp_User_Names}
    Log to console    \n\n\nUser List :${snmp_User_List}


    ${Expected_snmp_User_name} =    Get From Dictionary     ${Snmpuser_add_1[0]}   snmpV3UserName
    Log to console    \n\n\nBefore User Name :${Expected_snmp_User_name}
    List Should Not Contain Value    ${snmp_User_List}    ${Expected_snmp_User_name}
    ${snmp_user2}    Convert To String    ${Expected_snmp_User_name}
    Log to console    \n\n\nExpected User name :${snmp_user2}

    # Alert Verification with replace string
    ${Alert_SNMP_Add_User}    Replace String Using Regexp   ${SNMP_V3_USERS_ADDED}    XXX    ${snmp_user2}
    ${SNMP_lig_compliance_alert}    Built the Alert list    ${Alert_SNMP_Add_User}
    ${Alert_message}    Get Alert and Compliance Message    ${SNMP_lig_compliance_alert}

    Verify LI/LIG Consistent Status    ${Expected_Non_Consistency_Status}    ${LE}-${LIG_1}

    ${Get_lig}    Fusion Api Get Lig    param=?filter="'name'=='${LIGS_TB['name']}'"
    ${Get_lig_body}    Copy Dictionary    ${Get_lig['members']}

    ${Edit_lig_body}    ${lig_uri}    Build Edit LIG Body    ${LIGS_TB}    ${Edit_Lig_Snmpv1_v2}
    Set To Dictionary    ${Edit_lig_body['snmpConfiguration']}    trapDestinations    ${Get_lig_body[0]['snmpConfiguration']['trapDestinations']}
    Set To Dictionary    ${Edit_lig_body['snmpConfiguration']}    snmpUsers    ${Snmpuser_add_2}

    ${Snmp_edit}    Fusion Api Edit Lig    ${Edit_lig_body}    ${lig_uri}
    ${task} =   Wait For Task    ${Snmp_edit}    400s    2s

    Verify LI/LIG Consistent Status    ${Expected_Consistency_Status}    ${LE}-${LIG_1}

OVF223_TC_34 Add SNMPv3 User and Trap LI_Compliance
    [Documentation]    Edit LI-Check for the Compliance alerts and events in LI

    ${Edit_snmp}    Build SNMP LI body    ${edit_Li_snmp_config}    ${Snmp_False}
    Set To Dictionary    ${Edit_snmp}    snmpUsers    ${Snmpuser_Edit_Auth_Credentials}
    Set To Dictionary    ${Edit_snmp}    trapDestinations    ${TrapDestinations}
    ${Edit_snmp_li}    Fusion Api Update snmp configuration    ${Edit_snmp}    ${LIURI}
    ${task} =   Wait For Task    ${Edit_snmp_li}    1100s    2s

    Verify LI/LIG Consistent Status    ${Expected_Non_Consistency_Status}    ${LE}-${LIG_1}

    ${resp} =    Fusion Api Get Li    ${li_uri}
    log to console  Editing Li with snmp ${resp}
    ${snmp_config} =     Get From Dictionary     ${resp}  snmpConfiguration
    Log to console and logfile    ${snmp_config}
    ${snmp_config_user} =     Get From Dictionary     ${snmp_config}  snmpUsers
    Log to console and logfile    ${snmp_config_user}
    ${snmp_config_user_name} =     Get From Dictionary     ${snmp_config_user[1]}  snmpV3UserName
    Log to console and logfile    ${snmp_config_user_name}
    ${snmp_config_traps} =     Get From Dictionary     ${snmp_config}  trapDestinations
    Log to console and logfile    ${snmp_config_traps}
    ${snmp_config_trap_ip} =     Get From Dictionary     ${snmp_config_traps[1]}  trapDestination
    Log to console and logfile    ${snmp_config_trap_ip}

    # Alert Verification with replace string
    ${Combined_List}    Create List
    ${Alert_SNMP_Add_User2}    Replace String Using Regexp   ${SNMP_V3_USERS_REMOVED}    XXX    ${snmp_config_user_name}
    Append to List    ${Combined_List}    ${Alert_SNMP_Add_User2}

    ${Alert_SNMP_Add_Trap}    Replace String Using Regexp   ${SNMP_TRAP_DESTINATIONS_REMOVED}    XXX    ${snmp_config_trap_ip}
    Append to List    ${Combined_List}    ${Alert_SNMP_Add_Trap}
    #${Combined_List} =        catenate    ${Alert_SNMP_Add_User2},${Alert_SNMP_Add_Trap}
    Log to console    \nCombined List :${Combined_List}
    Sort List    ${Combined_List}
    ${Alert_message}    Get Alert and Compliance Message    ${Combined_List}

    ${Snmp_user_3}    Create List
    ${Trap_user_3}    Create List
    ${Get_lig}    Fusion Api Get Lig    param=?filter="'name'=='${LIGS_TB['name']}'"
    ${Get_lig_body}    Copy Dictionary    ${Get_lig['members']}
    Append to List    ${Snmp_user_3}    ${Get_lig_body[0]['snmpConfiguration']['snmpUsers'][0]}
    Append to List    ${Trap_user_3}    ${Get_lig_body[0]['snmpConfiguration']['trapDestinations'][0]}
    Append to List    ${Snmp_user_3}    ${Snmpuser_add_3[0]}
    Append to List    ${Trap_user_3}    ${TrapDestinations_3[0]}

    ${Edit_lig_body}    ${lig_uri}    Build Edit LIG Body    ${LIGS_TB}    ${Edit_Lig_Snmpv1_v2}
    ${Edit_snmp}    Build SNMP body    ${Edit_lig_body}    ${Snmp_False}
    Set To Dictionary    ${Edit_snmp['snmpConfiguration']}    trapDestinations    ${Trap_user_3}
    Set To Dictionary    ${Edit_snmp['snmpConfiguration']}    snmpUsers    ${Snmp_user_3}

    ${Snmp_edit}    Fusion Api Edit Lig    ${Edit_snmp}    ${lig_uri}
    ${task} =   Wait For Task    ${Snmp_edit}    400s    2s
    Log to console    \n\n\n\nCombined List :${task}

    Verify LI/LIG Consistent Status    ${Expected_Consistency_Status}    ${LE}-${LIG_1}

OVF223_TC_35 Edit SNMPv3 user password
    [Documentation]    Edit LI-Check for the Compliance alerts and events in LI
    ${Get_li}    Fusion Api Get Li
    ${Get_li_body}    Copy Dictionary    ${Get_li['members'][0]['snmpConfiguration']}
    Set To Dictionary    ${Get_li_body['snmpUsers'][0]}    value    password1234

    ${Edit_snmp}    Build SNMP LI body    ${SNMP_Config}    ${Snmp_False}
    Set To Dictionary    ${Edit_snmp}    snmpConfiguration    ${Get_li_body}
    ${Edit_snmp_li}    Fusion Api Update snmp configuration    ${Edit_snmp}    ${LIURI}
    ${task} =   Wait For Task    ${Edit_snmp_li}    1100s    2s

    Verify LI/LIG Consistent Status    ${Expected_Non_Consistency_Status}    ${LE}-${LIG_1}

    ${SNMP_lig_compliance_alert}    Built the Alert list    ${SNMPv3_edit_password}

    ${Alert_message}    Get Alert and Compliance Message    ${SNMP_lig_compliance_alert}

    ${Edit_lig_body}    ${lig_uri}    Build Edit LIG Body    ${LIGS_TB}    ${Edit_Lig_Snmpv1_v2}
    ${Edit_snmp}    Build SNMP body    ${Edit_lig_body}
    Set To Dictionary    ${Edit_snmp}    snmpConfiguration    ${Get_li_body}


    ${Snmp_edit}    Fusion Api Edit Lig    ${Edit_snmp}    ${lig_uri}
    ${task} =   Wait For Task    ${Snmp_edit}    400s    2s

    Verify LI/LIG Consistent Status    ${Expected_Consistency_Status}    ${LE}-${LIG_1}

OVF223_TC_32 Edit the System Contact LI_Compliance

    [Documentation]    Edit LI-Check for the Compliance alerts and events in LI
    ${li_uri} =     Get LI URI   ${LE}-${LIG_1}
    Set Global Variable    ${LIURI}    ${li_uri}
    ${Edit_snmp}    Build SNMP LI body    ${edit_Li_snmp_config}    ${Snmp_False}
    Set To Dictionary    ${Edit_snmp}    systemContact    ${System_Contact}
    ${Edit_snmp_li}    Fusion Api Update snmp configuration    ${Edit_snmp}    ${LIURI}
    ${task} =   Wait For Task    ${Edit_snmp_li}    1100s    2s

    Verify LI/LIG Consistent Status    ${Expected_Non_Consistency_Status}    ${LE}-${LIG_1}

    ${resp} =    Fusion Api Get Li    ${li_uri}
    log to console  Editing Li with snmp ${resp}
    ${snmp_config} =     Get From Dictionary     ${resp}  snmpConfiguration
    Log to console and logfile    ${snmp_config}
    ${sys_contact} =    Get From Dictionary     ${snmp_config}   systemContact
    ${sys_contact1}    Convert To String    ${sys_contact}

    ${Edit_lig_body}    ${lig_uri}    Build Edit LIG Body    ${LIGS_TB}    ${Edit_Lig_Snmpv1_v2}
    ${Edit_snmp}    Build SNMP body    ${Edit_lig_body}    ${Snmp_True}

    Log to console    \n\n\nLig body is:${Edit_snmp}
    ${Snmp_edit}    Fusion Api Edit Lig    ${Edit_snmp}    ${lig_uri}
    ${task} =   Wait For Task    ${Snmp_edit}    400s    2s

    ${Alert_SNMP_Syscontact}    Replace String Using Regexp   ${SNMP_SYSTEM_CONTACT_CHANGED}    XXX    ${sys_contact1}

    ${SNMP_lig_compliance_alert}    Built the Alert list    ${Alert_SNMP_Syscontact}

    ${Alert_message}    Get Alert and Compliance Message    ${SNMP_lig_compliance_alert}

    ${Edit_lig_body}    ${lig_uri}    Build Edit LIG Body    ${LIGS_TB}    ${Edit_Lig_Snmpv1_v2}
    Set To Dictionary    ${Edit_lig_body['snmpConfiguration']}    systemContact    ${System_Contact}

    ${Snmp_edit}    Fusion Api Edit Lig    ${Edit_lig_body}    ${lig_uri}
    ${task} =   Wait For Task    ${Snmp_edit}    400s    2s

    Verify LI/LIG Consistent Status    ${Expected_Consistency_Status}    ${LE}-${LIG_1}

*** Keywords ***
Build Edit LIG Body
    [Documentation]    Build LIG body to edit lig
    [Arguments]    ${LIGS_TB}    ${Edit_Lig}
    ${Get_lig}    Fusion Api Get Lig    param=?filter="'name'=='${LIGS_TB['name']}'"
    ${lig_uri}    Get From Dictionary    ${Get_lig['members'][0]}    uri
    ${Get_lig_body}    Copy Dictionary    ${Get_lig['members']}
    ${Edit_lig_body}    Copy Dictionary    ${Edit_Lig}
    Set To Dictionary    ${Edit_lig_body}    snmpConfiguration    ${Get_lig_body[0]['snmpConfiguration']}
    Set To Dictionary    ${Edit_lig_body}    qosConfiguration    ${Get_lig_body[0]['qosConfiguration']}
    Set To Dictionary    ${Edit_lig_body}    telemetryConfiguration    ${Get_lig_body[0]['telemetryConfiguration']}
    Set To Dictionary    ${Edit_lig_body}    ethernetSettings    ${Get_lig_body[0]['ethernetSettings']}
    Set To Dictionary    ${Edit_lig_body}    fabricUri    ${Get_lig_body[0]['fabricUri']}
    Set To Dictionary    ${Edit_lig_body}    interconnectMapTemplate    ${Get_lig_body[0]['interconnectMapTemplate']}
    Set To Dictionary    ${Edit_lig_body}    scopesUri    ${Get_lig_body[0]['scopesUri']}
    Set To Dictionary    ${Edit_lig_body}    created    ${Get_lig_body[0]['created']}
    Set To Dictionary    ${Edit_lig_body}    eTag    ${Get_lig_body[0]['eTag']}
    Set To Dictionary    ${Edit_lig_body}    modified    ${Get_lig_body[0]['modified']}
    Set To Dictionary    ${Edit_lig_body}    uri    ${Get_lig_body[0]['uri']}
    Sleep    10
    [Return]    ${Edit_lig_body}    ${lig_uri}

Build SNMP LIG body
    [Documentation]    Build SNMP body to edit lig
    [Arguments]    ${Edit_lig_body}
    ${Get_lig}    Fusion Api Get Lig    param=?filter="'name'=='${LIGS_TB['name']}'"
    ${Get_lig_body}    Copy Dictionary    ${Get_lig['members']}
    Set To Dictionary    ${Edit_lig_body['snmpConfiguration']}    modified   ${Get_lig_body[0]['snmpConfiguration']['modified']}
    Set To Dictionary    ${Edit_lig_body['snmpConfiguration']}    created    ${Get_lig_body[0]['snmpConfiguration']['created']}

    [Return]    ${Edit_lig_body}

Build SNMP LI body
    [Documentation]    Build SNMP body to edit li
    [Arguments]    ${Snmp_body}    ${True_false}
    ${Get_li}    Fusion Api Get Li
    ${Get_li_body}    Copy Dictionary    ${Get_li['members']}
    Set To Dictionary    ${Snmp_body}    modified   ${Get_li_body[0]['snmpConfiguration']['modified']}
    Set To Dictionary    ${Snmp_body}    created    ${Get_li_body[0]['snmpConfiguration']['created']}
    Set To Dictionary    ${Snmp_body}    enabled    ${True_False}
    Set To Dictionary    ${Snmp_body}    readCommunity    ${Public}

    [Return]    ${Snmp_body}

Build SNMP body
    [Documentation]    Build SNMP body to edit lig
    [Arguments]    ${Edit_lig_body}     ${True_False}
    ${Get_lig}    Fusion Api Get Lig    param=?filter="'name'=='${LIGS_TB['name']}'"
    ${Get_lig_body}    Copy Dictionary    ${Get_lig['members']}
    Set To Dictionary    ${Edit_lig_body['snmpConfiguration']}    modified   ${Get_lig_body[0]['snmpConfiguration']['modified']}
    Set To Dictionary    ${Edit_lig_body['snmpConfiguration']}    created    ${Get_lig_body[0]['snmpConfiguration']['created']}
    Set To Dictionary    ${Edit_lig_body['snmpConfiguration']}    enabled    ${True_False}
    Set To Dictionary    ${Edit_lig_body['snmpConfiguration']}    readCommunity    ${Public}

    [Return]    ${Edit_lig_body}

Get Alert and Compliance Message
    [Documentation]    Get compliance alert message corresponding to the activity performed
    [Arguments]    ${Alert_message_compliance}
    ${Get_Alerts}    Fusion Api Get Alerts
    ${Get_alert_count}    Get From Dictionary    ${Get_Alerts}    count
    :For    ${x}    INRANGE    0    ${Get_alert_count}
    \    ${Alertstate}    Get From Dictionary    ${Get_Alerts['members'][${x}]}    alertState
    \    Run Keyword If    '${Alertstate}' != 'Active'    Continue For Loop
    \    ${AlertID}    Get From Dictionary    ${Get_Alerts['members'][${x}]}    alertTypeID
    \    Run Keyword If    '${AlertID}' != 'crm.complianceChange'    Continue For Loop
    \    ${Event_uri}    Get From Dictionary    ${Get_Alerts['members'][${x}]}    associatedEventUris
    \    ${Get_event_details}    Fusion Api Get Alerts    ${Event_uri[0]}
    \    ${Event_Details}    Get From Dictionary    ${Get_event_details}    eventDetails
    \    ${Count}    Get Length    ${Event_Details}
    \    ${Event_item_value}    Get Event Item Value    ${Count}    ${Event_Details}
    \    Lists Should Be Equal    ${Event_item_value}    ${Alert_message_compliance}

Get Event Item Value
    [Documentation]    Get Event Item Value corresponding to the alerts
    [Arguments]    ${count}    ${event_details}
    :For    ${x}    INRANGE    0    ${count}
    \    ${Get_event_name}    Get From Dictionary    ${event_details[${x}]}    eventItemName
    \    Run Keyword If    '${Get_event_name}' != 'snmp'    Continue For Loop
    \    ${Event_item_value}    Get From Dictionary    ${event_details[${x}]}    eventItemValue
    \    ${Actual_Alert}    Built the Alert list    ${Event_item_value}

    [Return]    ${Actual_Alert}

Perform an LI Update From Group
    [Documentation]    Perform an LI Update From Group
    ...             Example:
    ...             Perform an LI Update From Group    ${li}    ${interval}
    [Arguments]       ${li}=${LE}-${LIG1}     ${timeout}=30 min    ${interval}=15s
    ${resp} =       Fusion Api Update from group    ${li}
    ${task} =       Wait For Task       ${resp}     ${timeout}        ${interval}
    ${valDict} =    Create Dictionary   status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}

Verify LI/LIG Consistent Status
    [Documentation]    Verifying the consistency status of LIG/LI
    [Arguments]    ${Expected_Consistency_Status}    ${li}=${LE}-${LIG}
    ${Li_resp}= Fusion Api Get Li
    ${l} =  Get Length  ${Li_resp['members']}
    :FOR    ${x}    IN RANGE    0   ${l}
    \   Run Keyword If  '${Li_resp['members'][${x}]['name']}' != '${li}'        Continue For Loop
    \   Should Be Equal As Strings  ${Li_resp['members'][${x}]['consistencyStatus']}    ${Expected_Consistency_Status}
    Log to console and logfile    LI/LIG are ${Expected_Consistency_Status}.

Built the Alert list
    [Documentation]    Build the alert list for the validation
    [Arguments]    ${Qos_compliance_alert}

    ${Line_count}    Get Line Count    ${Qos_compliance_alert}
    ${Alert_List}    Create List
    :For    ${x}    INRANGE    0    ${Line_count}
    \    ${Get_line}    Get Line    ${Qos_compliance_alert}    ${x}
    \    Append to list    ${Alert_List}    ${Get_line}
    Sort List    ${Alert_List}
    Log to console and logfile    ${Alert_List}

    [Return]    ${Alert_List}

Verify Interconnect State
    [Documentation]    Verify the interconnect state
    ...             Example:
    ...             Verify Interconnect State    ${interconnectname_1}    ${IC_Configured}
    [Arguments]        ${interconnectname_1}        ${IC_Configured}
    ${ic} =    Get IC    ${interconnectname_1}
    ${State} =    Get From IC        ${ic}    state
    Log to Console and logfile    ${State}
    Log to console and logfile    Interconnect state is ${interconnectname_1}:${State}
    Should Be Equal As Strings    ${State}    ${IC_Configured}

Get IC
    [Documentation]    Get Interconnect details by IC name
    ...             Example:
    ...             Get IC      ${ICM_NAME}
    [Arguments]        ${ICM_NAME}
    ${resp} =   fusion api get interconnect
    Log        ${resp}
    ${ics} =     Get From Dictionary     ${resp}    members
    ${l} =     Get Length    ${ics}
    :FOR    ${x}    IN RANGE    0    ${l}
    \   ${ic} =     Get From List   ${ics}    ${x}
    \     Exit For Loop If     '${ic['name']}' == '${ICM_NAME}'
    [Return]    ${ic}

Get from IC
    [Documentation]    Get the required element from the interconnect
    ...             Example:
    ...             Get from IC    ${ic}    ${element}
    [Arguments]     ${ic}   ${element}
    ${return} =     Get From Dictionary     ${ic}   ${element}
    [Return]    ${return}


Cleanup For Suite

   [Documentation]    Returns appliance to a 'clean' state by removing all resources\enclosures
    Log to console and logfile    [Cleanup]
    Login to OneView via REST
    Power off ALL Servers
    Remove All Server Profiles
    Remove All Logical Enclosures
    Remove ALL Enclosure Groups
    Remove ALL LIGs
    Remove All Network Sets
    Remove ALL Ethernet Networks
    Remove ALL FC Networks
    Remove ALL FCoE Networks
