*** Settings ***
Documentation      F1048 UI Tests
Resource           OVAConfig.txt
Force Tags         Buildup
Suite Setup         Load Test Data and Open Browser
Suite Teardown      Logout And Close All Browsers



*** Settings ***
#Documentation        Feature Test: F1048
#...                 Updated test to include F1048 test scenarios
#...
Variables             data_variables.py
#Suite Setup           Run FTS and test-specific setup
#Suite Teardown        Suite Teardown
Resource            ../../../../resource/fusion_api_all_resource_files.txt
Library                apic.py
Library                Collections
Library                SSHLibrary
Library             json
Library                OperatingSystem
#Library                Selenium2Library
Library                RoboGalaxyLibrary
Library                FusionLibrary
Library                BuiltIn
Library                XML
Library             String

*** Variables ***
${SSH_PASS}                     hpvse1
${DataFile}            ./OVAData.xml
${APPLIANCE_IP}                    15.212.137.16
${li_1}                            LE-LIG
${li_2}                            LE-LIG1
${lig_1}                        LIG
${lig_2}                        LIG1
${RTtrue}                    True
${TLtrue}                     True
${RTfalse}                     False
${TLfalse}                     False
${LLDPEnabledIP_li_1}                      15.212.137.20
${LLDPEnabledIP_li_2}                      15.212.137.19
${LLDPDisabledIP}
${RECALCIP_li_1}                    15.212.137.22
${RECALCIP_li_2}                    15.212.137.21
${LLDPEnabledIP_IPv6_li_1}    fe80::5eb9:1ff:fe28:c369
${LLDPEnabledIP_IPv6_li_2}    fe80::5eb9:1ff:fe47:ba59
${RECALCIP_IPv6_li_1}        fe80::5eb9:1ff:fe28:e16e
${RECALCIP_IPv6_li_2}        fe80::5eb9:1ff:fe47:b38d
${APIC_IPList_disabled_li_1}    15.212.137.22,15.212.137.20
${APIC_IPList_enabled_li_1}       15.212.137.20
${APIC_IPList_Bay1Off_li_1}       15.212.137.22
${APIC_IPList_disabled_li_2}    15.212.137.21,15.212.137.19
${APIC_IPList_enabled_li_2}        15.212.137.19
${APIC_IPList_Bay1Off_li_2}        15.212.137.21
${bay_1}                            3
${bay_2}                            2
${ACTIONOFF}            OFF
${ACTIONON}             ON
${DEVICE}                     IOM
${OA_HOST}              10.10.0.26
${OA_USER}              Administrator
${OA_PASS}                    Admin
${APIC_APPLIANCE_IP}            10.10.3.71
${APIC_IPList_disabled}             15.212.137.22,15.212.137.20
${APIC_IPList_enabled}        15.212.137.20
${APIC_IPList_Bay1Off}        15.212.137.22
${APIC_HOST}                     10.10.3.71
#${APIC_HOST}                     10.10.3.72
${APIC_USER}                    admin
${APIC_PASS}                    password
${State_Power_Off}             Maintenance
${State_Power_On}             Configured
${POWER_STATE_OFF}            Off
${POWER_STATE_ON}            On
${enc_serial}                IRTQI6MH9D
${State_Efuse_Off}            Absent
${FUSION_NIC}                bond0
${FUSION_IP}                15.212.137.16
${FUSION_SSH_USERNAME}        root
${FUSION_SSH_PASSWORD}        hpvse1
${FUSION_PROMPT}            #
${FUSION_TIMEOUT}            25
${ICM_NAME_1}                    IRTQI6MH9D, interconnect 3
${ICM_NAME_2}                    IRTQI6MH9D, interconnect 2
${ICM_1}                     IRTQI6MH9D, interconnect 3
${ICM_2}                     EM1FFFF600, interconnect 6
${ICM_3}                     IRTQI6MH9D, interconnect 2
${ICM_4}                     EM1FFFF600, interconnect 5
${Value}                    15.212.137.0
${APIC_TOPOLOGY_li_1}                comp/prov-VMware/ctrlr-[Tbird_DVS]-10.10.3.74/hv-host-314
${APIC_TOPOLOGY_li_2}                comp/prov-VMware/ctrlr-[Tbird_DVS]-10.10.3.74/hv-host-366

*** Test Cases ***
OVA Qualification
    Set Log Level    TRACE
    Log Variables
           Log into Fusion appliance as Administrator
           Log to Console  Test Step - 1 Completed

2. Default Values of LIs-Tagged as Disabled
        #Verify the values of LLDP Tagging is "Disabled" for both LIs
        ${Status2} =    fusion_ui_verify_logical_interconnects  @{TestData.verify_tbird_li_disable_Multi_LIG}
        Run Keyword If  '${Status2}' == 'True'  Log to Console  Values of LLDP Tagging is Disabled for LI page   ELSE    fail
        #Verify the values of LLDP Tagging is "Disabled" for second LI
        ${Status2} =    fusion_ui_verify_logical_interconnects  @{TestData.verify_tbird_li_disable_Multi_LIG1}
        Run Keyword If  '${Status2}' == 'True'  Log to Console  Values of LLDP Tagging is Disabled for LI page   ELSE    fail

3. Multiple LIG1 Multiple LI-Edit LIGS-Tagged,update from group,validate LI values
        ${Status2} =    fusion_ui_edit_logical_interconnect_group_tbird    @{TestData.edit_tbird_ligs_enable_Multi_LIG}
        Run Keyword If    '${Status2}' == 'True'    Log to Console    Values of LLDP Tagging is Enabled for LIG page for both LIGs    ELSE    fail
        #Update from group
        fusion_ui_update_logical_interconnect_from_group    ${TestData.lis_Multi_LIG[0]}
        Wait Until Keyword Succeeds    600 s    10 s    Verify Interconnect State    ${ICM_1}    ${State_Power_On}
        Wait Until Keyword Succeeds    600 s    10 s    Verify Interconnect State    ${ICM_2}    ${State_Power_On}

        #Verify the values of LLDP Tagging is "Enabled"
        ${Status2} =    fusion_ui_verify_logical_interconnects    @{TestData.verify_tbird_li_enable_Multi_LIG}
        Run Keyword If    '${Status2}' == 'True'    Log to Console    Values of LLDP Tagging is Enabled for LIG page    ELSE    fail
        #Validation - Validate lldp IP Address in LI,after Enabling both LLDP tagging in LIG
        Fusion Api Login Appliance        ${APPLIANCE_IP}        ${admin_credentials}
        #Validation - Validate lldp IP Address in LI Level
        ValidateLI LLDP Ip Address        ${li_1}    ${LLDPEnabledIP_li_1}
        ValidateLI LLDP Ipv6 Address      ${li_1}    ${LLDPEnabledIP_IPv6_li_1}

        #Validate Interconnect IPv4
        Fusion Api Login Appliance         ${APPLIANCE_IP}        ${admin_credentials}
        Validate Interconnects            ${ICM_1}    ${TLtrue}    ${LLDPEnabledIP_li_1}
        Validate Interconnects            ${ICM_2}    ${TLtrue}    ${LLDPEnabledIP_li_1}
        #Validation - Validate Interconnects Level
        Validate Interconnects Ipv6            ${ICM_1}    ${TLtrue}    ${LLDPEnabledIP_IPv6_li_1}
        Validate Interconnects Ipv6            ${ICM_2}    ${TLtrue}    ${LLDPEnabledIP_IPv6_li_1}

        #Validation APIC and Leaf validation
        ${status}=    leaf_validate   @{Testdata.switches_taggedenabled_li_1}
        run keyword if    '${status}' == 'False'    Fail    'Management Ip Address mismatch at Leaf switch"
        #Verifying APIC Level Changes
        ${status}=            APIC LogIn and Validate Topology                  ${APIC_APPLIANCE_IP}          ${apic_admin_credentials}     ${APIC_TOPOLOGY_li_1}      ${APIC_IPList_enabled_li_1}
        run keyword if  '${status}'=='False'    Fail    'Toplogy did not match'


4. Multiple LIG2 Multiple LI-Edit LIGS-Tagged,update from group,validate LI values, Edit Second LIG with Tagged LLDP

        ${Status2} =    fusion_ui_edit_logical_interconnect_group_tbird    @{TestData.edit_tbird_ligs_enable_Multi_LIG1}
        Run Keyword If    '${Status2}' == 'True'    Log to Console    Values of LLDP Tagging Enabled for LIG page for both LIGs    ELSE    fail
        #Update from group
        fusion_ui_update_logical_interconnect_from_group    ${TestData.lis_Multi_LIG1[0]}
        #Verify the values of LLDP Tagging and Enhanced TLV is "Enabled"
        ${Status2} =    fusion_ui_verify_logical_interconnects    @{TestData.verify_tbird_li_enable_Multi_LIG1}
        Run Keyword If    '${Status2}' == 'True'    Log to Console    Values of LLDP Tagging is Enabled for LIG page    ELSE    fail

        Wait Until Keyword Succeeds    600 s    10 s    Verify Interconnect State    ${ICM_3}    ${State_Power_On}
        Wait Until Keyword Succeeds    600 s    10 s    Verify Interconnect State    ${ICM_4}    ${State_Power_On}

        #Validation - Validate lldp IP Address in LI,after Enabling both LLDP tagging in LIG
        Fusion Api Login Appliance        ${APPLIANCE_IP}        ${admin_credentials}
        ValidateLI LLDP Ip Address        ${li_2}    ${LLDPEnabledIP_li_2}
        ValidateLI LLDP Ipv6 Address      ${li_2}    ${LLDPEnabledIP_IPv6_li_2}
        #Validate Interconnect IPv4
        Fusion Api Login Appliance         ${APPLIANCE_IP}        ${admin_credentials}
        Validate Interconnects            ${ICM_3}    ${TLtrue}    ${LLDPEnabledIP_li_2}
        Validate Interconnects            ${ICM_4}    ${TLtrue}    ${LLDPEnabledIP_li_2}
        #Validate Interconnects IPv6
        Validate Interconnects Ipv6            ${ICM_3}    ${TLtrue}    ${LLDPEnabledIP_IPv6_li_2}
        Validate Interconnects Ipv6            ${ICM_4}    ${TLtrue}    ${LLDPEnabledIP_IPv6_li_2}

        #Validation APIC and Leaf validation
        ${status}=    leaf_validate   @{Testdata.switches_taggedenabled_li_2}
        run keyword if    '${status}' == 'False'    Fail    'Management Ip Address mismatch at Leaf switch"
        #Verifying APIC Level Changes
        ${status}=            APIC LogIn and Validate Topology                  ${APIC_APPLIANCE_IP}          ${apic_admin_credentials}     ${APIC_TOPOLOGY_li_2}      ${APIC_IPList_enabled_li_2}
        run keyword if  '${status}'=='False'    Fail    'Toplogy did not match'


5. Edit LIGS-Tagged disabled,update from group,validate LI values
        Log to Console  Test Step - 5 Started
        ${Status2} =    fusion_ui_edit_logical_interconnect_group_tbird    @{TestData.edit_tbird_ligs_disable_Multi_LIG}
        Run Keyword If    '${Status2}' == 'True'    Log to Console    Values of LLDP Tagging is Disabled for LIG page for both LIGs    ELSE    fail
        #Update from group
        fusion_ui_update_logical_interconnect_from_group    ${TestData.lis_Multi_LIG[0]}
        Wait Until Keyword Succeeds    600 s    10 s    Verify Interconnect State    ${ICM_1}    ${State_Power_On}
        Wait Until Keyword Succeeds    600 s    10 s    Verify Interconnect State    ${ICM_2}    ${State_Power_On}

        #Verify the values of LLDP Tagging is "Disabled"
        ${Status2} =    fusion_ui_verify_logical_interconnects    @{TestData.verify_tbird_li_disable_Multi_LIG}
        Run Keyword If    '${Status2}' == 'True'    Log to Console    Values of LLDP Tagging is Disabled for LIG page    ELSE    fail

        #Validation - Validate lldp IP Address in LI after Disabling LLDP tagging
        Fusion Api Login Appliance         ${APPLIANCE_IP}        ${admin_credentials}
        ValidateLI LLDP Ip Address    ${li_1}    ${LLDPDisabledIP}
        ValidateLI LLDP Ipv6 Address      ${li_1}    ${LLDPDisabledIP}

        #Validate Interconnect
        Fusion Api Login Appliance         ${APPLIANCE_IP}        ${admin_credentials}
        Validate Interconnects            ${ICM_1}    ${TLfalse}    ${LLDPDisabledIP}
        Validate Interconnects            ${ICM_2}    ${TLfalse}    ${LLDPDisabledIP}

        Validate Interconnects Ipv6    ${ICM_1}    ${TLfalse}    ${LLDPDisabledIP}
        Validate Interconnects Ipv6    ${ICM_2}    ${TLfalse}    ${LLDPDisabledIP}

6. Edit LIG2-Tagged disabled,update from group,validate LI values

        ${Status2} =    fusion_ui_edit_logical_interconnect_group_tbird    @{TestData.edit_tbird_ligs_disable_Multi_LIG1}
        Run Keyword If    '${Status2}' == 'True'    Log to Console    Values of LLDP Tagging is Disabled for LIG page for both LIGs    ELSE    fail

        #Update from group
        fusion_ui_update_logical_interconnect_from_group    ${TestData.lis_Multi_LIG1[0]}
        Wait Until Keyword Succeeds    600 s    10 s    Verify Interconnect State    ${ICM_3}    ${State_Power_On}
        Wait Until Keyword Succeeds    600 s    10 s    Verify Interconnect State    ${ICM_4}    ${State_Power_On}

        #Verify the values of LLDP Tagging is "Disabled"
        ${Status2} =    fusion_ui_verify_logical_interconnects    @{TestData.verify_tbird_li_disable_Multi_LIG1}
        Run Keyword If    '${Status2}' == 'True'    Log to Console    Values of LLDP Tagging is Disabled for LIG page    ELSE    fail

        #Validation - Validate lldp IP Address in LI after Disabling LLDP tagging
        Fusion Api Login Appliance         ${APPLIANCE_IP}        ${admin_credentials}
        ValidateLI LLDP Ip Address        ${li_2}    ${LLDPDisabledIP}
        ValidateLI LLDP Ipv6 Address      ${li_2}    ${LLDPDisabledIP}

        #Validate Interconnect
        Fusion Api Login Appliance         ${APPLIANCE_IP}        ${admin_credentials}
        Validate Interconnects            ${ICM_3}    ${TLfalse}    ${LLDPDisabledIP}
        Validate Interconnects            ${ICM_4}    ${TLfalse}    ${LLDPDisabledIP}
        Validate Interconnects Ipv6    ${ICM_3}    ${TLfalse}    ${LLDPDisabledIP}
        Validate Interconnects Ipv6    ${ICM_4}    ${TLfalse}    ${LLDPDisabledIP}

7. Edit LI-Tagged lldp enabled
        #Verify LLDP Tagging can be Enabled
        fusion_ui_edit_logical_interconnects    @{TestData.edit_tbird_li_enable_Multi_LIG}

        Wait Until Keyword Succeeds    600 s    10 s    Verify Interconnect State    ${ICM_1}    ${State_Power_On}
        Wait Until Keyword Succeeds    600 s    10 s    Verify Interconnect State    ${ICM_2}    ${State_Power_On}

        #Verify the values of LLDP Tagging is  "Enabled"
        ${Status2} =    fusion_ui_verify_logical_interconnects    @{TestData.verify_tbird_li_enable_Multi_LIG}
        Run Keyword If    '${Status2}' == 'True'    Log to Console    Values of LLDP Tagging  is Enabled for LI page    ELSE    fail

        #Validation - Validate lldp IP Address in LI,after Enabling LLDP tagging in LIG
        Fusion Api Login Appliance        ${APPLIANCE_IP}        ${admin_credentials}
        #Validation - Validate lldp IP Address in LI Level
        ValidateLI LLDP Ip Address        ${li_1}    ${LLDPEnabledIP_li_1}
        ValidateLI LLDP Ipv6 Address      ${li_1}    ${LLDPEnabledIP_IPv6_li_1}

        #Validate Interconnect IPv4
        Fusion Api Login Appliance         ${APPLIANCE_IP}        ${admin_credentials}
        Validate Interconnects            ${ICM_1}    ${TLtrue}    ${LLDPEnabledIP_li_1}
        Validate Interconnects            ${ICM_2}    ${TLtrue}    ${LLDPEnabledIP_li_1}
        #Validation - Validate Interconnects Level
        Validate Interconnects Ipv6            ${ICM_1}    ${TLtrue}    ${LLDPEnabledIP_IPv6_li_1}
        Validate Interconnects Ipv6            ${ICM_2}    ${TLtrue}    ${LLDPEnabledIP_IPv6_li_1}

        #Validation APIC and Leaf validation
        ${status}=    leaf_validate   @{Testdata.switches_taggedenabled_li_1}
        run keyword if    '${status}' == 'False'    Fail    'Management Ip Address mismatch at Leaf switch"

        #Verifying APIC Level Changes
        ${status}=            APIC LogIn and Validate Topology                  ${APIC_APPLIANCE_IP}          ${apic_admin_credentials}     ${APIC_TOPOLOGY_li_1}      ${APIC_IPList_enabled_li_1}
        run keyword if  '${status}'=='False'    Fail    'Toplogy did not match'

8. Edit LI-Tagged lldp enabled for second LI
        fusion_ui_edit_logical_interconnects    @{TestData.edit_tbird_li_enable_Multi_LIG1}

        Wait Until Keyword Succeeds    600 s    10 s    Verify Interconnect State    ${ICM_3}    ${State_Power_On}
        Wait Until Keyword Succeeds    600 s    10 s    Verify Interconnect State    ${ICM_4}    ${State_Power_On}

        #Verify the values of LLDP Tagging is "Enabled"
        ${Status2} =    fusion_ui_verify_logical_interconnects    @{TestData.verify_tbird_li_enable_Multi_LIG1}
        Run Keyword If    '${Status2}' == 'True'    Log to Console    Values of LLDP Tagging is Enabled for LIG page    ELSE    fail

        #Validation - Validate lldp IP Address in LI,after Enabling LLDP tagging in LI
        Fusion Api Login Appliance        ${APPLIANCE_IP}        ${admin_credentials}
        ValidateLI LLDP Ip Address        ${li_2}    ${LLDPEnabledIP_li_2}
        ValidateLI LLDP Ipv6 Address      ${li_2}    ${LLDPEnabledIP_IPv6_li_2}

        #Validation APIC and Leaf validation
        ${status}=    leaf_validate   @{Testdata.switches_taggedenabled_li_2}
        run keyword if    '${status}' == 'False'    Fail    'Management Ip Address mismatch at Leaf switch"

        #Verifying APIC Level Changes
        ${status}=            APIC LogIn and Validate Topology                  ${APIC_APPLIANCE_IP}          ${apic_admin_credentials}     ${APIC_TOPOLOGY_li_2}      ${APIC_IPList_enabled_li_2}
        run keyword if  '${status}'=='False'    Fail    'Toplogy did not match'

        #Validate Interconnect IPv4
        Fusion Api Login Appliance         ${APPLIANCE_IP}        ${admin_credentials}
        Validate Interconnects            ${ICM_3}    ${TLtrue}    ${LLDPEnabledIP_li_2}
        Validate Interconnects            ${ICM_4}    ${TLtrue}    ${LLDPEnabledIP_li_2}
        #Validate Interconnects IPv6
        Validate Interconnects Ipv6            ${ICM_3}    ${TLtrue}    ${LLDPEnabledIP_IPv6_li_2}
        Validate Interconnects Ipv6            ${ICM_4}    ${TLtrue}    ${LLDPEnabledIP_IPv6_li_2}


9. Edit LI-Tagged lldp disabled First LI
        #Verify LLDP Tagging  can be Disabled
        fusion_ui_edit_logical_interconnects    @{TestData.edit_tbird_li_disable_Multi_LIG}

        #Verify the values of LLDP Tagging is "Disabled"
        Wait Until Keyword Succeeds    600 s    10 s    Verify Interconnect State    ${ICM_1}    ${State_Power_On}
        Wait Until Keyword Succeeds    600 s    10 s    Verify Interconnect State    ${ICM_2}    ${State_Power_On}

        ${Status2} =    fusion_ui_verify_logical_interconnects    @{TestData.verify_tbird_li_disable_Multi_LIG}
        Run Keyword If    '${Status2}' == 'True'    Log to Console    Values of LLDP Tagging is Enabled for LI page    ELSE    fail

        #Validation-Validate lldp IP Address in LI after Disabling LLDP tagging
        Fusion Api Login Appliance         ${APPLIANCE_IP}        ${admin_credentials}
        ValidateLI LLDP Ip Address           ${li_1}    ${LLDPDisabledIP}
        ValidateLI LLDP Ipv6 Address         ${li_1}    ${LLDPDisabledIP}

        #Validate Interconnect
        Fusion Api Login Appliance         ${APPLIANCE_IP}        ${admin_credentials}
        Validate Interconnects            ${ICM_1}    ${TLfalse}    ${LLDPDisabledIP}
        Validate Interconnects            ${ICM_2}    ${TLfalse}    ${LLDPDisabledIP}
        Validate Interconnects Ipv6    ${ICM_1}    ${TLfalse}    ${LLDPDisabledIP}
        Validate Interconnects Ipv6    ${ICM_2}    ${TLfalse}    ${LLDPDisabledIP}


10. Edit LI-Tagged lldp disabled second LI
        fusion_ui_edit_logical_interconnects    @{TestData.edit_tbird_li_disable_Multi_LIG1}

        #Verify the values of LLDP Tagging is "Disabled"
        Wait Until Keyword Succeeds    600 s    10 s    Verify Interconnect State    ${ICM_3}    ${State_Power_On}
        Wait Until Keyword Succeeds    600 s    10 s    Verify Interconnect State    ${ICM_4}    ${State_Power_On}

        ${Status2} =    fusion_ui_verify_logical_interconnects    @{TestData.verify_tbird_li_disable_Multi_LIG1}
        Run Keyword If    '${Status2}' == 'True'    Log to Console    Values of LLDP Tagging is Enabled for LI page    ELSE    fail

        #Validation-Validate lldp IP Address in LI after Disabling LLDP tagging
        Fusion Api Login Appliance         ${APPLIANCE_IP}        ${admin_credentials}
        ValidateLI LLDP Ip Address        ${li_2}    ${LLDPDisabledIP}
        ValidateLI LLDP Ipv6 Address      ${li_2}    ${LLDPDisabledIP}

        #Validate Interconnect
        Fusion Api Login Appliance         ${APPLIANCE_IP}        ${admin_credentials}
        Validate Interconnects            ${ICM_3}    ${TLfalse}    ${LLDPDisabledIP}
        Validate Interconnects            ${ICM_4}    ${TLfalse}    ${LLDPDisabledIP}
        Validate Interconnects Ipv6        ${ICM_3}    ${TLfalse}    ${LLDPDisabledIP}
        Validate Interconnects Ipv6        ${ICM_4}    ${TLfalse}    ${LLDPDisabledIP}

        Wait Until Keyword Succeeds    600 s    10 s    Verify Interconnect State    ${ICM_1}    ${State_Power_On}
        Wait Until Keyword Succeeds    600 s    10 s    Verify Interconnect State    ${ICM_2}    ${State_Power_On}
        Wait Until Keyword Succeeds    600 s    10 s    Verify Interconnect State    ${ICM_3}    ${State_Power_On}
        Wait Until Keyword Succeeds    600 s    10 s    Verify Interconnect State    ${ICM_4}    ${State_Power_On}

15. Power off interconnect and verify the IP being updated
        fusion_ui_edit_logical_interconnects    @{TestData.edit_tbird_li_enable_Multi_LIG}
        Wait Until Keyword Succeeds    600 s    10 s    Verify Interconnect State    ${ICM_1}    ${State_Power_On}
        Wait Until Keyword Succeeds    600 s    10 s    Verify Interconnect State    ${ICM_2}    ${State_Power_On}
        fusion_ui_interconnect_power_off    @{TestData.tbird_li_poweroff_on_bay3_enc1}
        Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}
        Wait Until Keyword Succeeds    600 s   10 s    Verify Interconnect State   ${ICM_1}    ${State_Power_Off}
        Wait Until Keyword Succeeds    600 s    10 s    Verify Interconnect State    ${ICM_2}    ${State_Power_On}
        Log to Console    !!!!Waiting for the ICMs to Validate the Recalculated Address!!!!!
        Sleep   2 minutes 30 seconds

        #Validation-Validate lldp IP Address in LI,after Enabling LLDP tagging
        Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}
        ValidateLI LLDP Ip Address        ${li_1}    ${RECALCIP_li_1}
        ValidateLI LLDP Ipv6 Address      ${li_1}    ${RECALCIP_IPv6_li_1}

        Verify Interconnect Power State     ${ICM_1}        ${POWER_STATE_OFF}
        Verify Interconnect Power State     ${ICM_2}        ${POWER_STATE_ON}

        #Validate Interconnect
        Validate Interconnects          ${ICM_1}    ${TLtrue}   ${RECALCIP_li_1}
        Validate Interconnects Ipv6          ${ICM_1}    ${TLtrue}    ${RECALCIP_IPv6_li_1}
        Sleep   2 minutes 30 seconds

        #Verifying APIC Level Changes
        ${status}=            APIC LogIn and Validate Topology                  ${APIC_APPLIANCE_IP}          ${apic_admin_credentials}     ${APIC_TOPOLOGY_li_2}      ${APIC_IPList_Bay1Off_li_1}
        run keyword if  '${status}'=='False'    Fail    'Toplogy did not match'
        Sleep    120

        #APIC Validations after enabled the LLDP and Leaf Validation after  Power On
        ${status}=              leaf_validate           @{Testdata.switches_poweroffbay1_li_1}
        run keyword if  '${status}'=='False'    Fail    'Management Ip Address mismatch at Leaf switch"

16. Power_On interconnect and verify the Ip being updated

        fusion_ui_interconnect_power_on    @{TestData.tbird_li_poweroff_on_bay3_enc1}
        Sleep   1 minutes 1 seconds
        Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}
        Wait Until Keyword Succeeds    2400 s  10 s    Verify Interconnect State   ${ICM_1}    ${State_Power_On}
        Wait Until Keyword Succeeds    2400 s  10 s    Verify Interconnect State   ${ICM_2}    ${State_Power_On}
        Log to Console    !!!!Waiting for the ICMs to be in configured state!!!!!
        Sleep   2 minutes 1 seconds
        Wait Until Keyword Succeeds    2400 s  10 s    Verify Interconnect State   ${ICM_1}    ${State_Power_On}
        Wait Until Keyword Succeeds    2400 s  10 s    Verify Interconnect State   ${ICM_2}    ${State_Power_On}

        Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}
        ValidateLI LLDP Ip Address    ${li_1}    ${LLDPEnabledIP_li_1}
        ValidateLI LLDP Ipv6 Address        ${li_1}    ${LLDPEnabledIP_IPv6_li_1}

        Validate Interconnects            ${ICM_1}    ${TLtrue}    ${LLDPEnabledIP_li_1}
        Validate Interconnects            ${ICM_2}    ${TLtrue}    ${LLDPEnabledIP_li_1}
        Validate Interconnects Ipv6            ${ICM_1}    ${TLtrue}    ${LLDPEnabledIP_IPv6_li_1}
        Validate Interconnects Ipv6            ${ICM_2}    ${TLtrue}    ${LLDPEnabledIP_IPv6_li_1}

        Verify Interconnect Power State     ${ICM_1}        ${POWER_STATE_ON}
        Verify Interconnect Power State     ${ICM_2}        ${POWER_STATE_ON}

        #Verifying APIC Level Changes
        ${status}=            APIC LogIn and Validate Topology                  ${APIC_APPLIANCE_IP}          ${apic_admin_credentials}     ${APIC_TOPOLOGY_li_1}      ${APIC_IPList_enabled_li_1}
        run keyword if  '${status}'=='False'    Fail    'Toplogy did not match'
        Sleep    120

        #APIC Validations after enabled the LLDP
        ${status}=              leaf_validate           @{Testdata.switches_taggedenabled_li_1}
        run keyword if  '${status}'=='False'    Fail    'Management Ip Address mismatch at Leaf switch"


17. Power off interconnect and verify the IP being updated
        fusion_ui_edit_logical_interconnects    @{TestData.edit_tbird_li_enable_Multi_LIG1}
        Wait Until Keyword Succeeds    600 s   10 s    Verify Interconnect State   ${ICM_3}    ${State_Power_On}
        Wait Until Keyword Succeeds    600 s   10 s    Verify Interconnect State   ${ICM_4}    ${State_Power_On}
        fusion_ui_interconnect_power_off    @{TestData.tbird_li_poweroff_on_bay2_enc1}

        Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}
        Wait Until Keyword Succeeds    600 s   10 s    Verify Interconnect State   ${ICM_3}    ${State_Power_Off}
        Wait Until Keyword Succeeds    600 s   10 s    Verify Interconnect State   ${ICM_4}    ${State_Power_On}
        Log to Console    !!!!Waiting for the ICMs to Validate the Recalculated Address!!!!!
        Sleep   2 minutes 30 seconds

        #Validation-Validate lldp IP Address in LI,after Enabling LLDP tagging
        Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}
        ValidateLI LLDP Ip Address        ${li_2}    ${RECALCIP_li_2}
        ValidateLI LLDP Ipv6 Address      ${li_2}    ${RECALCIP_IPv6_li_2}

        Verify Interconnect Power State     ${ICM_3}        ${POWER_STATE_OFF}
        Verify Interconnect Power State     ${ICM_4}        ${POWER_STATE_ON}

        #Validate Interconnect
        Validate Interconnects          ${ICM_3}    ${TLtrue}   ${RECALCIP_li_2}
        Validate Interconnects Ipv6          ${ICM_3}    ${TLtrue}    ${RECALCIP_IPv6_li_2}
        Sleep   2 minutes 30 seconds

        #Verifying APIC Level Changes
        ${status}=            APIC LogIn and Validate Topology                  ${APIC_APPLIANCE_IP}          ${apic_admin_credentials}     ${APIC_TOPOLOGY_li_2}      ${APIC_IPList_Bay1Off_li_2}
        run keyword if  '${status}'=='False'    Fail    'Toplogy did not match'
        Sleep    120

        #APIC Validations after enabled the LLDP and Leaf Validation after  Power On
        ${status}=              leaf_validate           @{Testdata.switches_poweroffbay1_li_2}
        run keyword if  '${status}'=='False'    Fail    'Management Ip Address mismatch at Leaf switch"


18. Power_On interconnect and verify the Ip being updated
        fusion_ui_interconnect_power_on    @{TestData.tbird_li_poweroff_on_bay2_enc1}
        Sleep    1 minutes 1 seconds
        Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}
        Wait Until Keyword Succeeds    2400 s  10 s    Verify Interconnect State   ${ICM_3}    ${State_Power_On}
        Wait Until Keyword Succeeds    2400 s  10 s    Verify Interconnect State   ${ICM_4}    ${State_Power_On}
        Log to Console    !!!!Waiting for the ICMs to be in configured state!!!!!
        Sleep    2 minutes 1 seconds
        Wait Until Keyword Succeeds    2400 s  10 s    Verify Interconnect State   ${ICM_3}    ${State_Power_On}
        Wait Until Keyword Succeeds    2400 s  10 s    Verify Interconnect State   ${ICM_4}    ${State_Power_On}

        Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}
        ValidateLI LLDP Ip Address    ${li_2}    ${LLDPEnabledIP_li_2}
        ValidateLI LLDP Ipv6 Address        ${li_2}    ${LLDPEnabledIP_IPv6_li_2}

        Validate Interconnects            ${ICM_3}    ${TLtrue}    ${LLDPEnabledIP_li_2}
        Validate Interconnects            ${ICM_4}    ${TLtrue}    ${LLDPEnabledIP_li_2}
        Validate Interconnects Ipv6            ${ICM_3}    ${TLtrue}    ${LLDPEnabledIP_IPv6_li_2}
        Validate Interconnects Ipv6            ${ICM_4}    ${TLtrue}    ${LLDPEnabledIP_IPv6_li_2}

        Verify Interconnect Power State     ${ICM_3}        ${POWER_STATE_ON}
        Verify Interconnect Power State     ${ICM_4}        ${POWER_STATE_ON}

        #Verifying APIC Level Changes
        ${status}=            APIC LogIn and Validate Topology                  ${APIC_APPLIANCE_IP}          ${apic_admin_credentials}     ${APIC_TOPOLOGY_li_2}      ${APIC_IPList_enabled_li_2}
        run keyword if  '${status}'=='False'    Fail    'Toplogy did not match'
        Sleep    120

        #APIC Validations after enabled the LLDP
        ${status}=              leaf_validate           @{Testdata.switches_taggedenabled_li_2}
        run keyword if  '${status}'=='False'    Fail    'Management Ip Address mismatch at Leaf switch"

11. EFUSE_ON interconnect and verify the Ip being updated
        Wait Until Keyword Succeeds    600 s   10 s    Verify Interconnect State   ${ICM_1}    ${State_Power_On}
        Wait Until Keyword Succeeds    600 s   10 s    Verify Interconnect State   ${ICM_2}    ${State_Power_On}

        #Validate Interconnect
        Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}
        Validate Interconnects          ${ICM_1}    ${TLtrue}   ${LLDPEnabledIP_li_1}
        Validate Interconnects          ${ICM_2}    ${TLtrue}   ${LLDPEnabledIP_li_1}

        #Validate Interconnects IPv6
        Validate Interconnects Ipv6            ${ICM_1}    ${TLtrue}    ${LLDPEnabledIP_IPv6_li_1}
        Validate Interconnects Ipv6            ${ICM_2}    ${TLtrue}    ${LLDPEnabledIP_IPv6_li_1}

        EFUSE ON ICM        ${bay_1}    ${enc_serial}   ${ICM_1}
        Sleep   1 minutes 30 seconds

        Wait Until Keyword Succeeds    600 s   10 s    Verify Interconnect State   ${ICM_1}    ${State_Efuse_Off}
        Wait Until Keyword Succeeds    600 s   10 s    Verify Interconnect State   ${ICM_2}    ${State_Power_On}


        #Validation-Validate lldp IP Address in LI,after Enabling LLDP tagging
        Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}
        ValidateLI LLDP Ip Address        ${li_1}    ${RECALCIP_li_1}
        ValidateLI LLDP Ipv6 Address      ${li_1}    ${RECALCIP_IPv6_li_1}
        Sleep   1 minutes 30 seconds
        #Validate Interconnect
        Validate Interconnects          ${ICM_2}    ${TLtrue}   ${RECALCIP_li_1}
        Validate Interconnects Ipv6          ${ICM_2}    ${TLtrue}    ${RECALCIP_IPv6_li_1}

        #Verifying APIC Level Changes
        ${status}=            APIC LogIn and Validate Topology                  ${APIC_APPLIANCE_IP}          ${apic_admin_credentials}     ${APIC_TOPOLOGY_li_1}      ${APIC_IPList_Bay1Off_li_1}
        run keyword if  '${status}'=='False'    Fail    'Toplogy did not match'

        #APIC Validations after enabled the LLDP and Leaf Validation after  Efuse On
        ${status}=              leaf_validate           @{Testdata.switches_poweroffbay1_li_1}
        run keyword if  '${status}'=='False'    Fail    'Management Ip Address mismatch at Leaf switch"


12. EFUSE_OFF interconnect and verify the Ip being updated

        Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}
        EFUSE OFF ICM       ${bay_1}    ${enc_serial}    ${ICM_1}
        Sleep   1 minutes 1 seconds
        Wait Until Keyword Succeeds    2400 s  10 s    Verify Interconnect State   ${ICM_1}    ${State_Power_On}
        Wait Until Keyword Succeeds    2400 s  10 s    Verify Interconnect State   ${ICM_2}    ${State_Power_On}
        Sleep   1 minutes 1 seconds
        Wait Until Keyword Succeeds    2400 s  10 s    Verify Interconnect State   ${ICM_1}    ${State_Power_On}
        Wait Until Keyword Succeeds    2400 s  10 s    Verify Interconnect State   ${ICM_2}    ${State_Power_On}

        Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}
        ValidateLI LLDP Ip Address    ${li_1}    ${LLDPEnabledIP_li_1}
        ValidateLI LLDP Ipv6 Address        ${li_1}    ${LLDPEnabledIP_IPv6_li_1}

        Validate Interconnects            ${ICM_1}    ${TLtrue}    ${LLDPEnabledIP_li_1}
        Validate Interconnects            ${ICM_2}    ${TLtrue}    ${LLDPEnabledIP_li_1}
        Validate Interconnects Ipv6            ${ICM_1}    ${TLtrue}    ${LLDPEnabledIP_IPv6_li_1}
        Validate Interconnects Ipv6            ${ICM_2}    ${TLtrue}    ${LLDPEnabledIP_IPv6_li_1}
        Sleep   1 minutes 40 seconds
        #APIC Validations after enabled the LLDP
        ${status}=              leaf_validate           @{Testdata.switches_taggedenabled_li_1}
        run keyword if  '${status}'=='False'    Fail    'Management Ip Address mismatch at Leaf switch"

        #Verifying APIC Level Changes
        ${status}=            APIC LogIn and Validate Topology                  ${APIC_APPLIANCE_IP}          ${apic_admin_credentials}     ${APIC_TOPOLOGY}      ${APIC_IPList_enabled_li_1}
        run keyword if  '${status}'=='False'    Fail    'Toplogy did not match'

13. EFUSE_ON interconnect and verify the Ip being updated
        Wait Until Keyword Succeeds    600 s   10 s    Verify Interconnect State   ${ICM_3}    ${State_Power_On}
        Wait Until Keyword Succeeds    600 s   10 s    Verify Interconnect State   ${ICM_4}    ${State_Power_On}

        #Validate Interconnect
        Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}
        Validate Interconnects          ${ICM_3}    ${TLtrue}   ${LLDPEnabledIP_li_2}
        Validate Interconnects          ${ICM_4}    ${TLtrue}   ${LLDPEnabledIP_li_2}

        #Validate Interconnects IPv6
        Validate Interconnects Ipv6            ${ICM_3}    ${TLtrue}    ${LLDPEnabledIP_IPv6_li_2}
        Validate Interconnects Ipv6            ${ICM_4}    ${TLtrue}    ${LLDPEnabledIP_IPv6_li_2}

        EFUSE ON ICM        ${bay_2}    ${enc_serial}     ${ICM_3}
        Sleep   1 minutes 30 seconds

        Wait Until Keyword Succeeds    600 s   10 s    Verify Interconnect State   ${ICM_3}    ${State_Efuse_Off}
        Wait Until Keyword Succeeds    600 s   10 s    Verify Interconnect State   ${ICM_4}    ${State_Power_On}


        #Validation-Validate lldp IP Address in LI,after Enabling LLDP tagging
        Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}
        ValidateLI LLDP Ip Address        ${li_2}    ${RECALCIP_li_2}
        ValidateLI LLDP Ipv6 Address      ${li_2}    ${RECALCIP_IPv6_li_2}

        #Validate Interconnect
        Validate Interconnects          ${ICM_3}    ${TLtrue}   ${RECALCIP_li_2}
        Validate Interconnects Ipv6          ${ICM_3}    ${TLtrue}    ${RECALCIP_IPv6_li_2}
        Sleep   1 minutes 30 seconds
        #Verifying APIC Level Changes
        ${status}=            APIC LogIn and Validate Topology                  ${APIC_APPLIANCE_IP}          ${apic_admin_credentials}     ${APIC_TOPOLOGY_li_2}      ${APIC_IPList_Bay1Off_li_2}
        run keyword if  '${status}'=='False'    Fail    'Toplogy did not match'

        #APIC Validations after enabled the LLDP and Leaf Validation after  Efuse On
        ${status}=              leaf_validate           @{Testdata.switches_poweroffbay1_li_2}
        run keyword if  '${status}'=='False'    Fail    'Management Ip Address mismatch at Leaf switch"

14. EFUSE_OFF interconnect and verify the Ip being updated

        Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}
        EFUSE OFF ICM       ${bay_2}    ${enc_serial}       ${ICM_3}
        Sleep   1 minutes 1 seconds
        Wait Until Keyword Succeeds    2400 s  10 s    Verify Interconnect State   ${ICM_3}    ${State_Power_On}
        Wait Until Keyword Succeeds    2400 s  10 s    Verify Interconnect State   ${ICM_4}    ${State_Power_On}
        Sleep   1 minutes 1 seconds
        Wait Until Keyword Succeeds    2400 s  10 s    Verify Interconnect State   ${ICM_3}    ${State_Power_On}
        Wait Until Keyword Succeeds    2400 s  10 s    Verify Interconnect State   ${ICM_4}    ${State_Power_On}

        Fusion Api Login Appliance      ${APPLIANCE_IP}     ${admin_credentials}
        ValidateLI LLDP Ip Address    ${li_2}    ${LLDPEnabledIP_li_2}
        ValidateLI LLDP Ipv6 Address        ${li_2}    ${LLDPEnabledIP_IPv6_li_2}

        Validate Interconnects            ${ICM_3}    ${TLtrue}    ${LLDPEnabledIP_li_2}
        Validate Interconnects            ${ICM_4}    ${TLtrue}    ${LLDPEnabledIP_li_2}
        Validate Interconnects Ipv6            ${ICM_3}    ${TLtrue}    ${LLDPEnabledIP_IPv6_li_2}
        Validate Interconnects Ipv6            ${ICM_4}    ${TLtrue}    ${LLDPEnabledIP_IPv6_li_2}
        Sleep   1 minutes 40 seconds
        #APIC Validations after enabled the LLDP
        ${status}=              leaf_validate           @{Testdata.switches_taggedenabled_li_2}
        run keyword if  '${status}'=='False'    Fail    'Management Ip Address mismatch at Leaf switch"

        #Verifying APIC Level Changes
        ${status}=            APIC LogIn and Validate Topology                  ${APIC_APPLIANCE_IP}          ${apic_admin_credentials}     ${APIC_TOPOLOGY}      ${APIC_IPList_enabled_li_2}
        run keyword if  '${status}'=='False'    Fail    'Toplogy did not match'
        Fusion UI Logout of Appliance

*** Keywords ***
ValidateLI LLDP Ip Address
    [Arguments]        ${li}    ${LLDPIP}
    ${li_uri} =    Get LI URI    ${li}
    ${resp} =     Fusion Api Get Li    ${li_uri}
    ${es} =     Get From Dictionary        ${resp}    ethernetSettings
    ${ip} =     Get From Dictionary        ${es}    lldpIpv4Address
    ${status} =    Should Be Equal    ${ip}    ${LLDPIP}
    run keyword if    '${status}'=='False'    Fail    "LLDP Ip Address is not calculated in correct manner"
    Log to console and logfile    Tagged LLDP <${LLDPIP}> compared with TaggedLldp <${ip}> for Logical Interconnect <${li}>


ValidateLI LLDP Ipv6 Address
    [Arguments]        ${li}    ${LLDPIP}
    ${li_uri} =     Get LI URI   ${li}
    ${resp} =     Fusion Api Get Li    ${li_uri}
    ${es} =     Get From Dictionary        ${resp}    ethernetSettings
    ${ip} =     Get From Dictionary        ${es}    lldpIpv6Address
    ${status} =    Should Be Equal    ${ip}    ${LLDPIP}
    run keyword if    '${status}'=='False'    Fail    "LLDP Ip Address is not calculated in correct manner"
    Log to console and logfile    Tagged LLDP <${LLDPIP}> compared with TaggedLldp <${ip}> for Logical Interconnect <${li}>

Validate Interconnects
    [Arguments]        ${ICM_NAME}        ${ltlv}        ${LLDPIP}
    Log to console and logfile    Validating Interconnects for TaggedLLDP of ${ICM_NAME}
    ${ic} =     Get IC        ${ICM_NAME}
    ${enableTaggedLldp} =         Get From IC    ${ic}   enableTaggedLldp
    ${lldpip} =                Get from IC     ${ic}        lldpIpv4Address
    Should be Equal as Strings    ${enableTaggedLldp}        ${ltlv}
    Should be Equal as Strings    ${lldpip}        ${LLDPIP}
    Log to console and logfile    Tagged LLDP <${ltlv}> compared with TaggedLldp <${enableTaggedLldp}> for ${ICM_NAME}

Validate Interconnects Ipv6
    [Arguments]        ${ICM_NAME}        ${ltlv}        ${LLDPIP_IPv6}
    Log to console and logfile    Validating Interconnects for TaggedLLDP of ${ICM_NAME}
    ${ic} =     Get IC        ${ICM_NAME}
    ${enableTaggedLldp} =         Get From IC    ${ic}   enableTaggedLldp
    ${lldpip} =                Get from IC     ${ic}        lldpIpv6Address
    Should be Equal as Strings    ${enableTaggedLldp}        ${ltlv}
    Should be Equal as Strings    ${lldpip}        ${LLDPIP_IPv6}
    Log to console and logfile    Tagged LLDP <${ltlv}> compared with TaggedLldp <${enableTaggedLldp}> for ${ICM_NAME}

ValidateLI TaggedLLDP and RICH TLV
    [Arguments]     ${li}   ${ltlv}
    ${li_uri} =     Get LI URI   ${li}
    ${getresp} =    Fusion Api Get Li   ${li_uri}
    Log     ${getresp}
    ${es} =     Get From Dictionary     ${getresp}  ethernetSettings
    ${LLDPTLV} =    Get From Dictionary     ${es}   enableTaggedLldp
    Should Be Equal As Strings  ${ltlv} ${LLDPTLV}
    Log to console and logfile    Tagged LLDP <${ltlv}> compared with TaggedLldp <${LLDPTLV}>

OA CLI EFUSE
    [Documentation]    issues an EFUSE Action to the given Device\Bay.
    ...   {DEVICE} = <BLADE|IOM|NETTRAY|SWM|FAN|OA|EM>
    ...   {BAY} = desired bay for given device
    ...   {ACTION} = <ON|OFF>
    [Arguments]          ${OA_HOST}    ${OA_USER}           ${OA_PASS}    ${DEVICE}    ${BAY}    ${ACTION}
    Open Connection                 ${OA_HOST}     prompt=OA-    timeout=10s
    Login               ${OA_USER}     ${OA_PASS}
    Write    ++diag--
    Read Until    diag>
    Write    efuse ${DEVICE} ${BAY} ${ACTION}
    Write    q
    Close All Connections

Get IC
    [Arguments]        ${ICM_NAME}
    ${resp} =   fusion api get interconnect
    Log        ${resp}
    ${ics} =     Get From Dictionary     ${resp}    members
    ${l} =     Get Length    ${ics}
    :FOR    ${x}    IN RANGE    0    ${l}
    \   ${ic} =     Get From List   ${ics}    ${x}
    \     Exit For Loop If     '${ic['name']}' == '${ICM_NAME}'
    [Return]    ${ic}
    Log        ${ic}

APIC INVENTORY SYNC
    [Documentation]    issues a inventory synch at APIC
    [Arguments]           ${APIC_HOST}    ${APIC_USER}        ${APIC_PASS}
    Open Connection     ${APIC_HOST}     timeout=20s
    Login               ${APIC_USER}     ${APIC_PASS}
    Write    cd /aci/vm-networking/policies/vmware/vmm-domains/HPVC-WPST-DVS/controllers/10.10.3.74
    Read Until    admin@apic1:10.10.3.74>
    Write    moset inventory-trigger-state triggered
    Sleep         10secs
    Log to console            Triggering inventory re-synch at APIC nodes
    Write    moconfig commit
    Sleep         10secs
    Close All Connections
    Sleep         120secs

APIC LogIn and Validate FabricNodes
    [Arguments]        ${APIC_APPLIANCE_IP}        ${apic_admin_credentials}        ${IPList}
    Log to console        Wait time for APIC to reflect CRM changes
    APIC INVENTORY SYNC                ${APIC_HOST}    ${APIC_USER}        ${APIC_PASS}

    ${token} =         Fusion Apic Api Login Appliance         ${APIC_APPLIANCE_IP}        ${apic_admin_credentials}
    ${apic_ip} =    Get Variable Value    ${apic_ip}
    ${status} =         Fusion Apic Get fabricNodes         ${APIC_APPLIANCE_IP}        ${token}    ${IPList}
    run keyword if  '${status}'=='False'    Fail    'fabricNodes information did not match'

APIC LogIn and Validate Topology
    [Arguments]     ${APIC_APPLIANCE_IP}        ${apic_admin_credentials}       ${APIC_TOPOLOGY}        ${NODE_IP}
    APIC INVENTORY SYNC             ${APIC_HOST}    ${APIC_USER}        ${APIC_PASS}
    Log to console      Wait time for APIC to reflect CRM changes
    ${token} =      loginApic       ${APIC_APPLIANCE_IP}        ${apic_admin_credentials}
    ${apic_ip} =    Get Variable Value  ${apic_ip}
    ${status} =         validate_Apic_topology     ${APIC_APPLIANCE_IP}        ${token}    ${APIC_TOPOLOGY}     ${NODE_IP}
    [Return]    ${status}

Verify Interconnect Power State
    [Arguments]        ${ICM_NAME}        ${POWER_STATE}
    Fusion Api Login Appliance         ${APPLIANCE_IP}        ${admin_credentials}
    Log to console and logfile  -Verify Power status
    ${ic} =     Get IC                  ${ICM_NAME}
    ${powerState} =     Get From IC    ${ic}   powerState
    Should Be Equal As Strings    ${powerState}    ${POWER_STATE}
    Log to console    \n\nPower State of the ICM is ${ICM_NAME}:${powerState}

Verify Interconnect State
    #Log to console and logfile-Verify Power status of ${ICM_1}
    Fusion Api Login Appliance         ${APPLIANCE_IP}        ${admin_credentials}
    [Arguments]        ${ICM_1}        ${POWER_STATE}
    ${ic} =        Get IC        ${ICM_1}
    ${State} =    Get From IC        ${ic}    state
    Log to console and logfile        \tICM state is ${ICM_1}:${State}
    Should Be Equal As Strings    ${State}    ${POWER_STATE}

EFUSE ON ICM
        [Arguments]            ${bay}        ${enc_serial}      ${ICM_NAME}
        Open Connection And Log In      ${APPLIANCE_IP}
        ${EM_IP} =        Get EM IP
        Log to console    ${EM_IP}
        ${EM_TOKEN} =        Get EM Token    ${enc_serial}
        Log to console    ${EM_TOKEN}
        Fusion Api Login Appliance         ${APPLIANCE_IP}        ${admin_credentials}
        ${ic} =     Get IC                  ${ICM_NAME}
        ${uri} =    Get From IC     ${ic}   uri
        Log to console    ${uri}
        EFuse ICM   EFuseOn    ${bay}
        Log to console and logfile            \tWaiting for ICM in Bay:${bay} to reach state:Absent
        Wait Until Keyword Succeeds     20 min   5s      IC reached state    ${ic['uri']}    Absent


EFUSE OFF ICM
        [Arguments]            ${bay}        ${enc_serial}      ${ICM_NAME}
        Open Connection And Log In      ${APPLIANCE_IP}
        ${EM_IP} =        Get EM IP
        Log to console    ${EM_IP}
        ${EM_TOKEN} =        Get EM Token    ${enc_serial}
        Log to console    ${EM_TOKEN}
        ${ic} =     Get IC                  ${ICM_NAME}
        ${uri} =    Get From IC     ${ic}   uri
        Log to console    ${uri}
        EFuse ICM   EFuseOff    ${bay}
        Log to console and logfile            \tWaiting for ICM in Bay:${bay} to reach state:Configured|Monitored
        Wait Until Keyword Succeeds     60 min   5s      IC reached state    ${ic['uri']}    Configured|Monitored
        #EFuse ICM   EFuseOff    ${bay}    ${EM_IP}    ${EM_TOKEN}        ${FUSION_NIC}

Get EM IP
    Set Log Level    TRACE
    # Get EM IP
    # TODO:  going to need to see how this works with multiple EM's
    ${EM_IP} =        Execute Command        lldpcli show neighbor
    ${m}    ${EM_IP} =  Should Match Regexp     ${EM_IP}    (?im)MgmtIP:\\s*(\\S*:\\S*:\\S*:\\S*:\\S*:\\S*)
    #${m}    ${EM_IP} =  Should Match    ${EM_IP}    "fe80::377d:ba56:25b8:44d4"
    Set Suite Variable    ${EM_IP}
    log to console     EM IP: ${EM_IP}
    [Return]    ${EM_IP}

Get EM Token
    [Arguments]     ${enc_serial}
    # Get EM token
    ${EM_TOKEN} =  Execute Command     /ci/bin/tbird/appliance-hal.sh get-enclosure-credentials -s ${enc_serial} -o t
    ${EM_TOKEN}    Should Match Regexp    ${EM_TOKEN}    (?i)\\S*
    Set Suite Variable    ${EM_TOKEN}   ${EM_TOKEN}
    log to console     EM TOKEN: ${EM_TOKEN}
    [Return]    ${EM_TOKEN}

Login to Fusion via SSH
    [Documentation]             Connect to Fusion VM Bash via SSH
    ...                         Example:\n| Login to Fusion Via SSH | 10.0.12.106 | Administrator | hpvse123 |
    [Arguments]                 ${IP}=${FUSION_IP}      ${USERNAME}=${FUSION_SSH_USERNAME}
    ...                         ${PASSWORD}=${FUSION_SSH_PASSWORD}    ${PROMPT}=${FUSION_PROMPT}
    ...                         ${TIMEOUT}=${FUSION_TIMEOUT}    ${ALIAS}=Fusion_SSH
    Log Many                    ${IP}                   ${USERNAME}     ${PASSWORD}     ${PROMPT}   ${TIMEOUT}
    Set Default Configuration   prompt=${PROMPT}        timeout=${TIMEOUT}
    ${Id}=                      Open Connection         ${IP}    alias=${ALIAS}
    ${Output}=                  Login                   ${USERNAME}     ${PASSWORD}
    #log to console  \n\nssh loop1
    #log to console    ${Output}
    #log to console  \n\nssh loop2
    #log to console    ${Id}
    [Return]                    ${Id}

Logout of Fusion Via SSH
    [Documentation]     Exits the current Bash SSH session
    ...                 Example:\n| Logout Of Fusion Via SSH |
    Close Connection

Execute SSH Command
    [Documentation]     Executes given command on the Fusion SSH shell
    ...                 Example:\n| Execute CLI Command | show enclosure list |
    [Arguments]         ${Command}      ${PROMPT}=#
    log to console    \nComamnd is:${Command}
    Login to Fusion via SSH
    SSHLibrary.Write            ${Command1}
    SSHLibrary.Write            ${Command}
    ${Output}=          Read until      ${PROMPT}
    log to console    \nOUtput from SSH is :${Output}
    Logout of Fusion Via SSH
    [Return]            ${Output}

EFuse ICM
    [Documentation]    Perform an efuse action on a ICM bay. Action = EFuseOff | EFuseOn
    [Arguments]    ${Action}    ${BayNumber}
    ${Header}    Set Variable    "X-Auth-Token":"${EM_TOKEN}"
    ${Data}      Set Variable    {"Action":"${Action}"}
    Log to console and logfile      \t Issuing ${Action} for ICM:${BayNumber}
    ${Output}    Execute Command
    ...    curl -ikX POST -H ${Header} --data-ascii '${data}' https://${EM_IP}%${FUSION_NIC}/rest/v1/InterconnectBays/${BayNumber}
    Should Contain    ${Output}    { "Action": "${Action}" }
    ...    msg=EFuse action failed \n${Output}

Edit LI
    [Arguments]        ${li}    ${li_set1}    ${LLDPIP}    ${ltlv}
    Fusion Api Login Appliance         ${APPLIANCE_IP}        ${admin_credentials}
    ${body} =    Build LI body    ${li_set1}
    ${li_uri} =     Get LI URI   ${li}
    ${resp} =     Fusion Api Get Li    ${li_uri}
    Log   ${resp}
    ${es} =     Get From Dictionary        ${resp}    ethernetSettings
    ${uri} =     Get From Dictionary        ${es}        uri
    ${id} =     Get From Dictionary        ${es}        id
    Log        ${id}
    Set to Dictionary    ${body}    id    ${id}
    Log   ${body}
    ${resp1} =     Fusion Api Update LI Ethernet Settings    body=${body}        uri=${li_uri}
    Log   ${resp1}
    ${task} =    Wait For Task     ${resp1}     600s
    ${valDict} =     Create Dictionary    status_code=${200}
    ...                                 taskState=Completed
    Validate Response    ${task}    ${valDict}
    ValidateLI LLDP Ip Address    ${li}    ${LLDPIP}
    ValidateLI TaggedLLDP and RICH TLV    ${li}    ${ltlv}

Build LI body
    [Arguments]        ${liedit}
    ${liedit} =     Copy Dictionary    ${liedit}
    ${type} =                       Get Variable Value  ${liedit['type']}
    ${enableRichTLV} =           Get Variable Value  ${liedit['enableRichTLV']}
    ${enableTaggedLldp} =              Get Variable Value  ${liedit['enableTaggedLldp']}
    ${body} =     Create Dictionary                type=${type}
    ...                                         enableRichTLV=${enableRichTLV}
    ...                                         enableTaggedLldp=${enableTaggedLldp}
    ...
    [Return]    ${body}

SSH to host and ping x
    [Documentation]    SSH's to a given host, then pings an IP from that host
    [Arguments]           ${HOST}    ${HOST2}
    Open Connection And Log In      ${HOST}
    ${Output}=    Execute Command    ping -c 4 ${HOST2}    return_stdout=True    return_rc=False
    Log to console and logfile    ${Output}
    Should Contain    ${Output}    ttl=
    Close All Connections

Add LIG from variable
    [Documentation]    Adds an LIG to an appliance from a variable which contains a list of dicts with the entire payload
    [Arguments]        ${ligx}
    Log       Adding LIG ${ligx}
    ${ligx} =     Copy Dictionary    ${ligs['${ligx}']}

    ${name} =                       Get Variable Value  ${ligx['name']}
    ${enclosureIndexes} =           Get Variable Value  ${ligx['enclosureIndexes']}
    ${enclosureType} =              Get Variable Value  ${ligx['enclosureType']}
    ${ethernetSettings} =           Get Variable Value  ${ligx['ethernetSettings']}
    ${fcoeSettings} =               Get Variable Value  ${ligx['fcoeSettings']}
    ${internalNetworkUris} =        Get Variable Value  ${ligx['internalNetworkUris']}
    ${interconnectBaySet} =         Get Variable Value  ${ligx['interconnectBaySet']}
    ${interconnectMapTemplate} =    Get Variable Value  ${ligx['interconnectMapTemplate']}
    ${qosConfiguration} =           Get Variable Value  ${ligx['qosConfiguration']}
    ${redundancyType} =             Get Variable Value  ${ligx['redundancyType']}
    ${stackingMode} =               Get Variable Value  ${ligx['stackingMode']}
    ${telemetryConfiguration} =     Get Variable Value  ${ligx['telemetryConfiguration']}
    ${snmpConfiguration} =          Get Variable Value  ${ligx['snmpConfiguration']}
    ${uplinkSets} =                 Get Variable Value  ${ligx['uplinkSets']}
    #${uplinkSets} =     Copy List    ${ligx['uplinkSets']}
    ${l} =     Get Length    ${uplinkSets}


    :FOR    ${x}    IN RANGE    0    ${l}
    \    ${networkType} =     Get From Dictionary     ${uplinkSets[${x}]}    networkType
    \    ${networks} =         Get From Dictionary        ${uplinkSets[${x}]}    networkUris
    \   ${nativeNetworkUri} =   Get Variable Value     ${uplinkSets[${x}]['nativeNetworkUri']}
    \     Run Keyword If     '${networkType}' == 'FibreChannel'    Continue For Loop
    #\    ${networkUris} =     Get FCoE Uris    ${networks}
    #\   ${ethernetUris} =   Get Ethernet URIs   ${networks}
    #\   ${networkUris} =    combine lists   ${networkUris}  ${ethernetUris}
    \    ${networkUris} =     Get Ethernet URIs    ${networks}
    \    Set to dictionary    ${uplinkSets[${x}]}    networkUris        ${networkUris}
    \   ${nativeNetworkUri} =     Run Keyword If   '${nativeNetworkUri}' != 'None'    Get Ethernet Uri    ${nativeNetworkUri}
    \   Set to dictionary   ${uplinkSets[${x}]}    nativeNetworkUri     ${nativeNetworkUri}


    Log   ${uplinkSets}
    ${body} =     Fusion Api Create LIG Payload    name=${name}
    ...                                         enclosureType=${enclosureType}
    ...                                         ethernetSettings=${ethernetSettings}
    ...                                            interconnectMapTemplate=${interconnectMapTemplate}
    ...                                         stackingMode=${stackingMode}
    ...                                         telemetryConfiguration=${telemetryConfiguration}
    ...                                         snmpConfiguration=${snmpConfiguration}
    ...                                            uplinkSets=${uplinkSets}

    ${resp} =     Fusion Api Create LIG    ${body}
    ${task} =    Wait For Task    ${resp}     60s       2s
    ${liguri} =     Get From Dictionary    ${task['associatedResource']}    resourceUri
    [Return]    ${resp}


Log into Fusion appliance as Administrator
    ${user} =  Get Data By Property  ${TestData.users}  name  Administrator
    Fusion UI Login to Appliance   ${user[0].name}


Load Test Data and Open Browser
    Set Log Level    TRACE
    Load Test Data  ${DataFile}
    Log Variables
    Open Browser  ${ApplianceUrl}  ${Browser}
    Maximize Browser Window
    Set Selenium Speed  ${SeleniumSpeed}
