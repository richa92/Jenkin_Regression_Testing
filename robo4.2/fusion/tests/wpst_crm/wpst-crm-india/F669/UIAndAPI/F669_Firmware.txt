*** Settings ***
Documentation		Feature Test: Biggs
...                 Updated test to include all network types: Ethernet, FC and FCoE networks
...		
Variables 		    data_variables.py	
#Suite Setup   		Run FTS and test-specific setup
#Suite Teardown		Suite Teardown
Resource            .. / .. / .. / .. /resource/fusion_api_all_resource_files.txt
Resource			OVAConfig.txt
Library				Collections
Library             json
Library				OperatingSystem
Library		        Selenium2Library
Suite Setup          KC Load Test Data 
#Test Setup        Load Test Data and Open Browser
#Test Setup		   Load Test Data

*** Variables ***
${SSH_PASS}                     hpvse1
#${DataFile}					OVAData.xml
${APPLIANCE_IP}					15.212.137.106
${BROWSER}						Firefox
${SeleniumSpeed}						0.1
${ApplianceUrl}					https://15.212.137.106
${LE_name}						 LE1				
${uname}						 root
${pwd}							 hpvse1
${ICM_1}						CN754404RC, interconnect 1
${ICM_2}						CN754404RC, interconnect 3

@{ICM_names}=    ${ICM_1}
...             ${ICM_2}

${ICM_Alert1_stg_star}           Staging started for the interconnect
${ICM_Alert1_stg_str_end}        \  with firmware version 0.95 from baseline

${ICM_Alert1_stg_succ}           Staging success for the interconnect
${ICM_Alert1_stg_succ_end}       \  with firmware version 0.95 from baseline

${ICM_Alert1_act_star}          Activation started for the interconnect  
${ICM_Alert1_act_star_end}      \  with firmware version 0.95 from baseline

${ICM_Alert1_act_succ}          Activation success for the interconnect
${ICM_Alert1_act_succ_end}      \  with firmware version 0.95 from baseline 

#1 4.40 2014-10-12T08:56:22Z    4.40 2014-10-12T08:56:22Z
${ICM_Alert1_stg_star_1_end}    \  with firmware version 0.95 from baseline

${ICM_Alert1_stg_star_2_end}    \  with firmware version 0.95 from baseline


${ICM_Alert2_stg_star}           Staging started for the interconnect
${ICM_Alert2_stg_str_end}        \  with firmware version 1.00 from baseline

${ICM_Alert2_stg_succ}           Staging success for the interconnect
${ICM_Alert2_stg_succ_end}       \  with firmware version 1.00 from baseline

${ICM_Alert2_act_star}          Activation started for the interconnect  
${ICM_Alert2_act_star_end}      \  with firmware version 1.00 from baseline

${ICM_Alert2_act_succ}          Activation success for the interconnect
${ICM_Alert2_act_succ_end}      \  with firmware version 1.00 from baseline 

#1 4.40 2014-10-12T08:56:22Z    4.40 2014-10-12T08:56:22Z
${ICM_Alert2_stg_star_1_end}    \  with firmware version 1.00 from baseline

${ICM_Alert2_stg_star_2_end}    \  with firmware version 1.00 from baseline

*** Test Cases ***	

F669_TC_API_17 Firmware Upgrade on LE Shared Infrastructure
	Fusion Api Login Appliance 		${APPLIANCE_IP}		${admin_credentials}
	${le}=		Get LE				${LE_name}
	Log			${le}
	${le_uri}=		Get from LE			${le}		uri
	Log 		{le_uri}
	${body}=				Build LE SPP Body			${le_spp_upgrade}
	Log			${body}
	${resp} = 	Fusion Api Le Firmware Update 		body=${body}		uri=${le_uri}	
	Log			${resp}
	${task} =	    Wait For Task1 	${resp} 	30 min		15s
	${valDict} = 	Create Dictionary	status_code=${200}
	...                                 taskState=Completed
	Validate Response	${task}	${valDict}	
	Log to Console	\nSylvite Firmware Upgrade completed successfully	
	
F669_TC_API_17 verifyalerts
      Fusion Api Login Appliance          ${APPLIANCE_IP}         ${admin_credentials} 
      ${alerts} =    fusion_api_get_alerts    /rest/alerts
      # Log to Console    ${alerts}
      Log     ${alerts}     
      : FOR    ${ICM_NAME}    IN    @{ICM_names}

      \    ${Al_stg_str}    Catenate    SEPARATOR= ${ICM_NAME}    ${ICM_Alert2_stg_star}    ${ICM_Alert2_stg_str_end}
      \    Log to Console    ${Al_stg_str}
      \    Run Keyword and Continue on Failure     Should Contain       '${alerts}'       ${Al_stg_str}     Expected Error Message Not seen     
     
      \    ${Al_stg_suc}    Catenate    SEPARATOR= ${ICM_NAME}    ${ICM_Alert2_stg_succ}    ${ICM_Alert2_stg_succ_end}
      \    Log to Console    ${Al_stg_suc}
      \    Run Keyword and Continue on Failure     Should Contain       '${alerts}'       ${Al_stg_suc}     Expected Error Message Not seen
           
      \    ${Al_act_str}    Catenate    SEPARATOR= ${ICM_NAME}    ${ICM_Alert2_act_star}    ${ICM_Alert2_act_star_end}
      \    Log to Console    ${Al_act_str}
      \    Run Keyword and Continue on Failure     Should Contain       '${alerts}'       ${Al_act_str}     Expected Error Message Not seen
      
      \    ${Al_act_succ}    Catenate    SEPARATOR= ${ICM_NAME}    ${ICM_Alert2_act_succ}    ${ICM_Alert2_act_succ_end}
      \    Log to Console    ${Al_act_succ}
      \    Run Keyword and Continue on Failure     Should Contain       '${alerts}'       ${Al_act_succ}    Expected Error Message Not seen
      
    Fusion Api Logout Appliance
    Log to Console		\nFirmware Alert validation complete
    
F669_TC_API_17 Validate LE state after LE firmwareupgrade is complete
	[Tags]  Details
	sleep   30s
	Fusion Api Login Appliance          ${APPLIANCE_IP}         ${admin_credentials}
	${le}=		Get LE				${LE_name}
	${le_state}=		Get from LE			${le}		state	
    Should Be Equal As Strings    ${le_state}		Consistent
    Log to Console		\nLE state is 'Consistent' as expected
   
F669_TC_API_17 Validate Interconnect Firmware Version for ICM1	
	Fusion Api Login Appliance 		${APPLIANCE_IP}		${admin_credentials}
	Validate Interconnect firmware version				${ICM_1}				@{TestData.TB_interconnect_FVT_1}
	
F669_TC_API_17 Validate Interconnect Firmware Version for ICM3		
	Validate Interconnect firmware version				${ICM_2}				@{TestData.TB_interconnect_FVT_2}


F669_TC_API_20 Firmware Downgrade on LE 
	Fusion Api Login Appliance 		${APPLIANCE_IP}		${admin_credentials}
	${le}=		Get LE				${LE_name}
	Log			${le}
	${le_uri}=		Get from LE			${le}		uri
	Log 		{le_uri}
	${body}=				Build LE SPP Body			${le_spp_downgrade}
	Log			${body}
	${resp} = 	Fusion Api Le Firmware Update 		body=${body}		uri=${le_uri}	
	Log			${resp}
	${task} =	    Wait For Task1 	${resp} 	30 min		15s
	${valDict} = 	Create Dictionary	status_code=${200}
	...                                 taskState=Completed
	Validate Response	${task}	${valDict}	
	Log to Console	\nSylvite Firmware Downgrade completed successfully	
	
F669_TC_API_20 verifyalerts
      Fusion Api Login Appliance          ${APPLIANCE_IP}         ${admin_credentials} 
      ${alerts} =    fusion_api_get_alerts    /rest/alerts
      # Log to Console    ${alerts}
      Log     ${alerts}     
      : FOR    ${ICM_NAME}    IN    @{ICM_names}
      \    ${Al_stg_str}    Catenate    SEPARATOR= ${ICM_NAME}    ${ICM_Alert1_stg_star}    ${ICM_Alert1_stg_str_end}
      \    Log to Console    ${Al_stg_str}
      \    Run Keyword and Continue on Failure     Should Contain       '${alerts}'       ${Al_stg_str}     Expected Error Message Not seen     
     
      \    ${Al_stg_suc}    Catenate    SEPARATOR= ${ICM_NAME}    ${ICM_Alert1_stg_succ}    ${ICM_Alert1_stg_succ_end}
      \    Log to Console    ${Al_stg_suc}
      \    Run Keyword and Continue on Failure     Should Contain       '${alerts}'       ${Al_stg_suc}     Expected Error Message Not seen
           
      \    ${Al_act_str}    Catenate    SEPARATOR= ${ICM_NAME}    ${ICM_Alert1_act_star}    ${ICM_Alert1_act_star_end}
      \    Log to Console    ${Al_act_str}
      \    Run Keyword and Continue on Failure     Should Contain       '${alerts}'       ${Al_act_str}     Expected Error Message Not seen
      
      \    ${Al_act_succ}    Catenate    SEPARATOR= ${ICM_NAME}    ${ICM_Alert1_act_succ}    ${ICM_Alert1_act_succ_end}
      \    Log to Console    ${Al_act_succ}
      \    Run Keyword and Continue on Failure     Should Contain       '${alerts}'       ${Al_act_succ}    Expected Error Message Not seen
      
    Fusion Api Logout Appliance
    Log to Console		\nFirmware Alert validation complete
    
F669_TC_API_20 Validate LE state after LE firmwareupgrade is complete
	[Tags]  Details
	Fusion Api Login Appliance          ${APPLIANCE_IP}         ${admin_credentials}
	sleep   30s
	${le}=		Get LE				${LE_name}
	${le_state}=		Get from LE			${le}		state	
    Should Be Equal As Strings    ${le_state}		Consistent
    Log to Console		\nLE state is 'Consistent' as expected
   
F669_TC_API_20 Validate Interconnect Firmware Version ICM1		
	Fusion Api Login Appliance 		${APPLIANCE_IP}		${admin_credentials}
	Validate Interconnect firmware version				${ICM_1}				@{TestData.TB_interconnect_FVT_1}
	
F669_TC_API_20 Validate Interconnect Firmware Version ICM2	
	Validate Interconnect firmware version				${ICM_2}				@{TestData.TB_interconnect_FVT_2}
    
F669_TC_API_18 Firmware Upgrade on LE SharedInfrastructureAndProfiles
	Fusion Api Login Appliance 		${APPLIANCE_IP}		${admin_credentials}
	${le}=		Get LE				${LE_name}
	Log			${le}
	${le_uri}=		Get from LE			${le}		uri
	Log 		{le_uri}
	${body}=				Build LE SPP Body			${le_spp_upgrade_profiles}
	Log			${body}
	${resp} = 	Fusion Api Le Firmware Update 		body=${body}		uri=${le_uri}	
	Log			${resp}
	${task} =	    Wait For Task1 	${resp} 	30 min		15s
	${valDict} = 	Create Dictionary	status_code=${200}
	...                                 taskState=Completed
	Validate Response	${task}	${valDict}	
	Log to Console	\nSylvite Firmware Upgrade completed successfully	
	
F669_TC_API_18 verifyalerts
      Fusion Api Login Appliance          ${APPLIANCE_IP}         ${admin_credentials} 
      ${alerts} =    fusion_api_get_alerts    /rest/alerts
      # Log to Console    ${alerts}
      Log     ${alerts}     
      : FOR    ${ICM_NAME}    IN    @{ICM_names}
      \    ${Al_stg_str}    Catenate    SEPARATOR= ${ICM_NAME}    ${ICM_Alert2_stg_star}    ${ICM_Alert2_stg_str_end}
      \    Log to Console    ${Al_stg_str}
      \    Run Keyword and Continue on Failure     Should Contain       '${alerts}'       ${Al_stg_str}     Expected Error Message Not seen     
     
      \    ${Al_stg_suc}    Catenate    SEPARATOR= ${ICM_NAME}    ${ICM_Alert2_stg_succ}    ${ICM_Alert2_stg_succ_end}
      \    Log to Console    ${Al_stg_suc}
      \    Run Keyword and Continue on Failure     Should Contain       '${alerts}'       ${Al_stg_suc}     Expected Error Message Not seen
           
      \    ${Al_act_str}    Catenate    SEPARATOR= ${ICM_NAME}    ${ICM_Alert2_act_star}    ${ICM_Alert2_act_star_end}
      \    Log to Console    ${Al_act_str}
      \    Run Keyword and Continue on Failure     Should Contain       '${alerts}'       ${Al_act_str}     Expected Error Message Not seen
      
      \    ${Al_act_succ}    Catenate    SEPARATOR= ${ICM_NAME}    ${ICM_Alert2_act_succ}    ${ICM_Alert2_act_succ_end}
      \    Log to Console    ${Al_act_succ}
      \    Run Keyword and Continue on Failure     Should Contain       '${alerts}'       ${Al_act_succ}    Expected Error Message Not seen
      
    Fusion Api Logout Appliance
    Log to Console		\nFirmware Alert validation complete
    
F669_TC_API_18 Validate LE state after LE firmwareupgrade is complete
	[Tags]  Details
	sleep   30s
	Fusion Api Login Appliance          ${APPLIANCE_IP}         ${admin_credentials}
	${le}=		Get LE				${LE_name}
	${le_state}=		Get from LE			${le}		state	
    Should Be Equal As Strings    ${le_state}		Consistent
    Log to Console		\nLE state is 'Consistent' as expected
   
F669_TC_API_18 Validate Interconnect Firmware Version for ICM1	
	Fusion Api Login Appliance 		${APPLIANCE_IP}		${admin_credentials}
	Validate Interconnect firmware version				${ICM_1}				@{TestData.TB_interconnect_FVT_1}
	
F669_TC_API_18 Validate Interconnect Firmware Version for ICM3		
	Validate Interconnect firmware version				${ICM_2}				@{TestData.TB_interconnect_FVT_2}
	
F669_TC_API_19 Firmware Upgrade on LE Enclosure ONLY - Should not update ICM
	Fusion Api Login Appliance 		${APPLIANCE_IP}		${admin_credentials}
	${le}=		Get LE				${LE_name}
	Log			${le}
	${le_uri}=		Get from LE			${le}		uri
	Log 		{le_uri}
	${body}=				Build LE SPP Body			${le_spp_upgrade_profiles}
	Log			${body}
	${resp} = 	Fusion Api Le Firmware Update 		body=${body}		uri=${le_uri}	
	Log			${resp}
	${task} =	    Wait For Task1 	${resp} 	30 min		15s
	${valDict} = 	Create Dictionary	status_code=${200}
	...                                 taskState=Completed
	Validate Response	${task}	${valDict}	
	Log to Console	\nSylvite Firmware Upgrade completed successfully		
    
F669_TC_API_19 Validate LE state after LE firmwareupgrade is complete
	[Tags]  Details
	sleep   30s
	Fusion Api Login Appliance          ${APPLIANCE_IP}         ${admin_credentials}
	${le}=		Get LE				${LE_name}
	${le_state}=		Get from LE			${le}		state	
    Should Be Equal As Strings    ${le_state}		Consistent
    Log to Console		\nLE state is 'Consistent' as expected
   
F669_TC_API_19 Validate Interconnect Firmware Version for ICM1	
	Fusion Api Login Appliance 		${APPLIANCE_IP}		${admin_credentials}
	Validate Interconnect firmware version				${ICM_1}				@{TestData.TB_interconnect_FVT_1}
	
F669_TC_API_19 Validate Interconnect Firmware Version for ICM3		
	Validate Interconnect firmware version				${ICM_2}				@{TestData.TB_interconnect_FVT_2}
  
*** Keywords ***

Validate Interconnect firmware version
    [Arguments]    ${ICM}				@{TestData.TB_interconnect_FVT}
    ${ic} =     Get IC			${ICM}	
	${firmwareVersion} =     Get From IC    ${ic}   firmwareVersion
	Log to console and logfile 			\nFirmwareVersion from ICM '${ICM}' is '${firmwareVersion}'
	# ${serialNumber} =     Get From IC    ${ic}   serialNumber	
	${EMreturn}=  		get_ICM_info_EM_FRU    		@{TestData.TB_interconnect_FVT}
	# Log			${EMreturn}  
    ${FirmwareVersion} = 	Get From Dictionary			${EMreturn}			FirmwareVersion
 	Run Keyword and Continue on Failure    Should Be Equal  '${FirmwareVersion}'		'${firmwareVersion}'  	Part Number as desired
 	Log to console and logfile 			\n'${FirmwareVersion}' from EM matches '${firmwareVersion}' from Interconnect GET call

Log into Fusion appliance as Administrator
	${user} =  Get Data By Property  ${TestData.users}  name  Administrator
	Fusion UI Login to Appliance   ${user[0].name}	

 

	
KC Load Test Data
    Set Log Level    TRACE
	Load Test Data  ${DataFile}
	
Build LE SPP body1
	[Arguments]		${le_spp}
	#${liedit} = 	Copy Dictionary	${li_spp}
	${command} =                       Get Variable Value  ${li_spp['command']}
	${sppUri} =           Get Variable Value  ${li_spp['sppUri']}
	${force} =              Get Variable Value  ${li_spp['force']}
	

	${body} = 	Fusion Api Build LE spp Body	command=${command}
	...                                         sppUri=${sppUri}                                
	...                                         force=${force}
	...                                         
    [Return]    ${body}	
 
	
Get IC
	[Arguments]		${ICM_NAME}
    ${resp} =   fusion api get interconnect
    Log		${resp}
    ${ics} =     Get From Dictionary     ${resp}    members
	${l} = 	Get Length	${ics}
	:FOR	${x}	IN RANGE	0	${l}
    \   ${ic} =     Get From List   ${ics}    ${x}
	\ 	Exit For Loop If 	'${ic['name']}' == '${ICM_NAME}'
	[Return]    ${ic}
	Log		${ic}
	
Get LE
	[Arguments]		${LE_NAME}
    ${resp} =   fusion api get Logical Enclosure
    Log		${resp}
    ${les} =     Get From Dictionary     ${resp}    members
	${l} = 	Get Length	${les}
	:FOR	${x}	IN RANGE	0	${l}
    \   ${le} =     Get From List   ${les}    ${x}
	\ 	Exit For Loop If 	'${le['name']}' == '${LE_name}'
	[Return]    ${le}
	Log		${le}

Get from LE
    [Arguments]     ${le}   ${element}
    ${return} =     Get From Dictionary     ${le}   ${element}
    [Return]    ${return}
    
 
Wait For Task1
	[Documentation]	Waits for a task to reach an end-state
	[Arguments]		${resp}	${timeout}=60 s	${interval}=2 s
	#Log to console	\n
	${task} = 	Wait Until Keyword Succeeds		${timeout}	${interval}	Task Reached Endstate1	${resp}
	[Return]	${task}

Task Reached Endstate1
	[Arguments]	${resp}
	
	Set Log Level	TRACE
	#Should Contain	${resp}	uri
	${location} =       Get Variable Value      ${resp['location']}
	${task_uri} =		Get Variable Value          ${location}
	#${task_uri} =		Get From Dictionary		${resp}	uri
	${task} = 			Fusion Api Get Task		uri=${task_uri}
	${task_state} = 	Get From Dictionary		${task}		taskState
	${task_category} = 	Get From Dictionary		${task}		category
	${task_name} = 		Get From Dictionary		${task}		name
	${resource} = 		Get From Dictionary		${task['associatedResource']}	resourceName
	${resource_uri} = 	Get From Dictionary		${task['associatedResource']}	resourceUri
	Log to console and logfile  	\t Task: [${task_category}:${task_name}] is: ${task_state} for resource: ${resource} ${resource_uri}
	Should Match Regexp	${task_state}	((?i)Warning|Unknown|Terminated|Killed|Error|Completed)
	[Return]	${task}
	
Wait For Task
    [Documentation]     Waits for a task to reach an end-state
    [Arguments]         ${resp}                         ${timeout}=60s      ${interval}=2s
    Log to console      \n
    ${task} =           Wait Until Keyword Succeeds     ${timeout}          ${interval}     Task Reached Endstate   ${resp}
    ${NicelyFormattedJsonString}                        dumps               ${task}         indent=${4}
    ...                 sort_keys=${True}
    Log                 ${NicelyFormattedJsonString}
    [Return]            ${task}

Task Reached Endstate
    [Arguments]             ${resp}
    Set Log Level           TRACE
    Should Contain          ${resp}                 uri
    ${task_uri} =           Get From Dictionary     ${resp}                         uri
    ${task} =               Fusion Api Get Task     uri=${task_uri}
    ${task_state} =         Get From Dictionary     ${task}                         taskState
    ${task_category} =      Get From Dictionary     ${task}                         category
    ${task_name} =          Get From Dictionary     ${task}                         name
    ${resource} =           Get From Dictionary     ${task['associatedResource']}   resourceName
    ${resource_uri} =       Get From Dictionary     ${task['associatedResource']}   resourceUri
    Log To Console          \t Task: [${task_category}:${task_name}] is: ${task_state} for resource: ${resource} ${resource_uri}
    Should Match Regexp     ${task_state}           ((?i)Warning|Unknown|Terminated|Killed|Error|Completed)
    [Return]                ${task}


#FTS
	#Set Log Level	DEBUG
    #Get VM IP   ${VM}
	#First Time Setup					password=hpvse123

Test Specific Setup
	Set Log Level	TRACE	
	Run Keyword and Ignore Error    Write To ciDebug Log
	Log to console and logfile	[TEST-SPECIFIC SETUP]
	Fusion Api Login Appliance 		${APPLIANCE_IP}		${admin_credentials}
	${users} =	Get Variable Value	${users}
	Run Keyword If	${users} is not ${null}    Add Users from variable				${users}
	${ethernet_networks} =	Get Variable Value    ${ethernet_networks}
	Run Keyword If	${ethernet_networks} is not ${null}    Add Ethernet Networks from variable	${ethernet_networks}
	#${ethernet_ranges} =	Get Variable Value	${ethernet_ranges}
	#Run Keyword If	${ethernet_ranges} is not ${null}		Run Keyword for List	${ethernet_ranges}	Create Ethernet Range
	#${fc_networks} =	Get Variable Value	${fc_networks}
	#Run Keyword If	${fc_networks} is not ${null}    Add FC Networks from variable		${fc_networks}
	#${fcoe_networks} =	Get Variable Value	${fcoe_networks}
	#Run Keyword If	${fcoe_networks} is not ${null}    Add FCoE Networks from variable		${fcoe_networks}
	#${licenses} =	Get Variable Value	${licenses}
	#Run Keyword If	${licenses} is not ${null}		Add Licenses from variable		${licenses}
    #Login all users     ${users}

Run FTS and test-specific setup
	Set Log Level	TRACE
    #FTS
    Test Specific Setup
