*** Settings ***
Documentation       Feature Test: These test cases intended to test Synergey 12000 frame Hafnium Interconnect Module- \
...                  Auto Split (OVF583) feature\
...
Variables           ./data_variables.py
Resource            ../../resources/resource.txt
Library             Collections
Library             json
Library             OperatingSystem
Library             RoboGalaxyLibrary
Library             FusionLibrary

*** Variables ***
${APPLIANCE_IP}                  192.168.144.140
${SLEEP_TIME}                    30

*** Keywords ***
Hafnium Open Connection And Log In
    [Arguments]         ${SSH_HOST}=localhost   ${SSH_USER}=netop   ${SSH_PASS}=netoppwd
    [Documentation]     Open Connection And Log In to Hafnium
    Log to console and logfile     opening connection
    Open Connection     ${SSH_HOST}     term_type=ansi    timeout=180s
    Set Client Configuration     term_type=ansi
    Log to console and logfile     log in to icm
    ${out}=    Login               ${SSH_USER}     ${SSH_PASS}
    [return]    ${out}

Check Hafnium Interface status
    [Arguments]         ${Interface}    ${Prompt}
    [Documentation]     Check Hafnium Interface status using Interface
    ${out}=    Hafnium Open Connection And Log In    ${PotashIP}     ${PotashUname}    ${PotashPassword}
    sleep    5s
    Write    ${\n}
    ${out1}=    Read Until    ${Prompt}
    sleep    2s
    Write    show auto-split-status ${Interface}
    Write    ${\n}
    Write    ${\n}
    ${cmdoutput}=    Read Until    ${Prompt}
    Close Connection
    sleep    3s
    [return]    ${cmdoutput}

Create netop account on Hafnium
    [Arguments]     ${icm}
    [Documentation]    Create netop account on Hafnium
    Open Connection And Log In      ${APPLIANCE_IP}
    Log to console and log file    Getting Auth token to write Canmic block
    ${enclosure}    ${dump}   ${Bay}=    split string    ${icm}
    ${enclosure}=    strip string    ${enclosure}    characters=,
    Log to console and log file    ${\n}Enclosure ${enclosure} and ${\n}Bay ${Bay}
    ${EM1}=  Execute Command   /ci/bin/tbird/appliance-hal.sh get-enclosure-credentials -s ${enclosure}
    Log to console and log file    ${EM1}
    ${EM1}=  catenate   SEPARATOR=   ${EM1}  %bond0
    ${XAUTH}=  Execute Command  /ci/bin/tbird/appliance-hal.sh get-enclosure-credentials -s ${enclosure} -o t
    Log to console and log file    ${XAUTH}
    #
    ${cmd}=    catenate    curl -g -x "" -k -i -H "x-auth-token:${XAUTH}" -X POST https://${EM1}/rest/v1/InterconnectManager/${Bay} -d '{"Action":"WriteCanmicBlocks", "List":[ {"Block": 168, "Format": "Base64", "Data": "AW5ldG9wcHdkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABuZXRvcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=="} ]}'
    Log to console and log file    ${cmd}
    #
    ${canmic1}=   Execute Command   ${cmd}
    #Close All Connections

*** Test Cases ***

00 Appliance LogIn
    [Tags]    AutoSplitBeforeLE
    [Documentation]    Login to Appliance
    Fusion Api Login Appliance     ${APPLIANCE_IP}   ${login_details}

Create account on Hafnium Module
    [Tags]    AutoSplitBeforeLE
    [Documentation]    Create account on Hafnium module after login to appliance using EM RIS resource
    Create netop account on Hafnium    ${HafniumModule}

Check Auto split status Before creating LE
    [Tags]    AutoSplitAfterLE
    [Documentation]    Check Auto split status Before creating LE
    :FOR    ${interface}    IN    @{InterfaceList}
    \       ${output}=    Check Hafnium Interface status    ${PostLEInterfaceList}    ${PostLEPrompt}
    \       Log to console and log file    ${output}
    \       Should Not Contain    ${output}     Enabled
    \       sleep    10s

Check Auto split status After creating LE
    [Tags]    AutoSplitBeforeLE
    [Documentation]    Check Auto split status After creating LE
    :FOR    ${interface}    IN    @{InterfaceList}
    \       ${output}=    Check Hafnium Interface status    ${PreLEInterfaceList}    ${PreLEPrompt}
    \       Log to console and log file    ${output}
    \       Should Not Contain    ${output}     Enabled
    \       sleep    10s
