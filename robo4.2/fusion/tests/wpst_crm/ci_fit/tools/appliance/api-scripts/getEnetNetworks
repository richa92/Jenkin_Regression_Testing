#!/bin/bash

#=============================================================================
# usage 
#=============================================================================
usage()
{
        echo "usage: $0 -cicip <CIC Appliance IP> -cicu <CIC Appliance User> -cicpw <CIC Appliance PW>" 
	echo ""
}

#=============================================================================
# isJsonshInstalled 
#=============================================================================
isJsonshInstalled()
{
	json=json.sh
	which $json > /dev/null
	
	if [ $? -eq 1 ]; then
		echo "ERROR:  Failed json.sh dependency check.  Please install json.sh"
		exit
	fi
}

#=============================================================================
# getSessionID 
#=============================================================================
getSessionID()
{
	sessionID=`curl -k -X POST -H "Accept:application/json" -H "Content-Type:application/json" -d "{\"userName\":\"$CIC_USER\", \"password\":\"$CIC_PW\"}" https://$CIC_IP/rest/login-sessions`
	echo "sessionID is $sessionID"

	auth=`echo "$sessionID" | awk 'BEGIN{FS=":"} {print $NF}' | sed 's/}//' | sed 's/"//' | sed 's/"//'`
	echo "auth is $auth"

}

#=============================================================================
# deleteSessionID 
#=============================================================================
deleteSessionID()
{
	echo "Deleting the session ID"
	curl -k -X DELETE -H "Accept:application/json" -H "Content-Type:application/json" -H "auth:"$auth https://$CIC_IP/rest/login-sessions
}

#=============================================================================
# getEnetNetworks
#=============================================================================
getEnetNetworks()
{
	tmp_file=$(mktemp /tmp/enet-networks.XXXXXX)
	json=json.sh

	enet_networks=`curl -k -X GET -H "Accept:application/json" -H "Content-Type:application/json" -H "auth:"$auth https://$CIC_IP/rest/ethernet-networks` 
	echo "$enet_networks" > $tmp_file

	tmp_json=$(mktemp /tmp/json.XXXXXX)
	echo "Calling $json - This could take a while"
	$json <"$tmp_file" >> $tmp_json 
	echo "cat tmp_json"
	NETWORKS=(`cat $tmp_json | grep "/members/[0-9]\{1,4\}/name string" | awk 'END{FS=" "} {print $NF}'`)
	echo -e "\nNetwork URI\t\t\t\t\t\t\tNetwork"
	for network in ${NETWORKS[@]}
	do 
		network_uri=(`cat $tmp_json | grep -A 14 "$network" | grep "/members/[0-9]\{1,4\}/uri string" |  awk 'END{FS=" "} {print $NF}'`)
		echo -e "$network_uri\t$network"
	done 
	echo -e "\n"
	rm -f $tmp_file; rm -f $tmp_json

}

while [ -n "$(echo $1 | grep '-')" ]; do
	case $1 in
	-cicip ) CIC_IP=$2
	       shift ;;
	-cicu ) CIC_USER=$2
	       shift ;;
	-cicpw ) CIC_PW=$2
	       shift ;;
        * ) usage 
	    exit 1
	esac
	shift
done

if [ -z "$CIC_IP" -o -z "$CIC_USER" -o -z "$CIC_PW" ]; then 
	usage
	exit 1
fi

isJsonshInstalled
getSessionID
getEnetNetworks
deleteSessionID


