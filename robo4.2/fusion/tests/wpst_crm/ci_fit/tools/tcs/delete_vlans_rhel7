#!/bin/bash
#######################################################################################
# Deletes vlans and data network ips from the TCS.
# This script is helpful if you make changes to the data/private network and want to 
# clean up the existing configuration without rebooting the TCS.
#
# You must have the ethernet device name of the data/test network.
# CI-FIT Data Network: 172.x.x.x/255.255.255.0
#
# There are 2 sections available sections:
# - LOWER VLANS (STARTLOWERVLANS) - (ENDLOWERVLANS)  -- This is required
# - UPPER VLANS (STARTUPPERVLANS) - (ENDLOWERVLANS) -- Optional. Used if you have a gap in your
#   vlan ranges. Remarked out by default.
#
# USAGE:
# Enter the desired vlans (start/end) and starting subnet based on the create vlan script.
# Run this script.
# Bounce the eth device after this script completes.
# SYNTAX:
# # ./delete_vlans_rhel7 <ETH#> <NUMBER_OF_VLANS>
# EXAMPLE:
# # ./delete_vlans_rhel7 ens224 1000
#######################################################################################



# Set pipefail so that a unsuccessful multi-command pipe return code can be acknowledged
set -o pipefail

NIC=$1
VLANS=$2

# Lower VLANs/Subnets
STARTLOWERVLANS=1
ENDLOWERVLANS=4000

# Upper VLANs/Subnets
#STARTUPPERVLANS=3000
#ENDUPPERVLANS=3010


if [ "$VLANS" = "" -o "$NIC" = "" ] ; then
	echo "usage: ./create_vlans <interface> <number of vlans>"
	exit
else
	cat /proc/net/dev | grep $NIC
	if [ $? -ne 0 ]; then
		echo "Interface $NIC is not in proc so exiting..."
		exit
	fi
fi

#################### LOW Subnets/vlans
echo "Interface entered is: $NIC"
echo "Number entered is: $ENDLOWERVLANS"

FIRST_OCTET=172
SECOND_OCTET=16
THIRD_OCTET=1
FOURTH_OCTET=1

for vlan in $(eval echo {$STARTLOWERVLANS..$ENDLOWERVLANS})
do
	mod=`expr $vlan % 128`
	if [ $mod -eq 0 ]; then
                #> RHEL 7 uses ip command
                ip link delete $NIC.$vlan 
		THIRD_OCTET=1
		let SECOND_OCTET=SECOND_OCTET+1
	else
                #> RHEL 7 uses ip command
                ip link delete $NIC.$vlan 
		let THIRD_OCTET=THIRD_OCTET+1	
	fi

done	


#################### High Subnets/vlans
#echo "Interface entered is: $NIC"
#echo "Number entered is: $ENDUPPERVLANS"
#
#FIRST_OCTET=172
#SECOND_OCTET=39
#THIRD_OCTET=56
#FOURTH_OCTET=1
#
#for vlan in $(eval echo {$STARTUPPERVLANS..$ENDUPPERVLANS})
#do
#	mod=`expr $vlan % 128`
#	if [ $mod -eq 0 ]; then
#               #> RHEL 7 uses ip command
#               ip link delete $NIC.$vlan 
#		THIRD_OCTET=1
#		let SECOND_OCTET=SECOND_OCTET+1
#	else
#               #> RHEL 7 uses ip command
#               ip link delete $NIC.$vlan 
#		let THIRD_OCTET=THIRD_OCTET+1	
#	fi
#
#done	
