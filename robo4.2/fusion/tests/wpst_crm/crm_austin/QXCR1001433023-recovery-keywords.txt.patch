diff --git a/tests/wpst_crm/crm_austin/resources/keywords.txt b/tests/wpst_crm/crm_austin/resources/keywords.txt
index 04cffcd..980ba48 100644
--- a/tests/wpst_crm/crm_austin/resources/keywords.txt
+++ b/tests/wpst_crm/crm_austin/resources/keywords.txt
@@ -47,6 +47,7 @@ ${RPTURI}
 @{EMPTYLIST}
 ${LOGGED}       ${False}
 ${BUG_IN_API}    ${False}
+${VC_DOMAIN_CONFIG_OV_BUG}    ${False}
 ${RUNMODE}    NORMAL      # Valid values: NORMAL, DEBUG, MONITOR
 # ==========DO NOT OVERWRITE or MODIFY the variables above=============
 
@@ -83,8 +84,8 @@ Test Setup Tasks
 ##########################
 Import.ConfigVC
     [Documentation]     Import VC domain and configure from VC config file
-    [Arguments]  ${vc_config_file}=None  ${vc_credential}=${VC_CREDENTIAL_DATA}  ${oa_credential}=${OA_CREDENTIAL_DATA}    ${saveConfig}=${True}   ${importTimeout}=5 min
-    Import VC   ${vc_credential}   ${oa_credential}   ${importTimeout}
+    [Arguments]  ${vc_config_file}=None  ${vc_credential}=${VC_CREDENTIAL_DATA}  ${oa_credential}=${OA_CREDENTIAL_DATA}    ${saveConfig}=${True}   ${importTimeout}=5 min   ${vcDomainConfigOVBug}=${VC_DOMAIN_CONFIG_OV_BUG}
+    Import VC   ${vc_credential}   ${oa_credential}   ${importTimeout}   ${vcDomainConfigOVBug}
     # Added this Save VC Config to help debug intermittent issue of missing ICM/Server Blade (No Quix)
     Run Keyword If   ${saveConfig} == ${True}   Save VC Config   ${SUITE_NAME}-${TEST_NAME}-import.ConfigVC.saveconfig
     Config VC   ${vc_config_file}   ${False}   ${vc_credential}  ${oa_credential}   ${True}
@@ -164,20 +165,20 @@ GetOVResources.Write.Compare
 
 CleanOV
     [Documentation]  Delete all resources in OV
-    [Arguments]  ${OV_IP}=${OV_IP}    ${admin_credentials}=${ADMIN_CREDENTIALS}    ${vc_credential}=${VC_CREDENTIAL_DATA}    ${oa_credential}=${OA_CREDENTIAL_DATA}
+    [Arguments]  ${OV_IP}=${OV_IP}    ${admin_credentials}=${ADMIN_CREDENTIALS}    ${vc_credential}=${VC_CREDENTIAL_DATA}    ${oa_credential}=${OA_CREDENTIAL_DATA}   ${vcDomainConfigOVBug}=${VC_DOMAIN_CONFIG_OV_BUG}
     Run Keyword If  ${LOGGED} == ${False}     Login to OneView Via REST
-    Delete OneView All     ${OV_IP}   ${admin_credentials}
+    Delete OneView All     ${OV_IP}   ${admin_credentials}   ${vcDomainConfigOVBug}
     #Delete OneView Selected   ${OVRESALL}   ${OV_IP}   ${admin_credentials}
 
 CleanVC
     [Documentation]  Delete VC domain
-    [Arguments]  ${vc_credential}=${VC_CREDENTIAL_DATA}    ${oa_credential}=${OA_CREDENTIAL_DATA}   ${waitTime}=2 min
-    Delete VC Domain     ${vc_credential}    ${oa_credential}
+    [Arguments]  ${vc_credential}=${VC_CREDENTIAL_DATA}    ${oa_credential}=${OA_CREDENTIAL_DATA}   ${waitTime}=2 min   ${vcDomainConfigOVBug}=${VC_DOMAIN_CONFIG_OV_BUG}
+    Delete VC Domain     ${vc_credential}    ${oa_credential}   ${waitTime}   ${vcDomainConfigOVBug}
 
 CleanOV.CleanVC
     [Documentation]  Delete all resources in OV; delete VC domain
-    [Arguments]  ${OV_IP}=${OV_IP}    ${admin_credentials}=${ADMIN_CREDENTIALS}    ${vc_credential}=${VC_CREDENTIAL_DATA}    ${oa_credential}=${OA_CREDENTIAL_DATA}   ${waitTime}=2 min
-    CleanOV   ${OV_IP}   ${admin_credentials}
+    [Arguments]  ${OV_IP}=${OV_IP}    ${admin_credentials}=${ADMIN_CREDENTIALS}    ${vc_credential}=${VC_CREDENTIAL_DATA}    ${oa_credential}=${OA_CREDENTIAL_DATA}   ${waitTime}=2 min   ${vcDomainConfigOVBug}=${VC_DOMAIN_CONFIG_OV_BUG}
+    CleanOV   ${OV_IP}   ${admin_credentials}   ${vcDomainConfigOVBug}
     CleanVC   ${vc_credential}   ${oa_credential}   ${waitTime}
 
 ##########################
@@ -352,15 +353,15 @@ Validate Existing Detail Report with Existing EG If General Issues Exists
 
 Validate Existing Detail Report If General Issues Exists
       [Documentation]   Validate If Specific General Issues Exists In A Pre-Generated Detailed Report
-      [Arguments]    ${resp}   ${path}   @{expectedKeyValues}
+      [Arguments]    ${resp}   ${path}   ${uniqueValidationKey}=errorCode   @{expectedKeyValues}
       ${current_issues}   Get SubDictionary By Path    ${resp}    ${path}
-      Validate If Key-Value Pairs Exist   ${current_issues}   ${True}   @{expectedKeyValues}
+      Validate If Key-Value Pairs Exist   ${current_issues}   ${True}   ${uniqueValidationKey}   @{expectedKeyValues}
 
 Validate Detail Report If General Issue Exists
     [Documentation]   Generate Detailed Report And Validate If A Specific General Issue Exists
-    [Arguments]      ${path}   @{expectedKeyValues}
+    [Arguments]      ${path}   ${uniqueValidationKey}=errorCode   @{expectedKeyValues}
     ${resp}  ${resp_state}=      ReportDetail
-    Validate Existing Detail Report If General Issues Exists   ${resp}   ${path}   @{expectedKeyValues}
+    Validate Existing Detail Report If General Issues Exists   ${resp}   ${path}   ${uniqueValidationKey}   @{expectedKeyValues}
 
 Validate Existing Detail Report If General Issues Removed
     [Documentation]   Validate If Specific General Issues Were Removed In A Pre-Generated Detailed Report
@@ -450,7 +451,7 @@ Append String To List If Unique
 ##########################
 Login to OneView Via REST
     [Documentation]    Connects to the Appliance and creates a session using the Username and Password.
-    [Documentation]    Example:\n| Login to Fusion Via REST
+    ...                Example:\n| Login to Fusion Via REST
     [Arguments]        ${OV_IP}=${OV_IP}    ${admin_credentials}=${ADMIN_CREDENTIALS}
     Should Not Be Equal    ${OV_IP}    'unknown'    msg=Please specify a valid Fusion IP address or hostname
     Log to console and logfile  \n With IP ${OV_IP} (${admin_credentials})...
@@ -531,7 +532,7 @@ Get OneView Resources
 
 Validate And Update Resource Data For FCoE As Needed
     [Documentation]  Check and update if there is a need to do so for resource data when dealing with FCoE resource
-    [Documentation]  This is necessary in case API version is less than the minimum version that supports FCoE
+    ...              This is necessary in case API version is less than the minimum version that supports FCoE
     [Arguments]   ${resourceDataModified}   ${OVResource}
     ${OVResource} =   Run Keyword If   "${resourceDataModified}" != "None"   Set To Dictionary   ${OVResource}   fcoeNets=${resourceDataModified}
     ...				ELSE   Set Variable   ${OVResource}
@@ -573,7 +574,7 @@ Copy OneView Config
     ...               Example: Copy OneView Config   15.186.21.246   15.186.21.158   generatedFile=mygeneratedvariablefile.py   transferEnclosure=${False}
     [Arguments]   ${sourceOVIP}   ${destOVIP}   ${generatedFile}=generatedVariableFile   ${ResourcesList}=${AllResourcesCommonList}   ${transferEnclosure}=${False}
 
-    [Documentation]   Login to the source OneView IP
+    # [Documentation]   Login to the source OneView IP
     # Set Test Variable   ${ov_ip_orig}   ${OV_IP}
     Set Test Variable   ${OV_IP}   ${sourceOVIP}
     Login to OneView Via REST
@@ -715,12 +716,12 @@ Get EGUri By Name
 
 Delete OneView All
     [Documentation]    Returns appliance to a 'clean' state by removing all resources\enclosures
-    [Arguments]        ${OV_IP}=${OV_IP}    ${admin_credentials}=${ADMIN_CREDENTIALS}
+    [Arguments]        ${OV_IP}=${OV_IP}    ${admin_credentials}=${ADMIN_CREDENTIALS}   ${vcDomainConfigOVBug}=${VC_DOMAIN_CONFIG_OV_BUG}
     Run Keyword If  ${LOGGED} == ${False}     Login to OneView Via REST
     Log to console and logfile     \n Delete All Resources in OneView Started:
     Power off All Servers
     Remove All Server Profiles
-    Remove All Enclosures
+    Remove All Enclosures   ${vcDomainConfigOVBug}
     Remove All Enclosure Groups
     Remove All Server Hardware Types
     Remove All LIGs
@@ -732,13 +733,13 @@ Delete OneView All
 
 Delete OneView Selected
     [Documentation]    Returns appliance to a 'clean' state by removing selected resources\enclosures
-    [Arguments]     ${resList}=${OVRESALL}   ${OV_IP}=${OV_IP}    ${admin_credentials}=${ADMIN_CREDENTIALS}
+    [Arguments]     ${resList}=${OVRESALL}   ${OV_IP}=${OV_IP}    ${admin_credentials}=${ADMIN_CREDENTIALS}   ${vcDomainConfigOVBug}=${VC_DOMAIN_CONFIG_OV_BUG}
     Run Keyword If  ${LOGGED} == ${False}     Login to OneView Via REST
     Log to console and logfile     \n Delete Selected Resources in OneView Started: ${resList}
     Set Flags   ${resList}
     Run Keyword If  ${If_server-profiles} == ${True}    Power off All Servers
     Run Keyword If  ${If_server-profiles} == ${True}    Remove All Server Profiles
-    Run Keyword If  ${If_enclosures} == ${True}         Remove All Enclosures
+    Run Keyword If  ${If_enclosures} == ${True}         Remove All Enclosures   ${vcDomainConfigOVBug}
     Run Keyword If  ${If_enclosure-groups} == ${True}   Remove All Enclosure Groups
     Run Keyword If  ${If_server-hardware-types} == ${True}   Remove All Server Hardware Types
     Run Keyword If  ${If_logical-interconnect-groups} == ${True}    Remove All LIGs
@@ -780,8 +781,8 @@ Set Flags
 ##########################
 Import VC
     [Documentation]  Import VC enclosure
-    [Arguments]  ${vc_credential}=${VC_CREDENTIAL_DATA}   ${oa_credential}=${OA_CREDENTIAL_DATA}   ${timeOut}=5 min
-    Wait Until Keyword Succeeds  ${timeOut}   2 min   Config VC    ${vc_config_showDomain}   ${True}   ${vc_credential}   ${oa_credential}   ${True}
+    [Arguments]  ${vc_credential}=${VC_CREDENTIAL_DATA}   ${oa_credential}=${OA_CREDENTIAL_DATA}   ${timeOut}=5 min   ${vcDomainConfigOVBug}=${VC_DOMAIN_CONFIG_OV_BUG}
+    Wait Until Keyword Succeeds  ${timeOut}   2 min   Config VC    ${vc_config_showDomain}   ${True}   ${vc_credential}   ${oa_credential}   ${True}   ${True}   ${vcDomainConfigOVBug}
 
 Config VC
     [Documentation]  Configure VC based on VC CLI config file
@@ -792,8 +793,8 @@ Config VC
     ...                import_enclosure:True if domain should be imported, default value is false
     ...                verbose: False if Verbose mode should not be set, default value is True
     ...                check_VC_mode: To validate VC Mode before starting VC Configuration. Default to True.
-    [Arguments]   ${vc_config_file}=None   ${import_enclosure}=${False}  ${vc_credential}=${VC_CREDENTIAL_DATA}    ${oa_credential}=${OA_CREDENTIAL_DATA}   ${verbose}=${True}   ${check_VC_mode}=${True}
-    WPST Configure VC      ${vc_credential}    ${oa_credential}   ${vc_config_file}  ${import_enclosure}  ${verbose}  ${check_VC_mode}
+    [Arguments]   ${vc_config_file}=None   ${import_enclosure}=${False}  ${vc_credential}=${VC_CREDENTIAL_DATA}    ${oa_credential}=${OA_CREDENTIAL_DATA}   ${verbose}=${True}   ${check_VC_mode}=${True}   ${vcDomainConfigOVBug}=${VC_DOMAIN_CONFIG_OV_BUG}
+    WPST Configure VC      ${vc_credential}    ${oa_credential}   ${vc_config_file}  ${import_enclosure}  ${verbose}  ${check_VC_mode}  ${vcDomainConfigOVBug}
 
 Delete VC Config
     [Documentation]  Delete VC Configuration
@@ -802,9 +803,9 @@ Delete VC Config
 
 Delete VC Domain
     [Documentation]  Delete VC Domain
-    [Arguments]  ${vc_credential}=${VC_CREDENTIAL_DATA}    ${oa_credential}=${OA_CREDENTIAL_DATA}   ${waitTime}=2 min
+    [Arguments]  ${vc_credential}=${VC_CREDENTIAL_DATA}    ${oa_credential}=${OA_CREDENTIAL_DATA}   ${waitTime}=2 min   ${vcDomainConfigOVBug}=${VC_DOMAIN_CONFIG_OV_BUG}
     Log to console and logfile     Deleting VC Domain...
-    WPST Delete Domain VC       ${vc_credential}    ${oa_credential}
+    WPST Delete Domain VC       ${vc_credential}    ${oa_credential}   ${vcDomainConfigOVBug}
     Log to console and logfile     Waiting ${waitTime} minutes...
     Sleep    ${waitTime}
 
@@ -869,6 +870,16 @@ Get VC Version Thru VCMCLI
 
     [Return]    ${VCVersion}
 
+
+##########################
+#    Onnboard Administrator
+##########################
+Execute OA Diag Command
+    [Documentation]   Accept OA diag command and execute it
+    [Arguments]  ${oaDiagCmd}   ${oa_credential}=${OA_CREDENTIAL_DATA}
+    WPST Execute Diag Command   ${oa_credential}   ${oaDiagCmd}
+
+
 ##########################
 #    General
 ##########################
@@ -915,7 +926,7 @@ Set Default FileNames
 
 Set Default FileNames With OV And API Version
     [Documentation]   Set the default file names with OV and API version.
-    [Documentation]   Example:\n| save-3.1.1-fcoeSans-7-2-api120-ov120.json
+    ...               Example:\n| save-3.1.1-fcoeSans-7-2-api120-ov120.json
     ${OVAVersion}   ${OVXAPIVersion}   Get OneView Appliance And Api Versions
     # ${VCVersion}   Get VC Version
     # Log to console and logfile    VC Version: ${VCVersion}
@@ -942,7 +953,7 @@ Set Default FileNames With OV And API Version
 
 Set Default FileNames With API Version Only
     [Documentation]   Set the default file names with API version only.
-    [Documentation]   Example:\n| save-3.1.1-fcoeSans-7-2-api120.json
+    ...               Example:\n| save-3.1.1-fcoeSans-7-2-api120.json
     ${OVAVersion}   ${OVXAPIVersion}   Get OneView Appliance And Api Versions
     # ${VCVersion}   Get VC Version
     # Log to console and logfile    VC Version: ${VCVersion}
@@ -1079,11 +1090,13 @@ Should Match Task Error
 
 Remove All Enclosures
     [Documentation]  Querys the appliance for all Enclosures and then removes them
+    [Arguments]   ${vcDomainConfigOVBug}=${VC_DOMAIN_CONFIG_OV_BUG}
     Log to console and logfile      Removing ENCLOSURES
     ${encs} =   Fusion Api Get Enclosures
     :FOR    ${enc}  IN  @{encs['members']}
     \       ${resp} =   Fusion Api Remove Enclosure     uri=${enc['uri']}
     \       ${task} =   Wait For Task and Fail On Error   ${resp}     5 min     5 s
+    \       Run Keyword If   ${vcDomainConfigOVBug} == ${True}   WPST Recover Vcm to OA connection and destroy VC Domain config   ${VC_CREDENTIAL_DATA}  ${OA_CREDENTIAL_DATA}   ${40}
     Sleep   15 sec
     ${resp}=    Fusion Api Get Enclosures
     Should Be Equal As Integers    ${resp['count']}    0    msg="Found Enclosures after deletion"
@@ -1138,7 +1151,7 @@ Remove All FCoE Networks
     Log to console and logfile      Removing FCoE NETWORKS
     ${OVAVersion}   ${OVXAPIVersion}   Get OneView Appliance And Api Versions
     Set Test Variable   ${OrigOVXAPIVersion}   ${OVXAPIVersion}
-    # Return From Keyword If   ${OVXAPIVersion} < ${fcoeMinXAPIVersion}   ${OVXAPIVersion}
+    Return From Keyword If   ${OVAVersion} < ${fcoeMinXAPIVersion}   ${OVXAPIVersion}
     Run Keyword If   ${OVXAPIVersion} < ${fcoeMinXAPIVersion}   Set Test Variable   ${OVXAPIVersion}   ${fcoeMinXAPIVersion}
     ${networks} =   Fusion Api Get FCoE Networks   api=${OVXAPIVersion}
     :FOR    ${net}  IN  @{networks['members']}
@@ -1467,7 +1480,7 @@ Wait For Appliance Startup
 
 Login to Fusion via SSH
     [Documentation]    Connect to Fusion VM via SSH
-    [Documentation]    Example:\n| Login to Fusion Via SSH | 10.0.12.106 | Administrator | hpvse123 |
+    ...                Example:\n| Login to Fusion Via SSH | 10.0.12.106 | Administrator | hpvse123 |
     [Arguments]    ${IP}    ${USERNAME}=${FUSION_SSH_USERNAME}    ${PASSWORD}=${FUSION_SSH_PASSWORD}
     ...            ${PROMPT}=${FUSION_PROMPT}    ${TIMEOUT}=${FUSION_TIMEOUT}
     Log Many    ${IP}    ${USERNAME}    ${PASSWORD}    ${PROMPT}    ${TIMEOUT}
@@ -1478,7 +1491,7 @@ Login to Fusion via SSH
 
 Logout of Fusion Via SSH
     [Documentation]    Exits the current SSH session
-    [Documentation]    Example:\n| Logout Of Fusion Via SSH |
+    ...                Example:\n| Logout Of Fusion Via SSH |
     Close Connection
 
 Power VM On
