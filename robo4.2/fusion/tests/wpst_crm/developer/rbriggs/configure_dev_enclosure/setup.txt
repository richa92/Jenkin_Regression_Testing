*** Settings ***
Documentation		Configures an appliance with resources found in supplied data file. Pass in specific tags with pybot -i <tag(s)> to limit processing
...  TAGS:          [FTS, CONFIGURE],USERS, ETHERNET, ETHERNET RANGES, NETWORK SETS, NETWORK SET RANGES, FC, FCOE, FCOE RANGES, LIGS, LICENSES, ENCLOSURES, ENCLOSURE GROUPS,
...                 LES, RANGES, POWER OFF SERVERS, SERVER PROFILES, SERVER PROFILES NO HW, SERVER PROFILE TEMPLATES, ASSIGN HARDWARE
...	 FTS:           Performs FTS on the appliance.
...	 CONFIGURE:     Run all tags except FTS

Resource			../../../../resource/fusion_api_all_resource_files.txt
#Resource			../../../resources/resource.txt

Library				Collections
*** Variables ***
${VM}               ${None}

*** Test Cases ***
First Time Setup
	[Tags]    FTS
    Get VM IP   ${VM}
	First Time Setup    password=${admin_credentials['password']}

Login
    [Tags]    CONFIGURE    USERS    ETHERNET    ETHERNET RANGES    NETWORK SETS    NETWORK SET RANGES    FC    FCOE    FCOE RANGES    LES    LOGICAL ENCLOSURES    LIGS    LICENSES
    ...    ENCS    ENCLOSURES    EGS    ENCLOSURE GROUPS    RANGES    POWER OFF SERVERS     OFF   SPS    SERVER PROFILES    SERVER PROFILES NO HW    SPSNOHW    SPTS    SERVER PROFILE TEMPLATES
    ...    ASSIGN HARDWARE
    Set Log Level	TRACE
    Get VM IP   ${VM}
	${resp} =   Fusion Api Login Appliance 		${APPLIANCE_IP}		${admin_credentials}

Add Users
	[Tags]    CONFIGURE   USERS
	${users} =	Get Variable Value	${users}
	Run Keyword If	${users} is not ${null}					Add Users from variable				${users}

Add Ethernet Networks
	[Tags]    CONFIGURE   ETHERNET
	${ethernet_networks} =	Get Variable Value	${ethernet_networks}
	Run Keyword If	${ethernet_networks} is not ${null}		Add Ethernet Networks from variable	${ethernet_networks}

Add Ethernet Ranges
	[Tags]    CONFIGURE   ETHERNET RANGES
	${ethernet_ranges} =	Get Variable Value	${ethernet_ranges}
	Run Keyword If	${ethernet_ranges} is not ${null}		Run Keyword for List	${ethernet_ranges}	Create Ethernet Range

Add Network Sets
	[Tags]    CONFIGURE   NETWORK SETS
	${network_sets} =	Get Variable Value	${network_sets}
	Run Keyword If	${network_sets} is not ${null}			Add Network Sets from variable		${network_sets}

Add Network Set Ranges
	[Tags]    CONFIGURE   NETWORK SET RANGES
	${network_set_ranges} =	Get Variable Value	${network_set_ranges}
	Run Keyword If	${network_set_ranges} is not ${null}	Run Keyword for List	${network_set_ranges}	Create Network Set Range

Add FC Networks
	[Tags]    CONFIGURE   FC
	${fc_networks} =	Get Variable Value	${fc_networks}
	Run Keyword If	${fc_networks} is not ${null}			Add FC Networks from variable		${fc_networks}

Add FCoE Networks
	[Tags]    CONFIGURE   FCOE
	${fcoe_networks} =	Get Variable Value	${fcoe_networks}
	Run Keyword If	${fcoe_networks} is not ${null}	        Add FCoE Networks from variable		${fcoe_networks}

Add FCoe Ranges
	[Tags]    CONFIGURE   FCOE RANGES
	${fcoe_ranges} =	Get Variable Value	${fcoe_ranges}
	Run Keyword If	${fcoe_ranges} is not ${null}	Run Keyword for List	${fcoe_ranges}	Create FCoE Range

Add LIGS
	[Tags]    CONFIGURE   LIGS
	${ligs} =	Get Variable Value	${ligs}
	Run Keyword If	${ligs} is not ${null}	Run Keyword for List	${ligs}	Add LIG from variable

Add Enclosure Groups
	[Tags]    CONFIGURE   ENCLOSURE GROUPS  EGS
	${enc_groups} =	Get Variable Value	${enc_groups}
	Run Keyword If	${enc_groups} is not ${null}	Run Keyword for List	${enc_groups}	Add Enclosure Group from variable

Add Licenses
	[Tags]    CONFIGURE   LICENSES
	${licenses} =	Get Variable Value	${licenses}
	Run Keyword If	${licenses} is not ${null}		Add Licenses from variable		${licenses}

Add Enclosures
	[Tags]    CONFIGURE   ENCLOSURES    ENCS
	${encs} =	Get Variable Value	${encs}
	Run Keyword If	${encs} is not ${null}					Add Enclosures from variable	${encs}

Add Logical Enclosures
	[Tags]    CONFIGURE   LOGICAL ENCLOSURES    LES
	${les} =	Get Variable Value	${les}
	Run Keyword If	${les} is not ${null}					Run Keyword for List    ${les}      Add Logical Enclosure from variable

Add Ranges
	[Tags]    CONFIGURE   RANGES
	${ranges} =	Get Variable Value	${ranges}
	${pools} =  Run Keyword If	${ranges} is not ${null}	Create List		/rest/id-pools/vmac	/rest/id-pools/vwwn	/rest/id-pools/vsn
    Run Keyword If	${ranges} is not ${null}                Run Keyword for List	${pools}	Disable ALL Generated ID Ranges
	Run Keyword If	${ranges} is not ${null}				Add Ranges From variable	${ranges}

Power Off Servers
	[Tags]    CONFIGURE   POWER OFF SERVERS    OFF
	Power Off All Servers

Add Server Profiles
	[Tags]    CONFIGURE   SERVER PROFILES    SPS
	${server_profiles} =	Get Variable Value	${server_profiles}
	Run Keyword If	${server_profiles} is not ${null}		Add Server Profiles from variable	${server_profiles}

Add Server Profiles No Hardware Assigned
 	[Tags]    CONFIGURE   SERVER PROFILES NO HW    SPSNOHW
 	${server_profiles} =	Get Variable Value	${server_profiles_nohw}
 	Run Keyword If	${server_profiles} is not ${null}		Add Server Profiles from variable no hardware	${server_profiles}   ${server_profile_to_bay_map}

Assign Server Hardware To Profile
	[Tags]	CONFIGURE	ASSIGN HARDWARE
 	${server_profiles} =	Get Variable Value	${server_profiles_nohw}
	Log to console and logfile	Assigning Server Hardware to Profiles
 	Run Keyword If	${server_profiles} is not ${null}		Assign Server Hardware To Existing Profiles From Variable	${server_profiles}   ${server_profile_to_bay_map}   waitForTask=${True}

Add Server Profile Templates
	[Tags]    CONFIGURE   SERVER PROFILE TEMPLATES    SPTS
	${server_profile_templates} =	Get Variable Value	${server_profile_templates}
	Run Keyword If	${server_profile_templates} is not ${null}		Add Server Profile Templates from variable	${server_profile_templates}

# SAN Managers
# Storage Systems
# Storage Pools
# Volumes
# Volume Templates
