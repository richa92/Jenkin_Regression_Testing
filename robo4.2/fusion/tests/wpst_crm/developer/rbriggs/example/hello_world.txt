*** Settings ***
Documentation		Example Test Suite
Variables 		    data_variables.py		
Suite Setup   		Run FTS and test-specific setup
Suite Teardown		Suite Teardown
Resource            ../../../../resource/resource.txt
Library				Collections
Library             json
*** Variables ***
${SSH_PASS}                     hpvse1

*** Test Cases ***
Login all users
    [Tags]  1   2   3   POSITIVE
    log variables
	Fusion Api Login Appliance 		${APPLIANCE_IP}		${admin_credentials}
    Login all users     ${users}

Update MAX BW higher than previous requested value
    [Tags]  2    POSITIVE
	Run Keyword and Ignore Error    Write To ciDebug Log
    Fusion Api Switch Active User   Networkadmin
	# GET the connectionTemplateUri for the network, then update them
	${eth_ct} =     Get connectionTemplateUri    net_101    ethernet
    ${ct} =         Get Resource by URI     ${eth_ct}
    Set to Dictionary   ${ct['bandwidth']}    maximumBandwidth    6000
    ...                                       typicalBandwidth    4000
    Remove from Dictionary    ${ct}    status_code     # This is needed as status_code is being artificially added to the response dict
    ${resp} =       Fusion Api Update Connection Template    ${ct}    ${eth_ct}
	${valDict} = 	Create Dictionary	status_code=${200}
	...							    	status=OK
	Validate Response	${resp}	${valDict}

Try to update MAX BW to an unsupported value
    [Tags]  3    NEGATIVE
	Run Keyword and Ignore Error    Write To ciDebug Log
    Fusion Api Switch Active User   Administrator
	# GET the connectionTemplateUri for the networks, then update them
	${eth_ct} =     Get connectionTemplateUri    net_101    ethernet
    ${ct} =         Get Resource by URI     ${eth_ct}
    Set to Dictionary   ${ct['bandwidth']}    maximumBandwidth    99000
    ...                                       typicalBandwidth    4000
    Remove from Dictionary    ${ct}    status_code     # This is needed as status_code is being artificially added to the response dict
    ${resp} =       Fusion Api Update Connection Template    ${ct}    ${eth_ct}
	${valDict} = 	Create Dictionary	status_code=${400}
    ...                                 errorCode=CRM_DEFAULT_INVALID_ARGUMENT
    ...                                 message=Updating connection-template: Invalid bandwidth: Maximum bandwidth exceeds 20 GBits/s
	Validate Response Regex  	${resp}	${valDict}


*** Keywords ***
FTS
	Set Log Level	DEBUG
    Get VM IP   ${VM}
	First Time Setup					password=hpvse123

Test Specific Setup
	Set Log Level	TRACE
	${TEST_NAME} =      Set Variable    TEST-SPECIFIC SETUP
	Run Keyword and Ignore Error    Write To ciDebug Log
	Log to console and logfile	[TEST-SPECIFIC SETUP]
	Fusion Api Login Appliance 		${APPLIANCE_IP}		${admin_credentials}
	${users} =	Get Variable Value	${users}
	Run Keyword If	${users} is not ${null}    Add Users from variable				${users}
	${ethernet_networks} =	Get Variable Value    ${ethernet_networks}
	Run Keyword If	${ethernet_networks} is not ${null}    Add Ethernet Networks from variable	${ethernet_networks}
	${fc_networks} =	Get Variable Value	${fc_networks}
	Run Keyword If	${fc_networks} is not ${null}    Add FC Networks from variable		${fc_networks}
	${fcoe_networks} =	Get Variable Value	${fcoe_networks}
	Run Keyword If	${fcoe_networks} is not ${null}    Add FCoE Networks from variable		${fcoe_networks}
	${ligs} =	Get Variable Value	${ligs}
	Run Keyword If	${ligs} is not ${null}	Run Keyword for List	${ligs}    Add LIG from variable
	${enc_groups} =	Get Variable Value	${enc_groups}
	Run Keyword If	${enc_groups} is not ${null}	Run Keyword for List	${enc_groups}	Add Enclosure Group from variable
	#${licenses} =	Get Variable Value	${licenses}
	#Run Keyword If	${licenses} is not ${null}		Add Licenses from variable		${licenses}
	#${encs} =	Get Variable Value	${encs}
	#Run Keyword If	${encs} is not ${null}					Add Enclosures from variable	${encs}
	#Power Off All Servers
	#${server_profiles} =	Get Variable Value	${server_profiles}
	#Run Keyword If	${server_profiles} is not ${null}		Add Server Profiles from variable	${server_profiles}

Run FTS and test-specific setup
	Set Log Level	TRACE
    FTS
    Test Specific Setup