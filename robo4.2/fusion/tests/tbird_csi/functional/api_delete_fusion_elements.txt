*** Settings ***
Documentation
...    = Usage =
...    | pybot | -L DEBUG | api_delete_fusion_elements.txt |
...    = Variables =
...    | ENCLOSURE | Required. Dictionary key from variables.py representing the desired enclosure. |
...    | SP_NAME | Optional. Server Profile name. |
...    | ENC_NAME | Optional. Logical Enclosure name. |
...    | ENC_GROUP_NAME | Optional. Enclosure Group name. |
...    | LIG_NAME | Optional. Logical Interconnect Group name. |

Library           Collections
Library           RoboGalaxyLibrary            # DVTs Robot Framework extensions
Library           FusionLibrary                # DVTs Robot Framework extensions
Variables         ../resources/variables.py    ${ENCLOSURE}
Resource          ../resources/constants.txt
Resource          ../resources/delete_fusion_api.txt  
#Resource          ../../tbird_hal/resources/fusion_api.txt  # DVT fusion API extensions
Resource          ../../tbird_hal/resources/system_info.txt
Force Tags      API    HW

Suite Setup    Login To Fusion Via REST
Suite Teardown    Logout Of Fusion Via REST

*** Variables ***

*** Test Cases ***
#Delete Server Profiles
#    [Tags]    SP
#    ${Response}=    Fusion API Get Server Profiles
#    Should be Equal As Integers    ${Response['status_code']}    200    msg=Failed to get Server Profiles.
#    ${members}=    Get From Dictionary   ${Response}    members
#    Run Keyword If    "${Response['count']}"=="0"
#    ...    Log    No Server Profiles found.    level=WARN
#    :FOR    ${index}    IN RANGE    0    ${Response['count']}
#    \    Log    ${index}
#    \    ${member}=    Get From List    ${members}    ${index}
#    \    Delete Server Profile    ${member['name']}
#    #\    Delete Server Profile    ${member[${index}]}

Delete Server Profiles
    [Tags]    SP
    ${Response}=    Fusion API Get Server Profiles
    Should be Equal As Integers    ${Response['status_code']}    200    msg=Failed to get Server Profiles.
    ${members}=    Get From Dictionary   ${Response}    members
    Run Keyword If    "${Response['count']}"=="0"
    ...    Log    No Server Profiles found.    level=WARN
    :FOR    ${index}    IN RANGE    0    ${Response['count']}
    \    ${member}=    Get From List    ${members}    ${index}
    \    ${Server}=    Get Server Hardware    ${member['enclosureBay']}
    \    Log To Console    \nThe Server is ${Server['powerState']}\n
    \    Run Keyword If    "${Server['powerState']}"=="On"
    \    ...    Power Off Server Hardware ${Server['uuid']}
    \    Delete Server Profile    ${member['name']}

#Delete Ethernet Networks
#    [Tags]    Network
#    ${Response}=    Fusion API Get Ethernet Networks
#    Log Dictionary    ${Response}
#    Should be Equal As Integers    ${Response['status_code']}    200    msg=Failed to get Ethernet Networks.
#    ${members}=    Get From Dictionary   ${Response}    members
#    Run Keyword If    "${Response['count']}"=="0"
#    ...    Log    No Ethernet networks found.    level=WARN
#    :FOR    ${index}    IN RANGE    0    ${Response['count']}
#    \    Log    ${index}
#    \    ${member}=    Get From List    ${members}    ${index}
#    \    Delete Ethernet Network    ${member['name']}

#Delete FCoE Networks
#    [Tags]    Network
#    ${Response}=    Fusion API Get FCoe Networks
#    Log Dictionary    ${Response}
#    Should be Equal As Integers    ${Response['status_code']}    200    msg=Failed to get FCoe Networks.
#    ${members}=    Get From Dictionary   ${Response}    members
#    Run Keyword If    "${Response['count']}"=="0"
#    ...    Log    No FCoe networks found.    level=WARN
#    :FOR    ${index}    IN RANGE    0    ${Response['count']}
#    \    Log    ${index}
#    \    ${member}=    Get From List    ${members}    ${index}
#    \    Log To Console    ${\n}Deleting FCoE Network ${member['name']}.
#    \    Fusion API Delete FCoe Network    ${member['name']}
#    #pjs: need above to be with 'Fusion API' since unlike ethernet network keyword, we don't have another pointer to fusion api in fusion_api.txt for this keyword

Delete Logical Enclosures
#depend on LIG? delete
#LI gets created and deleted with LE
    [Tags]    LE
    ${Response}=    Fusion API Get Logical Enclosure
    Should be Equal As Integers    ${Response['status_code']}    200    msg=Failed to get Logical Enclosures.
    ${members}=    Get From Dictionary   ${Response}    members
    Run Keyword If    "${Response['count']}"=="0"
    ...    Log    No Logical Enclosures found.    level=WARN
    :FOR    ${index}    IN RANGE    0    ${Response['count']}
    \    Log    ${index}
    \    ${member}=    Get From List    ${members}    ${index}
    \    Delete Logical Enclosure    ${member['name']}

Delete Enclosure Groups
#depend on LEs deleted first
    [Tags]    EG
    ${Response}=    Fusion API Get Enclosure Groups
    Should be Equal As Integers    ${Response['status_code']}    200    msg=Failed to get Enclosure Groups.
    ${members}=    Get From Dictionary   ${Response}    members
    :FOR    ${index}    IN RANGE    0    ${Response['count']}
    \    Log    ${index}
    \    ${member}=    Get From List    ${members}    ${index}
    \    Delete Enclosure Group    ${member['name']}

Delete Logical Interconnect Groups
#depends on EG & Interconnects deleted first
    [Tags]    LIG
    ${Response}=    Fusion API Get LIG
    Should be Equal As Integers    ${Response['status_code']}    200    msg=Failed to get Logical Interconnect Groups.
    ${members}=    Get From Dictionary   ${Response}    members
    :FOR    ${index}    IN RANGE    0    ${Response['count']}
    \    Log    ${index}
    \    ${member}=    Get From List    ${members}    ${index}
    \    Delete LIG    ${member['name']}

###################
Delete Ethernet Networks
    [Tags]    Network
    ${Response}=    Fusion API Get Ethernet Networks
    Log Dictionary    ${Response}
    Should be Equal As Integers    ${Response['status_code']}    200    msg=Failed to get Ethernet Networks.
    ${members}=    Get From Dictionary   ${Response}    members
    Run Keyword If    "${Response['count']}"=="0"
    ...    Log    No Ethernet networks found.    level=WARN
    :FOR    ${index}    IN RANGE    0    ${Response['count']}
    \    Log    ${index}
    \    ${member}=    Get From List    ${members}    ${index}
    \    Delete Ethernet Network    ${member['name']}

Delete FCoE Networks
    [Tags]    Network
    ${Response}=    Fusion API Get FCoe Networks
    Log Dictionary    ${Response}
    Should be Equal As Integers    ${Response['status_code']}    200    msg=Failed to get FCoe Networks.
    ${members}=    Get From Dictionary   ${Response}    members
    Run Keyword If    "${Response['count']}"=="0"
    ...    Log    No FCoe networks found.    level=WARN
    :FOR    ${index}    IN RANGE    0    ${Response['count']}
    \    Log    ${index}
    \    ${member}=    Get From List    ${members}    ${index}
    \    Log To Console    ${\n}Deleting FCoE Network ${member['name']}.
    \    Fusion API Delete FCoe Network    ${member['name']}
    #pjs: need above to be with 'Fusion API' since unlike ethernet network keyword, we don't have another pointer to fusion api in fusion_api.txt for this keyword

###################
Verify Enclosure in Monitored State
    [Tags]    LE  EG  LIG
    Verify Enclosure in Monitored State
