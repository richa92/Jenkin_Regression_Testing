*** Settings ***
Documentation    Copy latest BTI ISO to Jenkins
...              (Omit the copy if latest version already present).
...              = USAGE =
...              | pybot | Get_BTI_ISO.txt |
Library          SSHLibrary
Library          robot.api.logger
Library          RoboGalaxyLibrary

*** Variables ***
${FUSION_DEPOT}            http://ci-nexus.vse.adapps.hp.com/Fusion/master/ISO/SSH/
${FUSION_FILE_PREFIX}      HPOneView-SSH-2.00.00
${DESTINATION_HOSTNAME}    jenkins.rsn.hp.com
${DESTINATION_USERNAME}    userContent
${DESTINATION_PASSWORD}    hpvse123
${DESTINATION_LOCATION}    /var/lib/jenkins/userContent/builds

*** Test Cases ***
Get latest ISO
    # Get the name of the latest ISO file at the Fusion Depot
    ${ISO}=    Get LatestBuild Name        ${FUSION_DEPOT}    ${Empty}    iso
    Console    \nLatest Candidate ${ISO}
    Set Suite Variable    ${ISO_URL}    ${FUSION_DEPOT}${ISO}
    ${Match}    ${SOURCE_BUILD}=    Should Match Regexp    ${ISO}    ${FUSION_FILE_PREFIX}-(\\d+).iso$

    # Open a connection to Jenkins (the destination) and retrieve the last build Id
    Set Default Configuration   prompt=\$        timeout=30
    Open Connection    ${DESTINATION_HOSTNAME}
    Login    ${DESTINATION_USERNAME}    ${DESTINATION_PASSWORD}

    # Determine the latest ISO file present on the destination
    ${STDOUT}    Execute Command    
    ...    cd ${Destination_Location} ; ls -l ${FUSION_FILE_PREFIX}-* | tr -s " " | cut -d " " -f6-9
    ${MATCH}    ${FILE}    ${DESTINATION_BUILD}=    Should Match Regexp    ${STDOUT}    (${FUSION_FILE_PREFIX}-(\\d+).iso)$
    Console    \nLatest Present (on ${DESTINATION_HOSTNAME}): ${FILE}   

    # No need to copy if ISO is already present
    Run Keyword if    '${SOURCE_BUILD}'=='${DESTINATION_BUILD}'
    ...    Fail    No need to copy ${ISO} already present on ${DESTINATION_HOSTNAME}

    # Get a copy of the file onto the destination machine
    Console    \nCopying ${ISO} .....
    ${STDOUT}    ${STDERR}=    Execute Command
    ...    cd ${DESTINATION_LOCATION} ; wget ${ISO_URL}
    ...    return_stderr=yes
    Should Contain    ${STDERR}    100%    msg=Couldnt transfer ${ISO}

    # Create/update a symbolic link named 'latest-fusion.iso'
    Console    \nCreating symlink: latest-fusion.iso .....
    ${STDOUT}    ${STDERR}=    Execute Command    
    ...    rm latest-fusion.iso ; ln -sf ${DESTINATION_LOCATION}/${ISO} latest-fusion.iso
    ...    return_stderr=yes
    Should Not Contain    ${STDERR}    Failure    msg=Couldnt symlink ${File}
    Close Connection
