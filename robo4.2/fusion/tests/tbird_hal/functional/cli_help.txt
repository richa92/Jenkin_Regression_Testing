*** Settings ***
Documentation   Verifies Help messages displayed in the Fusion CLI.
...             = Usage =
...             | pybot | -v ENCLOSURE:<enclosure name> | [ -v FUSION_IP:<IP> ] | cli_help.txt |
...             = Variables =
...        | ENCLOSURE  | Required. Dictionary key from variables.py representing the desired enclosure. |
...             | FUSION IP  | Required if ENCLOSURE name is 'dcs'.
...             = Preconditions =
...             | Enclosure must be claimed and added. |
...        | ${CURDIR/../data/cli_help_oracle.json must be up-to-date |
...        = User Story: US38092    Author: David Gray =


Force Tags      CLI    HW                               # Force tags on all test cases
Variables       ${CURDIR}/../resources/variables.py    ${ENCLOSURE}
Library         FusionLibrary                               # DVTs Robot Framework extensions
Resource        ${CURDIR}/../resources/fusion_ssh.txt       # AM-DVT fusion API extensions
Resource        ${CURDIR}/../resources/fusion_cli.txt   # AM-DVT fusion CLI extensions
Resource        ${CURDIR}/../resources/defaults.txt     # AM-DVT default variables
Suite Setup     Run Keywords    Load Resource

*** Variables ***

*** Test Cases ***
Verify CLI Help
    Login to Fusion via SSH    ${FUSION_IP}    ${FUSION_USERNAME}     ${FUSION_PASSWORD}     -view>    20
    ${expected}=        Get From Dictionary     ${JSON}        view-help
    ${response}=          Get Clean Help Command
    Should Be Equal        ${expected}        ${response}
    Remove From Dictionary     ${JSON}            commands
    Remove From Dictionary     ${JSON}            view-help
    @{keys}=    Get Dictionary Keys    ${JSON}
    :FOR     ${key}           in     @{keys}
    \    ${command}=     Get From Dictionary    ${JSON}        ${key}
    \    ${commands}=    Get From Dictionary    ${command}    commands
    \    ${no_cmds}=     Get Length        ${commands}
    \    ${expected}=    Get From Dictionary    ${command}    cmd-help
    \    ${response}=    Get Clean Help Command    ${key}
    \    Should Be Equal    ${expected}    ${response}
    \    Run Keyword If        ${no_cmds} > 0
    \    ...     Verify CLI View Help   ${key}    ${command}

Negative: Erroneous Help Command Request
    Login to Fusion via SSH    ${FUSION_IP}    ${FUSION_USERNAME}     ${FUSION_PASSWORD}     -view>    20
    ${response}=          Get Clean Help Command    twizz_le
    Should contain        ${response}    'twizz_le' is not a recognized command.

Negative: Erroneous Help Garbage Request
    Login to Fusion via SSH    ${FUSION_IP}    ${FUSION_USERNAME}     ${FUSION_PASSWORD}     -view>    20
    ${response}=          Get Clean Help Command    ${JSON}
    Should contain        ${response}    is not a valid command.


*** Keywords ***
# Simple, first-level recursion
Verify CLI View Help
    [Arguments]        ${view-command}        ${JSON2}
    # Enter view
    Write            ${view-command}
    ${response}=        Read Until Prompt

    ${expected}=        Get From Dictionary     ${JSON2}        view-help
    ${response}=          Get Clean Help Command
    Should Be Equal        ${expected}        ${response}
    Remove From Dictionary     ${JSON2}            commands
    Remove From Dictionary     ${JSON2}            cmd-help
    Remove From Dictionary     ${JSON2}            view-help
    @{keys}=    Get Dictionary Keys    ${JSON2}
    :FOR     ${key}           in     @{keys}
    \        ${command}=          Get From Dictionary    ${JSON2}        ${key}
    \        ${commands}=        Get From Dictionary    ${command}    commands
    \        ${no_cmds}=        Get Length        ${commands}
    \        ${expected}=          Get From Dictionary    ${command}    cmd-help
    \        ${response}=          Get Clean Help Command    ${key}
    \        Should Be Equal        ${expected}        ${response}
    \        Run Keyword If        ${no_cmds} > 0
    \        ...         Verify CLI 2 View Help   ${key}    ${command}

# Simple, second-level recursion
Verify CLI 2 View Help
    [Arguments]        ${view-command}        ${JSON}
    # Enter view
    Write            ${view-command}
    ${response}=        Read Until Prompt

    ${expected}=        Get From Dictionary     ${JSON}        view-help
    ${response}=          Get Clean Help Command
    Should Be Equal        ${expected}        ${response}
    Remove From Dictionary     ${JSON}            commands
    Remove From Dictionary     ${JSON}            view-help
    @{keys}=    Get Dictionary Keys    ${JSON}
    :FOR     ${key}           in     @{keys}
    \        ${command}=          Get From Dictionary    ${JSON}        ${key}
    \        ${expected}=          Get From Dictionary    ${command}    cmd-help
    \        ${response}=          Get Clean Help Command    ${key}
    \        Should Be Equal        ${expected}        ${response}

Get Clean Help Command
    [Arguments]        ${command}=${Empty}
    Write        help ${command}
    ${response}=    Read Until Prompt
    ${response}=    Remove String            ${response}    \x1b[?1h\x1b=
    ${response}=    Remove String            ${response}    \x1b[K\x1b[?1l\x1b>
    ${response}=       Replace String Using RegExp    ${response}        \\s+    ${SPACE}
    ${response}=       Replace String Using RegExp    ${response}        \\w+-view>    ${Empty}
    [return]        ${response}

Load Resource
    ${output}=    OperatingSystem.Get File    ${CURDIR}/../data/cli_help_oracle.json
    ${JSON}=    Evaluate    json.loads('''${output}''')    json
    Log        ${JSON}
    Set Suite Variable    ${JSON}    ${JSON}

