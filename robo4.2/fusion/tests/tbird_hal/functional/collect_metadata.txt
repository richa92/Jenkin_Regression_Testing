*** Settings ***
Documentation    Collect metadata elements
...              = USAGE =
...              | pybot | -v ENCLOSURE:dcs |-v FUSION_IP:<IP> | collect_metadata.txt |
...               = Variables =
...              | ENCLOSURE | Required; Enclosure to use |
...    | FUSION_IP | Required when enclosure is DCS; IP address of the FusionVM to use |

Library           Collections
Library           String
Library           robot.api.logger
Library           SSHLibrary
Library           OperatingSystem
Library           RoboGalaxyLibrary
Library           FusionLibrary
Variables         ../resources/variables.py    ${ENCLOSURE}
Resource          ../resources/defaults.txt    # Comet-DVT default variables
Resource	  ../resources/em_api.txt
Resource          ../resources/fusion_api.txt
Resource          ../resources/hal_webapp.txt
Suite Setup	  Run Keywords
...		  Login to Fusion via SSH
...    		  EM Api Create Session

*** Test Case ***
Set Fusion Version Metadata
    [Tags]    DCS  HW
    [Documentation]    Get the version ident string from Fusion
    Login to Fusion via REST    ${FUSION_IP}    ${FUSION_USERNAME}    ${FUSION_PASSWORD}
    ${Response}=    Fusion Api Get Appliance Version
    Logout of Fusion Via REST
    Log    ${Response}
    ${softwareVersion}=    Get from Dictionary    ${Response}    softwareVersion
    Log    Fusion Version: ${softwareVersion}
    ${date}=               Get from Dictionary    ${Response}    date
    Set Suite Metadata     Fusion Version      ${softwareVersion} : ${date}    top=True
    Set Suite Metadata     Fusion Appliance    https://${FUSION_IP}    top=True

Set EM Version Metadata
    [Tags]    HW
    [Documentation]    Get the version ident for the Enclosure Manager
    ${VersionString}=    hal_webapp.Get EM Version
    Set Suite Metadata    EM Version    ${VersionString}    top=True

Set Firefox Version Metadata
    [Tags]    DCS  HW
    ${Version}=    Get Firefox Version
    Set Suite Metadata     Firefox Version    ${Version}    top=True

Set Git Version Metadata
    [Tags]    DCS  HW
    ${Version}    Run    git show-ref HEAD
    Set Suite Metadata    Git Version    ${Version}    top=True

Set DCS Status Metadata
    [Tags]    DCS
    #Keyword sets metadata fields (when available)
    Run Keyword and Ignore Error    Get DCS Status    ${FUSION_IP}
    Run Keyword and Ignore Error    Get DCS Version    ${FUSION_IP}

*** Keywords ***
Get DCS Version
    [Documentation]    Login to appliance (via SSH) and extrace verions number from DCS RPM
    [Arguments]    ${IP}=${Fusion_IP}
    ${Id}    Login to Fusion via SSH    ${FUSION_IP}
    ${Response}    Execute Command    rpm -qa | grep -i dcs-engine-rpm
    Logout of Fusion via SSH
    ${Match}    ${Version}    ${Snap}=    Should Match Regexp    ${Response}    dcs-engine-rpm-(\\d.\\d.\\d)-SNAPSHOT(\\d+).noarch$
    ...    msg=Couldn't locate DCS RPM file. Cant determine DCS version
    Console    \nDCS Version: ${Version} ${Snap}
    Set Suite Metadata    Dcs Version       ${Version}       top=True

Get DCS Status
    [Documentation]   Uses the DCS Rest API to get status (doesn't require login).
    [Arguments]    ${IP}=${Fusion_IP}
    Login to Fusion via REST    ${FUSION_IP}    ${FUSION_USERNAME}    ${FUSION_PASSWORD}

    ${Response}     DCS Api Get Status     ${IP}
    Log    ${Response}
    ${DcsStatus}    Get From Dictionary    ${Response}     DcsStatus
    ${Status}       Get From Dictionary    ${DcsStatus}    Status
    ${Schematic}    Get From Dictionary    ${DcsStatus}    Schematic_location
    Console         \n${Status}\n${Schematic}
    Set Suite Metadata    Dcs Status       ${Status}       top=True
    Set Suite Metadata    Dcs Schematic    ${Schematic}    top=True

Login to Fusion Via REST
    [Documentation]    Connects to the Appliance and creates a session using the Username and Password.
    ...                Example:\n| Login to Fusion Via REST | 10.0.12.106 | Administrator | hpvse123 |
    [Arguments]    ${IP}    ${USERNAME}    ${PASSWORD}
    ${Cred}=    Create Dictionary    userName    ${USERNAME}    password    ${PASSWORD}
    ${SessionId}    Fusion Api Login Appliance    ${IP}    ${Cred}
    Log    ${SessionId}
    [Return]    ${SessionId}

Logout of Fusion Via REST
    [Documentation]    Terminates a session with the REST API.
    ...                Example:\n| Logout Of Fusion Via REST |
    Fusion Api Logout Appliance

Login to Fusion via SSH
    [Documentation]    Connect to Fusion VM via SSH
    ...                Example:\n| Login to Fusion Via SSH | 10.0.12.106 | Administrator | hpvse123 |
    [Arguments]    ${IP}=${FUSION IP}    ${USERNAME}=${FUSION_SSH_USERNAME}    ${PASSWORD}=${FUSION_SSH_PASSWORD}
    ...            ${PROMPT}=${FUSION_PROMPT}    ${TIMEOUT}=${FUSION_TIMEOUT}
    Log Many    ${IP}    ${USERNAME}    ${PASSWORD}    ${PROMPT}    ${TIMEOUT}
    Set Default Configuration    prompt=${PROMPT}    timeout=${TIMEOUT}
    ${Id}=    Open Connection    ${IP}
    ${Output}=    Login    ${USERNAME}    ${PASSWORD}
    [Return]    ${Id}

Logout of Fusion Via SSH
    [Documentation]    Exits the current SSH session
    ...                Example:\n| Logout Of Fusion Via SSH |
    Close Connection

