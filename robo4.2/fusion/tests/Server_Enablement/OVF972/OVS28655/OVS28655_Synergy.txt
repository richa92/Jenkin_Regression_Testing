*** settings***
Library         FusionLibrary
Library         OVS28655_Devicefunctions.py
Library         Collections
Resource        ../../../../Resources/api/fusion_api_resource.txt
Variables       ./OVS28655_dcs_data.py
Suite Setup     Fusion Api Login Appliance    ${Appliance_IP_Synergy}    ${admin_credentials}
Suite Teardown     Fusion Api Logout Appliance

*** Variables ***
${Appliance_IP_Synergy}         ${FUSION_IP}
${DATA_FILE}        ./OVS28655_dcs_data.py
&{admin_credentials}         userName=${FUSION_ADMIN_LOGIN}         password=${FUSION_ADMIN_PASSWORD}

***Test Cases***

Get Device inventory from ILo
    [Tags]    GetILO
    [Documentation]    Test case will return the ilo device inventory information and Adds the requested parameter states and results to a dictionary to compare
    ${id}=        Open Connection     ${Appliance_IP_Synergy}
    ${output} =   Login    root    hpvse1
    ${command} =    set variable    /usr/bin/curl -ik --user "${cred_API}" https://${Server_IP}/redfish/v1/Chassis/1/Devices/
    ${ilo_raw_output_devices} =    Execute Command    ${command}
    Log    \n${ilo_raw_output_devices}    console=True
    &{ilo_raw_output_dict} =    get_json_data_from_ilo_output     ${ilo_raw_output_devices}
    Log    \n${ilo_raw_output_dict}    console=True
    &{ilo_device_dict}    Create Dictionary
    @{device_list}    Create List
    ${val_odataid} =    Get From Dictionary    ${ilo_raw_output_dict}    @odata.id
    ${val_odata_etag} =    Get From Dictionary    ${ilo_raw_output_dict}    @odata.etag
    ${val_device_count} =    Get From Dictionary    ${ilo_raw_output_dict}     Members@odata.count
    #${device_list} =    Get From Dictionary    ${ilo_raw_output_dict}    Members
    #Log    \n${device_list}    console=True
    Set To Dictionary    ${ilo_device_dict}    key_odata_id=${val_odataid}
    Set To Dictionary    ${ilo_device_dict}    key_odata_etag=${val_odata_etag}
    Set To Dictionary    ${ilo_device_dict}    device_count=${val_device_count}
    Set To Dictionary    ${ilo_device_dict}    listdevice=${device_list}
    Log    \n${ilo_device_dict}	console=True
    ${count_device} =    Get From Dictionary    ${ilo_device_dict}    device_count
    :FOR    ${i}    IN RANGE    1    ${count_device}+1
    \    ${command} =    set variable    /usr/bin/curl -ik --compress --user "${cred_API}" https://${Server_IP}/redfish/v1/Chassis/1/Devices/${i}/
    \    ${stdOutput} =    Execute Command    ${command}
    \    &{dict_after_removing_junk} = 	get_json_data_from_ilo_output	${stdOutput}
    \    Log    \n${stdOutput}    console=True
    \    &{device_dict}   Create Dictionary
    \    ${val_etag}    Get From Dictionary    ${dict_after_removing_junk}  @odata.etag
    \    log    \n${val_etag}   console=true
    \    ${val_firmware}    Get From Dictionary    ${dict_after_removing_junk}   FirmwareVersion
    \    ${val_location}    Get From Dictionary    ${dict_after_removing_junk}   Location
    \    ${val_name}    Get From Dictionary    ${dict_after_removing_junk}  Name
    \    ${val_manufacturer}    Get From Dictionary    ${dict_after_removing_junk}  Manufacturer
    \    ${val_partno}    Get From Dictionary    ${dict_after_removing_junk}  PartNumber
    \    ${val_Status}    Get From Dictionary    ${dict_after_removing_junk}  Status
    \    Set To Dictionary  	${device_dict}    @odata.etag=${val_etag}
    #\    Log    \n${device_dict}     console=True
    #\    Set To Dictionary     ${device_dict}    Frimware_ver=${val_firmware}
    \    Set To Dictionary     ${device_dict}    location=${val_location}
    \    Set To Dictionary     ${device_dict}    name=${val_name}
    \    Set To Dictionary     ${device_dict}    manufacturer=${val_manufacturer}
    \    Set To Dictionary     ${device_dict}    ProductPartNumber=${val_partno}
    \    Set To Dictionary     ${device_dict}    Status=${val_Status}
    \    Insert Into List    ${device_ilo_list}    ${i}    ${device_dict}
    Log    \n${device_ilo_list}     console=True
    Log    \n${device_dict}    console=True
    #Sleep    20

Get Device inventory From OV
    [TAGS]    GetOV
    [Documentation]    Test case will return the device inventory information After ILO added in the OV from OV the device info is read and written to dictionary to compare
    ${id}=        Open Connection     ${Appliance_IP_Synergy}
    ${output} =   Login    root    hpvse1
    ${r}    ${Auth} =    Fusion Api Login Appliance 		${Appliance_IP_Synergy}		${admin_credentials}
    Run Keyword If  ${r['status_code']} is not 200    Fail      Unable to login
    #${admin_session} = ${AuthRack} 
    Log    \n${r}    console=True
    Log    \n${Auth}    console=True
    Set Global Variable      ${Auth}
    ${sh_uri} =     Get Server Hardware URI By ILO IP    ${Server_IP} 
    Log    \n${sh_uri}    console=True
    ${command} =    set variable     curl -ik -H "${XAPIversion}" -H "Auth:${Auth}" "https://${Appliance_IP_Synergy}/${sh_uri}/devices/"
    Log    \n${command}    console=True
    ${Rest_response} =    Execute Command    ${command}   #return_stderr=True
    Log    \n${Rest_response}    console=True
    ${dict_after_removing_junk} =    get_json_data_from_ilo_output 	${Rest_response}
    #Convert To Dictionary    ${dict_after_removing_junk}
    ${keys}=   Get Dictionary Keys     ${dict_after_removing_junk}
    log to console    ${keys}
    Log    \n${dict_after_removing_junk}	console=True
    &{ov_device_dict}    Create Dictionary
    @{Val_data} =    Get From Dictionary    ${dict_after_removing_junk}    data
    log    \n${Val_data}    console=true
    ${length_data_list} = 	Get length    ${val_Data}
    log    \n${length_data_list}    console=true
    :FOR    ${i}    IN    @{val_data}
    #\    log    \n${i}    console=true
    \    &{ov_device_dict}    Create Dictionary
    \    ${val_etag}    Get From Dictionary    ${i}  @odata.etag
    \    log    \n${val_etag}    console=true
    \    ${val_firmware}    Get From Dictionary    ${i}    FirmwareVersion
    \    ${val_location}    Get From Dictionary    ${i}    Location
    \    ${val_name}    Get From Dictionary    ${i}  Name
    \    ${val_manufacturer}    Get From Dictionary    ${i}  Manufacturer
    \    ${val_partno}   Get From Dictionary    ${i}  PartNumber
    \    ${val_Status}   Get From Dictionary    ${i}  Status
    \    Set To Dictionary    ${ov_device_dict} 	@odata.etag=${val_etag}
    \    Log 	\n${ov_device_dict}    console=True
    #\    Set To Dictionary    ${ov_device_dict}    Firmware_ver=${val_firmware}
    \    log 	\n${ov_device_dict}    console=true
    \    Set To Dictionary    ${ov_device_dict}    location=${val_location}
    \    Set To Dictionary    ${ov_device_dict}    name=${val_name}
    \    Set To Dictionary    ${ov_device_dict}    manufacturer=${val_manufacturer}
    \    Set To Dictionary    ${ov_device_dict}    ProductPartNumber=${val_partno}
    \    Set To Dictionary    ${ov_device_dict}    Status=${val_Status}
    \    Append To List    ${device_ov_list}    ${ov_device_dict}
    log    \n${ov_device_dict}    console=true
	log    \n${device_ov_list}    console=true

Compare data from iLO to OV
    [TAGS]    Compare
    [Documentation]       Test case will return the the ILO data is matched with OV data the results from Test case 1 and test case 2 will be compared
    ${length_Suite} =    Get length    ${device_ilo_list}
    log    \n${length_Suite}    console=true
    log    \n${device_ov_list}    console=true
    ${length_Suite} =    Get length 	${device_ov_list}
    log    \n${length_Suite}    console=true
    ${self}=    create List
    :For  ${itemilo}  in  @{device_ilo_list}
    \     log    \n${itemilo}    console=true
    #\     &{Final_results_ILO} =    Create Dictionary
    \     &{Final_results_ILO} =    Set To Dictionary    ${itemilo}
    \     log    \n${Final_results_ILO}    console=true
    :For  ${itemov}  in  @{device_ov_list}
    \     log    \n${itemov}    console=true
    #\     &{Final_results_OV} =    Create Dictionary
    \     &{Final_results_OV} =     Set To Dictionary    ${itemov}
    \     log    \n${Final_results_OV}    console=true
    ${compare} =    Dictionaries Should Be Equal     ${Final_results_ILO}   ${Final_results_OV}
    log    \n${compare}
