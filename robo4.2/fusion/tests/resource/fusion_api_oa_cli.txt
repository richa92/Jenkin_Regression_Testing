*** Settings ***
Library		        SSHLibrary

*** Keywords ***
#######################################
# OA CLI Commands
#######################################
OA CLI EFUSE
    [Documentation]    issues an EFUSE Action to the given Device\Bay.
    ...   {DEVICE} = <BLADE|IOM|NETTRAY|SWM|FAN|OA|EM>
    ...   {BAY} = desired bay for given device
    ...   {ACTION} = <ON|OFF>
    [Arguments]	       ${OA_HOST}    ${OA_USER}		${OA_PASS}    ${DEVICE}    ${BAY}    ${ACTION}   ${iface}=eth0
    ${sanitizedHost} =   Get Variable Value   ${OA_HOST}
    ${sanitizedHost} =   Remove String Using Regexp   ${sanitizedHost}   (\\[|\\])
    ${llAddr} =   Get Lines Matching Regexp   ${sanitizedHost}   ^fe80:   partial_match=true
    Run Keyword If   '${llAddr}' == '${EMPTY}'   Open Connection  ${sanitizedHost}   timeout=10s
    ...       ELSE   Open Connection  ${sanitizedHost}%${iface}   timeout=10s
    Login               ${OA_USER}     ${OA_PASS}
    Write    ++diag--
    Read Until    diag>
    Write    efuse ${DEVICE} ${BAY} ${ACTION}
    Write    q
    Close All Connections

OA CLI POWERON
    [Documentation]    issues an POWERON command to the given Device\Bay.
    ...   {DEVICE} = <SERVER | INTERCONNECT>
    ...   {BAY} = desired bay for given device  { ALL | <bay number> [{ , | - } <bay number>]}
    [Arguments]	       ${OA_HOST}    ${OA_USER}		${OA_PASS}    ${DEVICE}    ${BAY}   ${iface}=eth0
    Set Default Configuration        timeout=10s   loglevel=TRACE
    ${sanitizedHost} =   Get Variable Value   ${OA_HOST}
    ${sanitizedHost} =   Remove String Using Regexp   ${sanitizedHost}   (\\[|\\])
    ${llAddr} =   Get Lines Matching Regexp   ${sanitizedHost}   ^fe80:   partial_match=true
    ${output} =   Run Keyword If   '${llAddr}' == '${EMPTY}'   Open Connection  ${sanitizedHost}   timeout=1m
    ...       ELSE   Open Connection  ${sanitizedHost}%${iface}   timeout=1m
    ${output}=   Login               ${OA_USER}     ${OA_PASS}
    #${output}=   Write    POWERON ${DEVICE} ${BAY}   loglevel=TRACE
    ${stdout}    ${stderr}    ${rc}=    Execute Command    POWERON ${DEVICE} ${BAY}    return_stderr=True    return_rc=True
    ${output}=   Read   loglevel=TRACE
    Close All Connections

OA CLI POWEROFF
    [Documentation]    issues an POWEROFF command to the given Device\Bay.
    ...   {DEVICE} = <SERVER | INTERCONNECT>
    ...   {BAY} = desired bay for given device  { ALL | <bay number> [{ , | - } <bay number>]}
    [Arguments]	       ${OA_HOST}    ${OA_USER}		${OA_PASS}    ${DEVICE}    ${BAY}   ${iface}=eth0
    Set Default Configuration        timeout=10s   loglevel=TRACE
    ${sanitizedHost} =   Get Variable Value   ${OA_HOST}
    ${sanitizedHost} =   Remove String Using Regexp   ${sanitizedHost}   (\\[|\\])
    ${llAddr} =   Get Lines Matching Regexp   ${sanitizedHost}   ^fe80:   partial_match=true
    ${output} =   Run Keyword If   '${llAddr}' == '${EMPTY}'   Open Connection  ${sanitizedHost}   timeout=1m
    ...       ELSE   Open Connection  ${sanitizedHost}%${iface}   timeout=1m
    ${output}=   Login               ${OA_USER}     ${OA_PASS}
    #${output}=   Write    POWEROFF ${DEVICE} ${BAY}   loglevel=TRACE
    ${stdout}    ${stderr}    ${rc}=    Execute Command    POWEROFF ${DEVICE} ${BAY}    return_stderr=True    return_rc=True
    ${output}=   Read   loglevel=TRACE
    Close All Connections

Connect And Login OA
    [Documentation]    Log into OA and return the Connection's index #
    [Arguments]    ${OA_HOST}   ${OA_USER}   ${OA_PASS}
    ...   ${NUM_RETRY}=5   ${SLEEP_TIME}=30   ${iface}=eth0
    ${sanitizedHost} =   Get Variable Value   ${OA_HOST}
    ${sanitizedHost} =   Remove String Using Regexp   ${sanitizedHost}   (\\[|\\])
    ${llAddr} =   Get Lines Matching Regexp   ${sanitizedHost}   ^fe80:   partial_match=true
    : FOR   ${retry}   IN RANGE   1   ${NUM_RETRY}+1
    \   ${index} =   Run Keyword If   '${llAddr}' == '${EMPTY}'   Open Connection  ${sanitizedHost}   timeout=10s
    ...       ELSE   Open Connection  ${sanitizedHost}%${iface}   timeout=10s
    \   ${output}=   Login    ${OA_USER}     ${OA_PASS}   delay=0.5s
    \   ${rc}=   Run Keyword and Return Status   Should Contain   ${output}   Copyright
    \   Run Keyword If   '${rc}'=='${True}'   Exit For Loop
    \   ...         ELSE   Sleep   ${SLEEP_TIME}
    \   Close Connection
    Run Keyword If   '${rc}'=='${False}'   Fail   
    ...   msg=Not able to log into OA after ${NUM_RETRY} retries with ${SLEEP_TIME} sleep time between each try
    Get Connections
    [Return]   ${index}
    
Execute OA CMD
    [Documentation]    Perform a generic OA command and return the outcome
    [Arguments]   ${OA_CMD}   ${NUM_RETRY}=3   ${SLEEP_TIME}=10
    : FOR   ${retry}   IN RANGE   1   ${NUM_RETRY}+1
    \   Write    ${OA_CMD}
    \   ${cmd_out}=    Read   delay=0.5s
    \   ${rc}=   Run Keyword and Return Status   Should Not Contain   ${cmd_out}   failed
    \   Run Keyword If   '${rc}'=='${True}'   Exit For Loop
    \   ...         ELSE   Sleep   ${SLEEP_TIME}
    Run Keyword If   '${rc}'=='${False}'   Fail   
    ...   msg=Target OA CLI Fail after ${NUM_RETRY} retries with ${SLEEP_TIME} sleep time between each try
    @{lines}=   Split to lines  ${cmd_out}
#    Log List   ${lines}
    [Return]   ${lines}

OA CLI CMDS
    [Documentation]    Perform a list of OA commands and return the outcomes
    ...   {OA_CMDS}= <show oa info|status <bay#>|network active>
    [Arguments]   ${OA_CMDS}   ${OA_HOST}   ${OA_USER}   ${OA_PASS}
    ...           ${NUM_RETRY}=3   ${SLEEP_TIME}=10
    ${results}=   Create List
    ${conn_index}=   Connect And Login OA   ${OA_HOST}   ${OA_USER}   ${OA_PASS}
    Get Connection
    :FOR  ${oa_cli}  IN  @{OA_CMDS}
    \   ${output}=   Execute OA CMD  ${oa_cli}   ${NUM_RETRY}   ${SLEEP_TIME}
    \   Append To List   ${results}   ${output}
#    \   Log   ${results}
    Close All Connections
    Get Connections
    [Return]   ${results}

OA CLI CMD WITH INTERACTIVE
    [Documentation]    Perform an OA command with expected user interacting
    ...   e.g.
    ...   {OA_CMD}= force takeover
    ...   {EXP1}= Are you sure you want to switch the roles of the Onboard Administrators?   
    ...   {CONF}= YES
    ...   {EXP2}= Logging out
    [Arguments]    ${OA_CMD}   ${OA_HOST}   ${OA_USER}   ${OA_PASS}
    ...   ${EXP1}=${EMPTY}   ${CONF}=${EMPTY}   ${EXP2}=${EMPTY}   ${SLEEP_TIME}=60
    Get Connections
    ${lindex}=   Connect And Login OA   ${OA_HOST}   ${OA_USER}   ${OA_PASS}
    Get Connection

    Write    ${OA_CMD}
    ${output}=   Run Keyword Unless   '${EXP1}'=='${EMPTY}'   Read Until   ${EXP1}
    Run Keyword Unless   '${EXP1}'=='${EMPTY}'   Should Contain   ${output}   ${EXP1}   
    ...   msg=Did not get the expected prompt ${EXP1}   values=False

    ${output}=   Run Keyword Unless   '${CONF}'=='${EMPTY}'    Write    ${CONF}

    ${stdout}=   Run Keyword Unless   '${EXP2}'=='${EMPTY}'   Read Until   ${EXP2}
    Run Keyword Unless   '${EXP2}'=='${EMPTY}'   Should Contain   ${stdout}   ${EXP2}   
    ...   msg=Did not get the expected ${CONF}   values=False

    Sleep   ${SLEEP_TIME}
    Close All Connections
    Get Connections

