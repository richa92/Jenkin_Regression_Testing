*** Settings ***
Library				BuiltIn
Library		        SSHLibrary

*** Keywords ***
#######################################
# LOGGING
#######################################
Open Connection And Log In
    [Documentation]     Opens an SSH session to an appliance and logs in
    [Arguments]         ${SSH_HOST}=localhost   ${SSH_USER}=root   ${SSH_PASS}=hpvse1   ${iface}=eth0
    ${sanitizedHost} =   Get Variable Value   ${SSH_HOST}
    ${sanitizedHost} =   Remove String Using Regexp   ${sanitizedHost}   (\\[|\\])
    ${llAddr} =   Get Lines Matching Regexp   ${sanitizedHost}   ^fe80:   partial_match=true
    Run Keyword If   '${llAddr}' == '${EMPTY}'   Open Connection  ${sanitizedHost}   timeout=180s
    ...       ELSE   Open Connection  ${sanitizedHost}%${iface}   timeout=180s
    Run Keyword If	    '${SSH_PASS}' is ${null}      Set Suite variable  ${SSH_PASS}     hpvse1
    Login               ${SSH_USER}     ${SSH_PASS}

Get Current CiDebug Log
    [Documentation]     Returns the latest ciDebug log file (the current log)
    [Arguments]      ${LOG}=/ci/logs/ciDebug.*
    ${LATEST_LOG_FILE}=  Execute Command  ls \-r ${LOG} | head \-1
    [return]  ${LATEST_LOG_FILE}

Write To ciDebug Log
    [Documentation]    Writes data to the current ciDebug log on the OV appliance.
    ...                No data is provided as an argument, the the current SUITE_NAME and TEST_NAME are logged
    [Arguments]	       ${TEXT_TO_LOG}=${null}      ${SSH_HOST}=${APPLIANCE_IP}   ${iface}=eth0
    Log Variables
    ${TEXT_TO_LOG}    Set Variable if     '${TEXT_TO_LOG}' == '${null}'     [${SUITE_NAME}:${TEST_NAME}]   ${TEXT_TO_LOG}
    Open Connection And Log In      ${SSH_HOST}   iface=${iface}
    ${LOG}=   Get Current CiDebug Log
    ${rc}=    Execute Command    echo "\n#### ${TEXT_TO_LOG}\n" >> ${LOG}     return_stdout=False    return_rc=True
    Should Be Equal    ${rc}    ${0}
    Close All Connections

Get Test Errors from ciDebug Log
    [Documentation]    Reads lines between ${STARTSTRING} and ${ENDSTRING} from current ciDebug log on the OV appliance,
    ...     and then greps the output for terms in ${FILTER}
    ...     example:   Run Keyword and Ignore Error    ${ERRORS} =    Get Test Errors from ciDebug Log     ${TEST_NAME}
    [Arguments]	       ${STARTSTRING}     ${ENDSTRING}=####   ${FILTER}='ERROR\\|exception\\|Exception\\|rollback\\|jdbc\\|Error|'   ${iface}=eth0
    Open Connection And Log In      ${SSH_HOST}   iface=${iface}
    ${LOG}=       Get Current CiDebug Log
    ${COMMAND}=   Set Variable   sed -n '/${STARTSTRING}/, /${ENDSTRING}/p' ${LOG} | grep ${FILTER}
    ${rc}=        Execute Command    ${COMMAND}     return_stdout=True    return_rc=True
    Close All Connections
    [Return]    ${rc}

