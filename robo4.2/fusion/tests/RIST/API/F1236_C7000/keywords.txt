*** Settings ***
Library				RoboGalaxyLibrary
Library				FusionLibrary
Library				OperatingSystem
Library				BuiltIn
Library				Collections
Library				XML
Library		        SSHLibrary
Library				String
Library				Dialogs
Resource             ./../../../../Resources/api/fusion_api_resource.txt

*** Keywords ***
Clear Test Environtment
    Log to console and logfile  Power Off Servers and remove all profiles
    Run Keyword And Ignore Error    Wait For ALL Server Profile In Normal State
    Run Keyword And Ignore Error    Power off ALL servers   PressAndHold
    Run Keyword And Ignore Error    Wait For ALL Servers Complete Refresh
    Run Keyword And Ignore Error    Remove All Server Profiles

Update server firmware when create profile
    [Arguments]    ${profile}=${createGen8Profiles}     ${baseLine}=${SNAP6SPP}    ${isForce}=${False}
    [Documentation]    Create server profile with firmware baseline
    Clear Test Environtment
    Log to console and logfile  Update server firmware with baseline ${baseLine} when create profile
    ${profilelist} =    Generate profile body   ${profile}   ${baseLine}     ${isForce}
    ${resps} =   Add Server Profiles from variable   ${profilelist}
    Validate Firmware Update Task   ${resps}

Validate Firmware Update Task
    [Arguments]    ${resps}
    [Documentation]    Validate firmware task complete
    Log to console and logfile  Validate firmware task complete
    :FOR    ${resp}    IN    @{resps}
    \    Log to console and logfile  ${resp}
    \    ${task} =    Wait For Task     ${resp}     100min    5s
    \    ${taskStatus} =    Get From Dictionary        ${task}     taskStatus
    \    ${taskState} =    Get From Dictionary        ${task}     taskState
    \    Log to console and logfile  ${taskStatus}
    \    Log to console and logfile  ${taskState}
    \    Should Match    ${taskState}    Completed

Generate profile body
    [Arguments]    ${profiles}    ${baseLine}    ${isForce}=${False}
    [Documentation]    Generate profile body
    ${profilelist} =    Create List
    :FOR    ${profile}    IN    @{profiles}
    \    ${hardware} =   Get from Dictionary    ${profile}    serverHardwareUri
    \    ${firmware} =     Get from Dictionary    ${profile}    firmware
    \    Set to Dictionary    ${firmware}    firmwareBaselineUri    ${baseLine}
    \    Set to Dictionary    ${firmware}    forceInstallFirmware    ${isForce}
    \    Set to Dictionary    ${profile}    firmware    ${firmware}
    \    append to list    ${profilelist}    ${profile}
    \    Log to console and logfile      Creat profile body for ${hardware}
    [Return]    ${profilelist}

Validate Profile Firmware Version
    [Arguments]    ${profiles}  ${baseline}
    [Documentation]    Validate if firmware update success
    :FOR    ${profile}    IN    @{profiles}
    \    ${hardware} =   Get from Dictionary    ${profile}    serverHardwareUri
    \    ${model} =   Get from Dictionary    ${profile}    description
    \    Log to console and logfile  ${hardware}
    \    Power On Server    ${hardware}
    \    ${expectedFirmwares} =     Get from Dictionary    ${firmwares}    ${baseline}
    \    ${expectedFirmware} =     Get from Dictionary    ${expectedFirmwares}    ${model}
    \    Wait Until Keyword Succeeds    600s    15s    Server Hardware Firmware Version Correct    ${hardware}    ${expectedFirmware}
    \    Log to console and logfile  Firmware update success!

Server Hardware Firmware Version Correct
    [Arguments]    ${hardware}    ${expectedFirmware}
    Set Log Level    TRACE
    ${firmware} =   Get Server Hardware Firmware    ${hardware}
    Validate Firmware Version   ${firmware}     ${expectedFirmware}

Validate Firmware Version
    [Arguments]    ${firmware}  ${expectedFirmware}
    [Documentation]    Check if firmware version update to expected value
    Log to console and logfile  Check if firmware version update to expected value
    Log to console and logfile  Actual firmware:\n${firmware}
    Log to console and logfile  Expected firmware:\n${expectedFirmware}
    :FOR    ${checkFirmware}    IN    @{expectedFirmware}
    \    ${name} =   Get from Dictionary     ${checkFirmware}    componentName
    \    ${version} =   Get from Dictionary  ${checkFirmware}    componentVersion
    \    ${hardwareVersion} =    Search Firmware Version     ${firmware}     ${name}
    \    Should Be Equal     ${hardwareVersion}  ${version}  Firmware update failed,${name} should be ${version}, but actually ${hardwareVersion}
    \    Log to console and logfile  ${name} validate success

Search Firmware Version
    [Arguments]    ${firmware}  ${name}
    :FOR    ${component}    IN    @{firmware}
    \    ${componentName} =   Get from Dictionary    ${component}    componentName
    \    ${version} =   Get from Dictionary  ${component}    componentVersion
    \    Return From Keyword If    "${name}"=="${componentName}"     ${version}
    [Return]    Firmware ${name} not found!

Clear Base Resources
    [Documentation]   Delete base resources
    Log To Console And Logfile    \nCleaning test environment before test...
    Power off ALL servers    control=PressAndHold
    Remove All Server Profiles
    Remove All Server Profile Templates
    Remove All LEs           ${True}
    Remove All Enclosure Groups    ${True}
    Remove All LIGs
    Remove All Firmware Bundles
