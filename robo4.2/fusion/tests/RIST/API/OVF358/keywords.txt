*** Settings ***
Library				RoboGalaxyLibrary
Library				FusionLibrary
Library				OperatingSystem
Library				BuiltIn
Library				Collections
Library				XML
Library		        SSHLibrary
Library				String
Library				Dialogs
Resource            ../../../../Resources/api/fusion_api_resource.txt
Resource            ../global_variables.robot

*** Keywords ***
Generate Certificate Payload
    [Documentation]   Generate Certificate Payload
    [Arguments]       ${HOST}  ${payload}  ${aliasname}=${None}
    ${cert} =    Fusion Api Get Remote Certificate     ${HOST}
    ${body} =    Copy Dictionary    ${payload}
    Set To Dictionary    ${body}    base64SSLCertData    ${cert["base64Data"]}
    Run Keyword If  '${aliasname}' != '${None}'   set to dictionary    ${body}  aliasName   ${aliasname}
    [Return]    ${body}

Verify Client Certificate Exist By Aliasname
    [Documentation]  Verify if Client certificate is existed by GET /rest/certifciates/https/remote/aliasname
    [Arguments]      ${aliasname}   ${expected}=${True}
    ${resp}=  Fusion Api Get Client Certificate  ${aliasname}
    Run Keyword If  ${expected} == ${True}      should be equal as integers   ${resp['status_code']}  200   msg="${aliasname} does not exist"
    Run Keyword If  ${expected}!=${True}   should not be equal as integers ${resp['status_code']}  200   msg="${aliasname} was already existd"
    Log To Console And Logfile   certificate is existed:${expected}

Verify Client Certificate Exist In Baseappliancejks
    [Documentation]  Verify Client server certificate is in baseappliancejks
    [Arguments]     ${HOST}  ${expected}=${True}
    ${resp}=   Fusion Api Get Remote Certificate  ${HOST}
    ${command}=  Set Variable    /usr/bin/keytool -list -keystore all-certificates.bks  -storetype BCFKS -storepass sslkeystorepwd | grep -c -i ${resp['certificateDetails'][0]['sha1Fingerprint']}
    ${output}=  Execute SSH Command   ${command}
    Run Keyword If  ${expected} != ${True}     should be equal as integers  ${output[26:27]}    0    msg= "Remote server certificate was existed in all-certificates.bks"
    Run Keyword If  ${expected} == ${True}     should be equal as integers  ${output[26:27]}    1    msg= "Remote server certificate was not existed in all-certificates.bks"
    Log To Console And Logfile  ${HOST} certificate was existed in all-certificates.bks:${expected}

Verify Client Certificate Trust Status
     [Documentation]  Verify client server certificate trust status as expected, default is True, else is False
     [Arguments]      ${HOST}  ${expected}=${True}
     ${resp}=   Fusion Api Get Client Certificate  ${HOST}
     Run Keyword If  ${expected} != ${True}    should be equal as strings    ${resp['status']}  false      msg=certificate was still in trust store
     Run Keyword If  ${expected} == ${True}    should be equal as strings    ${resp['status']}  Valid      msg= certificate was not trusted
     Log To Console and Logfile  ${HOST} trust status is ${expected}

Set Discover Power Device Body From Variable
	[Documentation]	Set discover power device body from a variable which contains a list of dicts with the entire payload
	[Arguments]		${POWER_DEVICE_BODY}    ${hostname}     ${username}="admin"    ${password}="admin"    ${force}=False
	Log  	\n-Set Discover Power Device     console=True
    ${request_body} =    Create List
	:FOR	${POWER_DEVICE_BODY}	IN	@{POWER_DEVICE_BODY}
	\		${body} = 	Set To Dictionary    ${POWER_DEVICE_BODY}    hostname    ${hostname}
	\       ${body} = 	Set To Dictionary    ${POWER_DEVICE_BODY}    username    ${username}
	\       ${body} = 	Set To Dictionary    ${POWER_DEVICE_BODY}    password    ${password}
	\       ${body} = 	Set To Dictionary    ${POWER_DEVICE_BODY}    force    ${force}
	\       Append To List  ${request_body}  ${body}
    \       log to console        \n this request_body is ${request_body}
	[Return]    ${request_body}
