*** Settings ***
Library                        RoboGalaxyLibrary
Library                        FusionLibrary
Library                        OperatingSystem
Library                        BuiltIn
Library                        Collections
Library                        XML
Library                        SSHLibrary
Library                        String
Library                        Dialogs
Resource             ./../../../../Resources/api/fusion_api_resource.txt
Resource             ../global_variables.robot

*** Keywords ***
Verify Firmwares Exist
    [Arguments]    ${ExpectedFirmware}    ${Existed}=${TRUE}
    [Documentation]    Verify Firmwares Exist
    Log    Verifying Firmware Exist is ${Existed}...    console=true
    ${resp} =    Fusion Api Get Firmware Driver
    Return From Keyword If  ${resp['count']}==0  Firmware Not Found
    ${FirmwareVersions} =  Create List
    :FOR        ${firmware}        IN        @{resp['members']}
    \   Append To List  ${FirmwareVersions}    ${firmware['version']}
    :FOR    ${FirmwareVersion}   IN  @{ExpectedFirmware}
    \   Run Keyword If    ${Existed}==${TRUE}    Should Contain   ${FirmwareVersions}   ${FirmwareVersion}
    \   ...    ELSE    Should Not Contain   ${FirmwareVersions}   ${FirmwareVersion}
    \   Log    Firmware repo verified: ${FirmwareVersion}    console=true

Verify Firmwares Status
    [Arguments]                ${firmwares}    ${status}
    [Documentation]    Verify Firmwares Status
    Log    Verifying Firmare Status...    console=true
    :FOR   ${fwVersion}   IN  @{firmwares}
    \   Log    Firmware bundle version is ${fwversion}    console=true
    \   ${uri} =    Get Firmware Bundle By Version  ${fwVersion}
    \   ${firmware} =    Get Firmware Bundle   ${uri}
    \   Should Be Equal    ${firmware['status']}   ${status}    msg=${firmware['name']} status verify failed

Generate Scope body
    [Arguments]    ${name}    ${add_resources}=${None}    ${remove_resources}=${None}
    [Documentation]    Generate Scope body
    ${scope} =    Copy Dictionary    ${CreateScope}
    Set to Dictionary    ${scope}    name    ${name}
    Run Keyword If    ${add_resources}!=${None}    Set to Dictionary    ${scope}    addedResourceUris    ${add_resources}
    Run Keyword If    ${remove_resources}!=${None}    Set to Dictionary    ${scope}    removedResourceUris    ${remove_resources}
    [Return]    ${scope}

Catenate List
    [Arguments]    ${list}    ${separator}=,
    [Documentation]    Catenate List
    ${rt} =    Set Variable    ${Empty}
    :FOR    ${item}    IN    @{list}
    \    ${rt} =    Set Variable    ${rt}${item}${separator}
    [Return]    ${rt}

Remove Firmware Bundle By Name
    [Arguments]    ${name}
    [Documentation]    Remove Firmware Bundle By Name
    ${spp} =    Get Firmware Bundle URI    ${name}
    ${resp} =    Remove Firmware Bundle    ${spp}
    Wait For Task2    ${resp}

Clear Firmware Bundle
    [Documentation]   Clear All Firmware Bundle and ignore error
    Run Keyword And Ignore Error    Fusion Api Logout Appliance
    Fusion Api Login Appliance         ${APPLIANCE_IP}        ${admin_credentials}
    Run Keyword And Ignore Error    Remove All Firmware Bundles

Generate Firmware Body
    [Arguments]    ${baseline}=${FirmwareVersion}    ${type}=${online_type}    ${force}=${False}
    [Documentation]    Generate Firmware body
    ${payload} =    Copy Dictionary    ${firmware_payload}
    ${firmware_uri} =    Get Firmware Bundle By Version    ${baseline}
    Set to Dictionary    ${payload}    firmwareBaselineUri    ${firmware_uri}
    Set to Dictionary    ${payload}    firmwareInstallType    ${type}
    Set to Dictionary    ${payload}    forceInstallFirmware    ${force}
    [Return]    ${payload}

Add Server Profile Template With Scopes
    [Arguments]    ${profile_template}    ${scopes}
    [Documentation]    Add Server Profile Template With Scopes
    ${scope_names} =    Run Keyword For List    ${scopes}    Add Scope Type
    ${payload} =    Set To Dictionary    ${profile_template}    initialScopeUris    ${scope_names}
    ${resp} =    Add Server Profile Template    ${payload}
    [Return]    ${resp}
    
Add Server Profile With Scopes
    [Arguments]    ${profile}    ${scopes}
    [Documentation]    Add Server Profile With Scopes
    ${scope_names} =    Run Keyword For List    ${scopes}    Add Scope Type
    ${payload} =    Set To Dictionary    ${profile}    initialScopeUris    ${scope_names}
    ${resp} =    Add Server Profile    ${payload}
    [Return]    ${resp}

Add Scope Type
    [Arguments]    ${scope}
    [Documentation]    Add Scope Type
    ${uri} =    Set Variable    Scope:${scope}
    [Return]    ${uri}