*** Settings ***
Library              FusionLibrary
Library              RoboGalaxyLibrary
Library              OperatingSystem
Library              BuiltIn
Library              copy
Library              Collections
Library              String
Library              json
Variables            ./Regression_Data.py
Resource             ../../../../Resources/api/fusion_api_resource.txt

*** Variables ***
${APPLIANCE_IP}             unknown

*** Keywords ***
########################################### Create / Delete / Update/ Get Compatibility Report ###########################################
Create Compatibility Report:
    [Documentation]    Create a FIPS/CNSA compatibility report
    [Arguments]  ${mode}
    ${request_body}=    Create Dictionary  targetMode=${mode}
    ${response}=    Fusion Api Create Security Compatibility Report  ${request_body}
    Wait For Task2  ${response}  timeout=300

Update Compatibility Report:
    [Documentation]    Update a FIPS/CNSA compatibility report
    [Arguments]  ${mode}
    ${request_body}=    Create Dictionary  targetMode=${mode}
    ${response}=    Fusion Api Update Security Compatibility Report  ${request_body}
    Wait For Task2  ${response}  timeout=300

Delete A Compatibility Report
    [Documentation]    Delete a compatibility report
    ${response}=    Fusion Api Delete Security Compatibility Report
    Wait For Task2  ${response}

Delete A Compatibility Report And Ignore Error
    [Documentation]    Delete A Compatibility Report And Ignore Error
    ${response}=    Fusion Api Delete Security Compatibility Report
    Run Keyword And Ignore Error    Wait For Task2  ${response}

Get A Compatibility Report
    [Documentation]    Get a compatibility report
    ${response}=    Fusion Api Get Security Compatibility Report
    [Return]  ${response}

Fetch Metadata Of The Non-Compatibility Report
    [Documentation]    Fetch Metadata of the Non-Compatibility Report
    ${response}=    Fusion Api Get Security Compatibility Report  uri=/rest/security-standards/compatibility-report  param=?metadata=true
    [Return]  ${response}

########################################### Below is the compatibility report check point ###########################################
Check Compatibility Report: Report Is For Mode:
    [Documentation]    Check Compatibility Report: if it is a FIPS or CNSA report
    [Arguments]    ${mode}  ${report_response}
    Log To Console  \nCheck Compatibility Report: It's A ${mode} Report
    ${report_mode}=  Get From Dictionary  ${report_response}  targetMode
    Should Be Equal As Strings  ${report_mode}  ${mode}

Check Compatibility Report: Total Count Is Correct
    [Documentation]    Check Compatibility Report: total count of non compliant items is correct
    [Arguments]    ${report_response}  ${expected_count}
    Log To Console  \nCheck Compatibility Report: total count of non compliant items is correct
    ${total}=  Get From Dictionary  ${report_response}  total
    Should Be Equal As Strings  ${total}  ${expected_count}

Check Compatibility Report: Not Compliant Item:
    [Documentation]    Check Compatibility Report: Not Compliant Item:
    ...                 item= WEBSERVER CERTIFICATE | RABBITMQ SERVER CERTIFICATE | RABBITMQ CLIENT CERTIFICATE
    ...                 Power Delivery Devices | Remote Support | All Storage Devices | Firmware drivers | External repositories
    ...                 expected_string is nonCompatibilityDetails from the report_response
    [Arguments]    ${item}  ${report_response}  ${expected_string}
    Log To Console  \nCheck Compatibility Report: ${item} Is Not Compliant
    ${report_members}=  Get From Dictionary  ${report_response}  members
    :FOR    ${count}    IN  @{report_members}
    \       ${deviceName}=                  Get From Dictionary  ${count}  deviceName
    \       ${nonCompatibilityDetails}=     Get From Dictionary  ${count}  nonCompatibilityDetails
    \       Run Keyword And Return if   '${deviceName}'=='${item}'    Should Be Equal As Strings  ${nonCompatibilityDetails}  ${nonCompatibilityDetails}
    Fail  Cannot find the specific memeber in Dictionary

Check Compatibility Report: Compliant Item:
    [Documentation]    Check Compatibility Report: Compliant Item:
    ...                 item= WEBSERVER CERTIFICATE | RABBITMQ SERVER CERTIFICATE | RABBITMQ CLIENT CERTIFICATE
    ...                 Power Delivery Devices | Remote Support | All Storage Devices | Firmware drivers | External repositories
    [Arguments]    ${item}  ${report_response}
    Log To Console  \nCheck Compatibility Report: ${item} Should Be Compliant
    ${report_members}=  Get From Dictionary  ${report_response}  members
    :FOR    ${count}    IN    @{report_members}
    \       ${deviceName}=                  Get From Dictionary  ${count}  deviceName
    \       ${nonCompatibilityDetails}=     Get From Dictionary  ${count}  nonCompatibilityDetails
    \       Run Keyword And Return if   '${deviceName}'=='${item}'    Fail  find the specific memeber in Dictionary${\n}${deviceName}${\n}${nonCompatibilityDetails}

########################################### Re-usable cases for basic compatibility report check ###########################################
Create Compatibility Report And Do The Basic Check Point
    [Documentation]    In FIPS mode, do a basic compatibility report check
    Create Compatibility Report:  FIPS
    ${report_response}=    Get A Compatibility Report
    Run Keyword And Continue On Failure    Check Compatibility Report: Report Is For Mode:  FIPS  ${report_response}
#    Run Keyword And Continue On Failure    Check Compatibility Report: Not Compliant Item:  Power Delivery Devices  ${report_response}  ${expected_Power_Delivery_Devices_nonCompatibilityDetails}
#    Run Keyword And Continue On Failure    Check Compatibility Report: Not Compliant Item:  All Storage Devices  ${report_response}  ${expected_All_Storage_Devices_nonCompatibilityDetails}
#    Run Keyword And Continue On Failure    Check Compatibility Report: Not Compliant Item:  Firmware drivers  ${report_response}  ${expected_Firmware_drivers_nonCompatibilityDetails}
#    Run Keyword And Continue On Failure    Check Compatibility Report: Not Compliant Item:  External repositories   ${report_response}  ${expected_External_repositories_nonCompatibilityDetails}
    Delete A Compatibility Report

    Create Compatibility Report:  CNSA
    ${report_response}=    Get A Compatibility Report
    Run Keyword And Continue On Failure    Check Compatibility Report: Report Is For Mode:  CNSA  ${report_response}
#    Run Keyword And Continue On Failure    Check Compatibility Report: Not Compliant Item:  Power Delivery Devices  ${report_response}  ${expected_Power_Delivery_Devices_nonCompatibilityDetails}
#    Run Keyword And Continue On Failure    Check Compatibility Report: Not Compliant Item:  All Storage Devices  ${report_response}  ${expected_All_Storage_Devices_nonCompatibilityDetails}
#    Run Keyword And Continue On Failure    Check Compatibility Report: Not Compliant Item:  Firmware drivers  ${report_response}  ${expected_Firmware_drivers_nonCompatibilityDetails}
#    Run Keyword And Continue On Failure    Check Compatibility Report: Not Compliant Item:  External repositories   ${report_response}  ${expected_External_repositories_nonCompatibilityDetails}
    Delete A Compatibility Report

Update Compatibility Report And Check Apache RabbitMQ Servers Are Not Compliant For Mode:
    [Documentation]  when apache and rabbitmq servers' certificates are changed to be not compliant to the target mode, check it in the compatibility report.
    [Arguments]  ${mode}
    Update Compatibility Report:  ${mode}
    ${report_response}=    Get A Compatibility Report
    Check Compatibility Report: Not Compliant Item:  WEBSERVER CERTIFICATE  ${report_response}  ${expected_WEBSERVER_CERTIFICATE_CAsigned_nonCompatibilityDetails}
    Check Compatibility Report: Not Compliant Item:  RABBITMQ SERVER CERTIFICATE  ${report_response}  ${expected_RABBITMQ_SERVER_CERTIFICATE_CAsigned_nonCompatibilityDetails}

Update Compatibility Report And Check Apache RabbitMQ Servers Are Compliant For Mode:
    [Documentation]  when apache and rabbitmq servers' certificates are changed to be compliant to the target mode, check it in the compatibility report.
    [Arguments]  ${mode}
    Update Compatibility Report:  ${mode}
    ${report_response}=    Get A Compatibility Report
    Check Compatibility Report: Compliant Item:  WEBSERVER CERTIFICATE  ${report_response}
    Check Compatibility Report: Compliant Item:  RABBITMQ SERVER CERTIFICATE  ${report_response}

########################################### RabbitMQ Server/Client ###########################################
Generate Default RabbitMQ Client Certificate
    [Documentation]    Generate Default RabbitMQ Client Certificate
    ${body_rabbitmq_client}    Create Dictionary  commonName=default  type=RabbitMqClientCertV2
    Fusion Api Create Rabbitmq Client Certificate  ${body_rabbitmq_client}

Get Rabbitmq Client Certificate
    [Documentation]  return the default base64 rabbitmq client certificate
    ${response}=    Fusion Api Get Rabbitmq Client Certificate  param=/default
    ${cert}=    Get From Dictionary  ${response}  base64SSLCertData
    [Return]   ${cert}

Get SSL Server Certificate
    [Documentation]  get the general SSL certificate from server by openssl
    [Arguments]  ${ip}  ${port}
    ${cert}=    Run Ssh Cmd  15.114.112.61  root  hpvse1  /root/automation_tools/sctest/get_server_cert.sh ${ip} ${port}
    [Return]   ${cert}
