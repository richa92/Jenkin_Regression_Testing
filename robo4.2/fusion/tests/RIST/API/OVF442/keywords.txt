*** Settings ***
Library              FusionLibrary
Library              RoboGalaxyLibrary
Library              OperatingSystem
Library              BuiltIn
Library              copy
Library              Collections
Library              String
Resource             ../../../../Resources/api/fusion_api_resource.txt
Resource            ../global_variables.robot

*** Keywords ***
HA Node State Should Be OK
    [Documentation]    Check the HA node state, it should be OK
    [Arguments]  ${role}
    ${resp}=    Get Specified Node from HA Nodes  ROLE=${role}
    Log  Now state is: ${resp["state"]}
    Should Be Equal As Strings    ${resp["state"]}  OK

Wait For Appliance Became HA Cluster
    [Documentation]    Wait for OV beca to HA cluster from single node
    [Arguments]    ${role}  ${timeout}=60m  ${interval}=10s
    Wait Until Keyword Succeeds  ${timeout}  ${interval}  HA Node State Should Be OK  ${role}

Ensure Appliance is HA Cluster
    [Documentation]    Get HA nodes counts
    Log    Check HA cluster counts
    ${resp}=    Fusion Api Get HA Nodes
    ${counts}=  Set Variable  ${resp["count"]}
    Run Keyword If    ${counts} != 2
    ...               Fatal Error  msg=The ENV isn't a HA Cluster, stops the whole test execution

Ensure CIM Can be Ping Through
    [Documentation]    Verify both of CIMs can be pinged.
    Log    Verify CIM, both of CIMs can be pinged.
    :FOR    ${host}    IN    @{CIM_HOSTS.keys()}
    \       ${return}=    Run    ping ${CIM_HOSTS["${host}"]}
    \       ${match}  ${value}=   Run Keyword And Ignore Error
    \       ...                  Should Contain  ${return}  Ping request could not find host ${CIM_HOSTS["${host}"]}
    \       Run Keyword If    '${match}' == 'PASS'
    \       ...     Fatal Error  msg=The CIM can not be ping through, stops the whole test execution

Refactor DTO If CIM1 Is Standby Node
    [Documentation]    Refactor DTO If CIM1 Is Standby Node
    Log   Check the "CN75120D7B, appliance bay 1" is the active node
    ${resp}=    Fusion Api Get HA Nodes
    :FOR   ${node}    IN     @{resp["members"]}
    \      Run Keyword If    "${node["name"]}" == "${cim1_name}" and "${node["role"]}" == "Standby"
    \      ...               Set Global Variable  &{MAINTENANCE_CREDENTIALS}  &{MAINTENANCE_CREDENTIALS_BAK}
    \      Run Keyword If    "${node["name"]}" == "${cim1_name}" and "${node["role"]}" == "Standby"
    \      ...               Set Global Variable  &{CIM_HOSTS}  &{CIM_HOSTS_BAK}

 Config CIM iLo
    [Documentation]    Configuration of the CIM iLo
    [Arguments]    ${IssuerIP}    ${ssh_credentials}
    Open Connection    ${IssuerIP}
    Login    ${ssh_credentials["username"]}    ${ssh_credentials["password"]}
    Log    ${Config_CIM_iLo_commands['part1']}
    Set Client Configuration    prompt=#
    SSHLibrary.Write    '\r\n'
    SSHLibrary.Write    ${Config_CIM_iLo_commands['part1']}
    Sleep    20s
    ${output}=    Read Until Prompt
    SSHLibrary.Write    ${Config_CIM_iLo_commands['part2']}
    Sleep    20s
    ${output}=    Read Until Prompt
    SSHLibrary.Write    ${Config_CIM_iLo_commands['part3']}
    Sleep    50s
    ${output}=    Read Until Prompt
    SSHLibrary.Write    ${Config_CIM_iLo_commands['part4']}
    Sleep    30s
    ${output}=    Read Until Prompt
    SSHLibrary.Write    ${Config_CIM_iLo_commands['part5']}
    Sleep    30s
    ${output}=    Read Until Prompt
    Close Connection
