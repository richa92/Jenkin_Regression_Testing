*** Settings ***
Library    RoboGalaxyLibrary
Library    FusionLibrary
Library    OperatingSystem
Library    BuiltIn
Library    Collections
Library    XML
Library    SSHLibrary
Library    String
Library    Dialogs
Resource    ../../../../Resources/api/fusion_api_resource.txt
Resource    ../global_variables.robot

*** Keywords ***

Clear Certs
    [Documentation]   Clear all ca and server certificates by aliasname
    [Arguments]      ${certType0}  ${caliasName0}  ${certType1}=None  ${caliasName1}=None
    Log    \nRemoving external ca and server certificates from OneView Trust Store    console=Yes
    Run Keyword And Ignore Error    Dlete Cert  ${certType0}  ${caliasName0}
    Run Keyword And Ignore Error    Dlete Cert  ${certType1}  ${caliasName1}

Dlete Cert
    [Documentation]   Delete ca and server certificates by aliasname
    [Arguments]      ${certType}  ${aliasName}
    ${resp}=      Run Keyword If   '${certType}' == 'server'  Fusion Api Delete Server Certificate  ${aliasName}
    ...               ELSE IF  '${certType}' == 'ca'       fusion api remove external ca certificates   ${aliasName}
    ...               ELSE    Log  No cert.  console=True
    Run Keyword And Ignore Error     Wait For Task2  ${resp}      300     10

Verify Invalid Aliasname Error
    [Documentation]   Verify Invalid Aliasname Fail In Legacy,Fips,CNSA Mode
    [Arguments]        ${resp}  ${cert_type}
    Run Keyword If    '${SECURITY_MODE}' == 'LEGACY'    Verify Task Fail For Invalid Aliasname In Legacy    ${resp}
    ...    ELSE IF    '${cert_type}' == 'server'    Verify Task Fail For Invalid Server Aliasname Not In Legacy    ${resp}
    ...    ELSE    Verify Task Fail For Invalid Ca Aliasname Not In Legacy    ${resp}

Verify Task Fail For Invalid Aliasname In Legacy
    [Documentation]   Verify Task Fail For Invalid Aliasname In Legacy
    [Arguments]      ${resp}
    Wait For Task2    ${resp}    50    5     PASS=Error    errorMessage=Invalid_Cert_Alias_Name

Verify Task Fail For Invalid Ca Aliasname Not In Legacy
    [Documentation]   Verify Task Fail For Invalid Ca Aliasname Not In Legacy
    [Arguments]      ${resp}
    Wait For Task2    ${resp}    50    5     PASS=Error    errorMessage=Invalid_Cert_Alias_Name_FIPS_CNSA_CA
Verify Task Fail For Invalid Server Aliasname Not In Legacy
    [Documentation]   Verify Task Fail For Invalid Server Aliasname Not In Legacy
    [Arguments]      ${resp}
    Wait For Task2    ${resp}    50    5     PASS=Error    errorMessage=Invalid_Cert_Alias_Name_FIPS_CNSA_SERVER

Set Certificate
    [Documentation]   Set Certificate With Aliasname And Base64Data
    [Arguments]      ${certdata}  ${aliasname}
    Set To Dictionary    ${CERTIFICATE['certificateDetails'][0]}    base64Data    ${certdata}
    Set to Dictionary    ${CERTIFICATE['certificateDetails'][0]}    aliasName    ${aliasname}
    [Return]    ${CERTIFICATE}

Set Server Certificate Chain
    [Documentation]   Set Server Certificate Chain With Aliasname And Base64Data
    [Arguments]      ${leafcert}  ${aliasnameleaf}  ${intercert}  ${aliasnameinter}  ${rootcert}  ${aliasnameroot}
    Set To Dictionary    ${SERVER_CERTIFICATE_CHAIN['certificateDetails'][0]}    base64Data    ${leafcert}
    Set to Dictionary    ${SERVER_CERTIFICATE_CHAIN['certificateDetails'][0]}    aliasName   ${aliasnameleaf}
    Set To Dictionary    ${SERVER_CERTIFICATE_CHAIN['certificateDetails'][1]}    base64Data    ${intercert}
    Set to Dictionary    ${SERVER_CERTIFICATE_CHAIN['certificateDetails'][1]}    aliasName   ${aliasnameinter}
    Set To Dictionary    ${SERVER_CERTIFICATE_CHAIN['certificateDetails'][2]}    base64Data    ${rootcert}
    Set to Dictionary    ${SERVER_CERTIFICATE_CHAIN['certificateDetails'][2]}    aliasName   ${aliasnameroot}
    [Return]    ${SERVER_CERTIFICATE_CHAIN}

Set Ca Certificate
    [Documentation]   Set CA Certificate With Aliasname And Base64Data
    [Arguments]      ${certdata}  ${aliasname}
    Set To Dictionary    ${CA_CERTIFICATE['members'][0]['certificateDetails']}    base64Data    ${certdata}
    Set to Dictionary    ${CA_CERTIFICATE['members'][0]['certificateDetails']}    aliasName   ${aliasname}
    [Return]    ${CA_CERTIFICATE}
