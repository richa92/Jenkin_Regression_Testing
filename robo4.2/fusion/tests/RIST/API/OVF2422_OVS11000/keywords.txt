*** Settings ***
Library        RoboGalaxyLibrary
Library        FusionLibrary
Library        OperatingSystem
Library        BuiltIn
Library        Collections
Library        SSHLibrary
Library        String
Library        robot.api.logger
Resource        ./../global_variables.robot
Resource        ./../../../../Resources/api/fusion_api_resource.txt
Variables        ${DATA}


*** Variables ***
${APPLIANCE_IP}    ${None}
${DATA}    ${DATA_FILE}


*** Keywords ***
Clear Testing Environment
    [Documentation]    Clear testing environment
    [Arguments]    ${certs}
    Run Keyword And Ignore Error    Delete Multiple CA Certificates    ${certs}

Validate Certificate validation Config As Expected
    [Documentation]    Get certificate validation configuration and match with expected
    [Arguments]    ${expected_config}
    Log    Getting OneView certificate validation configuration    console=Yes
    ${actual_config} =  Fusion api get certificate validation configuration
    ${actual_flags} =  Get From Dictionary    ${actual_config}    certValidationConfig
    ${expected_flags} =  Get From Dictionary    ${expected_config}    certValidationConfig
    Log    The actual config:${actual_flags}    console=Yes
    Log    The expected config:${expected_flags}    console=Yes
    Dictionaries Should Be Equal    ${actual_flags}    ${expected_flags}
    Log    OneView Certificate Validation Configurations are same to the expected    console=Yes
    [Return]    ${True}

Update Certificate Validation Configuration
    [Documentation]    Update certificate validation configuration and wait for appliance rebooting
    [Arguments]    ${certValidationConfig}
    Log    \nUpdating OneView certificate validation configuration    console=Yes
    ${resp} =  Fusion api update certificate validation configuration    ${certValidationConfig}
    Return from keyword if  ${resp['status_code']}!=202    ${None}
    Log    Wating for OneView state to change to be STARTING    console=Yes
    Wait For Appliance State To Be Expected State  ExpectedState=STARTING
    Log    Wating for OneView state to change to be OK    console=Yes
    Wait For Appliance State To Be Expected State    ExpectedState=OK
    [Return]    ${True}

