*** Settings ***
Library        RoboGalaxyLibrary
Library        FusionLibrary
Library        OperatingSystem
Library        BuiltIn
Library        Collections
Library        XML
Library        SSHLibrary
Library        String
Library        Dialogs
Resource       ../../../../Resources/api/fusion_api_resource.txt

*** Keywords ***
Generate Certificate Payload
    [Documentation]   Generate Certificate Payload
    [Arguments]    ${HOST}  ${payload}  ${aliasname}=${None}
    ${cert} =    Fusion Api Get Remote Certificate     ${HOST}
    ${body} =    Copy Dictionary    ${payload}
    Set To Dictionary    ${body['certificateDetails'][0]}    base64Data    ${cert['certificateDetails'][0]['base64Data']}
    Run Keyword If  '${aliasname}' != '${None}'   set to dictionary    ${body['certificateDetails'][0]}  aliasName   ${aliasname}
    [Return]    ${body}

Generate Certificate Chain Payload
    [Documentation]    Gnerate certificate chain payload
    [Arguments]    ${HOST}    ${payload}    ${ROOT_CRT}    ${aliasname}=${None}
    Log    Generate certificate payload    console=True
    ${cert} =    Fusion Api Get Remote Certificate     ${HOST}
    ${body} =    Copy Dictionary    ${payload}
    Set To Dictionary    ${body['certificateDetails'][0]}   base64Data    ${ROOT_CRT}
    set to dictionary    ${body['certificateDetails'][0]}   aliasName    ${aliasname}
    set to dictionary    ${body['certificateDetails'][1]}   base64Data    ${cert['certificateDetails'][0]['base64Data']}
    [Return]    ${body}

Generate Invalid Certificate Payload
    [Documentation]   Generate Certificate Payload
    [Arguments]    ${HOST}  ${payload}  ${aliasname}=${None}
    ${cert} =    Fusion Api Get Remote Certificate     ${HOST}
    ${body} =    Copy Dictionary    ${payload}
    Set To Dictionary    ${body}    base64SSLCertData    invalid-certificate-content
    Log    \n-Import ${body} certificate...    console=True
    Run Keyword If  '${aliasname}' != '${None}'   set to dictionary    ${body}  aliasName   ${aliasname}
    [Return]    ${body}

Verify Leaf Certificate Exist By Aliasname
    [Documentation]  Verify if certificate is existed by GET /rest/certifciates/servers/aliasname
    [Arguments]      ${aliasname}   ${expected}=${True}
    ${resp}=  Fusion Api Get Server Certificate  ${aliasname}
    log    ${resp}    console=True
    Run Keyword If  ${expected} == ${True}    should be equal as integers    ${resp['status_code']}    200    msg="${aliasname} does not exist"
    Run Keyword If  ${expected}!=${True}    should not be equal as integers    ${resp['status_code']}    200    msg="${aliasname} was already existd"
    Log    certificate is existed:${expected}    console=True

Verify Server Certificate Exist In Leafcertbks
    [Documentation]  Verify server certificate is in Leafcertbks
    [Arguments]     ${HOST}  ${expected}=${True}
    ${resp} =   Fusion Api Get Remote Certificate  ${HOST}
    ${command} =  set variable   ${CMD} ${resp['certificateDetails'][0]['sha256Fingerprint']}
    ${output} =  Execute SSH Command   ${command}
    Run Keyword If  ${expected} != ${True}     should be equal   ${output[0]}    0    msg= "Remote server certificate was existed in leafcerts.bks"
    Run Keyword If  ${expected} == ${True}     should be equal   ${output[0]}    1    msg= "Remote server certificate was not existed in leafcerts.bks"
    Log    ${HOST} certificate was existed in leafcerts.bks:${expected}    console=True

Verify CA Certificate Exist In Customrootsbks
    [Documentation]  Verify CA server certificate is in Customrootsbks
    [Arguments]     ${HOST}  ${expected}=${True}
    ${resp} =   Fusion Api Get Ca Certificate  param=${HOST}
    ${command} =  set variable   ${CUSTOM_CMD} ${resp['certificateDetails'][0]['sha256Fingerprint']}
    ${output} =  Execute SSH Command   ${command}
    Run Keyword If  ${expected} != ${True}     should be equal   ${output[0]}    0    msg= "Remote server certificate was existed in customroots.bks"
    Run Keyword If  ${expected} == ${True}     should be equal   ${output[0]}    1    msg= "Remote server certificate was not existed in customroots.bks"
    Log    ${HOST} certificate was existed in customroots.bks:${expected}    console=True

Verify Server Certificate Trust Status
     [Documentation]  Verify remote server certificate trust status as expected, True or False
     [Arguments]     ${HOST}  ${expected}
     ${resp} =   Fusion Api Get Remote Certificate  ${HOST}
     Should Be Equal As Strings    ${resp['certificateStatus']['trusted']}    ${expected}
     Log    ${HOST} trust status is ${expected}    console=True

Set Discover Power Device Body From Variable
    [Documentation]    Set discover power device body from a variable which contains a list of dicts with the entire payload
    [Arguments]    ${POWER_DEVICE_BODY}    ${hostname}     ${username}="admin"    ${password}="admin"    ${force}=False
    Log      \n-Set Discover Power Device     console=True
    ${request_body} =    Create List
    :FOR    ${POWER_DEVICE_BODY}    IN    @{POWER_DEVICE_BODY}
    \    ${body} =     Set To Dictionary    ${POWER_DEVICE_BODY}    hostname    ${hostname}
    \    ${body} =     Set To Dictionary    ${POWER_DEVICE_BODY}    username    ${username}
    \    ${body} =     Set To Dictionary    ${POWER_DEVICE_BODY}    password    ${password}
    \    ${body} =     Set To Dictionary    ${POWER_DEVICE_BODY}    force    ${force}
    \    Append To List  ${request_body}  ${body}
    \    log    \n this request_body is ${request_body}    console=True
    [Return]    ${request_body}
