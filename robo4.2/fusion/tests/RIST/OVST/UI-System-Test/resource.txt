*** Settings ***
Documentation         Configures an appliance with resources found in supplied data file. Pass in specific tags with pybot -i <tag(s)> to limit processing
Library               robot.api.logger
Resource              ../../../../Resources/api/fusion_api_resource.txt
Variables             tbird_dcs_data.py


*** Variables ***
${X-API-VERSION}            500
${DATA}                     c7000_dcs_data.py
${VERIFY}                   ${TRUE}
${APPLIANCE_IP}             10.2.12.12
${URL}                      https://${APPLIANCE_IP}
${BROWSER}                  firefox
${USERNAME}                 Administrator
${PASSWORD}                 Cosmos123
${SELENIUM_IMPLICIT_WAIT}   10
${SELENIUM_SPEED}           0.1

*** Keywords ***
Verify TBird Resource
    [Documentation]  Verify Resource
    ...              **kwargs are used to add key value pair to the expected DTO
    ...              Example:
    ...                Verify Resource  ${expected_dto}
    ...                Verify Resource  ${expected_dto}  Status=OK
    ...              Data Required:
    ...                Expected Resource DTO
    [Arguments]  ${expected_dto}  &{kwargs}

    ${status}  ${name} =  Run Keyword and Ignore Error  Get From Dictionary  ${expected_dto}  name
    Return from keyword if    '${status}'=='FAIL'    ${expected_dto} doesn't contain the key $name
    ${status}  ${type} =  Run Keyword and Ignore Error  Get From Dictionary  ${expected_dto}  type
    Return from keyword if    '${status}'=='FAIL'    ${expected_dto} doesn't contain the key $type
    Log to console and logfile  ${\n}Verifying ${type} ${name}
    ${new_expected_dto} =  Add Key Value to DTO  ${expected_dto}  &{kwargs}
    ${dto} =  Get Resource  ${type}:${name}
    log to console  the dto is ${dto}
    log to console  the expected is ${expected_dto}
    ${validate_status} =  Fusion api validate response follow  ${new_expected_dto}  ${dto}  wordy=${False}
    ${dict} =  create dictionary
    set to dictionary   ${dict}  status=${validate_status}
    set to dictionary   ${dict}  name=${name}
    Return From Keyword    ${dict}

