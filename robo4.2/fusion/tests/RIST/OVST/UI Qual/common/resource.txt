*** Keywords ***
Page Should Be
    [Arguments]     ${title}
    [Documentation]    Ensure that the current page is the one expected
    Wait Until Page Contains Element    id=hp-main-menu-control
    Element Should be Visible   xpath=//div[contains(@class, 'hp-page-label')]//h1[text()='${title}']

Navigate To Page
    [Arguments]    ${page}
    [Documentation]  Navigate to a page in OneView via the main menu
    Log  Navigating to "${page}" page    console=True
    ${title}=  Get Text  xpath=//div[@class='hp-page-label']/h1
    Run Keyword If  '${title}' != '${page}'  Run Keywords
    ...     Click Main Menu Item    ${page}   AND
    ...     Page Should Be    ${page}

Link Should Navigate to Correct Page
    [Arguments]      ${link}     ${pageTitle}
    [Documentation]  Ensure that a clicked link navigates to a page with the correct title
    Log    Navigating to ${pageTitle}    console=True
    Click Element    ${link}
    Page Should Be   ${pageTitle}

Help Button Should Open Help Page
    [Documentation]  Verify that the help button opens the corresponding help page
    Fail  Not Implemented

Get Resource Count From Page Label
    [Documentation]  Get the count of page resources from the page label
    Element Should Exist    css=div.hp-page-label > .hp-page-item-count

Get Items From Table
    [Documentation]    Create Items List from Table
    [Arguments]     ${table}=hp-master-table
    ${items}=    Create List
    Wait Until Page Contains Element      xpath=//table[contains(@class, '${table}')]/tbody/tr/td
    Set Selenium Implicit Wait    500
    ${items_list} =    Get Webelements    xpath=//table[contains(@class, '${table}')]/tbody/tr/td

    # if there are no more than one column, then there are no items in the list.  Return
    ${length} =  Get Length  ${items_list}
    Return From Keyword If  ${length}==1  ${items}

    ${items_list} =    Get Webelements    xpath=//table[contains(@class, '${table}')]/tbody/tr/td[2]
    :FOR    ${item}  in  @{items_list}
    \   ${item_name}=    Get Text    ${item}
    \   Append To List   ${items}    ${item_name}
    [Return]             ${items}

Select list Item Randomly
    [Documentation]    Select list item randomly from given list
    [Arguments]        ${list}
    ${length}=       Get Length     ${list}
    ${random_no} =   Evaluate       random.randint(0, ${length}-1)    modules=random
    ${item}=         Set variable   ${list[${random_no}]}
    [Return]         ${item}

Select Item From Table and Verify Element Visible
    [Documentation]  Click an item in a table and look for it in the master table
    [Arguments]  ${item}  ${element}  ${table}=hp-master-table
    Click Element    xpath=//table[contains(@class, '${table}')]/tbody/tr/td[2 and text()='${item}']
    Element Should Be Visible    xpath=//h1[@id='${element}' and text()='${item}']

Message Should Be Displayed To Confirm Element Selection
    [Documentation]  Verify message displayed to confirm element selection
    [Arguments]      ${element}
    Set Selenium Implicit Wait      0.5
    ${message} =    Get Text    css=.hp-form-message-text
    Set Selenium Implicit Wait      10
    Run Keyword If    '${element}' in '${message}'    log    '${element}' is selected successfully    console=yes
    Run Keyword Unless    '${element}' in '${message}'    Fail    Failed to select '${element}'

Set Appliance Version Metadata
    [Documentation]  Set the appliance version in the metadata
    ${credentials}=  Create Dictionary    userName=${USERNAME}    password=${PASSWORD}
    Fusion API Login Appliance  ${APPLIANCE_IP}     ${credentials}
    ${json}=  Fusion API Get Appliance Version
    Set Suite Metadata    Appliance_Version    ${json}
    Log    OneViewVersion: ${json["softwareVersion"]}    console=True
    Fusion API Logout Appliance

Set Browser Version Metadata
    [Documentation]  Set the browser version in the metadata
    ${agent_header}=    Execute Javascript    return navigator.userAgent;
    Set Suite Metadata  BrowserVersion  ${agent_header}
    Log    Browser Version: ${agent_header}  console=True
