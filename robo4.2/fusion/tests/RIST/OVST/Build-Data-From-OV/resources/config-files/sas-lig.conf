# variable-keys mapping
# toplevel/members-level keys
membersKeys = ['name', 'type', 'enclosureType', 'interconnectMapTemplate', 'interconnectBaySet', 'enclosureIndexes']
expectedKeys = ['uri', 'state', 'status', 'description']
# interconnectMapTemplates keys
interconnectMapTemplateKeys = ['interconnectMapEntryTemplates']

# interconnectMapEntryTemplates keys
interconnectMapEntryTemplatesKeys = ['logicalLocation', 'permittedInterconnectTypeUri', 'enclosureIndex']

# logicalLocation key dictionary defining subkeys to parse
logicalLocationDict = {'locationEntries': ['relativeValue', 'type']}

# members dictionary defining key-to-variable(above) mapping
membersDict = {
    'interconnectMapTemplate': interconnectMapTemplateKeys,
    'interconnectMapTemplate_type': 'modDictListOfDict',
    'interconnectMapEntryTemplates': interconnectMapEntryTemplatesKeys,
    'interconnectMapEntryTemplates_type': 'listOfDict',
    'logicalLocation': logicalLocationDict,
    'logicalLocation_type': 'listOfDict'
}

# custom key definition (original key-to-custom key mapping)
customDict = {
    'permittedInterconnectTypeUri': 'type',
    'type': 'key',
    'relativeValue': 'value',
    'desiredSpeed': 'speed',
    'bay': 'translate'
}

# custom data type definition
dataTypeToSym = {
    'dictionary_begin': '{',
    'dictionary_end': '}',
    'listOfDict_begin': '[',
    'listOfDict_end': ']',
    'modDictListOfDict_begin': '[',
    'modDictListOfDict_end': ']'
}
