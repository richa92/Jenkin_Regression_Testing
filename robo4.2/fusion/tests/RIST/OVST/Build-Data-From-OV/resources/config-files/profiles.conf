# variable-keys mapping
# toplevel (or members-level)
# NOTE: If serialNumberType is Physical these cannot be specified  'uuid', 'serialNumber'
membersKeys = ['enclosureBay', 'serverProfileTemplateUri', 'hideUnusedFlexNics', 'macType', 'name', 'connections', 'serverHardwareUri', 'enclosureGroupUri', 'enclosureUri', 'type', 'serialNumberType', 'serialNumber', 'uuid', 'boot', 'bootMode', 'description']

# membersKey that has sub-keys (format is <key>Keys)
# NOTE: Removed 'mac' key because if macType is Physical, mac cannot be specified
#     : Removed 'wwpnType' as they seem to have conflict with global in some case(i.e.: For ethernet connection, wwpn type [Physical] should be same as the global wwpn assignment [Virtual])
connectionsKeys = ['allocatedMbps', 'functionType', 'id', 'mac', 'macType', 'maximumMbps', 'name', 'portId', 'requestedMbps', 'wwnn', 'wwpn', 'networkUri']

bootKeys = ['manageBoot', 'order']
bootModeKeys = ['pxeBootPolicy', 'manageMode', 'mode']

# members dictionary defining the subkeys
membersDict = {
    'connections': connectionsKeys,
    'connections_type': 'listOfDict',
    'boot' : bootKeys,
    'boot_type' : 'dictionary',
    'bootMode' : bootModeKeys,
    'bootMode_type' : 'dictionary'
}

# preserve uri value(s) list
keepUris = []

# Collect this if serialNumberType is Physical
serialNumberType_Not_Physical = ['uuid', 'serialNumber']
# When macType is Physical
macType_Not_Physical = ['mac']
globalNegativeCondDict = {
    'serialNumberType': 'Physical',
    'serialNumberType_Physical': serialNumberType_Not_Physical
}
nonglobalNegativeCondDict = {
    'macType': 'Physical',
    'macType_Physical': macType_Not_Physical
}
