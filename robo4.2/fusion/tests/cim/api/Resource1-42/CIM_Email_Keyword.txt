*** Settings ***
Library           RoboGalaxyLibrary
Library           FusionLibrary
Library           SSHLibrary
Library           OperatingSystem
Library           String
Library           Collections
Library           XML
Library           Dialogs
Library           json


Variables     ../TestData/TestData420.py

*** Keywords ***

Send Test Mail
    [Documentation]     To Send test mail
    ${JSON}=    json.dumps   ${TEST_EMAIL}   json
    ${Response}=    Post request    appliance/notifications/send-email    ${JSON}    1000
    ${ResponseBody}=    Should be Equal    ${Response.status_code}    ${200}    msg=Operation failed ${Response.content}
    Log    ${ResponseBody}

Configure email notification
    [Documentation]    Configure E-mail notification with given protocol
    ${smtpProtocol}=    Set to Dictionary    ${EMAIL_CONFIGURATION}    smtpProtocol    ${smtpProtocol}
    ${smtpIP}=    Set to Dictionary    ${EMAIL_CONFIGURATION}    smtpServer    ${smtpServer}
    ${senderEmail}=    Set to Dictionary    ${EMAIL_CONFIGURATION}    senderEmailAddress    ${senderEmailAddress}
    ${body}=    Update Dictionary Subset    ${EMAIL_CONFIGURATION}    ${smtpProtocol}
    ${body}=    Update Dictionary Subset    ${EMAIL_CONFIGURATION}    ${smtpIP}
    ${body}=    Update Dictionary Subset    ${EMAIL_CONFIGURATION}    ${senderEmail}
    ${JSON}=    json.dumps   ${body}   json
    Log    ${JSON}
    ${Response}=    Post request    appliance/notifications/email-config    ${JSON}   1000
    Should be Equal    ${Response.status_code}    ${202}    msg=Operation failed ${Response.content}
    ${ResponseBody} =   json.dumps    ${Response.headers['Location']}
    ${TaskURI} =    Get Task URI    ${ResponseBody}
    ${TaskMessage} =    Verify Task Status    ${TaskURI}
    [Return]    ${TaskMessage}

Verify Task Status
    [Documentation]    This keyword verifies the status of the given Task
    [Arguments]    ${TaskURI}
    ${TaskStatus} =    Get request    ${TaskURI}    1000
    Should be Equal    ${TaskStatus.status_code}    ${200}    msg=Operation failed ${TaskStatus.content}
    ${task_status}    Evaluate    json.loads('''${TaskStatus.text}''')    json
    ${validation}=    Get From Dictionary    ${task_status}    taskErrors
    ${resp}    ${value} =    Run Keyword and Ignore Error   Should Be Empty    ${validation}
    Log    ${resp}
    Run Keyword If    '${resp}'=='PASS'    Pass Execution    Task is completed successfully
    Run Keyword If    '${resp}'=='FAIL'    Set Variable    ${validation}    Get From Dictionary    ${validation[0]}    message
    [Return]    ${resp}    ${validation}

Get Task URI
    [Documentation]    From the given Response body extract Task URI
    [Arguments]    ${ResponseBody}
    @{TaskURI} =    Split String    ${ResponseBody}    "
    ${TaskURI} =    Get From List    ${TaskURI}   1
    [Return]    ${TaskURI}

Get Email Configuration
    [Documentation]    To Retrieve Email Configuration
    ${Response}=    Get request    rest/appliance/notifications/email-config    1000
    Should be Equal    ${Response.status_code}    ${200}    msg=Operation failed ${Response.content}
    ${data}    Evaluate    json.loads('''${Response.text}''')    json
    log    ${task_status}

Get Email Notification Filters
    [Documentation]    To Retrieve Email Notification Filters
    ${Response}=    Get request    rest/appliance/notifications/email-config/filters?query="scope:'scopename'"    1000
    Should be Equal    ${Response.status_code}    ${200}    msg=Operation failed ${Response.content}
    ${data}    Evaluate    json.loads('''${Response.text}''')    json
    log    ${task_status}

Error messages while configuring E-mail Notification
    [Documentation]    Error messages while configuring E-mail Notification
    ${resp}=    Configure email Notification
    ${validation}=    Get From Dictionary    ${resp[1][0]}    message
    Run Keyword If    "${resp[0]}"== "FAIL"    FAIL    ${validation}

