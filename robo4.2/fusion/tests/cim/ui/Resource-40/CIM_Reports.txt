*** Settings ***
Library           RoboGalaxyLibrary
Library           BuiltIn
Library           String
Library           Collections
Library           OperatingSystem
Resource          ../../../../Resources/ui/reports/report_localuser.txt
Variables         FusionLibrary/ui/business_logic/general/base_elements.py
Variables         FusionLibrary/ui/general/reports_elements.py

*** Keywords ***
Save Local User Report
    [Documentation]    Save Local User Report in specified format (.xlsx or .csv)
    [Arguments]    ${fileformat}
    Select action    Save as
    Select format    ${fileformat}
    wait for element and click    ${FusionReportsPage.ID_BTN_SAVE_AS_OK}
    ${BrowserUppercase}=    Convert To Uppercase    ${Browser}
    ${Title} =  Create Dictionary   FIREFOX=Opening ${filename}.${fileformat}   CHROME=Open     INTERNET EXPLORER=Choose File to Upload
    ${WindowTitle} =    Get From Dictionary    ${Title}    ${BrowserUppercase}
    Find Native Window    ${WindowTitle}
    Focus Native Window    ${WindowTitle}
    Send Keys to Native Window    ${WindowTitle}    {ENTER}
    Validate Download File    ${fileformat}

Select format
    [Documentation]    Select the report download format (.xlsx or .csv) from Dropdown
    [Arguments]    ${fileformat}
    wait for element and click    ${FusionReportsPage.ID_BTN_XLS_DROPDOWN}
    Run keyword if    '${fileformat}' == 'csv'    Wait For Element And Click    ${FusionReportsPage.ID_BTN_CSV_DROPDOWN}

Validate Download File
    [Documentation]    Check file is downloaded in given folder
    [Arguments]    ${fileformat}
    ${orig wait} =     Set Selenium Implicit Wait    40 seconds
    ${files} =    OperatingSystem.List Files In Directory    ${DownloadPath}    *.${fileformat}
    ${downloadfile} =    Get From List    ${files}    0
    Log    ${downloadfile}
    Run Keyword If    '${downloadfile}' == '${filename}.${fileformat}'    Log   Report is downloaded in ${fileformat} format
    Run Keyword Unless    '${downloadfile}' == '${filename}.${fileformat}'    Fail   Failed to download ${filename} in ${fileformat} format
    Log    Deleting the report file as a cleanup
    Set Selenium Implicit Wait    ${orig wait}
    Remove File    ${DownloadPath}${/}${filename}.${fileformat}
