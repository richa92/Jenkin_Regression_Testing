*** Settings ***
Documentation		Download backup on a Remote server
...	Remote server details like ostype, ipaddress, username, backupdirectory and protocol to be updated in CIM_TestData.xml file
Resource			../Resource/CIM_CommonResource.txt
Resource			../Resource/CIM_Activity.txt
Resource			../Resource/CIM_Settings.txt
Test Setup			Load Test Data and Open Browser
Test Teardown		Logout and close all browsers

*** Variables ***
${activityname}		Download backup
${resource}			Backup
${activitystate}	Completed
${activityowner}	Administrator
${downloadlocation}	remote backup location

*** Test Cases ***
As an Administrator I want to Download backup on a Remote server
	Log into Fusion appliance as Administrator

	#Check if Remote backup server is configured
	Navigate to	Settings	Backup
	${present} =	Run Keyword And Return Status	Element Should Be Visible	//*[@data-fs-backup-remote-show-when='RemoteNotSet NotEnabled']
	Run Keyword If	${present}	Fail	Remote backup is not set, please set it before executing the testcase

	#Get Backup ID to be download
	${backupid} =	Get Backup ID

	#Download Backup on a Remote server
	Select action	Download backup
	wait for element and click	//input[@type='radio'][./following-sibling::*[contains(., '${downloadlocation}')]]
	Click Element	${FusionSettingsPage.ID_BACKUP_DOWNLOAD_OK}

	#Verify Notification bar
	Verify notification bar	ok	${activityname}	${activitystate}	40

	#Verify Activity page
	Verify Activity Existence in Activity Page	${activityname}	${resource}	${activitystate}	${activityowner}

	#Verify entry in auditlog file.
	Download and verify entry in Audit log file	${DownloadPath}	Download backup to ${TestData.RemoteBackpupSettings[0].ipaddress} was completed

	#Verify Backup is downloaded in Remote location
	File Exists In Remote Machine	${TestData.RemoteBackpupSettings[0].ostype}
	...	${TestData.RemoteBackpupSettings[0].ipaddress}
	...	${TestData.RemoteBackpupSettings[0].username}
	...	${TestData.RemoteBackpupSettings[0].password}
	...	${TestData.RemoteBackpupSettings[0].backupdirectory}
	...	${backupid}
