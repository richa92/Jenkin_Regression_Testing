*** Settings ***
Library		RoboGalaxyLibrary
Library		BuiltIn
Library		String
Library		Collections
Variables	../../../../FusionLibrary/ui/business_logic/general/base_elements.py
Variables	../../../../FusionLibrary/ui/settings/settings_elements.py

*** Variables ***
${delimit}	Filename

*** Keywords ***
Create BackUp
	[Return]	${bkpfile}
	Fusion UI Create Backup
	wait for element and click	${FusionSettingsPage.ID_BACKUP_LINK}
	${bkpfilename} =	Get Text	${FusionSettingsPage.ID_BACKUP_FILENAME_LABEL}
	${splitbkpfilename} =	Split String	${bkpfilename}	${delimit}
	${bkpfile}=	Get From List	${splitbkpfilename}	1

Download BackUp
	[Arguments]	${DownloadPath}
	[Return]	${bkpfilepath}
	Create Folder If not Exists	${DownloadPath}
	wait for element and click	${FusionSettingsPage.ID_SETTINGS_LABEL}
	Fusion UI Download Backup	${DownloadPath}
	${bkpfiles} =	OperatingSystem.List Files In Directory	${DownloadPath}	*.bkp
	${downloadedbkpfile} =	Get From List	${bkpfiles}	0
	${bkpfilepath} =	Set Variable	${DownloadPath}/${downloadedbkpfile}

Navigate to Edit Backup Settings page
	[Documentation]	Navigates to Edit Backup Settings page
	Navigate to	Settings	Backup
	Select action	${activityname}
	${status}	${value}=	Run Keyword And Ignore Error	wait for element visible	${FusionSettingsPage.ID_CHECKBOX_EDIT_BACKUP}
	Run Keyword If	'${status}' == 'PASS'	Log	Successfully navigated to Edit Backup Settings page
	Run Keyword Unless	'${status}' == 'PASS'	Fail	Failed to navigate to Edit Backup Settings page.

Edit Remote Backup Location
	[Documentation]	Configures the Remote Backup server using the details passed in Data file
	[Arguments]	${protocol}	${ipaddress}	${backupdirectory}	${username}	${password}
	Select Checkbox	${FusionSettingsPage.ID_CHECKBOX_EDIT_BACKUP}
	wait for element and click	//input[@type='radio'][./following-sibling::*[contains(., '${protocol}')]]
	Input Text	${FusionSettingsPage.ID_INPUT_REMOTESERVER_IP_HOST_NAME}	${ipaddress}
	Input Text	${FusionSettingsPage.ID_INPUT_REMOTE_BACKUP_FOLDER}	${backupdirectory}
	Input Text	${FusionSettingsPage.ID_INPUT_REMOTESERVER_USERNAME}	${username}
	Input Text	${FusionSettingsPage.ID_INPUT_REMOTESERVER_PASSWORD}	${password}
	${sshkey} =	Get Remote host SSH Key	${ipaddress}
	Input Text	${FusionSettingsPage.ID_INPUT_REMOTESERVER_SSHKEY}	${sshkey}

Verify Remote Location In Backup Page
	[Documentation]	Verifies the Remote Location in Backup page
	[Arguments]	${protocol}	${ipaddress}	${backupdirectory}	${username}
	wait for element visible	//*[@id='hp-settings-show']//li[label='Remote Backup Location']	10
	Element Should Contain	//*[@id='hp-settings-show']//li[label='Remote Backup Location']	${protocol}
	Element Should Contain	//*[@id='hp-settings-show']//li[label='Remote Backup Location']	${ipaddress}
	Element Should Contain	//*[@id='hp-settings-show']//li[label='Remote Backup Location']	${backupdirectory}
	Element Should Contain	//*[@id='hp-settings-show']//li[label='Remote Backup Location']	${username}

Get Remote host SSH Key
	[Documentation]	Returns the SSH key of the Remote server
	[Arguments]	${ipaddress}
	[Return]	${sshkey}
	${ip}=	Get appliance ip from url
	${username}=	Set Variable	${TestData.RootUserCredentials[0].username}
	${password}=	Set Variable	${TestData.RootUserCredentials[0].password}
	${command}=	Set Variable	ssh-keyscan ${ipaddress}
	${output} =	Execute Command on Remote VM	${ip}	${username}	${password}	${command}
	${Key} =	Fetch From Right	${output}	${ipaddress}
	${sshkey} =	Replace String	${Key}	${SPACE}	${EMPTY}	count=1

Select frequency
	[Documentation]	Sets the frequency for Remote Backup schedule as specified in data file
	[Arguments]	${frequency}	${time}	${day}
	Click Element	${FusionSettingsPage.ID_DROPDOWN_FREQUENCY_SELECTOR}
	Run Keyword If	'${frequency}'=='DAILY'	Run Keywords
	...	Click Element	//*[@id='fs-settings-backup-panel-schedule']//ol/li[@data-id='${frequency}']	AND
	...	Input Text	${FusionSettingsPage.ID_BACKUP_EDIT_TIME}	${time}
	...	ELSE IF	'${frequency}'=='WEEKLY'	Run Keywords
	...	Click Element	//*[@id='fs-settings-backup-panel-schedule']//ol/li[@data-id='${frequency}']	AND
	...	Input Text	${FusionSettingsPage.ID_BACKUP_EDIT_TIME}	${time}	AND
	...	Select Checkbox	//*[@id='fs-settings-backup-schedule-choice-${day}']
	...	ELSE	Click Element	//*[@id='fs-settings-backup-panel-schedule']//ol/li[@data-id='${frequency}']

Verify Schedule In Backup Page
	[Documentation]	Verifies the Schedule in Backup page
	[Arguments]	${frequency}	${time}	${day}
	#Verify time
	${expectedtime} =	Convert time	${time}	timer
	${scheduletime} =	Get text	//*[@id='fs-settings-backup-schedule-time']
	${actualtime} =	Convert time	${scheduletime}	timer
	#Check for am or pm
	${ispm}	${error_msg} =	Run Keyword And Ignore Error	Should contain	${scheduletime}	pm
	${actualtime} =	Run keyword If	'${ispm}'=='PASS'	Add Time To Time	${actualtime}	00:12:00.000	Timer	False
	#Check if correct time is set
	Should be equal	${expectedtime}	${actualtime}
	#Verify day
	${Schedule} =	Get Text	//*[@id='fs-settings-backup-schedule-detail']
	Run Keyword If	'${frequency}'=='WEEKLY'	Should contain string ignorecase	${Schedule}	${day}
	...	ELSE IF	'${frequency}'=='NONE'	Element Should Contain	${Schedule}	'not set'

Get Backup ID
	[Documentation]	Returns the Backup ID from the Backup page
	[Return]	${bkpfile}
	${bkpfilename} =	Get Text	${FusionSettingsPage.ID_BACKUP_FILENAME_LABEL}
	${splitbkpfilename} =	Split String	${bkpfilename}	${delimit}
	${bkpfile} =	Get From List	${splitbkpfilename}	1
	${bkpfile} =	Replace String	${bkpfile}	${space}	${empty}

Verify notification bar
	[Documentation]	Verifies the Notification bar for the activity performed
	[Arguments]	${expectedstatus}	${expectedmessage}	${expectedstate}	${timeout}
	Wait Until Element Is Visible	//*/header[@class='hp-notification-summary']/div[@class='hp-status hp-status-${expectedstatus}']	${timeout}
	Element Should Contain	//div[@id='hp-page-notifications']//header[@class='hp-notification-summary']	${expectedmessage}
	Element Should Contain	//div[@id='hp-page-notifications']//header[@class='hp-notification-summary']	${expectedstate}

Navigate To Edit Networking Page
	Navigate to	Settings	Networking
	Select action	Edit

Enter First Time Login credentials
	[Arguments]	${Username}	${Password}
	Input Text	${FusionLoginPage.ID_INPUT_LOGIN_USER}	${Username}
	Input Text	${FusionLoginPage.ID_INPUT_LOGIN_PASSWORD}	${Password}
	Click Button	${FusionLoginPage.ID_BTN_LOGIN_BUTTON}

Set Initial password
	[Arguments]	${NewPassword}	${ConfirmPassword}
	Input Text	${FusionLoginPage.ID_INPUT_NEW_PASSWORD}	${NewPassword}
	Input Text	${FusionLoginPage.ID_INPUT_CONFIRM_PASSWORD}	${ConfirmPassword}
	Click Button	${FusionLoginPage.ID_BTN_OK_PASSWORD_SCREEN}

Close Edit Networking Page
	wait for element and click	${C7000_EditNetworkingElements.ID_BUTTON_CANCEL}

Complete FTS
	[Arguments]	${IP_Address}
	wait for element and click	${FusionLoginPage.ID_BTN_EULA_AGREE}
	wait for element and click	${FusionLoginPage.ID_BTN_OK_CONVERGED_INFRA_SUPPORT}
	wait for element and input text	${FusionLoginPage.ID_INPUT_LOGIN_USER}	${TestData.FullFactoryReset[0].vmusername}
	wait for element and input text	${FusionLoginPage.ID_INPUT_LOGIN_PASSWORD}	${TestData.FullFactoryReset[0].vminitialpassword}
	wait for element and click	${FusionLoginPage.ID_BTN_LOGIN_BUTTON}
	wait for element and input text	${FusionLoginPage.ID_INPUT_NEW_PASSWORD}	${TestData.FullFactoryReset[0].vmnewpassword}
	wait for element and input text	${FusionLoginPage.ID_INPUT_CONFIRM_PASSWORD}	${TestData.FullFactoryReset[0].vmnewpassword}
	wait for element and click	${FusionLoginPage.ID_BTN_OK_PASSWORD_SCREEN}
	wait for element visible	${FusionLoginPage.ID_RADIO_IPV4_MANUAL}
	${Address_Assignment_After_Factory_Reset}=	Get Address Assignment Type
	Run Keyword If	'${Address_Assignment_After_Factory_Reset}'=='MANUAL'	wait for element and input text	${FusionLoginPage.ID_INPUT_IPV4_IPADDRESS}	${IP_Address}
	wait for element and click	${FusionLoginPage.ID_APPLIANCE_OK}

Get Address Assignment Type
	[Return]	${Address_Assignment_Type}
	wait for element visible	${FusionLoginPage.ID_RADIO_IPV4_MANUAL}
	${Manual_Rdio_Selected}=	Get Element Attribute	${FusionLoginPage.ID_RADIO_IPV4_MANUAL}@checked
	${Address_Assignment_Type}=	Set Variable If	'${Manual_Rdio_Selected}'=='true'	MANUAL	DHCP

Change Time On NTP Server 
	${NTP_ip}=	Set Variable	${TestData.edittimeonNTP[0].timeserver1}
	${username}=		Set Variable		${TestData.RootUserCredentials[0].username}
	${password}=		Set Variable		${TestData.RootUserCredentials[0].password}	
	${initial_date_command}=		Set Variable		date +"[%Y-%m-%d %H:%M:%S]"
	${current_date}=	Execute Command on Remote VM	${NTP_ip}	${username}	${password}	${initial_date_command}	
	${new_date}=	Add Time To Date		 ${current_date}		 02:00:00
	${new_date}=	Convert Date			 ${new_date}		 exclude_millis=yes
	${date_command}=	 Set Variable	date -s '${new_date}'
	${ntp_date}=	Execute Command on Remote VM	${NTP_ip}	${username}	${password}	${date_command}
	[Return]	${ntp_date}

Verify Alert on Time and Locale and Activity Page After Time Shift
	[Documentation]	Verify Alert on Time and Locale Page and Activity Page
	[Arguments]	${activity_name}
	${alert_message}		Set Variable		The appliance could not sync with the NTP server. The difference between the appliance time and the NTP time was greater than 1000 seconds.
	${count}		Set Variable		0
	# Check for an alert on Time and Locale page
	Navigate to	Settings	Time and Locale
	${alert_output}=			wait for element visible	${EditTimeAndLocaleElements.ID_TEXT_TIME_AND_LOCALE}	300
	Should Be True	${alert_output}	msg=The appliance could not sync with the NTP server
	# Check for an alert activity on Activity page
	Navigate to Activity page
	wait for element visible	${FusionActivityPage.ID_ACTIVITY_TABLE} 20
	:FOR	${index}	IN RANGE	1	5
	\	${locator} =	Set Variable	//*[@id='hp-activities']/tbody/tr[td/p/span[contains(text(),'${activity_name}')] and td/a[text()='Time and Locale'] and td/div/div[text()='Active']]
	\	wait for element visible	${locator}
	\	${count}=	Get Matching XPath Count	 //*[@id='hp-activities']/tbody/tr[${index}]//p/span[contains(text(),'${activity_name}')]
	\	Run Keyword If		'${count}' > 0	Exit For Loop
	Run Keyword If	${count} >= 1	Log	Given alert is listed in activity page
	Run Keyword Unless	${count} >= 1	Fail	Given alert is not present in the activity page

Verify Alert on Time and Locale Page After Appliance Restart
	Navigate to	Settings	Time and Locale
	${alert_present} =		Run Keyword and Return Status		Element Should Not Be Visible		id=${EditTimeAndLocaleElements.ID_TEXT_TIME_AND_LOCALE}
	Run Keyword If	'${alert_present}'== 'TRUE'	Log	Alert is not seen on Time and Locale Page.
	Run Keyword If	'${alert_present}'== 'FALSE'	Fail	Alert is seen on Time and Locale Page even after appliance restart.

Check action availability in panel
	[Arguments]	${Panel}	${Action}	${ExpectedStatus}
	Navigate to	Settings	${Panel}
	wait for element and click	${C7000_GeneralNetworingElements.ID_DROPDOWN_ACTIONS}
	Run keyword if	'${ExpectedStatus}' == 'Available'	Run keywords
	...	Element should be visible	//*[@id='hp-settings-actions']//li[text()='${Action}']	AND
	...	Log	${Action} option is available for ${Panel}
	Run keyword if	'${ExpectedStatus}' == 'Unavailable'	Run keywords
	...	Element should not be visible	//*[@id='hp-settings-actions']//li[text()='${Action}']	AND
	...	Log	${Action} option is not available for ${Panel}
