*** Settings ***
Library           RoboGalaxyLibrary
Library           BuiltIn
Library           String
Library           Collections
Variables         ../../../../FusionLibrary/ui/business_logic/general/base_elements.py
Variables         ../../../../FusionLibrary/ui/settings/settings_elements.py

*** Variables ***

${count}              1

*** Keywords ***

Navigate to Security Page
    wait for element and click    ${FusionBasePage.ID_MAIN_MENU_CONTROL}
    wait for element and click    ${FusionBasePage.ID_MENU_LINK_SETTINGS}
    wait for element and click    ${FusionSettingsPage.ID_LINK_SECURITY_PAGE}
    ${status}   ${value} =  Run Keyword And Ignore Error    wait for element visible    xpath=//*[@id='fs-settings-security-title']
    Run Keyword If  '${status}' == 'PASS'   Log    Successfully navigated to Security page
    Run Keyword Unless  '${status}' == 'PASS'   Fail    Failed while navigating to Security page.

Generate Self Signed Certificate
    Navigate to Security Page
    wait for element and click    ${FusionSettingsPage.ID_MENU_ACTION_MAIN_BTN}
    wait for element and click    ${FusionSettingsPage.ID_BTN_CREAT_SELF_SIGNED_CERT}
    wait for element visible    ${FusionSettingsPage.ID_INPUT_SELF_SIGN_CERT_COUNTRY}
    :FOR        ${attribute}    IN  @{TestData.attributes}
    \   Input Text      ${FusionSettingsPage.ID_INPUT_SELF_SIGN_CERT_COUNTRY}       ${attribute.country}
    \   Input Text      ${FusionSettingsPage.ID_INPUT_SELF_SIGN_CERT_STATE}     ${attribute.state}
    \   Input Text      ${FusionSettingsPage.ID_INPUT_SELF_SIGN_CERT_CITY}      ${attribute.locality}
    \   Input Text      ${FusionSettingsPage.ID_INPUT_SELF_SIGN_CERT_ORGANIZATION_NAME}     ${attribute.organization}
    wait for element visible    ${FusionSettingsPage.ID_BTN_SELF_SIGN_CERT_OK}
    wait for element and click    ${FusionSettingsPage.ID_BTN_SELF_SIGN_CERT_OK}
    Wait Until Keyword Succeeds    50 sec    2 sec    Validate Certificate Date

Validate Certificate Date
    Navigate to Security Page
    ${Date}=    Get Current Date
    ${CertDate}     get text    ${FusionSettingsPage.ID_TEXT_CERT_VALID_FROM}
    Run Keyword If  '${CertDate}'=='${Date}'        Log    Date is Current Date
    ${CertDate}=   Get Substring   ${CertDate}   6   10
    ${validtilldate}    get text    ${FusionSettingsPage.ID_TEXT_CERT_VALID_TILL}
    ${validtillyear}=   Get Substring   ${validtilldate}  6   10
    ${date}=    Evaluate    ${CertDate}+${count}
    Run Keyword If  '${date}'=='${validtillyear}'        Log    Pass Certificate is valid for 1 year
    Run Keyword Unless  '${date}'=='${validtillyear}'   Fail    Failed Certificate is not valid for 1  year

Get Certificate Default Value and Validate
    [Arguments]    ${default-country}    ${default-state}    ${default-city}    ${default-org}
    ${current-country}=    get text    ${FusionSettingsPage.ID_TEXT_SELF_SIGN_CERT_COUNTRY}
    ${current-state}=    get text    ${FusionSettingsPage.ID_TEXT_SELF_SIGN_CERT_STATE}
    ${current-city}=    get text     ${FusionSettingsPage.ID_TEXT_SELF_SIGN_CERT_LOCALITY}
    ${current-org}=    get text    ${FusionSettingsPage.ID_TEXT_SELF_SIGN_CERT_ORG}
    Run Keyword If    '${default-country}' == '${current-country}' and '${default-state}' == '${current-state}' and '${default-city}' == '${current-city}' and '${default-org}' == '${current-org}'    Log    The Default Information are updated
    Run Keyword Unless    '${default-country}' == '${current-country}' and '${default-state}' == '${current-state}' and '${default-city}' == '${current-city}' and '${default-org}' == '${current-org}'    Fail    The Default Information are not updated

Update ALternate Name With IPV4 and Optional Info
    ${ApplianceIP}=   Fetch From Right   ${ApplianceUrl}  /
    Navigate to Security Page
    wait for element and click    ${FusionSettingsPage.ID_MENU_ACTION_MAIN_BTN}
    wait for element and click    ${FusionSettingsPage.ID_BTN_CREAT_SELF_SIGNED_CERT}
    wait for element visible    ${FusionSettingsPage.ID_INPUT_SELF_SIGN_CERT_COUNTRY}
    Input Text      ${FusionSettingsPage.ID_INPUT_SELF_SIGN_CERT_ALTERNATIVE_NAME}       ${ApplianceIP}
    :FOR        ${info}    IN  @{TestData.optional}
    \   Input Text      ${FusionSettingsPage.ID_INPUT_SELF_SIGN_CERT_ORGANIZATIONAL_UNIT}       ${info.organizational}
    \   Input Text      ${FusionSettingsPage.ID_SELF_SIGN_CERT_ID_INPUT_CONTACT_PERSON}     ${info.contact}
    \   Input Text      ${FusionSettingsPage.ID_SELF_SIGN_CERT_ID_INPUT_EMAIL_ADDRESS}      ${info.email}
    \   Input Text      ${FusionSettingsPage.ID_SELF_SIGN_CERT_ID_INPUT_SURNAME}     ${info.surname}
    \   Input Text      ${FusionSettingsPage.ID_INPUT_SELF_SIGN_CERT_GIVEN_NAME}       ${info.givenname}
    \   Input Text      ${FusionSettingsPage.ID_INPUT_SELF_SIGN_CERT_INITIALS}     ${info.initials}
    \   Input Text      ${FusionSettingsPage.ID_INPUT_SELF_SIGN_CERT_DNQUALIFIER}      ${info.DN}
    wait for element visible    ${FusionSettingsPage.ID_BTN_SELF_SIGN_CERT_OK}
    wait for element and click    ${FusionSettingsPage.ID_BTN_SELF_SIGN_CERT_OK}

Validate IPV4 got updated with host name in AN
    Navigate to Security Page
    ${ApplianceIP}=   Fetch From Right   ${ApplianceUrl}  /
    ${AN}=    get text    ${FusionSettingsPage.ID_TEXT_CERT_ALTERNATE_NAME}
    ${updated-name}=    Split String    ${AN}    ,
    List Should Contain Value    ${updated-name}    ${ApplianceIP}

Validate Optional Info Updated
    ${org-unit}=    get text    ${FusionSettingsPage.ID_TEXT_SELF_SIGN_CERT_ORGANIZATIONAL_UNIT}
    ${contact-person}=    get text    ${FusionSettingsPage.ID_TEXT_SELF_SIGN_CERT_CONTACT_PERSON}
    ${email}=    get text    ${FusionSettingsPage.ID_TEXT_SELF_SIGN_CERT_EMAIL_ADDRESS}
    ${surname}=    get text    ${FusionSettingsPage.ID_TEXT_SELF_SIGN_CERT_SURNAME}
    ${given-name}=    get text    ${FusionSettingsPage.ID_TEXT_SELF_SIGN_CERT_GIVEN_NAME}
    ${initials}=    get text    ${FusionSettingsPage.ID_TEXT_SELF_SIGN_CERT_INITIALS}
    ${DN-qualifier}=    get text    ${FusionSettingsPage.ID_TEXT_SELF_SIGN_CERT_DN}
    :FOR        ${info}    IN  @{TestData.optional}
    \    Run Keyword If    '${org-unit}' == '${info.organizational}' and '${contact-person}' == '${info.contact}' and '${email}' == '${info.email}' and '${surname}' == '${info.surname}' and '${given-name}' == '${info.givenname}' and '${initials}' == '${info.initials}' and '${DN-qualifier}' == '${info.DN}'    Log    The Optional Information are updated
    \    Run Keyword Unless    '${org-unit}' == '${info.organizational}' and '${contact-person}' == '${info.contact}' and '${email}' == '${info.email}' and '${surname}' == '${info.surname}' and '${given-name}' == '${info.givenname}' and '${initials}' == '${info.initials}' and '${DN-qualifier}' == '${info.DN}'    Fail    The Optional Information are not updated

Update Alternate Name with Sname
    ${text}=    get text    ${FusionSettingsPage.ID_TEXT_SELF_SIGN_CERT_CN}
    ${sname}=    Fetch From Left   ${text}  .
    wait for element and click    ${FusionSettingsPage.ID_MENU_ACTION_MAIN_BTN}
    wait for element and click    ${FusionSettingsPage.ID_BTN_CREAT_SELF_SIGNED_CERT}
    wait for element visible    ${FusionSettingsPage.ID_INPUT_SELF_SIGN_CERT_COUNTRY}
    Input Text      ${FusionSettingsPage.ID_INPUT_SELF_SIGN_CERT_ALTERNATIVE_NAME}    ${Sname}
    wait for element visible    ${FusionSettingsPage.ID_BTN_SELF_SIGN_CERT_OK}
    wait for element and click    ${FusionSettingsPage.ID_BTN_SELF_SIGN_CERT_OK}
    [Return]    ${Sname}

Validate Alternate Name Is Updated
    [Arguments]    ${name}
    Navigate to Security Page
    ${AN}=    get text    ${FusionSettingsPage.ID_TEXT_SELF_SIGN_CERT_ALTERNATE_NAME}
    ${updated-name}=    Split String    ${AN}    ,
    List Should Contain Value    ${updated-name}    ${name}
