*** Settings ***
Library			RoboGalaxyLibrary
Library			FusionLibrary
Library			BuiltIn
Library			XML
Library			String
Resource		../Resource/CIM_Activity.txt
Resource		../Resource/CIM_UsersAndGroups.txt
Variables		../../../../FusionLibrary/ui/settings/settings_elements.py

*** Variables ***
${ID_ELEMENT_USER_NAMING_ATTRIBUTE_SELECTION}	//select[@id='fs-settings-authn-user-naming']/../div/div
${ID_ELEMENT_USER_NAMING_ATTRIBUTE_OPTION}	//span[text()='%s']
${ID_ELEMENT_ORGANIZATIONAL_UNIT_INPUT_FIELD}	//input[@id='fs-settings-authn-edit-organizational-unit-text%s']
${ID_ELEMENT_ADD_ORGANIZATIONAL_UNIT_BUTTON}	//input[@id='fs-settings-auth-add-organizational-unit']

*** Keywords ***
Add Directory and Verify in Activity and Audit log
	[Arguments]	${test_data}
	:FOR	${dir}	IN	@{test_data}
	\	${Status}=	Fusion UI Add Directory Server	${dir}
	\	Should Be True	${Status}	msg=Failed to add directory server
	\	Navigate to page	Activity
	\	wait for element visible	//*[@id='hp-activities']/tbody//tr[1][//span[text()='Update Global Settings'] and td/a[text()='Security'] and td/div[text()='Administrator']]	10
	\	${count}=	Get Matching XPath Count	//*[@id='hp-activities']/tbody//tr[1][//span[text()='Update Global Settings'] and td/a[text()='Security'] and td/div[text()='Administrator']]
	\	Should Be Equal As Integers	${count}	${activityCount}	msg=Given alert "Update Global Settings after Add Directory by Administrator in Completed State" is not present in the activity page

	#Verify entry in auditlog file.
	${file_path}=	Download and unzip Audit log file	${DownloadPath}
	${bln_logentry_exists} =	file_contains	${file_path}	${search_text}
	Should Be Equal As Strings	${bln_logentry_exists}	${blnExpected}	msg=Entry ${search_text} not available in log file.

Fetch available Directories from Appliance
	[Arguments]	${dir_count}	${available_directory}
	[return]	${available_directory}
	:FOR	${dir}	IN RANGE	2	${dir_count}+1
	\	${dir_name}=	Get Text	//*[@id='fs-settings-security-overview-directories']/li[${dir}]
	\	Append To List 	${available_directory} 	${dir_name}

Exclude available Directory in Test Data
	[Arguments]	${avail_dir}
	[return]	${new_testdata}
	:FOR	${directory}	IN	@{TestData.AddDirectory}
	\	${domainName_TestData} =	Get Variable Value	${directory.domainName}
	\	${location} =	Get Index From List	${avail_dir}	${domainName_TestData}
	\	Run Keyword If	'${location}' < '0'	append to list	${new_testdata}	${directory}
	Log	${new_testdata}

Verify validation error message
	[Arguments]	${Error_Message}
	Run Keyword If	'${Error_Message}'=='DIRECTORY_REQUIRED'	Wait Until Element is Visible	//input[@name='dirname']/..//label[@class='hp-error' and text()='Required']
	...	ELSE IF	'${Error_Message}'=='INVALID_CHARACTERS_IN_DIRECTORY_NAME'	Wait Until Element is Visible	//input[@name='dirname']/..//label[@class='hp-error' and text()='Directory name should contain only letters, digits and the characters .:_-']
	...	ELSE IF	'${Error_Message}'=='BASE_DN_REQUIRED'	Wait Until Element is Visible	//input[@name='base_DN']/..//label[@class='hp-error' and text()='Required']
	...	ELSE IF	'${Error_Message}'=='DIRECTORY_SERVERS_REQUIRED'	Wait Until Element is Visible	//input[@name='addserver']/..//label[@class='hp-error' and text()='At least one directory server is required.']
	...	ELSE IF	'${Error_Message}'=='IP_ADDRESS_OR_HOSTNAME_REQUIRED'	Wait Until Element is Visible	//input[@name='hostname']/..//label[@class='hp-error' and text()='Required']
	...	ELSE IF	'${Error_Message}'=='DIRECTORY_SERVER_PORT_REQUIRED'	Wait Until Element is Visible	//input[@name='port']/..//label[@class='hp-error' and text()='Required']
	...	ELSE IF	'${Error_Message}'=='CERTIFICATE_REQUIRED'	Wait Until Element is Visible	//textarea[@name='publickey']/..//label[@class='hp-error' and text()='Required']
	...	ELSE IF	'${Error_Message}'=='INCORRECT_CERTIFICATE_FORMAT'	Wait Until Element is Visible	//textarea[@name='publickey']/..//label[@class='hp-error' and text()='Incorrect format. Provide a base-64 encoded X.509 certificate.']
	...	ELSE IF	'${Error_Message}'=='UNABLE_TO_GET_SERVER_CERTIFICATE'	Wait Until Element is Visible	//footer//span[text()='Unable to get the server certificate.']
	...	ELSE IF	'${Error_Message}'=='SPECIFIED_DIRECTORY_ALREADY_CONFIGURED'	Wait Until Element is Visible	//*[@class='hp-form-message-text' and text()='The specified enterprise directory adtest is already configured.']
	...	ELSE IF	'${Error_Message}'=='DUPLICATE_DIRECTORY'	Wait Until Element is Visible	//*[@id='hp-form-message']/div/span[text()='Invalid Base DN.']

Enter data in 'Directory' field
	[Arguments]	${data}
	wait for element and input text	${FusionSettingsPage.ID_INPUT_DIR_NAME}	${data}
	Remove focus from active element

Select option in 'Directory type' field
	[Arguments]	${option}
	wait for element and click	${FusionSettingsPage.ID_ELEMENT_AD_OR_LDAP_SELECTION}	60
	${ID_ELEMENT_OPTION} =	Replace String	${FusionSettingsPage.ID_ELEMENT_SELECT_OPTION}	%s	${option}
	wait for element and click	${ID_ELEMENT_OPTION}
	Remove focus from active element

Enter data in 'Base DN' field
	[Arguments]	${data}
	${Base_DN_Locator} =	Wait Until Keyword Succeeds	15 sec	1 sec	Get locator of 'Base DN' field
	wait for element and input text	${Base_DN_Locator}	${data}
	Remove focus from active element

Get locator of 'Base DN' field
	[Return]	${Base_DN_Locator}
	${Is_Base_DN_Field_Visible} =	Run Keyword And Return Status	Wait Until Element Is Visible	${FusionSettingsPage.ID_BASE_DN}	0.1
	${Is_Edit_Base_DN_Field_Visible} =	Run Keyword And Return Status	Wait Until Element Is Visible	${FusionSettingsPage.ID_EDIT_BASE_DN}	0.1
	${Base_DN_Locator} =	Run Keyword If	'${Is_Base_DN_Field_Visible}'=='True'	Set Variable	${FusionSettingsPage.ID_BASE_DN}
										...	ELSE IF	'${Is_Edit_Base_DN_Field_Visible}'=='True'	Set Variable	${FusionSettingsPage.ID_EDIT_BASE_DN}
										...	ELSE	Fail	'Base DN' field not displayed

Select option in 'User naming attribute' field
	[Arguments]	${option}
	Wait Until Element Is Visible	${ID_ELEMENT_USER_NAMING_ATTRIBUTE_SELECTION}	60
	Click Element	${ID_ELEMENT_USER_NAMING_ATTRIBUTE_SELECTION}
	${ID_ELEMENT_OPTION} =	Replace String	${ID_ELEMENT_USER_NAMING_ATTRIBUTE_OPTION}	%s	${option}
	Wait Until Element Is Visible	${ID_ELEMENT_OPTION}	60
	Click Element	${ID_ELEMENT_OPTION} 
	Remove focus from active element

Enter data in 'Organizational unit' field
	[Arguments]	${data}
	${Organizational_Unit_Locator} =	Wait Until Keyword Succeeds	15 sec	1 sec	Get locator of 'Organizational unit' field		
	@{Organizational_Units} =	Split String	${data}	;
	${Organizational_Unit} =	Get From List	${Organizational_Units}	0
	wait for element and input text	${Organizational_Unit_Locator}	${Organizational_Unit}
	${OU_Count} =	Get Length	${Organizational_Units}
	: FOR	${input_field_index}	IN RANGE	1	${OU_Count}
	\	wait for element and click	${FusionSettingsPage.ID_ADD_ORG_UNIT}
	\	${OU_Locator} =	Replace String	${Organizational_Unit_Locator}	text	text${input_field_index}
	\	${Organizational_Unit} =	Get From List	${Organizational_Units}	${input_field_index}
	\	wait for element and input text	${OU_Locator}	${Organizational_Unit}

Get locator of 'Organizational unit' field
	[Return]	${Organizational_Unit_Locator}
	${Is_Organizational_Unit_Field_Visible} =	Run Keyword And Return Status	Wait Until Element Is Visible	${FusionSettingsPage.ID_ORGANIZATIONAL_UNIT}	0.1
	${Is_Edit_Organizational_Unit_Field_Visible} =	Run Keyword And Return Status	Wait Until Element Is Visible	${FusionSettingsPage.ID_EDIT_ORGANIZATIONAL_UNIT}	0.1
	${Organizational_Unit_Locator} =	Run Keyword If	'${Is_Organizational_Unit_Field_Visible}'=='True'	Set Variable	${FusionSettingsPage.ID_ORGANIZATIONAL_UNIT}
										...	ELSE IF	'${Is_Edit_Organizational_Unit_Field_Visible}'=='True'	Set Variable	${FusionSettingsPage.ID_EDIT_ORGANIZATIONAL_UNIT}
										...	ELSE	Fail	'Organizational unit' field not displayed

Enter data in 'IP address or host name' field
	[Arguments]	${data}
	wait for element and input text	${FusionSettingsPage.ID_INPUT_IPADDRESS}	${data}
	Remove focus from active element

Enter data in 'Directory server port' field
	[Arguments]	${data}
	wait for element and input text	${FusionSettingsPage.ID_INPUT_SERVER_PORT}	${data}
	Remove focus from active element

Toggle 'Specify certificate' checkbox
	[Arguments]	${option}
	${Specify_Certificate_Checkbox_Locator} =	Wait Until Keyword Succeeds	15 sec	1 sec	Get locator of 'Specify certificate' checkbox
	Wait Until Element Is Visible	${Specify_Certificate_Checkbox_Locator}
	Run Keyword If	'${option}'=='True'	Select Checkbox	${Specify_Certificate_Checkbox_Locator}
	...	ELSE IF	'${option}'=='False'	Unselect Checkbox	${Specify_Certificate_Checkbox_Locator}
	...	ELSE	FAIL	${option} is not valid for 'Specify certificate' checkbox

Get locator of 'Specify certificate' checkbox
	[Return]	${Specify_Certificate_Checkbox_Locator}
	${Is_Specify_Certificate_Checkbox_Visible} =	Run Keyword And Return Status	Wait Until Element Is Visible	${FusionSettingsPage.ID_CERT_CHECKBOX}	0.1
	${Is_Edit_Specify_Certificate_Checkbox_Visible} =	Run Keyword And Return Status	Wait Until Element Is Visible	${FusionSettingsPage.ID_EDIT_CERT_CHECKBOX}	0.1
	${Specify_Certificate_Checkbox_Locator} =	Run Keyword If	'${Is_Specify_Certificate_Checkbox_Visible}'=='True'	Set Variable	${FusionSettingsPage.ID_CERT_CHECKBOX}
										...	ELSE IF	'${Is_Edit_Specify_Certificate_Checkbox_Visible}'=='True'	Set Variable	${FusionSettingsPage.ID_EDIT_CERT_CHECKBOX}
										...	ELSE	Fail	'Specify certificate' checkbox not displayed

Enter data in certificate field
	[Arguments]	${data}
	wait for element and input text	${FusionSettingsPage.ID_INPUT_CERTIFICATE}	${data}
	Remove focus from active element

Get test data for 'Active Directory'	
	:For	${dir}	in	@{TestData.AddDirectory}
	\	Run Keyword If	'${dir.certType}'=='AD'	Return From Keyword	${dir}

Get test data for 'LDAP'	
	:For	${dir}	in	@{TestData.AddDirectory}
	\	Run Keyword If	'${dir.certType}'=='LDAP'	Return From Keyword	${dir}

Add directory server
	[Arguments]	${dir}
	wait for element and click	${FusionSettingsPage.ID_BTN_ADD_DIRECTORY}
	Enter data in 'IP address or host name' field	${dir.server}
	Enter data in 'Directory server port' field	${dir.port}
	Toggle 'Specify certificate' checkbox	${dir.certificate}
	wait for element and click	${FusionSettingsPage.ID_BTN_DIRECTORY_SERVER_ADD}
	wait for element and click	${FusionSettingsPage.ID_TRUST_BUTTON}

Add Directory
	[Arguments]	${dir}
	Enter data in 'Directory' field	${dir.domainName}
	Run Keyword If	'${dir.certType}'=='AD'	Select option in 'Directory type' field	Active Directory
	...	ELSE IF	'${dir.certType}'=='LDAP'	Select option in 'Directory type' field	OpenLDAP
	Enter data in 'Base DN' field	${dir.top}
	Run Keyword If	'${dir.certType}'=='LDAP'	Enter data in 'Organizational unit' field	${dir.org}
	Add directory server	${dir}
	wait for element and click	${FusionSettingsPage.ID_BTN_ADD_DIR}
	wait for element and input text	${FusionSettingsPage.ID_INPUT_AUTHN_USERNAME}	${dir.userName}
	wait for element and input text	${FusionSettingsPage.ID_INPUT_AUTHN_PASSWORD}	${dir.userPswd}
	wait for element and click	${FusionSettingsPage.ID_AD_OK_BUTTON}

Delete directory server
	[Arguments]	${dir}
	wait for element and click	${ID_DIRECTORY_SERVER_DELETE}
	${message} =	Get text	//*/div[@class='hp-form-message-summary']
	${status} =	Run Keyword And Return Status	Should contain	${message}	Removed ${dir.server}
	Should Be True	${status}	msg=Failed to Delete directory server

Delete directory
	[Arguments]	${avail_dir}
	:FOR	${dir}	IN	@{avail_dir}
	\	wait for element and click	//*[@id='security-directories-table']/tbody/tr[*]/td[contains(text(),'${dir}')]/parent::*/td/div[@Class='hp-close']
	\	wait for element and click	${FusionSettingsPage.ID_REMOVE_SERVER_YES_BUTTON}
	${status} =	Run Keyword And Return Status	Should contain	//*[@id='fs-settings-security-authn-no-directories']	No directories
	Should Not Be True	${status}	msg=Failed to Delete directory