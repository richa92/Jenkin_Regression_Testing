*** Settings ***
Library           RoboGalaxyLibrary
Library           BuiltIn
Library           String
Library           Collections
Resource            ../Resource/CIM_Activity.txt
Variables         ../../../../FusionLibrary/ui/business_logic/general/base_elements.py
Variables         ../../../../FusionLibrary/ui/settings/settings_elements.py

*** Variables ***
${data_count}    0
${message1}      A backup has not been downloaded for this appliance. It is recommended to create a new backup and download it prior to updating the appliance
${message2}      . If any changes made after this time need to be preserved in a backup, create a new backup and download it prior to updating the appliance.

*** Keywords ***

Navigate To Appliance Page
    [Documentation]    Navigate to Appliance Page
    wait for element and click    ${FusionBasePage.ID_MAIN_MENU_CONTROL}
    wait for element and click    ${FusionBasePage.ID_MENU_LINK_SETTINGS}
    wait for element visible    ${FusionSettingsPage.ID_BTN_APPLIANCE}
    wait for element and click    ${FusionSettingsPage.ID_BTN_APPLIANCE}
    wait for element visible    ${FusionSettingsPage.ID_PAGE_TITLE} 10
    ${title}=  get text  ${FusionSettingsPage.ID_PAGE_TITLE}
    Run Keyword If   '${title}' == 'Appliance'    Log    Successfully navigated to Appliance page
    Run Keyword Unless   '${title}' == 'Appliance'    Fail    Failed To navigating to Appliance page.

Get Active Node
    [Documentation]    Get the Active Node details
    ${active}  get text  ${FusionSettingsPage.ID_LABEL_ACTIVE}
    ${active_node}=   Fetch From Left   ${active}  \n
    [return]   ${active_node}

Get Standby Node
    [Documentation]    Get the Standby Node details
    ${standby}  get text  ${FusionSettingsPage.ID_LABEL_STANDBY}
    ${standby_node}=   Fetch From Left   ${standby}  \n
    [return]   ${standby_node}

Activate Standby Node
    [Documentation]    Initiate FailOver that is Activate Standby
    wait for element and click    ${FusionSettingsPage.ID_BTN_ACTION}
    wait for element visible    ${FusionSettingsPage.ID_BTN_ACTIVATE_STANDBY}
    wait for element and click    ${FusionSettingsPage.ID_BTN_ACTIVATE_STANDBY}
    wait for element and click    ${FusionSettingsPage.ID_BTN_ACTIVATE_STANDBY_OK}
    Wait Until Keyword Succeeds    14 min    20 sec    Navigate To Appliance Page

Remove Standby Node
    [Documentation]    Remove Standby Appliance and make remove HA from Cluster
    wait for element and click    ${FusionSettingsPage.ID_BTN_ACTION}
    wait for element visible    ${FusionSettingsPage.ID_BTN_REMOVE_STANDBY}
    wait for element and click    ${FusionSettingsPage.ID_BTN_REMOVE_STANDBY}
    wait for element and click    ${FusionSettingsPage.ID_BTN_REMOVE_STANDBY_OK }
    Wait Until Keyword Succeeds    5 min    5 sec    Validate Standby Is Removed

Validate Standby Is Removed
    ${new_standby}=  Get Standby Node
    Run Keyword If   '${new_standby}'=='No standby appliance'  Log  Standby is removed
    Run Keyword Unless   '${new_standby}'=='No standby appliance'  Fail  Failed to remove standby

Validate Cluster Status
    [Documentation]    Validate the Status of the cluster
    [Arguments]    ${status}
    ${current_status}  get text  ${FusionSettingsPage.ID_TEXT_STATUS}
    Run Keyword If    '${current_status}' == '${status}'    Log  Current cluster status is '${current_status}'
    Run Keyword Unless    '${current_status}' == '${status}'    Fail  Current cluster status is '${current_status}'

Navigate To Update Appliance
    wait for element and click    ${FusionBasePage.ID_MAIN_MENU_CONTROL}
    wait for element visible    ${FusionBasePage.ID_MENU_LINK_SETTINGS} 10
    wait for element and click    ${FusionBasePage.ID_MENU_LINK_SETTINGS}
    wait for element and click    ${FusionSettingsPage.ID_BTN_UPDATE_APPLIANCE}
    ${status}   ${value}=   Run Keyword And Ignore Error    wait for element visible    ${FusionSettingsPage.ID_LABEL_UPDATE}
    Run Keyword If    '${status}'== 'PASS'    Log    Successfully navigated to Update Appliance page
    Run Keyword Unless  '${status}'== 'PASS'    Fail    Failed while navigating to Update Appliance  page.

Validate Warning Message Before Backup Download
    Navigate To Update Appliance
    wait for element visible    ${FusionSettingsPage.ID_LABEL_WARNING_MSG} 10
    ${warning_msg}   get text    ${FusionSettingsPage.ID_LABEL_WARNING_MSG}
    Run Keyword If    '${warning_msg}' == '${message1}'    Log  Proper Message is displayed
    Run Keyword Unless    '${warning_msg}' == '${message1}'    Fail  Failed to Display the correct message
    wait for element and click    ${FusionSettingsPage.ID_BTN_CANCEL}

Validate Warning Message After Backup Download
    Navigate To Update Appliance
    wait for element visible    ${FusionSettingsPage.ID_TEXT_MESSAGE} 10
    ${warning_msg}   get text    ${FusionSettingsPage.ID_TEXT_MESSAGE}
    ${warning}=    Fetch From Right   ${warning_msg}    )
    Log  ${message2}
    Run Keyword If    '${warning}' == '${message2}'    Log  Proper Message is displayed
    Run Keyword Unless    '${warning}' == '${message2}'    Fail  Failed to Display the correct message
    wait for element and click    ${FusionSettingsPage.ID_BTN_CANCEL}

Is appliance in IDLE state?
    [Arguments]    ${Time_Out}    ${Retry_Interval}
    [Return]    ${YES_or_NO}
    ${Time_Out}=    Convert To Number    ${Time_Out}
    ${Retry_Interval}=    Convert To Number    ${Retry_Interval}
    ${YES_or_NO}=    Set Variable    NO
    ${time_elapsed_since_last_retry}=    Convert To Number    0
    :FOR    ${time_out_counter}    IN RANGE    0    ${Time_Out}
    \    ${is_eula_page_visible}    ${keyword_return_value}=    Run Keyword And Ignore Error    Wait Until Element Is Visible    ${FusionLoginPage.ID_BTN_EULA_AGREE}    0.5
    \    ${is_login_page_visible}    ${keyword_return_value}=    Run Keyword And Ignore Error    Wait Until Element Is Visible    ${FusionLoginPage.ID_INPUT_LOGIN_USER}    0.5
    \    ${YES_or_NO}=    Run Keyword If    '${is_eula_page_visible}'=='PASS' or '${is_login_page_visible}'=='PASS'    Set Variable    YES
    \    Exit For Loop If    '${YES_or_NO}'=='YES'
    \    ${time_elapsed_since_last_retry}=    Evaluate    ${time_elapsed_since_last_retry}+1
    \    Run Keyword If    '${time_elapsed_since_last_retry}'=='${Retry_Interval}'    Reload Page
    \    Run Keyword If    '${time_elapsed_since_last_retry}'=='${Retry_Interval}'    Log    Retrying...${time_elapsed_since_last_retry} s    WARN
    \    ${time_elapsed_since_last_retry}=    Set Variable If    '${time_elapsed_since_last_retry}'=='${Retry_Interval}'    0    ${time_elapsed_since_last_retry}
    \    ${time_elapsed_since_last_retry}=    Convert To Number    ${time_elapsed_since_last_retry}
    Return From Keyword    ${YES_or_NO}

Is Starting page displayed?
    [Arguments]        ${Time_Out}    ${Retry_Interval}
    [Return]        ${YES_or_NO}
    ${Time_Out}=    Convert To Number    ${Time_Out}
    ${Retry_Interval}=    Convert To Number    ${Retry_Interval}
    ${max_retries}=    Evaluate    round(${Time_Out}/${Retry_Interval})
    ${YES_or_NO}=    Set Variable    NO
    :FOR    ${retry_count}    IN RANGE    0    ${max_retries}
    \    Reload Page
    \    ${pass_or_fail}    ${keyword_return_value}=    Run Keyword And Ignore Error    Wait Until Element Is Visible    //*[text()='Starting']    ${Retry_Interval}
    \    ${YES_or_NO}=    Run Keyword If    '${pass_or_fail}'=='PASS'    Set Variable    YES
    \    Exit For Loop If    '${pass_or_fail}'=='PASS'
    Return From Keyword    ${YES_or_NO}

Initiate Shutdown
    Select Action    Shut down
    Wait Until Element Is Enabled    ${FusionSettingsPage.ID_BTN_YES_CONFIRM_SHUTDOWN}    30
    Click Element    ${FusionSettingsPage.ID_BTN_YES_CONFIRM_SHUTDOWN}
    Log    Appliance shutdown initiated.    WARN

Wait until appliance shutdown is complete
    Wait until shutting down message is displayed
    Wait until unavailable message is displayed
    Wait until appliance is powered off in v-center
    Log    Appliance was shutdown successfully!    WARN

Wait until shutting down message is displayed
    wait for element visible    //p[text()='Shutting down']    60
    Log    Shutting down message displayed!    WARN

Wait until unavailable message is displayed
    wait for element visible    //p[text()='Unavailable']    600
    Log    Unavailable message displayed!    WARN

Wait until appliance is powered off in v-center
    Wait Until Keyword Succeeds    10 min    15 sec    Is appliance powered off?

Is appliance powered off?
    ${ApplianceExecutionState}=    Get Appliance Execution State    ${TestData.FullFactoryReset[0].name}    ${TestData.FullFactoryReset[0].username}    ${TestData.FullFactoryReset[0].password}    ${TestData.FullFactoryReset[0].vmname}
    Log    ${ApplianceExecutionState}    WARN
    Run Keyword If    '${ApplianceExecutionState}'!='off'    Fail    Appliance is still not powered off in v-center!

Wait until appliance startup is complete
    Wait until starting message is displayed
    Wait until appliance is in IDLE state
    Log    Appliance start up completed successfully!    WARN

Wait until starting message is displayed
    wait for element visible    //div[@data-localize='fs.status.starting.startingMessage' and text()='Starting']    600
    Log    Starting message displayed!    WARN

Wait until appliance is in IDLE state
    Wait Until Element Is Visible    ${FusionBasePage.ID_MAIN_MENU_CONTROL}    1200
