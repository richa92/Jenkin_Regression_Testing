Overview
========
This document describes how to use `Create Payload for OS Network Configuration`
in FusionLibrary. The purpose of this keyword is to facilitate configuring of
the target system networking.

Requirements
------------
- Target system root or administrator privileged account
- SSH access must be enabled.

Workflow
--------
The payload is generated using the information available in OneView's server
and network profiles. Along with the network information. The main sections
of the JSON object are

- Host
    - Contains target system information
- Config
    - network configuration

Usage
-----
${body}=    Create Payload for OS Networks Configuration |
...             <ov_server_profile_url> |
...             <host_info_dict> |
...             <network_profile>

Returns a dictionary that is compatible with the RG keyword.

where
OV_SERVER_PROFILE_URL       URL corresponding to the target systems URI in
                            OneView

HOST_INFO_DICT              Supported keys
--------------
ipv4                # target system IPv4 address or FQDN
user                # Privileged user account
password            # Password for the above user
os                  # Operating system installed on the target system
manager             # Required VMware distributed switch configuration
                    # It has 'ipv4', 'user', 'password' keys
cluster             # Required for VMware distributed switch configuration
                    # Name of the cluster to which the system is part of
datacenter          # Name of the datacenter to which the cluster belongs.

CONFIG
------
ov_network          # Name of the network in OneView
type                # Network type, the supported values are
                    #  ethernet  -> Redhat ethernet network type
                    #  bond      -> Redhat bond network type
                    #  team      -> Redhat team network type
                    #  vss -> VMware Virtual Standard Switch
                    #  vds -> VMware Virtual Distributed Switch
bond_opts           # RHEL bonding options required for rhel_bond type
team_opts           # RHEL teaming options required for rhel_team type
teamp_port_cfg      # rhel_team type... holds the port configuration
active              # Number of active ports ... used for vss & vds
name                # Name of the network or switch
networks            # List of network configurations... used for vss & vds
                    # { 'vlan_id': {'policy': <policy>, 'vmk': True | False}}
                    #
                    #  Supported values for policies are
                    #            failover_explicit,
                    #            loadbalance_ip,
                    #            loadbalance_loadbased,
                    #            loadbalance_srcid,
                    #            oadbalance_srcmac
                    #
                    # vmk -> True | False --> To create vmkernel port in the
                    #                         portgroup

test_data.py contains few example network profile definitions.
test_generator.robot contains usage examples.
