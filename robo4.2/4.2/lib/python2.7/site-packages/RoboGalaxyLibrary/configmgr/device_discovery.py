"""
device_discovery.py provides methods to check if the hardwares to be configured
are online or not.
"""

import subprocess
import os
import custom_logging as log


class DeviceDiscovery:

    """
    Class for Device Discovery
        ip_address_list  -->  IP address's of devices to configured
    """

    def __init__(self, ip_addrs):
        self.ip_address_list = ip_addrs

    def ping_list_of_ips(self):
        """
            Description : This funtion checks if the given IP address is i=online or not by using PING utility

            Usage       : change_oa_ip(List of ip address)
            Return      : output message from console interaction
        """
        reachableIP = []
        notReachableIP = []
        with open(os.devnull, "wb") as limbo:
            for ip in self.ip_address_list:
                result = subprocess.Popen(["ping", "-n", "1", ip],
                                          stdout=limbo, stderr=limbo).wait()
                if result == 1:
                    notReachableIP.append(ip)
                else:
                    reachableIP.append(ip)
        log._info("")
        log._info('-----------------')
        log._info('Reachable IPs are')
        log._info('-----------------')
        for i in reachableIP:
            log._info(i)
        log._info("")
        log._info('-------------------')
        log._warn('Unreachable IPs are')
        log._info('-------------------')
        for j in notReachableIP:
            log._info(j)


def ping_ip(address):
    """
    Checks if one IP address is reachable

    Parameters:
            address: string representation of IP
    Usage:
            ping_ip("127.0.0.1")
    """
    with open(os.devnull, "wb") as limbo:
        result = subprocess.Popen(["ping", "-n", "1", address],
                                  stdout=limbo, stderr=limbo).wait()
        if result == 1:
            return False
        else:
            return True

if __name__ == '__main__':
    ip_addrs = [
        '172.24.31.1',
        '172.24.92.1',
        '172.24.111.1',
        '172.24.109.1',
        '172.24.110.1',
        '172.24.101.1',
        '172.24.100.1',
        '172.24.100.254',
        '172.24.101.254',
        '172.24.102.254',
        '172.24.103.254']

    p = DeviceDiscovery(ip_addrs)
    p.ping_ip_address()
