import tempfile
from robot import version as robot_version
import Selenium2Library as s2l

from robot.libraries.BuiltIn import BuiltIn

from mbt.mbt import MBTKeywords
# from keywords.altair_api import AltairAPIKeywords
# from keywords.altair_ui import AltairUIKeywords
# from keywords.wpst_crm import WPST_CRMKeywords
from keywords.comparisons import ComparisonKeywords
from keywords.comware import ComwareKeywords
from keywords.configmgr import ConfigMgrKeywords
from keywords.network import ConfigOSNetwork
from keywords.ilo_redfish.dl_ilo import DlIloKeywords
from keywords.data import RoboGalaxyTestDataKeywords
from keywords.github import GitHubKeywords
# from keywords.fusion_api import FusionAPIKeywords
# from keywords.fusion_ui import FusionUIKeywords
# from keywords.hc_cli import HCCLIKeywords
# from keywords.hc_api import HCAPIKeywords
# from keywords.em_api import EMAPIKeywords
# from keywords.health_monitor import HealthMonitorKeywords
# from keywords.hydrogen_rest import HydrogenRESTKeywords
# from keywords.hydrogen_serial import HydrogenSerialKeywords
# from keywords.hydrogen_ui import HydrogenUIKeywords
from keywords.ilo import iLOKeywords
from keywords.ipdu import iPDUKeywords
from keywords.mail import EmailKeywords
from keywords.netconf import NetconfKeywords
from keywords.native import NativeOsKeywords
from keywords.plexxi import PlexxiLibraryKeywords
from keywords.dhcp_utils import DhcpUtilityKeywords
# from keywords.resource_dictionaries import ResourceDictKeywords
# from keywords.performance_manager import PerfMgrKeywords


from keywords.toxiproxy import ToxiProxyLibraryKeywords


from keywords.saw import SawKeywords
# from keywords.storage_3par import Storage3PAR
# from keywords.tbird_api import TBirdAPIKeywords
# from keywords.thunderbird_ui import ThunderbirdUIKeywords
# from keywords.tbird import TBirdKeywords
from keywords.ui import UiLibKeywords
from keywords.vsphere import VsphereKeywords
from version import get_version
# from keywords.chart import ChartKeywords
from RoboGalaxyLibrary.utilitylib import logging as logger
from keywords.oa import OAKeywords
from keywords.api import ApiLibKeywords
from keywords.common_utils import CommonUtilityKeywords
from keywords.storage3par_api import Storage3PARLibraryKeywords
from keywords.http_directory import HttpDirectoryKeywords
from keywords.cpt.cirrus_tool import L2AddKeywords
from keywords.vcsa.vcsa_deploy import VCSAInstallKeywords
import sha
import os
import shelve
import sys
import time
import types
# from keywords.em_ssh import EMKeywords
# from keywords.em_utils import EMUtilityKeywords

__version__ = get_version()


class RoboGalaxyLibrary(
        # AltairAPIKeywords,
        # AltairUIKeywords,
        # WPST_CRMKeywords,
        ComparisonKeywords,
        ComwareKeywords,
        ConfigMgrKeywords,
        ConfigOSNetwork,
        DlIloKeywords,
        EmailKeywords,
        GitHubKeywords,
        # FusionAPIKeywords,
        # FusionUIKeywords,
        # HCCLIKeywords,
        # HCAPIKeywords,
        # EMAPIKeywords,
        # HealthMonitorKeywords,
        # HydrogenRESTKeywords,
        # HydrogenSerialKeywords,
        # HydrogenUIKeywords,
        iLOKeywords,
        iPDUKeywords,
        VCSAInstallKeywords,
        L2AddKeywords,
        NetconfKeywords,
        # PerfMgrKeywords,
        # ResourceDictKeywords,
        RoboGalaxyTestDataKeywords,
        SawKeywords,
        # Storage3PAR,
        # TBirdAPIKeywords,
        # ThunderbirdUIKeywords,
        # ChartKeywords,
        # TBirdKeywords,
        ToxiProxyLibraryKeywords,
        PlexxiLibraryKeywords,
        DhcpUtilityKeywords,
        MBTKeywords,
        UiLibKeywords,
        VsphereKeywords,
        OAKeywords,
        # ApiLibKeywords,
        CommonUtilityKeywords,
        NativeOsKeywords,
        Storage3PARLibraryKeywords,
        HttpDirectoryKeywords,
        # EMKeywords,
        # EMUtilityKeywords
):

    """ RoboGalaxyLibrary is an HP internal test library for the Robot Framework

    RoboGalaxy is HP internal python test library tool for open source Robot Framework
    (http://robotframework.org/).

    Building on top of Robot Framework core, RoboGalaxy is an extensible keyword-driven
    test automation framework for end-to-end acceptance testing and acceptance-test-driven
    development. It can be used for testing distributed, heterogeneous applications like Fusion,
    Hydrogen and Thunderbird, where verification requires touching several technologies
    and interfaces(REST API, CLI and UI interfaces).  It also covers automated
    test environment setup and teardown, automated health monitoring, model based testing
    , and performance test manager.

    Please visit RoboGalaxy wiki page for more information about the project.
    http://rndwiki.atlanta.hp.com/confluence/display/RoboGalaxy/RoboGalaxy

    *Before running tests*

    Prior to running test cases using RoboGalaxyLibrary, RoboGalaxyLibrary must be
    imported into your Robot test suite (see `importing` section).


    """
    ROBOT_LIBRARY_SCOPE = 'GLOBAL'
    ROBOT_LIBRARY_VERSION = __version__

    def __init__(self, supress_selenium_log=True):
        def convert_bool(s):
            if isinstance(s, types.BooleanType):
                return s
            elif isinstance(s, types.StringType) or isinstance(s, types.UnicodeType):
                if s.lower() == 'true':
                    return True
                elif s.lower() == 'false':
                    return False
            raise Exception('Invalid value for boolean conversion: %s' % s)

        supress_selenium_log = convert_bool(supress_selenium_log)

        if supress_selenium_log is True:
            import logging
            from selenium.webdriver.remote.remote_connection import LOGGER
            LOGGER.setLevel(logging.WARNING)

        logger._log_to_console_and_log_file(
            "########################################################")
        if any(x in ['HTTP_PROXY', 'HTTPS_PROXY'] for x in os.environ):
            logger._log(
                "HTTP_PROXY or HTTPS_PROXY environment variables are set!", 'WARN')
        logger._log_to_console_and_log_file(
            "RoboGalaxyLibrary version %s" % __version__)
        logger._log_to_console_and_log_file("Developed by HPE ESSN QA Teams")
        logger._log_to_console_and_log_file(
            "Copyright 2015-2016 Hewlett Packard Enterprise Development LP")
        logger._log_to_console_and_log_file(
            "########################################################")
        logger._log_to_console_and_log_file(
            "Robot Framework version %s" % robot_version.VERSION)
        logger._log_to_console_and_log_file(
            "Selenium2Library version %s" % s2l.__version__)
        temp_dir = tempfile.gettempdir()
        sid = sha.new(repr(time.time())).hexdigest()
        internal_storage = temp_dir + "\\" + 'sess_' + sid

        for base in RoboGalaxyLibrary.__bases__:
            base.__init__(self)
