#!/usr/bin/env python27
# (C) Copyright 2018 Hewlett Packard Enterprise Development LP
"""
Unit tests for InstallVCSAKeywords with python mock module.
"""
from vcsa_deploy import VCSAInstallKeywords
from mock import patch
from pycdlib.pycdlibexception import PyCdlibException
from unittest import TestCase


class TestVCSAInstallKeywords(TestCase):
    """
    TestCase object for Deploy VCSA keywords
    """
    @patch('os.path.exists', return_value=False)
    def test_invalid_iso(self, mock_exist):
        """
        Test the message when the configuration file is non-existent
        :return:
        """
        v = VCSAInstallKeywords()
        self.assertRaises(AssertionError, v.vcsa_deploy, 'test.json', 't.iso')

    @patch('os.path.exists', return_value=True)
    def test_invalid_iso_extn(self, mock_exist):
        """
        Verify the method fails when the ISO image file name is incorrect
        :param mock_exist: Handle to mock method of os.path.exists
        :return:
        """
        v = VCSAInstallKeywords()
        self.assertRaises(AssertionError, v.vcsa_deploy, 'test.json', 'test')

    @patch('os.path.exists', side_effect=[True, False])
    def test_invalid_config_file(self, mock_exists):
        """
        Verify the method fails when the configuration file does not exists
        :param mock_exists: Handle to the mocked method
        :return:
        """
        v = VCSAInstallKeywords()
        self.assertRaises(AssertionError, v.vcsa_deploy, 'test.json', 't.iso')

    @patch('vcsa_deploy.VCSAInstallKeywords._extract_iso')
    @patch('os.path.exists', side_effect=[True, True])
    def test_extract_error(self, mock_exist, mock_mount):
        """
        Verify if the AssertionError is handled in the keyword.
        :param mock_exist: Handle to os.path.exists method
        :param mock_mount: Handle to _mount_image method
        :return:
        """
        mock_mount.side_effect = PyCdlibException(Exception)
        v = VCSAInstallKeywords()
        self.assertRaises(PyCdlibException, v.vcsa_deploy, 'test.json', 't.iso')

