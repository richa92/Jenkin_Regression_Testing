# (C) Copyright 2013 Hewlett-Packard Development Company, L.P.
""" Common API utility functions """


from RoboGalaxyLibrary.utilitylib import logging as logger
import requests
import logging
import json
import jsonschema


def validate_json_schema(data, schema):
    """
    validate json schema using jsonschema Draft3Validator

    """
    logger._info("Validating JSON schema")

    validate_ok = True
    if not isinstance(data, dict):
        data = json.loads(data)
    if not isinstance(schema, dict):
        schema = json.loads(schema)
    try:
        jsonschema.Draft3Validator.check_schema(schema)
        v = jsonschema.Draft3Validator(schema)
        for error in sorted(v.iter_errors(data), key=str):
            logger._warn("Invalid JSON data: For key '%s', %s" %
                         (error.path.pop(), error.message))
            validate_ok = False

    except jsonschema.ValidationError as e:
        logger._warn("Invalid data: %s" % e.message)
        validate_ok = False

    except jsonschema.SchemaError as e:
        logger._warn("Invalid schema: %s" % e.message)
        validate_ok = False

    return validate_ok
